   1               		.file	"process_tap_dance.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.process_tap_dance_action_on_dance_finished.part.0,"ax",@progbits
  12               	process_tap_dance_action_on_dance_finished.part.0:
  13               	.LVL0:
  14               	.LFB123:
  15               		.file 1 "quantum/process_keycode/process_tap_dance.c"
   1:quantum/process_keycode/process_tap_dance.c **** /* Copyright 2016 Jack Humbert
   2:quantum/process_keycode/process_tap_dance.c ****  *
   3:quantum/process_keycode/process_tap_dance.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/process_keycode/process_tap_dance.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/process_keycode/process_tap_dance.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/process_keycode/process_tap_dance.c ****  * (at your option) any later version.
   7:quantum/process_keycode/process_tap_dance.c ****  *
   8:quantum/process_keycode/process_tap_dance.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/process_keycode/process_tap_dance.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/process_keycode/process_tap_dance.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/process_keycode/process_tap_dance.c ****  * GNU General Public License for more details.
  12:quantum/process_keycode/process_tap_dance.c ****  *
  13:quantum/process_keycode/process_tap_dance.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/process_keycode/process_tap_dance.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/process_keycode/process_tap_dance.c ****  */
  16:quantum/process_keycode/process_tap_dance.c **** #include "quantum.h"
  17:quantum/process_keycode/process_tap_dance.c **** #include "action_tapping.h"
  18:quantum/process_keycode/process_tap_dance.c **** 
  19:quantum/process_keycode/process_tap_dance.c **** #ifndef TAPPING_TERM
  20:quantum/process_keycode/process_tap_dance.c **** #    define TAPPING_TERM 200
  21:quantum/process_keycode/process_tap_dance.c **** #endif
  22:quantum/process_keycode/process_tap_dance.c **** 
  23:quantum/process_keycode/process_tap_dance.c **** #ifndef NO_ACTION_ONESHOT
  24:quantum/process_keycode/process_tap_dance.c **** uint8_t get_oneshot_mods(void);
  25:quantum/process_keycode/process_tap_dance.c **** #endif
  26:quantum/process_keycode/process_tap_dance.c **** 
  27:quantum/process_keycode/process_tap_dance.c **** static uint16_t last_td;
  28:quantum/process_keycode/process_tap_dance.c **** static int8_t   highest_td = -1;
  29:quantum/process_keycode/process_tap_dance.c **** 
  30:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_pair_on_each_tap(qk_tap_dance_state_t *state, void *user_data) {
  31:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
  32:quantum/process_keycode/process_tap_dance.c **** 
  33:quantum/process_keycode/process_tap_dance.c ****     if (state->count == 2) {
  34:quantum/process_keycode/process_tap_dance.c ****         register_code16(pair->kc2);
  35:quantum/process_keycode/process_tap_dance.c ****         state->finished = true;
  36:quantum/process_keycode/process_tap_dance.c ****     }
  37:quantum/process_keycode/process_tap_dance.c **** }
  38:quantum/process_keycode/process_tap_dance.c **** 
  39:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_pair_finished(qk_tap_dance_state_t *state, void *user_data) {
  40:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
  41:quantum/process_keycode/process_tap_dance.c **** 
  42:quantum/process_keycode/process_tap_dance.c ****     if (state->count == 1) {
  43:quantum/process_keycode/process_tap_dance.c ****         register_code16(pair->kc1);
  44:quantum/process_keycode/process_tap_dance.c ****     } else if (state->count == 2) {
  45:quantum/process_keycode/process_tap_dance.c ****         register_code16(pair->kc2);
  46:quantum/process_keycode/process_tap_dance.c ****     }
  47:quantum/process_keycode/process_tap_dance.c **** }
  48:quantum/process_keycode/process_tap_dance.c **** 
  49:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_pair_reset(qk_tap_dance_state_t *state, void *user_data) {
  50:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
  51:quantum/process_keycode/process_tap_dance.c **** 
  52:quantum/process_keycode/process_tap_dance.c ****     if (state->count == 1) {
  53:quantum/process_keycode/process_tap_dance.c ****         unregister_code16(pair->kc1);
  54:quantum/process_keycode/process_tap_dance.c ****     } else if (state->count == 2) {
  55:quantum/process_keycode/process_tap_dance.c ****         unregister_code16(pair->kc2);
  56:quantum/process_keycode/process_tap_dance.c ****     }
  57:quantum/process_keycode/process_tap_dance.c **** }
  58:quantum/process_keycode/process_tap_dance.c **** 
  59:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_dual_role_on_each_tap(qk_tap_dance_state_t *state, void *user_data) {
  60:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
  61:quantum/process_keycode/process_tap_dance.c **** 
  62:quantum/process_keycode/process_tap_dance.c ****     if (state->count == 2) {
  63:quantum/process_keycode/process_tap_dance.c ****         layer_move(pair->layer);
  64:quantum/process_keycode/process_tap_dance.c ****         state->finished = true;
  65:quantum/process_keycode/process_tap_dance.c ****     }
  66:quantum/process_keycode/process_tap_dance.c **** }
  67:quantum/process_keycode/process_tap_dance.c **** 
  68:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_dual_role_finished(qk_tap_dance_state_t *state, void *user_data) {
  69:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
  70:quantum/process_keycode/process_tap_dance.c **** 
  71:quantum/process_keycode/process_tap_dance.c ****     if (state->count == 1) {
  72:quantum/process_keycode/process_tap_dance.c ****         register_code16(pair->kc);
  73:quantum/process_keycode/process_tap_dance.c ****     } else if (state->count == 2) {
  74:quantum/process_keycode/process_tap_dance.c ****         pair->layer_function(pair->layer);
  75:quantum/process_keycode/process_tap_dance.c ****     }
  76:quantum/process_keycode/process_tap_dance.c **** }
  77:quantum/process_keycode/process_tap_dance.c **** 
  78:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_dual_role_reset(qk_tap_dance_state_t *state, void *user_data) {
  79:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
  80:quantum/process_keycode/process_tap_dance.c **** 
  81:quantum/process_keycode/process_tap_dance.c ****     if (state->count == 1) {
  82:quantum/process_keycode/process_tap_dance.c ****         unregister_code16(pair->kc);
  83:quantum/process_keycode/process_tap_dance.c ****     }
  84:quantum/process_keycode/process_tap_dance.c **** }
  85:quantum/process_keycode/process_tap_dance.c **** 
  86:quantum/process_keycode/process_tap_dance.c **** static inline void _process_tap_dance_action_fn(qk_tap_dance_state_t *state, void *user_data, qk_ta
  87:quantum/process_keycode/process_tap_dance.c ****     if (fn) {
  88:quantum/process_keycode/process_tap_dance.c ****         fn(state, user_data);
  89:quantum/process_keycode/process_tap_dance.c ****     }
  90:quantum/process_keycode/process_tap_dance.c **** }
  91:quantum/process_keycode/process_tap_dance.c **** 
  92:quantum/process_keycode/process_tap_dance.c **** static inline void process_tap_dance_action_on_each_tap(qk_tap_dance_action_t *action) { _process_t
  93:quantum/process_keycode/process_tap_dance.c **** 
  94:quantum/process_keycode/process_tap_dance.c **** static inline void process_tap_dance_action_on_dance_finished(qk_tap_dance_action_t *action) {
  16               		.loc 1 94 20 view -0
  17               		.cfi_startproc
  18               		.loc 1 94 20 is_stmt 0 view .LVU1
  19 0000 CF93      		push r28
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 28, -2
  23 0002 DF93      		push r29
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 29, -3
  27               	/* prologue: function */
  28               	/* frame size = 0 */
  29               	/* stack size = 2 */
  30               	.L__stack_usage = 2
  31 0004 EC01      		movw r28,r24
  95:quantum/process_keycode/process_tap_dance.c ****     if (action->state.finished) return;
  96:quantum/process_keycode/process_tap_dance.c ****     action->state.finished = true;
  32               		.loc 1 96 5 is_stmt 1 view .LVU2
  33               		.loc 1 96 28 is_stmt 0 view .LVU3
  34 0006 81E0      		ldi r24,lo8(1)
  35               	.LVL1:
  36               		.loc 1 96 28 view .LVU4
  37 0008 898B      		std Y+17,r24
  97:quantum/process_keycode/process_tap_dance.c ****     add_mods(action->state.oneshot_mods);
  38               		.loc 1 97 5 is_stmt 1 view .LVU5
  39 000a 8F81      		ldd r24,Y+7
  40 000c 0E94 0000 		call add_mods
  41               	.LVL2:
  98:quantum/process_keycode/process_tap_dance.c ****     add_weak_mods(action->state.weak_mods);
  42               		.loc 1 98 5 view .LVU6
  43 0010 8885      		ldd r24,Y+8
  44 0012 0E94 0000 		call add_weak_mods
  45               	.LVL3:
  99:quantum/process_keycode/process_tap_dance.c ****     send_keyboard_report();
  46               		.loc 1 99 5 view .LVU7
  47 0016 0E94 0000 		call send_keyboard_report
  48               	.LVL4:
 100:quantum/process_keycode/process_tap_dance.c ****     _process_tap_dance_action_fn(&action->state, action->user_data, action->fn.on_dance_finished);
  49               		.loc 1 100 5 view .LVU8
  50 001a EA81      		ldd r30,Y+2
  51 001c FB81      		ldd r31,Y+3
  52               	.LVL5:
  53               	.LBB4:
  54               	.LBI4:
  86:quantum/process_keycode/process_tap_dance.c ****     if (fn) {
  55               		.loc 1 86 20 view .LVU9
  56               	.LBB5:
  87:quantum/process_keycode/process_tap_dance.c ****         fn(state, user_data);
  57               		.loc 1 87 5 view .LVU10
  87:quantum/process_keycode/process_tap_dance.c ****         fn(state, user_data);
  58               		.loc 1 87 8 is_stmt 0 view .LVU11
  59 001e 3097      		sbiw r30,0
  60 0020 01F0      		breq .L1
  88:quantum/process_keycode/process_tap_dance.c ****     }
  61               		.loc 1 88 9 is_stmt 1 view .LVU12
  62 0022 6C89      		ldd r22,Y+20
  63 0024 7D89      		ldd r23,Y+21
  64 0026 CE01      		movw r24,r28
  65 0028 0696      		adiw r24,6
  66               	.LVL6:
  67               	/* epilogue start */
  88:quantum/process_keycode/process_tap_dance.c ****     }
  68               		.loc 1 88 9 is_stmt 0 view .LVU13
  69               	.LBE5:
  70               	.LBE4:
 101:quantum/process_keycode/process_tap_dance.c **** }
  71               		.loc 1 101 1 view .LVU14
  72 002a DF91      		pop r29
  73 002c CF91      		pop r28
  74               	.LVL7:
  75               	.LBB7:
  76               	.LBB6:
  88:quantum/process_keycode/process_tap_dance.c ****     }
  77               		.loc 1 88 9 view .LVU15
  78 002e 0994      		ijmp
  79               	.LVL8:
  80               	.L1:
  81               	/* epilogue start */
  88:quantum/process_keycode/process_tap_dance.c ****     }
  82               		.loc 1 88 9 view .LVU16
  83               	.LBE6:
  84               	.LBE7:
  85               		.loc 1 101 1 view .LVU17
  86 0030 DF91      		pop r29
  87 0032 CF91      		pop r28
  88               	.LVL9:
  89               		.loc 1 101 1 view .LVU18
  90 0034 0895      		ret
  91               		.cfi_endproc
  92               	.LFE123:
  94               		.section	.text.qk_tap_dance_pair_on_each_tap,"ax",@progbits
  95               	.global	qk_tap_dance_pair_on_each_tap
  97               	qk_tap_dance_pair_on_each_tap:
  98               	.LVL10:
  99               	.LFB109:
  30:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
 100               		.loc 1 30 82 is_stmt 1 view -0
 101               		.cfi_startproc
  30:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
 102               		.loc 1 30 82 is_stmt 0 view .LVU20
 103 0000 CF93      		push r28
 104               	.LCFI2:
 105               		.cfi_def_cfa_offset 3
 106               		.cfi_offset 28, -2
 107 0002 DF93      		push r29
 108               	.LCFI3:
 109               		.cfi_def_cfa_offset 4
 110               		.cfi_offset 29, -3
 111               	/* prologue: function */
 112               	/* frame size = 0 */
 113               	/* stack size = 2 */
 114               	.L__stack_usage = 2
 115 0004 EC01      		movw r28,r24
  31:quantum/process_keycode/process_tap_dance.c **** 
 116               		.loc 1 31 5 is_stmt 1 view .LVU21
 117               	.LVL11:
  33:quantum/process_keycode/process_tap_dance.c ****         register_code16(pair->kc2);
 118               		.loc 1 33 5 view .LVU22
  33:quantum/process_keycode/process_tap_dance.c ****         register_code16(pair->kc2);
 119               		.loc 1 33 8 is_stmt 0 view .LVU23
 120 0006 8881      		ld r24,Y
 121               	.LVL12:
  33:quantum/process_keycode/process_tap_dance.c ****         register_code16(pair->kc2);
 122               		.loc 1 33 8 view .LVU24
 123 0008 8230      		cpi r24,lo8(2)
 124 000a 01F4      		brne .L3
  34:quantum/process_keycode/process_tap_dance.c ****         state->finished = true;
 125               		.loc 1 34 9 is_stmt 1 view .LVU25
 126 000c FB01      		movw r30,r22
 127 000e 8281      		ldd r24,Z+2
 128 0010 9381      		ldd r25,Z+3
 129 0012 0E94 0000 		call register_code16
 130               	.LVL13:
  35:quantum/process_keycode/process_tap_dance.c ****     }
 131               		.loc 1 35 9 view .LVU26
  35:quantum/process_keycode/process_tap_dance.c ****     }
 132               		.loc 1 35 25 is_stmt 0 view .LVU27
 133 0016 81E0      		ldi r24,lo8(1)
 134 0018 8B87      		std Y+11,r24
 135               	.L3:
 136               	/* epilogue start */
  37:quantum/process_keycode/process_tap_dance.c **** 
 137               		.loc 1 37 1 view .LVU28
 138 001a DF91      		pop r29
 139 001c CF91      		pop r28
 140               	.LVL14:
  37:quantum/process_keycode/process_tap_dance.c **** 
 141               		.loc 1 37 1 view .LVU29
 142 001e 0895      		ret
 143               		.cfi_endproc
 144               	.LFE109:
 146               		.section	.text.qk_tap_dance_pair_finished,"ax",@progbits
 147               	.global	qk_tap_dance_pair_finished
 149               	qk_tap_dance_pair_finished:
 150               	.LVL15:
 151               	.LFB110:
  39:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
 152               		.loc 1 39 79 is_stmt 1 view -0
 153               		.cfi_startproc
 154               	/* prologue: function */
 155               	/* frame size = 0 */
 156               	/* stack size = 0 */
 157               	.L__stack_usage = 0
  40:quantum/process_keycode/process_tap_dance.c **** 
 158               		.loc 1 40 5 view .LVU31
  42:quantum/process_keycode/process_tap_dance.c ****         register_code16(pair->kc1);
 159               		.loc 1 42 5 view .LVU32
  42:quantum/process_keycode/process_tap_dance.c ****         register_code16(pair->kc1);
 160               		.loc 1 42 14 is_stmt 0 view .LVU33
 161 0000 FC01      		movw r30,r24
 162 0002 8081      		ld r24,Z
 163               	.LVL16:
  42:quantum/process_keycode/process_tap_dance.c ****         register_code16(pair->kc1);
 164               		.loc 1 42 8 view .LVU34
 165 0004 8130      		cpi r24,lo8(1)
 166 0006 01F4      		brne .L6
  43:quantum/process_keycode/process_tap_dance.c ****     } else if (state->count == 2) {
 167               		.loc 1 43 9 is_stmt 1 view .LVU35
 168 0008 FB01      		movw r30,r22
 169               	.LVL17:
  43:quantum/process_keycode/process_tap_dance.c ****     } else if (state->count == 2) {
 170               		.loc 1 43 9 is_stmt 0 view .LVU36
 171 000a 8081      		ld r24,Z
 172 000c 9181      		ldd r25,Z+1
 173               	.L8:
  45:quantum/process_keycode/process_tap_dance.c ****     }
 174               		.loc 1 45 9 view .LVU37
 175 000e 0C94 0000 		jmp register_code16
 176               	.LVL18:
 177               	.L6:
  44:quantum/process_keycode/process_tap_dance.c ****         register_code16(pair->kc2);
 178               		.loc 1 44 12 is_stmt 1 view .LVU38
  44:quantum/process_keycode/process_tap_dance.c ****         register_code16(pair->kc2);
 179               		.loc 1 44 15 is_stmt 0 view .LVU39
 180 0012 8230      		cpi r24,lo8(2)
 181 0014 01F4      		brne .L5
  45:quantum/process_keycode/process_tap_dance.c ****     }
 182               		.loc 1 45 9 is_stmt 1 view .LVU40
 183 0016 FB01      		movw r30,r22
 184               	.LVL19:
  45:quantum/process_keycode/process_tap_dance.c ****     }
 185               		.loc 1 45 9 is_stmt 0 view .LVU41
 186 0018 8281      		ldd r24,Z+2
 187 001a 9381      		ldd r25,Z+3
 188 001c 00C0      		rjmp .L8
 189               	.LVL20:
 190               	.L5:
 191               	/* epilogue start */
  47:quantum/process_keycode/process_tap_dance.c **** 
 192               		.loc 1 47 1 view .LVU42
 193 001e 0895      		ret
 194               		.cfi_endproc
 195               	.LFE110:
 197               		.section	.text.qk_tap_dance_pair_reset,"ax",@progbits
 198               	.global	qk_tap_dance_pair_reset
 200               	qk_tap_dance_pair_reset:
 201               	.LVL21:
 202               	.LFB111:
  49:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
 203               		.loc 1 49 76 is_stmt 1 view -0
 204               		.cfi_startproc
 205               	/* prologue: function */
 206               	/* frame size = 0 */
 207               	/* stack size = 0 */
 208               	.L__stack_usage = 0
  50:quantum/process_keycode/process_tap_dance.c **** 
 209               		.loc 1 50 5 view .LVU44
  52:quantum/process_keycode/process_tap_dance.c ****         unregister_code16(pair->kc1);
 210               		.loc 1 52 5 view .LVU45
  52:quantum/process_keycode/process_tap_dance.c ****         unregister_code16(pair->kc1);
 211               		.loc 1 52 14 is_stmt 0 view .LVU46
 212 0000 FC01      		movw r30,r24
 213 0002 8081      		ld r24,Z
 214               	.LVL22:
  52:quantum/process_keycode/process_tap_dance.c ****         unregister_code16(pair->kc1);
 215               		.loc 1 52 8 view .LVU47
 216 0004 8130      		cpi r24,lo8(1)
 217 0006 01F4      		brne .L10
  53:quantum/process_keycode/process_tap_dance.c ****     } else if (state->count == 2) {
 218               		.loc 1 53 9 is_stmt 1 view .LVU48
 219 0008 FB01      		movw r30,r22
 220               	.LVL23:
  53:quantum/process_keycode/process_tap_dance.c ****     } else if (state->count == 2) {
 221               		.loc 1 53 9 is_stmt 0 view .LVU49
 222 000a 8081      		ld r24,Z
 223 000c 9181      		ldd r25,Z+1
 224               	.L12:
  55:quantum/process_keycode/process_tap_dance.c ****     }
 225               		.loc 1 55 9 view .LVU50
 226 000e 0C94 0000 		jmp unregister_code16
 227               	.LVL24:
 228               	.L10:
  54:quantum/process_keycode/process_tap_dance.c ****         unregister_code16(pair->kc2);
 229               		.loc 1 54 12 is_stmt 1 view .LVU51
  54:quantum/process_keycode/process_tap_dance.c ****         unregister_code16(pair->kc2);
 230               		.loc 1 54 15 is_stmt 0 view .LVU52
 231 0012 8230      		cpi r24,lo8(2)
 232 0014 01F4      		brne .L9
  55:quantum/process_keycode/process_tap_dance.c ****     }
 233               		.loc 1 55 9 is_stmt 1 view .LVU53
 234 0016 FB01      		movw r30,r22
 235               	.LVL25:
  55:quantum/process_keycode/process_tap_dance.c ****     }
 236               		.loc 1 55 9 is_stmt 0 view .LVU54
 237 0018 8281      		ldd r24,Z+2
 238 001a 9381      		ldd r25,Z+3
 239 001c 00C0      		rjmp .L12
 240               	.LVL26:
 241               	.L9:
 242               	/* epilogue start */
  57:quantum/process_keycode/process_tap_dance.c **** 
 243               		.loc 1 57 1 view .LVU55
 244 001e 0895      		ret
 245               		.cfi_endproc
 246               	.LFE111:
 248               		.section	.text.qk_tap_dance_dual_role_on_each_tap,"ax",@progbits
 249               	.global	qk_tap_dance_dual_role_on_each_tap
 251               	qk_tap_dance_dual_role_on_each_tap:
 252               	.LVL27:
 253               	.LFB112:
  59:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
 254               		.loc 1 59 87 is_stmt 1 view -0
 255               		.cfi_startproc
  59:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
 256               		.loc 1 59 87 is_stmt 0 view .LVU57
 257 0000 CF93      		push r28
 258               	.LCFI4:
 259               		.cfi_def_cfa_offset 3
 260               		.cfi_offset 28, -2
 261 0002 DF93      		push r29
 262               	.LCFI5:
 263               		.cfi_def_cfa_offset 4
 264               		.cfi_offset 29, -3
 265               	/* prologue: function */
 266               	/* frame size = 0 */
 267               	/* stack size = 2 */
 268               	.L__stack_usage = 2
 269 0004 EC01      		movw r28,r24
  60:quantum/process_keycode/process_tap_dance.c **** 
 270               		.loc 1 60 5 is_stmt 1 view .LVU58
 271               	.LVL28:
  62:quantum/process_keycode/process_tap_dance.c ****         layer_move(pair->layer);
 272               		.loc 1 62 5 view .LVU59
  62:quantum/process_keycode/process_tap_dance.c ****         layer_move(pair->layer);
 273               		.loc 1 62 8 is_stmt 0 view .LVU60
 274 0006 8881      		ld r24,Y
 275               	.LVL29:
  62:quantum/process_keycode/process_tap_dance.c ****         layer_move(pair->layer);
 276               		.loc 1 62 8 view .LVU61
 277 0008 8230      		cpi r24,lo8(2)
 278 000a 01F4      		brne .L13
  63:quantum/process_keycode/process_tap_dance.c ****         state->finished = true;
 279               		.loc 1 63 9 is_stmt 1 view .LVU62
 280 000c FB01      		movw r30,r22
 281 000e 8281      		ldd r24,Z+2
 282 0010 0E94 0000 		call layer_move
 283               	.LVL30:
  64:quantum/process_keycode/process_tap_dance.c ****     }
 284               		.loc 1 64 9 view .LVU63
  64:quantum/process_keycode/process_tap_dance.c ****     }
 285               		.loc 1 64 25 is_stmt 0 view .LVU64
 286 0014 81E0      		ldi r24,lo8(1)
 287 0016 8B87      		std Y+11,r24
 288               	.L13:
 289               	/* epilogue start */
  66:quantum/process_keycode/process_tap_dance.c **** 
 290               		.loc 1 66 1 view .LVU65
 291 0018 DF91      		pop r29
 292 001a CF91      		pop r28
 293               	.LVL31:
  66:quantum/process_keycode/process_tap_dance.c **** 
 294               		.loc 1 66 1 view .LVU66
 295 001c 0895      		ret
 296               		.cfi_endproc
 297               	.LFE112:
 299               		.section	.text.qk_tap_dance_dual_role_finished,"ax",@progbits
 300               	.global	qk_tap_dance_dual_role_finished
 302               	qk_tap_dance_dual_role_finished:
 303               	.LVL32:
 304               	.LFB113:
  68:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
 305               		.loc 1 68 84 is_stmt 1 view -0
 306               		.cfi_startproc
 307               	/* prologue: function */
 308               	/* frame size = 0 */
 309               	/* stack size = 0 */
 310               	.L__stack_usage = 0
  68:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
 311               		.loc 1 68 84 is_stmt 0 view .LVU68
 312 0000 DB01      		movw r26,r22
  69:quantum/process_keycode/process_tap_dance.c **** 
 313               		.loc 1 69 5 is_stmt 1 view .LVU69
 314               	.LVL33:
  71:quantum/process_keycode/process_tap_dance.c ****         register_code16(pair->kc);
 315               		.loc 1 71 5 view .LVU70
  71:quantum/process_keycode/process_tap_dance.c ****         register_code16(pair->kc);
 316               		.loc 1 71 14 is_stmt 0 view .LVU71
 317 0002 FC01      		movw r30,r24
 318 0004 8081      		ld r24,Z
 319               	.LVL34:
  71:quantum/process_keycode/process_tap_dance.c ****         register_code16(pair->kc);
 320               		.loc 1 71 8 view .LVU72
 321 0006 8130      		cpi r24,lo8(1)
 322 0008 01F4      		brne .L16
  72:quantum/process_keycode/process_tap_dance.c ****     } else if (state->count == 2) {
 323               		.loc 1 72 9 is_stmt 1 view .LVU73
 324 000a 8D91      		ld r24,X+
 325 000c 9C91      		ld r25,X
 326 000e 0C94 0000 		jmp register_code16
 327               	.LVL35:
 328               	.L16:
  73:quantum/process_keycode/process_tap_dance.c ****         pair->layer_function(pair->layer);
 329               		.loc 1 73 12 view .LVU74
  73:quantum/process_keycode/process_tap_dance.c ****         pair->layer_function(pair->layer);
 330               		.loc 1 73 15 is_stmt 0 view .LVU75
 331 0012 8230      		cpi r24,lo8(2)
 332 0014 01F4      		brne .L15
  74:quantum/process_keycode/process_tap_dance.c ****     }
 333               		.loc 1 74 9 is_stmt 1 view .LVU76
 334 0016 1396      		adiw r26,3
 335 0018 ED91      		ld r30,X+
 336 001a FC91      		ld r31,X
 337 001c 1497      		sbiw r26,3+1
 338               	.LVL36:
  74:quantum/process_keycode/process_tap_dance.c ****     }
 339               		.loc 1 74 9 is_stmt 0 view .LVU77
 340 001e 1296      		adiw r26,2
 341 0020 8C91      		ld r24,X
 342 0022 0994      		ijmp
 343               	.LVL37:
 344               	.L15:
 345               	/* epilogue start */
  76:quantum/process_keycode/process_tap_dance.c **** 
 346               		.loc 1 76 1 view .LVU78
 347 0024 0895      		ret
 348               		.cfi_endproc
 349               	.LFE113:
 351               		.section	.text.qk_tap_dance_dual_role_reset,"ax",@progbits
 352               	.global	qk_tap_dance_dual_role_reset
 354               	qk_tap_dance_dual_role_reset:
 355               	.LVL38:
 356               	.LFB114:
  78:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
 357               		.loc 1 78 81 is_stmt 1 view -0
 358               		.cfi_startproc
 359               	/* prologue: function */
 360               	/* frame size = 0 */
 361               	/* stack size = 0 */
 362               	.L__stack_usage = 0
  79:quantum/process_keycode/process_tap_dance.c **** 
 363               		.loc 1 79 5 view .LVU80
  81:quantum/process_keycode/process_tap_dance.c ****         unregister_code16(pair->kc);
 364               		.loc 1 81 5 view .LVU81
  81:quantum/process_keycode/process_tap_dance.c ****         unregister_code16(pair->kc);
 365               		.loc 1 81 8 is_stmt 0 view .LVU82
 366 0000 FC01      		movw r30,r24
 367 0002 8081      		ld r24,Z
 368               	.LVL39:
  81:quantum/process_keycode/process_tap_dance.c ****         unregister_code16(pair->kc);
 369               		.loc 1 81 8 view .LVU83
 370 0004 8130      		cpi r24,lo8(1)
 371 0006 01F4      		brne .L18
  82:quantum/process_keycode/process_tap_dance.c ****     }
 372               		.loc 1 82 9 is_stmt 1 view .LVU84
 373 0008 FB01      		movw r30,r22
 374               	.LVL40:
  82:quantum/process_keycode/process_tap_dance.c ****     }
 375               		.loc 1 82 9 is_stmt 0 view .LVU85
 376 000a 8081      		ld r24,Z
 377 000c 9181      		ldd r25,Z+1
 378 000e 0C94 0000 		jmp unregister_code16
 379               	.LVL41:
 380               	.L18:
 381               	/* epilogue start */
  84:quantum/process_keycode/process_tap_dance.c **** 
 382               		.loc 1 84 1 view .LVU86
 383 0012 0895      		ret
 384               		.cfi_endproc
 385               	.LFE114:
 387               		.section	.text.reset_tap_dance,"ax",@progbits
 388               	.global	reset_tap_dance
 390               	reset_tap_dance:
 391               	.LVL42:
 392               	.LFB122:
 102:quantum/process_keycode/process_tap_dance.c **** 
 103:quantum/process_keycode/process_tap_dance.c **** static inline void process_tap_dance_action_on_reset(qk_tap_dance_action_t *action) {
 104:quantum/process_keycode/process_tap_dance.c ****     _process_tap_dance_action_fn(&action->state, action->user_data, action->fn.on_reset);
 105:quantum/process_keycode/process_tap_dance.c ****     del_mods(action->state.oneshot_mods);
 106:quantum/process_keycode/process_tap_dance.c ****     del_weak_mods(action->state.weak_mods);
 107:quantum/process_keycode/process_tap_dance.c ****     send_keyboard_report();
 108:quantum/process_keycode/process_tap_dance.c **** }
 109:quantum/process_keycode/process_tap_dance.c **** 
 110:quantum/process_keycode/process_tap_dance.c **** void preprocess_tap_dance(uint16_t keycode, keyrecord_t *record) {
 111:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action;
 112:quantum/process_keycode/process_tap_dance.c **** 
 113:quantum/process_keycode/process_tap_dance.c ****     if (!record->event.pressed) return;
 114:quantum/process_keycode/process_tap_dance.c **** 
 115:quantum/process_keycode/process_tap_dance.c ****     if (highest_td == -1) return;
 116:quantum/process_keycode/process_tap_dance.c **** 
 117:quantum/process_keycode/process_tap_dance.c ****     for (int i = 0; i <= highest_td; i++) {
 118:quantum/process_keycode/process_tap_dance.c ****         action = &tap_dance_actions[i];
 119:quantum/process_keycode/process_tap_dance.c ****         if (action->state.count) {
 120:quantum/process_keycode/process_tap_dance.c ****             if (keycode == action->state.keycode && keycode == last_td) continue;
 121:quantum/process_keycode/process_tap_dance.c ****             action->state.interrupted          = true;
 122:quantum/process_keycode/process_tap_dance.c ****             action->state.interrupting_keycode = keycode;
 123:quantum/process_keycode/process_tap_dance.c ****             process_tap_dance_action_on_dance_finished(action);
 124:quantum/process_keycode/process_tap_dance.c ****             reset_tap_dance(&action->state);
 125:quantum/process_keycode/process_tap_dance.c ****         }
 126:quantum/process_keycode/process_tap_dance.c ****     }
 127:quantum/process_keycode/process_tap_dance.c **** }
 128:quantum/process_keycode/process_tap_dance.c **** 
 129:quantum/process_keycode/process_tap_dance.c **** bool process_tap_dance(uint16_t keycode, keyrecord_t *record) {
 130:quantum/process_keycode/process_tap_dance.c ****     uint16_t               idx = keycode - QK_TAP_DANCE;
 131:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action;
 132:quantum/process_keycode/process_tap_dance.c **** 
 133:quantum/process_keycode/process_tap_dance.c ****     switch (keycode) {
 134:quantum/process_keycode/process_tap_dance.c ****         case QK_TAP_DANCE ... QK_TAP_DANCE_MAX:
 135:quantum/process_keycode/process_tap_dance.c ****             if ((int16_t)idx > highest_td) highest_td = idx;
 136:quantum/process_keycode/process_tap_dance.c ****             action = &tap_dance_actions[idx];
 137:quantum/process_keycode/process_tap_dance.c **** 
 138:quantum/process_keycode/process_tap_dance.c ****             action->state.pressed = record->event.pressed;
 139:quantum/process_keycode/process_tap_dance.c ****             if (record->event.pressed) {
 140:quantum/process_keycode/process_tap_dance.c ****                 action->state.keycode = keycode;
 141:quantum/process_keycode/process_tap_dance.c ****                 action->state.count++;
 142:quantum/process_keycode/process_tap_dance.c ****                 action->state.timer = timer_read();
 143:quantum/process_keycode/process_tap_dance.c **** #ifndef NO_ACTION_ONESHOT
 144:quantum/process_keycode/process_tap_dance.c ****                 action->state.oneshot_mods = get_oneshot_mods();
 145:quantum/process_keycode/process_tap_dance.c **** #else
 146:quantum/process_keycode/process_tap_dance.c ****                 action->state.oneshot_mods = 0;
 147:quantum/process_keycode/process_tap_dance.c **** #endif
 148:quantum/process_keycode/process_tap_dance.c ****                 action->state.weak_mods = get_mods();
 149:quantum/process_keycode/process_tap_dance.c ****                 action->state.weak_mods |= get_weak_mods();
 150:quantum/process_keycode/process_tap_dance.c ****                 process_tap_dance_action_on_each_tap(action);
 151:quantum/process_keycode/process_tap_dance.c **** 
 152:quantum/process_keycode/process_tap_dance.c ****                 last_td = keycode;
 153:quantum/process_keycode/process_tap_dance.c ****             } else {
 154:quantum/process_keycode/process_tap_dance.c ****                 if (action->state.count && action->state.finished) {
 155:quantum/process_keycode/process_tap_dance.c ****                     reset_tap_dance(&action->state);
 156:quantum/process_keycode/process_tap_dance.c ****                 }
 157:quantum/process_keycode/process_tap_dance.c ****             }
 158:quantum/process_keycode/process_tap_dance.c **** 
 159:quantum/process_keycode/process_tap_dance.c ****             break;
 160:quantum/process_keycode/process_tap_dance.c ****     }
 161:quantum/process_keycode/process_tap_dance.c **** 
 162:quantum/process_keycode/process_tap_dance.c ****     return true;
 163:quantum/process_keycode/process_tap_dance.c **** }
 164:quantum/process_keycode/process_tap_dance.c **** 
 165:quantum/process_keycode/process_tap_dance.c **** void matrix_scan_tap_dance() {
 166:quantum/process_keycode/process_tap_dance.c ****     if (highest_td == -1) return;
 167:quantum/process_keycode/process_tap_dance.c ****     uint16_t tap_user_defined;
 168:quantum/process_keycode/process_tap_dance.c **** 
 169:quantum/process_keycode/process_tap_dance.c ****     for (uint8_t i = 0; i <= highest_td; i++) {
 170:quantum/process_keycode/process_tap_dance.c ****         qk_tap_dance_action_t *action = &tap_dance_actions[i];
 171:quantum/process_keycode/process_tap_dance.c ****         if (action->custom_tapping_term > 0) {
 172:quantum/process_keycode/process_tap_dance.c ****             tap_user_defined = action->custom_tapping_term;
 173:quantum/process_keycode/process_tap_dance.c ****         } else {
 174:quantum/process_keycode/process_tap_dance.c ****             tap_user_defined = TAPPING_TERM;
 175:quantum/process_keycode/process_tap_dance.c ****         }
 176:quantum/process_keycode/process_tap_dance.c ****         if (action->state.count && timer_elapsed(action->state.timer) > tap_user_defined) {
 177:quantum/process_keycode/process_tap_dance.c ****             process_tap_dance_action_on_dance_finished(action);
 178:quantum/process_keycode/process_tap_dance.c ****             reset_tap_dance(&action->state);
 179:quantum/process_keycode/process_tap_dance.c ****         }
 180:quantum/process_keycode/process_tap_dance.c ****     }
 181:quantum/process_keycode/process_tap_dance.c **** }
 182:quantum/process_keycode/process_tap_dance.c **** 
 183:quantum/process_keycode/process_tap_dance.c **** void reset_tap_dance(qk_tap_dance_state_t *state) {
 393               		.loc 1 183 51 is_stmt 1 view -0
 394               		.cfi_startproc
 395               		.loc 1 183 51 is_stmt 0 view .LVU88
 396 0000 0F93      		push r16
 397               	.LCFI6:
 398               		.cfi_def_cfa_offset 3
 399               		.cfi_offset 16, -2
 400 0002 1F93      		push r17
 401               	.LCFI7:
 402               		.cfi_def_cfa_offset 4
 403               		.cfi_offset 17, -3
 404 0004 CF93      		push r28
 405               	.LCFI8:
 406               		.cfi_def_cfa_offset 5
 407               		.cfi_offset 28, -4
 408 0006 DF93      		push r29
 409               	.LCFI9:
 410               		.cfi_def_cfa_offset 6
 411               		.cfi_offset 29, -5
 412               	/* prologue: function */
 413               	/* frame size = 0 */
 414               	/* stack size = 4 */
 415               	.L__stack_usage = 4
 416 0008 EC01      		movw r28,r24
 184:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action;
 417               		.loc 1 184 5 is_stmt 1 view .LVU89
 185:quantum/process_keycode/process_tap_dance.c **** 
 186:quantum/process_keycode/process_tap_dance.c ****     if (state->pressed) return;
 418               		.loc 1 186 5 view .LVU90
 419               		.loc 1 186 8 is_stmt 0 view .LVU91
 420 000a 8A85      		ldd r24,Y+10
 421               	.LVL43:
 422               		.loc 1 186 8 view .LVU92
 423 000c 8111      		cpse r24,__zero_reg__
 424 000e 00C0      		rjmp .L20
 187:quantum/process_keycode/process_tap_dance.c **** 
 188:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[state->keycode - QK_TAP_DANCE];
 425               		.loc 1 188 5 is_stmt 1 view .LVU93
 426               		.loc 1 188 48 is_stmt 0 view .LVU94
 427 0010 0B81      		ldd r16,Y+3
 428 0012 1C81      		ldd r17,Y+4
 429 0014 1755      		subi r17,87
 430               	.LVL44:
 189:quantum/process_keycode/process_tap_dance.c **** 
 190:quantum/process_keycode/process_tap_dance.c ****     process_tap_dance_action_on_reset(action);
 431               		.loc 1 190 5 is_stmt 1 view .LVU95
 432               	.LBB12:
 433               	.LBI12:
 103:quantum/process_keycode/process_tap_dance.c ****     _process_tap_dance_action_fn(&action->state, action->user_data, action->fn.on_reset);
 434               		.loc 1 103 20 view .LVU96
 435               	.LBB13:
 104:quantum/process_keycode/process_tap_dance.c ****     del_mods(action->state.oneshot_mods);
 436               		.loc 1 104 5 view .LVU97
 437 0016 C801      		movw r24,r16
 438 0018 66E1      		ldi r22,lo8(22)
 439 001a 70E0      		ldi r23,0
 440 001c 0E94 0000 		call __mulhi3
 441 0020 DC01      		movw r26,r24
 442 0022 A050      		subi r26,lo8(-(tap_dance_actions))
 443 0024 B040      		sbci r27,hi8(-(tap_dance_actions))
 444               	.LVL45:
 104:quantum/process_keycode/process_tap_dance.c ****     del_mods(action->state.oneshot_mods);
 445               		.loc 1 104 5 is_stmt 0 view .LVU98
 446 0026 1496      		adiw r26,4
 447 0028 ED91      		ld r30,X+
 448 002a FC91      		ld r31,X
 449 002c 1597      		sbiw r26,4+1
 450               	.LVL46:
 451               	.LBB14:
 452               	.LBI14:
  86:quantum/process_keycode/process_tap_dance.c ****     if (fn) {
 453               		.loc 1 86 20 is_stmt 1 view .LVU99
 454               	.LBB15:
  87:quantum/process_keycode/process_tap_dance.c ****         fn(state, user_data);
 455               		.loc 1 87 5 view .LVU100
  87:quantum/process_keycode/process_tap_dance.c ****         fn(state, user_data);
 456               		.loc 1 87 8 is_stmt 0 view .LVU101
 457 002e 3097      		sbiw r30,0
 458 0030 01F0      		breq .L22
  88:quantum/process_keycode/process_tap_dance.c ****     }
 459               		.loc 1 88 9 is_stmt 1 view .LVU102
 460 0032 5496      		adiw r26,20
 461 0034 6D91      		ld r22,X+
 462 0036 7C91      		ld r23,X
 463 0038 8050      		subi r24,lo8(-(tap_dance_actions+6))
 464 003a 9040      		sbci r25,hi8(-(tap_dance_actions+6))
 465               	.LVL47:
  88:quantum/process_keycode/process_tap_dance.c ****     }
 466               		.loc 1 88 9 is_stmt 0 view .LVU103
 467 003c 0995      		icall
 468               	.LVL48:
 469               	.L22:
  88:quantum/process_keycode/process_tap_dance.c ****     }
 470               		.loc 1 88 9 view .LVU104
 471               	.LBE15:
 472               	.LBE14:
 105:quantum/process_keycode/process_tap_dance.c ****     del_weak_mods(action->state.weak_mods);
 473               		.loc 1 105 5 is_stmt 1 view .LVU105
 474 003e C801      		movw r24,r16
 475 0040 66E1      		ldi r22,lo8(22)
 476 0042 70E0      		ldi r23,0
 477 0044 0E94 0000 		call __mulhi3
 478 0048 8C01      		movw r16,r24
 479               	.LVL49:
 105:quantum/process_keycode/process_tap_dance.c ****     del_weak_mods(action->state.weak_mods);
 480               		.loc 1 105 5 is_stmt 0 view .LVU106
 481 004a 0050      		subi r16,lo8(-(tap_dance_actions))
 482 004c 1040      		sbci r17,hi8(-(tap_dance_actions))
 483 004e F801      		movw r30,r16
 484 0050 8781      		ldd r24,Z+7
 485 0052 0E94 0000 		call del_mods
 486               	.LVL50:
 106:quantum/process_keycode/process_tap_dance.c ****     send_keyboard_report();
 487               		.loc 1 106 5 is_stmt 1 view .LVU107
 488 0056 F801      		movw r30,r16
 489 0058 8085      		ldd r24,Z+8
 490 005a 0E94 0000 		call del_weak_mods
 491               	.LVL51:
 107:quantum/process_keycode/process_tap_dance.c **** }
 492               		.loc 1 107 5 view .LVU108
 493 005e 0E94 0000 		call send_keyboard_report
 494               	.LVL52:
 107:quantum/process_keycode/process_tap_dance.c **** }
 495               		.loc 1 107 5 is_stmt 0 view .LVU109
 496               	.LBE13:
 497               	.LBE12:
 191:quantum/process_keycode/process_tap_dance.c **** 
 192:quantum/process_keycode/process_tap_dance.c ****     state->count                = 0;
 498               		.loc 1 192 5 is_stmt 1 view .LVU110
 499               		.loc 1 192 33 is_stmt 0 view .LVU111
 500 0062 1882      		st Y,__zero_reg__
 193:quantum/process_keycode/process_tap_dance.c ****     state->interrupted          = false;
 501               		.loc 1 193 5 is_stmt 1 view .LVU112
 502               		.loc 1 193 33 is_stmt 0 view .LVU113
 503 0064 1986      		std Y+9,__zero_reg__
 194:quantum/process_keycode/process_tap_dance.c ****     state->finished             = false;
 504               		.loc 1 194 5 is_stmt 1 view .LVU114
 505               		.loc 1 194 33 is_stmt 0 view .LVU115
 506 0066 1B86      		std Y+11,__zero_reg__
 195:quantum/process_keycode/process_tap_dance.c ****     state->interrupting_keycode = 0;
 507               		.loc 1 195 5 is_stmt 1 view .LVU116
 508               		.loc 1 195 33 is_stmt 0 view .LVU117
 509 0068 1E82      		std Y+6,__zero_reg__
 510 006a 1D82      		std Y+5,__zero_reg__
 196:quantum/process_keycode/process_tap_dance.c ****     last_td                     = 0;
 511               		.loc 1 196 5 is_stmt 1 view .LVU118
 512               		.loc 1 196 33 is_stmt 0 view .LVU119
 513 006c 1092 0000 		sts last_td+1,__zero_reg__
 514 0070 1092 0000 		sts last_td,__zero_reg__
 515               	.L20:
 516               	/* epilogue start */
 197:quantum/process_keycode/process_tap_dance.c **** }
 517               		.loc 1 197 1 view .LVU120
 518 0074 DF91      		pop r29
 519 0076 CF91      		pop r28
 520               	.LVL53:
 521               		.loc 1 197 1 view .LVU121
 522 0078 1F91      		pop r17
 523 007a 0F91      		pop r16
 524 007c 0895      		ret
 525               		.cfi_endproc
 526               	.LFE122:
 528               		.section	.text.preprocess_tap_dance,"ax",@progbits
 529               	.global	preprocess_tap_dance
 531               	preprocess_tap_dance:
 532               	.LVL54:
 533               	.LFB119:
 110:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action;
 534               		.loc 1 110 66 is_stmt 1 view -0
 535               		.cfi_startproc
 110:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action;
 536               		.loc 1 110 66 is_stmt 0 view .LVU123
 537 0000 DF92      		push r13
 538               	.LCFI10:
 539               		.cfi_def_cfa_offset 3
 540               		.cfi_offset 13, -2
 541 0002 EF92      		push r14
 542               	.LCFI11:
 543               		.cfi_def_cfa_offset 4
 544               		.cfi_offset 14, -3
 545 0004 FF92      		push r15
 546               	.LCFI12:
 547               		.cfi_def_cfa_offset 5
 548               		.cfi_offset 15, -4
 549 0006 0F93      		push r16
 550               	.LCFI13:
 551               		.cfi_def_cfa_offset 6
 552               		.cfi_offset 16, -5
 553 0008 1F93      		push r17
 554               	.LCFI14:
 555               		.cfi_def_cfa_offset 7
 556               		.cfi_offset 17, -6
 557 000a CF93      		push r28
 558               	.LCFI15:
 559               		.cfi_def_cfa_offset 8
 560               		.cfi_offset 28, -7
 561 000c DF93      		push r29
 562               	.LCFI16:
 563               		.cfi_def_cfa_offset 9
 564               		.cfi_offset 29, -8
 565               	/* prologue: function */
 566               	/* frame size = 0 */
 567               	/* stack size = 7 */
 568               	.L__stack_usage = 7
 569 000e 7C01      		movw r14,r24
 111:quantum/process_keycode/process_tap_dance.c **** 
 570               		.loc 1 111 5 is_stmt 1 view .LVU124
 113:quantum/process_keycode/process_tap_dance.c **** 
 571               		.loc 1 113 5 view .LVU125
 113:quantum/process_keycode/process_tap_dance.c **** 
 572               		.loc 1 113 8 is_stmt 0 view .LVU126
 573 0010 FB01      		movw r30,r22
 574 0012 8281      		ldd r24,Z+2
 575               	.LVL55:
 113:quantum/process_keycode/process_tap_dance.c **** 
 576               		.loc 1 113 8 view .LVU127
 577 0014 8823      		tst r24
 578 0016 01F0      		breq .L26
 115:quantum/process_keycode/process_tap_dance.c **** 
 579               		.loc 1 115 5 is_stmt 1 view .LVU128
 115:quantum/process_keycode/process_tap_dance.c **** 
 580               		.loc 1 115 8 is_stmt 0 view .LVU129
 581 0018 8091 0000 		lds r24,highest_td
 582 001c 8F3F      		cpi r24,lo8(-1)
 583 001e 01F0      		breq .L26
 584 0020 C0E0      		ldi r28,lo8(tap_dance_actions)
 585 0022 D0E0      		ldi r29,hi8(tap_dance_actions)
 586               	.LBB19:
 117:quantum/process_keycode/process_tap_dance.c ****         action = &tap_dance_actions[i];
 587               		.loc 1 117 14 view .LVU130
 588 0024 10E0      		ldi r17,0
 589 0026 00E0      		ldi r16,0
 121:quantum/process_keycode/process_tap_dance.c ****             action->state.interrupting_keycode = keycode;
 590               		.loc 1 121 48 view .LVU131
 591 0028 DD24      		clr r13
 592 002a D394      		inc r13
 593               	.LVL56:
 594               	.L29:
 117:quantum/process_keycode/process_tap_dance.c ****         action = &tap_dance_actions[i];
 595               		.loc 1 117 23 discriminator 1 view .LVU132
 596 002c 8091 0000 		lds r24,highest_td
 597 0030 082E      		mov __tmp_reg__,r24
 598 0032 000C      		lsl r0
 599 0034 990B      		sbc r25,r25
 117:quantum/process_keycode/process_tap_dance.c ****         action = &tap_dance_actions[i];
 600               		.loc 1 117 5 discriminator 1 view .LVU133
 601 0036 8017      		cp r24,r16
 602 0038 9107      		cpc r25,r17
 603 003a 04F4      		brge .L33
 604               	.LVL57:
 605               	.L26:
 606               	/* epilogue start */
 117:quantum/process_keycode/process_tap_dance.c ****         action = &tap_dance_actions[i];
 607               		.loc 1 117 5 discriminator 1 view .LVU134
 608               	.LBE19:
 127:quantum/process_keycode/process_tap_dance.c **** 
 609               		.loc 1 127 1 view .LVU135
 610 003c DF91      		pop r29
 611 003e CF91      		pop r28
 612 0040 1F91      		pop r17
 613 0042 0F91      		pop r16
 614 0044 FF90      		pop r15
 615 0046 EF90      		pop r14
 616               	.LVL58:
 127:quantum/process_keycode/process_tap_dance.c **** 
 617               		.loc 1 127 1 view .LVU136
 618 0048 DF90      		pop r13
 619 004a 0895      		ret
 620               	.LVL59:
 621               	.L33:
 622               	.LBB22:
 118:quantum/process_keycode/process_tap_dance.c ****         if (action->state.count) {
 623               		.loc 1 118 9 is_stmt 1 view .LVU137
 119:quantum/process_keycode/process_tap_dance.c ****             if (keycode == action->state.keycode && keycode == last_td) continue;
 624               		.loc 1 119 9 view .LVU138
 119:quantum/process_keycode/process_tap_dance.c ****             if (keycode == action->state.keycode && keycode == last_td) continue;
 625               		.loc 1 119 12 is_stmt 0 view .LVU139
 626 004c 8E81      		ldd r24,Y+6
 627 004e 8823      		tst r24
 628 0050 01F0      		breq .L30
 120:quantum/process_keycode/process_tap_dance.c ****             action->state.interrupted          = true;
 629               		.loc 1 120 13 is_stmt 1 view .LVU140
 120:quantum/process_keycode/process_tap_dance.c ****             action->state.interrupted          = true;
 630               		.loc 1 120 16 is_stmt 0 view .LVU141
 631 0052 8985      		ldd r24,Y+9
 632 0054 9A85      		ldd r25,Y+10
 633 0056 8E15      		cp r24,r14
 634 0058 9F05      		cpc r25,r15
 635 005a 01F4      		brne .L31
 120:quantum/process_keycode/process_tap_dance.c ****             action->state.interrupted          = true;
 636               		.loc 1 120 50 discriminator 1 view .LVU142
 637 005c 8091 0000 		lds r24,last_td
 638 0060 9091 0000 		lds r25,last_td+1
 639 0064 8E15      		cp r24,r14
 640 0066 9F05      		cpc r25,r15
 641 0068 01F0      		breq .L30
 642               	.L31:
 121:quantum/process_keycode/process_tap_dance.c ****             action->state.interrupting_keycode = keycode;
 643               		.loc 1 121 13 is_stmt 1 view .LVU143
 121:quantum/process_keycode/process_tap_dance.c ****             action->state.interrupting_keycode = keycode;
 644               		.loc 1 121 48 is_stmt 0 view .LVU144
 645 006a DF86      		std Y+15,r13
 122:quantum/process_keycode/process_tap_dance.c ****             process_tap_dance_action_on_dance_finished(action);
 646               		.loc 1 122 13 is_stmt 1 view .LVU145
 122:quantum/process_keycode/process_tap_dance.c ****             process_tap_dance_action_on_dance_finished(action);
 647               		.loc 1 122 48 is_stmt 0 view .LVU146
 648 006c FC86      		std Y+12,r15
 649 006e EB86      		std Y+11,r14
 123:quantum/process_keycode/process_tap_dance.c ****             reset_tap_dance(&action->state);
 650               		.loc 1 123 13 is_stmt 1 view .LVU147
 651               	.LVL60:
 652               	.LBB20:
 653               	.LBI20:
  94:quantum/process_keycode/process_tap_dance.c ****     if (action->state.finished) return;
 654               		.loc 1 94 20 view .LVU148
 655               	.LBB21:
  95:quantum/process_keycode/process_tap_dance.c ****     action->state.finished = true;
 656               		.loc 1 95 5 view .LVU149
  95:quantum/process_keycode/process_tap_dance.c ****     action->state.finished = true;
 657               		.loc 1 95 8 is_stmt 0 view .LVU150
 658 0070 8989      		ldd r24,Y+17
 659 0072 8111      		cpse r24,__zero_reg__
 660 0074 00C0      		rjmp .L32
  95:quantum/process_keycode/process_tap_dance.c ****     action->state.finished = true;
 661               		.loc 1 95 8 view .LVU151
 662 0076 CE01      		movw r24,r28
 663 0078 0E94 0000 		call process_tap_dance_action_on_dance_finished.part.0
 664               	.LVL61:
 665               	.L32:
  95:quantum/process_keycode/process_tap_dance.c ****     action->state.finished = true;
 666               		.loc 1 95 8 view .LVU152
 667               	.LBE21:
 668               	.LBE20:
 124:quantum/process_keycode/process_tap_dance.c ****         }
 669               		.loc 1 124 13 is_stmt 1 view .LVU153
 670 007c CE01      		movw r24,r28
 671 007e 0696      		adiw r24,6
 672 0080 0E94 0000 		call reset_tap_dance
 673               	.LVL62:
 674               	.L30:
 117:quantum/process_keycode/process_tap_dance.c ****         action = &tap_dance_actions[i];
 675               		.loc 1 117 39 is_stmt 0 discriminator 2 view .LVU154
 676 0084 0F5F      		subi r16,-1
 677 0086 1F4F      		sbci r17,-1
 678               	.LVL63:
 117:quantum/process_keycode/process_tap_dance.c ****         action = &tap_dance_actions[i];
 679               		.loc 1 117 39 discriminator 2 view .LVU155
 680 0088 6696      		adiw r28,22
 681 008a 00C0      		rjmp .L29
 682               	.LBE22:
 683               		.cfi_endproc
 684               	.LFE119:
 686               		.section	.text.process_tap_dance,"ax",@progbits
 687               	.global	process_tap_dance
 689               	process_tap_dance:
 690               	.LVL64:
 691               	.LFB120:
 129:quantum/process_keycode/process_tap_dance.c ****     uint16_t               idx = keycode - QK_TAP_DANCE;
 692               		.loc 1 129 63 is_stmt 1 view -0
 693               		.cfi_startproc
 129:quantum/process_keycode/process_tap_dance.c ****     uint16_t               idx = keycode - QK_TAP_DANCE;
 694               		.loc 1 129 63 is_stmt 0 view .LVU157
 695 0000 EF92      		push r14
 696               	.LCFI17:
 697               		.cfi_def_cfa_offset 3
 698               		.cfi_offset 14, -2
 699 0002 FF92      		push r15
 700               	.LCFI18:
 701               		.cfi_def_cfa_offset 4
 702               		.cfi_offset 15, -3
 703 0004 0F93      		push r16
 704               	.LCFI19:
 705               		.cfi_def_cfa_offset 5
 706               		.cfi_offset 16, -4
 707 0006 1F93      		push r17
 708               	.LCFI20:
 709               		.cfi_def_cfa_offset 6
 710               		.cfi_offset 17, -5
 711 0008 CF93      		push r28
 712               	.LCFI21:
 713               		.cfi_def_cfa_offset 7
 714               		.cfi_offset 28, -6
 715 000a DF93      		push r29
 716               	.LCFI22:
 717               		.cfi_def_cfa_offset 8
 718               		.cfi_offset 29, -7
 719               	/* prologue: function */
 720               	/* frame size = 0 */
 721               	/* stack size = 6 */
 722               	.L__stack_usage = 6
 723 000c 7C01      		movw r14,r24
 724 000e FB01      		movw r30,r22
 130:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action;
 725               		.loc 1 130 5 is_stmt 1 view .LVU158
 130:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action;
 726               		.loc 1 130 28 is_stmt 0 view .LVU159
 727 0010 8C01      		movw r16,r24
 728 0012 1755      		subi r17,87
 729               	.LVL65:
 131:quantum/process_keycode/process_tap_dance.c **** 
 730               		.loc 1 131 5 is_stmt 1 view .LVU160
 133:quantum/process_keycode/process_tap_dance.c ****         case QK_TAP_DANCE ... QK_TAP_DANCE_MAX:
 731               		.loc 1 133 5 view .LVU161
 732 0014 0F3F      		cpi r16,-1
 733 0016 1105      		cpc r17,__zero_reg__
 734 0018 01F0      		breq .+4
 735 001a 00F0      		brlo .+2
 736 001c 00C0      		rjmp .L42
 135:quantum/process_keycode/process_tap_dance.c ****             action = &tap_dance_actions[idx];
 737               		.loc 1 135 13 view .LVU162
 135:quantum/process_keycode/process_tap_dance.c ****             action = &tap_dance_actions[idx];
 738               		.loc 1 135 30 is_stmt 0 view .LVU163
 739 001e 8091 0000 		lds r24,highest_td
 740               	.LVL66:
 135:quantum/process_keycode/process_tap_dance.c ****             action = &tap_dance_actions[idx];
 741               		.loc 1 135 30 view .LVU164
 742 0022 082E      		mov __tmp_reg__,r24
 743 0024 000C      		lsl r0
 744 0026 990B      		sbc r25,r25
 135:quantum/process_keycode/process_tap_dance.c ****             action = &tap_dance_actions[idx];
 745               		.loc 1 135 16 view .LVU165
 746 0028 8017      		cp r24,r16
 747 002a 9107      		cpc r25,r17
 748 002c 04F4      		brge .L43
 135:quantum/process_keycode/process_tap_dance.c ****             action = &tap_dance_actions[idx];
 749               		.loc 1 135 44 is_stmt 1 discriminator 1 view .LVU166
 135:quantum/process_keycode/process_tap_dance.c ****             action = &tap_dance_actions[idx];
 750               		.loc 1 135 55 is_stmt 0 discriminator 1 view .LVU167
 751 002e 0093 0000 		sts highest_td,r16
 752               	.L43:
 136:quantum/process_keycode/process_tap_dance.c **** 
 753               		.loc 1 136 13 is_stmt 1 view .LVU168
 754               	.LVL67:
 138:quantum/process_keycode/process_tap_dance.c ****             if (record->event.pressed) {
 755               		.loc 1 138 13 view .LVU169
 138:quantum/process_keycode/process_tap_dance.c ****             if (record->event.pressed) {
 756               		.loc 1 138 50 is_stmt 0 view .LVU170
 757 0032 2281      		ldd r18,Z+2
 138:quantum/process_keycode/process_tap_dance.c ****             if (record->event.pressed) {
 758               		.loc 1 138 35 view .LVU171
 759 0034 C801      		movw r24,r16
 760 0036 66E1      		ldi r22,lo8(22)
 761 0038 70E0      		ldi r23,0
 762               	.LVL68:
 138:quantum/process_keycode/process_tap_dance.c ****             if (record->event.pressed) {
 763               		.loc 1 138 35 view .LVU172
 764 003a 0E94 0000 		call __mulhi3
 765 003e EC01      		movw r28,r24
 766 0040 C050      		subi r28,lo8(-(tap_dance_actions))
 767 0042 D040      		sbci r29,hi8(-(tap_dance_actions))
 768               	.LVL69:
 138:quantum/process_keycode/process_tap_dance.c ****             if (record->event.pressed) {
 769               		.loc 1 138 35 view .LVU173
 770 0044 288B      		std Y+16,r18
 139:quantum/process_keycode/process_tap_dance.c ****                 action->state.keycode = keycode;
 771               		.loc 1 139 13 is_stmt 1 view .LVU174
 139:quantum/process_keycode/process_tap_dance.c ****                 action->state.keycode = keycode;
 772               		.loc 1 139 16 is_stmt 0 view .LVU175
 773 0046 9281      		ldd r25,Z+2
 774 0048 8E81      		ldd r24,Y+6
 775 004a 9923      		tst r25
 776 004c 01F0      		breq .L44
 140:quantum/process_keycode/process_tap_dance.c ****                 action->state.count++;
 777               		.loc 1 140 17 is_stmt 1 view .LVU176
 140:quantum/process_keycode/process_tap_dance.c ****                 action->state.count++;
 778               		.loc 1 140 39 is_stmt 0 view .LVU177
 779 004e FA86      		std Y+10,r15
 780 0050 E986      		std Y+9,r14
 141:quantum/process_keycode/process_tap_dance.c ****                 action->state.timer = timer_read();
 781               		.loc 1 141 17 is_stmt 1 view .LVU178
 141:quantum/process_keycode/process_tap_dance.c ****                 action->state.timer = timer_read();
 782               		.loc 1 141 36 is_stmt 0 view .LVU179
 783 0052 8F5F      		subi r24,lo8(-(1))
 784 0054 8E83      		std Y+6,r24
 142:quantum/process_keycode/process_tap_dance.c **** #ifndef NO_ACTION_ONESHOT
 785               		.loc 1 142 17 is_stmt 1 view .LVU180
 142:quantum/process_keycode/process_tap_dance.c **** #ifndef NO_ACTION_ONESHOT
 786               		.loc 1 142 39 is_stmt 0 view .LVU181
 787 0056 0E94 0000 		call timer_read
 788               	.LVL70:
 142:quantum/process_keycode/process_tap_dance.c **** #ifndef NO_ACTION_ONESHOT
 789               		.loc 1 142 37 view .LVU182
 790 005a 9E87      		std Y+14,r25
 791 005c 8D87      		std Y+13,r24
 144:quantum/process_keycode/process_tap_dance.c **** #else
 792               		.loc 1 144 17 is_stmt 1 view .LVU183
 144:quantum/process_keycode/process_tap_dance.c **** #else
 793               		.loc 1 144 46 is_stmt 0 view .LVU184
 794 005e 0E94 0000 		call get_oneshot_mods
 795               	.LVL71:
 144:quantum/process_keycode/process_tap_dance.c **** #else
 796               		.loc 1 144 44 view .LVU185
 797 0062 8F83      		std Y+7,r24
 148:quantum/process_keycode/process_tap_dance.c ****                 action->state.weak_mods |= get_weak_mods();
 798               		.loc 1 148 17 is_stmt 1 view .LVU186
 148:quantum/process_keycode/process_tap_dance.c ****                 action->state.weak_mods |= get_weak_mods();
 799               		.loc 1 148 43 is_stmt 0 view .LVU187
 800 0064 0E94 0000 		call get_mods
 801               	.LVL72:
 148:quantum/process_keycode/process_tap_dance.c ****                 action->state.weak_mods |= get_weak_mods();
 802               		.loc 1 148 41 view .LVU188
 803 0068 8887      		std Y+8,r24
 149:quantum/process_keycode/process_tap_dance.c ****                 process_tap_dance_action_on_each_tap(action);
 804               		.loc 1 149 17 is_stmt 1 view .LVU189
 149:quantum/process_keycode/process_tap_dance.c ****                 process_tap_dance_action_on_each_tap(action);
 805               		.loc 1 149 44 is_stmt 0 view .LVU190
 806 006a 0E94 0000 		call get_weak_mods
 807               	.LVL73:
 149:quantum/process_keycode/process_tap_dance.c ****                 process_tap_dance_action_on_each_tap(action);
 808               		.loc 1 149 41 view .LVU191
 809 006e 9885      		ldd r25,Y+8
 810 0070 892B      		or r24,r25
 811 0072 8887      		std Y+8,r24
 150:quantum/process_keycode/process_tap_dance.c **** 
 812               		.loc 1 150 17 is_stmt 1 view .LVU192
 813               	.LVL74:
 814               	.LBB27:
 815               	.LBI27:
  92:quantum/process_keycode/process_tap_dance.c **** 
 816               		.loc 1 92 20 view .LVU193
 817               	.LBB28:
  92:quantum/process_keycode/process_tap_dance.c **** 
 818               		.loc 1 92 90 view .LVU194
 819 0074 E881      		ld r30,Y
 820 0076 F981      		ldd r31,Y+1
 821               	.LVL75:
 822               	.LBB29:
 823               	.LBI29:
  86:quantum/process_keycode/process_tap_dance.c ****     if (fn) {
 824               		.loc 1 86 20 view .LVU195
 825               	.LBB30:
  87:quantum/process_keycode/process_tap_dance.c ****         fn(state, user_data);
 826               		.loc 1 87 5 view .LVU196
  87:quantum/process_keycode/process_tap_dance.c ****         fn(state, user_data);
 827               		.loc 1 87 8 is_stmt 0 view .LVU197
 828 0078 3097      		sbiw r30,0
 829 007a 01F0      		breq .L45
  88:quantum/process_keycode/process_tap_dance.c ****     }
 830               		.loc 1 88 9 is_stmt 1 view .LVU198
 831 007c 2C89      		ldd r18,Y+20
 832 007e 3D89      		ldd r19,Y+21
 833               	.LBE30:
 834               	.LBE29:
  92:quantum/process_keycode/process_tap_dance.c **** 
 835               		.loc 1 92 90 is_stmt 0 view .LVU199
 836 0080 C801      		movw r24,r16
 837 0082 66E1      		ldi r22,lo8(22)
 838 0084 70E0      		ldi r23,0
 839 0086 0E94 0000 		call __mulhi3
 840               	.LVL76:
 841               	.LBB32:
 842               	.LBB31:
  88:quantum/process_keycode/process_tap_dance.c ****     }
 843               		.loc 1 88 9 view .LVU200
 844 008a B901      		movw r22,r18
 845 008c 8050      		subi r24,lo8(-(tap_dance_actions+6))
 846 008e 9040      		sbci r25,hi8(-(tap_dance_actions+6))
 847               	.LVL77:
  88:quantum/process_keycode/process_tap_dance.c ****     }
 848               		.loc 1 88 9 view .LVU201
 849 0090 0995      		icall
 850               	.LVL78:
 851               	.L45:
  88:quantum/process_keycode/process_tap_dance.c ****     }
 852               		.loc 1 88 9 view .LVU202
 853               	.LBE31:
 854               	.LBE32:
 855               	.LBE28:
 856               	.LBE27:
 152:quantum/process_keycode/process_tap_dance.c ****             } else {
 857               		.loc 1 152 17 is_stmt 1 view .LVU203
 152:quantum/process_keycode/process_tap_dance.c ****             } else {
 858               		.loc 1 152 25 is_stmt 0 view .LVU204
 859 0092 F092 0000 		sts last_td+1,r15
 860 0096 E092 0000 		sts last_td,r14
 861               	.LVL79:
 862               	.L42:
 162:quantum/process_keycode/process_tap_dance.c **** }
 863               		.loc 1 162 5 is_stmt 1 view .LVU205
 163:quantum/process_keycode/process_tap_dance.c **** 
 864               		.loc 1 163 1 is_stmt 0 view .LVU206
 865 009a 81E0      		ldi r24,lo8(1)
 866               	/* epilogue start */
 867 009c DF91      		pop r29
 868 009e CF91      		pop r28
 869 00a0 1F91      		pop r17
 870 00a2 0F91      		pop r16
 871               	.LVL80:
 163:quantum/process_keycode/process_tap_dance.c **** 
 872               		.loc 1 163 1 view .LVU207
 873 00a4 FF90      		pop r15
 874 00a6 EF90      		pop r14
 875               	.LVL81:
 163:quantum/process_keycode/process_tap_dance.c **** 
 876               		.loc 1 163 1 view .LVU208
 877 00a8 0895      		ret
 878               	.LVL82:
 879               	.L44:
 154:quantum/process_keycode/process_tap_dance.c ****                     reset_tap_dance(&action->state);
 880               		.loc 1 154 17 is_stmt 1 view .LVU209
 154:quantum/process_keycode/process_tap_dance.c ****                     reset_tap_dance(&action->state);
 881               		.loc 1 154 20 is_stmt 0 view .LVU210
 882 00aa 8823      		tst r24
 883 00ac 01F0      		breq .L42
 154:quantum/process_keycode/process_tap_dance.c ****                     reset_tap_dance(&action->state);
 884               		.loc 1 154 41 discriminator 1 view .LVU211
 885 00ae 8989      		ldd r24,Y+17
 886 00b0 8823      		tst r24
 887 00b2 01F0      		breq .L42
 155:quantum/process_keycode/process_tap_dance.c ****                 }
 888               		.loc 1 155 21 is_stmt 1 view .LVU212
 889 00b4 C801      		movw r24,r16
 890 00b6 66E1      		ldi r22,lo8(22)
 891 00b8 70E0      		ldi r23,0
 892 00ba 0E94 0000 		call __mulhi3
 893 00be 8050      		subi r24,lo8(-(tap_dance_actions+6))
 894 00c0 9040      		sbci r25,hi8(-(tap_dance_actions+6))
 895 00c2 0E94 0000 		call reset_tap_dance
 896               	.LVL83:
 155:quantum/process_keycode/process_tap_dance.c ****                 }
 897               		.loc 1 155 21 is_stmt 0 view .LVU213
 898 00c6 00C0      		rjmp .L42
 899               		.cfi_endproc
 900               	.LFE120:
 902               		.section	.text.matrix_scan_tap_dance,"ax",@progbits
 903               	.global	matrix_scan_tap_dance
 905               	matrix_scan_tap_dance:
 906               	.LFB121:
 165:quantum/process_keycode/process_tap_dance.c ****     if (highest_td == -1) return;
 907               		.loc 1 165 30 is_stmt 1 view -0
 908               		.cfi_startproc
 909 0000 EF92      		push r14
 910               	.LCFI23:
 911               		.cfi_def_cfa_offset 3
 912               		.cfi_offset 14, -2
 913 0002 FF92      		push r15
 914               	.LCFI24:
 915               		.cfi_def_cfa_offset 4
 916               		.cfi_offset 15, -3
 917 0004 1F93      		push r17
 918               	.LCFI25:
 919               		.cfi_def_cfa_offset 5
 920               		.cfi_offset 17, -4
 921 0006 CF93      		push r28
 922               	.LCFI26:
 923               		.cfi_def_cfa_offset 6
 924               		.cfi_offset 28, -5
 925 0008 DF93      		push r29
 926               	.LCFI27:
 927               		.cfi_def_cfa_offset 7
 928               		.cfi_offset 29, -6
 929               	/* prologue: function */
 930               	/* frame size = 0 */
 931               	/* stack size = 5 */
 932               	.L__stack_usage = 5
 166:quantum/process_keycode/process_tap_dance.c ****     uint16_t tap_user_defined;
 933               		.loc 1 166 5 view .LVU215
 166:quantum/process_keycode/process_tap_dance.c ****     uint16_t tap_user_defined;
 934               		.loc 1 166 8 is_stmt 0 view .LVU216
 935 000a 8091 0000 		lds r24,highest_td
 936               	.LBB37:
 169:quantum/process_keycode/process_tap_dance.c ****         qk_tap_dance_action_t *action = &tap_dance_actions[i];
 937               		.loc 1 169 18 view .LVU217
 938 000e 10E0      		ldi r17,0
 939               	.LBE37:
 166:quantum/process_keycode/process_tap_dance.c ****     uint16_t tap_user_defined;
 940               		.loc 1 166 8 view .LVU218
 941 0010 8F3F      		cpi r24,lo8(-1)
 942 0012 01F4      		brne .L57
 943               	.L56:
 944               	/* epilogue start */
 181:quantum/process_keycode/process_tap_dance.c **** 
 945               		.loc 1 181 1 view .LVU219
 946 0014 DF91      		pop r29
 947 0016 CF91      		pop r28
 948 0018 1F91      		pop r17
 949 001a FF90      		pop r15
 950 001c EF90      		pop r14
 951 001e 0895      		ret
 952               	.LVL84:
 953               	.L63:
 954               	.LBB41:
 955               	.LBB38:
 170:quantum/process_keycode/process_tap_dance.c ****         if (action->custom_tapping_term > 0) {
 956               		.loc 1 170 9 is_stmt 1 view .LVU220
 171:quantum/process_keycode/process_tap_dance.c ****             tap_user_defined = action->custom_tapping_term;
 957               		.loc 1 171 9 view .LVU221
 171:quantum/process_keycode/process_tap_dance.c ****             tap_user_defined = action->custom_tapping_term;
 958               		.loc 1 171 19 is_stmt 0 view .LVU222
 959 0020 CE01      		movw r24,r28
 960 0022 66E1      		ldi r22,lo8(22)
 961 0024 70E0      		ldi r23,0
 962 0026 0E94 0000 		call __mulhi3
 963 002a 8050      		subi r24,lo8(-(tap_dance_actions))
 964 002c 9040      		sbci r25,hi8(-(tap_dance_actions))
 965 002e FC01      		movw r30,r24
 966 0030 E288      		ldd r14,Z+18
 967 0032 F388      		ldd r15,Z+19
 171:quantum/process_keycode/process_tap_dance.c ****             tap_user_defined = action->custom_tapping_term;
 968               		.loc 1 171 12 view .LVU223
 969 0034 E114      		cp r14,__zero_reg__
 970 0036 F104      		cpc r15,__zero_reg__
 971 0038 01F4      		brne .L58
 174:quantum/process_keycode/process_tap_dance.c ****         }
 972               		.loc 1 174 30 view .LVU224
 973 003a 8AEA      		ldi r24,lo8(-86)
 974 003c E82E      		mov r14,r24
 975 003e F12C      		mov r15,__zero_reg__
 976               	.L58:
 977               	.LVL85:
 176:quantum/process_keycode/process_tap_dance.c ****             process_tap_dance_action_on_dance_finished(action);
 978               		.loc 1 176 9 is_stmt 1 view .LVU225
 176:quantum/process_keycode/process_tap_dance.c ****             process_tap_dance_action_on_dance_finished(action);
 979               		.loc 1 176 26 is_stmt 0 view .LVU226
 980 0040 CE01      		movw r24,r28
 981 0042 66E1      		ldi r22,lo8(22)
 982 0044 70E0      		ldi r23,0
 983 0046 0E94 0000 		call __mulhi3
 984 004a FC01      		movw r30,r24
 985 004c E050      		subi r30,lo8(-(tap_dance_actions))
 986 004e F040      		sbci r31,hi8(-(tap_dance_actions))
 176:quantum/process_keycode/process_tap_dance.c ****             process_tap_dance_action_on_dance_finished(action);
 987               		.loc 1 176 12 view .LVU227
 988 0050 8681      		ldd r24,Z+6
 989 0052 8823      		tst r24
 990 0054 01F0      		breq .L60
 176:quantum/process_keycode/process_tap_dance.c ****             process_tap_dance_action_on_dance_finished(action);
 991               		.loc 1 176 36 discriminator 1 view .LVU228
 992 0056 8585      		ldd r24,Z+13
 993 0058 9685      		ldd r25,Z+14
 994 005a 0E94 0000 		call timer_elapsed
 995               	.LVL86:
 176:quantum/process_keycode/process_tap_dance.c ****             process_tap_dance_action_on_dance_finished(action);
 996               		.loc 1 176 33 discriminator 1 view .LVU229
 997 005e E816      		cp r14,r24
 998 0060 F906      		cpc r15,r25
 999 0062 00F4      		brsh .L60
 1000 0064 CE01      		movw r24,r28
 1001 0066 66E1      		ldi r22,lo8(22)
 1002 0068 70E0      		ldi r23,0
 1003 006a 0E94 0000 		call __mulhi3
 1004 006e 7C01      		movw r14,r24
 1005               	.LVL87:
 177:quantum/process_keycode/process_tap_dance.c ****             reset_tap_dance(&action->state);
 1006               		.loc 1 177 13 is_stmt 1 view .LVU230
 1007               	.LBB39:
 1008               	.LBI39:
  94:quantum/process_keycode/process_tap_dance.c ****     if (action->state.finished) return;
 1009               		.loc 1 94 20 view .LVU231
 1010               	.LBB40:
  95:quantum/process_keycode/process_tap_dance.c ****     action->state.finished = true;
 1011               		.loc 1 95 5 view .LVU232
  95:quantum/process_keycode/process_tap_dance.c ****     action->state.finished = true;
 1012               		.loc 1 95 22 is_stmt 0 view .LVU233
 1013 0070 8050      		subi r24,lo8(-(tap_dance_actions))
 1014 0072 9040      		sbci r25,hi8(-(tap_dance_actions))
  95:quantum/process_keycode/process_tap_dance.c ****     action->state.finished = true;
 1015               		.loc 1 95 8 view .LVU234
 1016 0074 FC01      		movw r30,r24
 1017 0076 8189      		ldd r24,Z+17
 1018 0078 8111      		cpse r24,__zero_reg__
 1019 007a 00C0      		rjmp .L62
 1020 007c CF01      		movw r24,r30
 1021 007e 0E94 0000 		call process_tap_dance_action_on_dance_finished.part.0
 1022               	.LVL88:
 1023               	.L62:
  95:quantum/process_keycode/process_tap_dance.c ****     action->state.finished = true;
 1024               		.loc 1 95 8 view .LVU235
 1025               	.LBE40:
 1026               	.LBE39:
 178:quantum/process_keycode/process_tap_dance.c ****         }
 1027               		.loc 1 178 13 is_stmt 1 view .LVU236
 1028 0082 C701      		movw r24,r14
 1029 0084 8050      		subi r24,lo8(-(tap_dance_actions+6))
 1030 0086 9040      		sbci r25,hi8(-(tap_dance_actions+6))
 1031 0088 0E94 0000 		call reset_tap_dance
 1032               	.LVL89:
 1033               	.L60:
 1034               	.LBE38:
 169:quantum/process_keycode/process_tap_dance.c ****         qk_tap_dance_action_t *action = &tap_dance_actions[i];
 1035               		.loc 1 169 43 is_stmt 0 discriminator 2 view .LVU237
 1036 008c 1F5F      		subi r17,lo8(-(1))
 1037               	.LVL90:
 1038               	.L57:
 169:quantum/process_keycode/process_tap_dance.c ****         qk_tap_dance_action_t *action = &tap_dance_actions[i];
 1039               		.loc 1 169 27 discriminator 1 view .LVU238
 1040 008e C12F      		mov r28,r17
 1041 0090 D0E0      		ldi r29,0
 1042 0092 8091 0000 		lds r24,highest_td
 1043 0096 082E      		mov __tmp_reg__,r24
 1044 0098 000C      		lsl r0
 1045 009a 990B      		sbc r25,r25
 169:quantum/process_keycode/process_tap_dance.c ****         qk_tap_dance_action_t *action = &tap_dance_actions[i];
 1046               		.loc 1 169 5 discriminator 1 view .LVU239
 1047 009c 8C17      		cp r24,r28
 1048 009e 9D07      		cpc r25,r29
 1049 00a0 04F0      		brlt .+2
 1050 00a2 00C0      		rjmp .L63
 1051 00a4 00C0      		rjmp .L56
 1052               	.LBE41:
 1053               		.cfi_endproc
 1054               	.LFE121:
 1056               		.section	.data.highest_td,"aw"
 1059               	highest_td:
 1060 0000 FF        		.byte	-1
 1061               		.section	.bss.last_td,"aw",@nobits
 1064               	last_td:
 1065 0000 0000      		.zero	2
 1066               		.text
 1067               	.Letext0:
 1068               		.file 2 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchain
 1069               		.file 3 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchain
 1070               		.file 4 "tmk_core/common/keyboard.h"
 1071               		.file 5 "tmk_core/common/action.h"
 1072               		.file 6 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 1073               		.file 7 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 1074               		.file 8 "lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 1075               		.file 9 "lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
 1076               		.file 10 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchai
 1077               		.file 11 "tmk_core/common/report.h"
 1078               		.file 12 "tmk_core/common/host.h"
 1079               		.file 13 "tmk_core/common/debug.h"
 1080               		.file 14 "quantum/keycode_config.h"
 1081               		.file 15 "quantum/keymap.h"
 1082               		.file 16 "./quantum/color.h"
 1083               		.file 17 "quantum/rgblight.h"
 1084               		.file 18 "tmk_core/common/action_layer.h"
 1085               		.file 19 "tmk_core/common/timer.h"
 1086               		.file 20 "tmk_core/common/action_util.h"
 1087               		.file 21 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchai
 1088               		.file 22 "quantum/process_keycode/process_unicode_common.h"
 1089               		.file 23 "quantum/process_keycode/process_tap_dance.h"
 1090               		.file 24 "quantum/quantum.h"
 1091               		.file 25 "quantum/quantum_keycodes.h"
DEFINED SYMBOLS
                            *ABS*:00000000 process_tap_dance.c
C:\Users\nonej\Documents\Keyboard\msys64\tmp\cczFSJpq.s:2      *ABS*:0000003e __SP_H__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\cczFSJpq.s:3      *ABS*:0000003d __SP_L__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\cczFSJpq.s:4      *ABS*:0000003f __SREG__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\cczFSJpq.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\cczFSJpq.s:6      *ABS*:00000001 __zero_reg__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\cczFSJpq.s:12     .text.process_tap_dance_action_on_dance_finished.part.0:00000000 process_tap_dance_action_on_dance_finished.part.0
C:\Users\nonej\Documents\Keyboard\msys64\tmp\cczFSJpq.s:97     .text.qk_tap_dance_pair_on_each_tap:00000000 qk_tap_dance_pair_on_each_tap
C:\Users\nonej\Documents\Keyboard\msys64\tmp\cczFSJpq.s:149    .text.qk_tap_dance_pair_finished:00000000 qk_tap_dance_pair_finished
C:\Users\nonej\Documents\Keyboard\msys64\tmp\cczFSJpq.s:200    .text.qk_tap_dance_pair_reset:00000000 qk_tap_dance_pair_reset
C:\Users\nonej\Documents\Keyboard\msys64\tmp\cczFSJpq.s:251    .text.qk_tap_dance_dual_role_on_each_tap:00000000 qk_tap_dance_dual_role_on_each_tap
C:\Users\nonej\Documents\Keyboard\msys64\tmp\cczFSJpq.s:302    .text.qk_tap_dance_dual_role_finished:00000000 qk_tap_dance_dual_role_finished
C:\Users\nonej\Documents\Keyboard\msys64\tmp\cczFSJpq.s:354    .text.qk_tap_dance_dual_role_reset:00000000 qk_tap_dance_dual_role_reset
C:\Users\nonej\Documents\Keyboard\msys64\tmp\cczFSJpq.s:390    .text.reset_tap_dance:00000000 reset_tap_dance
C:\Users\nonej\Documents\Keyboard\msys64\tmp\cczFSJpq.s:1064   .bss.last_td:00000000 last_td
C:\Users\nonej\Documents\Keyboard\msys64\tmp\cczFSJpq.s:531    .text.preprocess_tap_dance:00000000 preprocess_tap_dance
C:\Users\nonej\Documents\Keyboard\msys64\tmp\cczFSJpq.s:1059   .data.highest_td:00000000 highest_td
C:\Users\nonej\Documents\Keyboard\msys64\tmp\cczFSJpq.s:689    .text.process_tap_dance:00000000 process_tap_dance
C:\Users\nonej\Documents\Keyboard\msys64\tmp\cczFSJpq.s:905    .text.matrix_scan_tap_dance:00000000 matrix_scan_tap_dance

UNDEFINED SYMBOLS
add_mods
add_weak_mods
send_keyboard_report
register_code16
unregister_code16
layer_move
__mulhi3
tap_dance_actions
del_mods
del_weak_mods
timer_read
get_oneshot_mods
get_mods
get_weak_mods
timer_elapsed
__do_copy_data
__do_clear_bss
