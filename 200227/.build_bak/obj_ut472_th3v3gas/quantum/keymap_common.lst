   1               		.file	"keymap_common.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.action_get_macro,"ax",@progbits
  11               		.weak	action_get_macro
  13               	action_get_macro:
  14               	.LVL0:
  15               	.LFB110:
  16               		.file 1 "quantum/keymap_common.c"
   1:quantum/keymap_common.c **** /*
   2:quantum/keymap_common.c **** Copyright 2012-2017 Jun Wako <wakojun@gmail.com>
   3:quantum/keymap_common.c **** 
   4:quantum/keymap_common.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/keymap_common.c **** it under the terms of the GNU General Public License as published by
   6:quantum/keymap_common.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/keymap_common.c **** (at your option) any later version.
   8:quantum/keymap_common.c **** 
   9:quantum/keymap_common.c **** This program is distributed in the hope that it will be useful,
  10:quantum/keymap_common.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/keymap_common.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/keymap_common.c **** GNU General Public License for more details.
  13:quantum/keymap_common.c **** 
  14:quantum/keymap_common.c **** You should have received a copy of the GNU General Public License
  15:quantum/keymap_common.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/keymap_common.c **** */
  17:quantum/keymap_common.c **** 
  18:quantum/keymap_common.c **** #include "keymap.h"
  19:quantum/keymap_common.c **** #include "report.h"
  20:quantum/keymap_common.c **** #include "keycode.h"
  21:quantum/keymap_common.c **** #include "action_layer.h"
  22:quantum/keymap_common.c **** #if defined(__AVR__)
  23:quantum/keymap_common.c **** #    include <util/delay.h>
  24:quantum/keymap_common.c **** #    include <stdio.h>
  25:quantum/keymap_common.c **** #endif
  26:quantum/keymap_common.c **** #include "action.h"
  27:quantum/keymap_common.c **** #include "action_macro.h"
  28:quantum/keymap_common.c **** #include "debug.h"
  29:quantum/keymap_common.c **** #include "quantum.h"
  30:quantum/keymap_common.c **** 
  31:quantum/keymap_common.c **** #ifdef BACKLIGHT_ENABLE
  32:quantum/keymap_common.c **** #    include "backlight.h"
  33:quantum/keymap_common.c **** #endif
  34:quantum/keymap_common.c **** 
  35:quantum/keymap_common.c **** #ifdef MIDI_ENABLE
  36:quantum/keymap_common.c **** #    include "process_midi.h"
  37:quantum/keymap_common.c **** #endif
  38:quantum/keymap_common.c **** 
  39:quantum/keymap_common.c **** extern keymap_config_t keymap_config;
  40:quantum/keymap_common.c **** 
  41:quantum/keymap_common.c **** #include <inttypes.h>
  42:quantum/keymap_common.c **** 
  43:quantum/keymap_common.c **** /* converts key to action */
  44:quantum/keymap_common.c **** action_t action_for_key(uint8_t layer, keypos_t key) {
  45:quantum/keymap_common.c ****     // 16bit keycodes - important
  46:quantum/keymap_common.c ****     uint16_t keycode = keymap_key_to_keycode(layer, key);
  47:quantum/keymap_common.c **** 
  48:quantum/keymap_common.c ****     // keycode remapping
  49:quantum/keymap_common.c ****     keycode = keycode_config(keycode);
  50:quantum/keymap_common.c **** 
  51:quantum/keymap_common.c ****     action_t action = {};
  52:quantum/keymap_common.c ****     uint8_t  action_layer, when, mod;
  53:quantum/keymap_common.c **** 
  54:quantum/keymap_common.c ****     switch (keycode) {
  55:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
  56:quantum/keymap_common.c ****         case KC_LCTRL ... KC_RGUI:
  57:quantum/keymap_common.c ****             action.code = ACTION_KEY(keycode);
  58:quantum/keymap_common.c ****             break;
  59:quantum/keymap_common.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
  60:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
  61:quantum/keymap_common.c ****             break;
  62:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_BRIGHTNESS_DOWN:
  63:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
  64:quantum/keymap_common.c ****             break;
  65:quantum/keymap_common.c **** #ifdef MOUSEKEY_ENABLE
  66:quantum/keymap_common.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
  67:quantum/keymap_common.c ****             action.code = ACTION_MOUSEKEY(keycode);
  68:quantum/keymap_common.c ****             break;
  69:quantum/keymap_common.c **** #endif
  70:quantum/keymap_common.c ****         case KC_TRNS:
  71:quantum/keymap_common.c ****             action.code = ACTION_TRANSPARENT;
  72:quantum/keymap_common.c ****             break;
  73:quantum/keymap_common.c ****         case QK_MODS ... QK_MODS_MAX:;
  74:quantum/keymap_common.c ****             // Has a modifier
  75:quantum/keymap_common.c ****             // Split it up
  76:quantum/keymap_common.c ****             action.code = ACTION_MODS_KEY(keycode >> 8, keycode & 0xFF);  // adds modifier to key
  77:quantum/keymap_common.c ****             break;
  78:quantum/keymap_common.c **** #ifndef NO_ACTION_FUNCTION
  79:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
  80:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action(FN_INDEX(keycode));
  81:quantum/keymap_common.c ****             break;
  82:quantum/keymap_common.c ****         case QK_FUNCTION ... QK_FUNCTION_MAX:;
  83:quantum/keymap_common.c ****             // Is a shortcut for function action_layer, pull last 12bits
  84:quantum/keymap_common.c ****             // This means we have 4,096 FN macros at our disposal
  85:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action((int)keycode & 0xFFF);
  86:quantum/keymap_common.c ****             break;
  87:quantum/keymap_common.c **** #endif
  88:quantum/keymap_common.c **** #ifndef NO_ACTION_MACRO
  89:quantum/keymap_common.c ****         case QK_MACRO ... QK_MACRO_MAX:
  90:quantum/keymap_common.c ****             if (keycode & 0x800)  // tap macros have upper bit set
  91:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
  92:quantum/keymap_common.c ****             else
  93:quantum/keymap_common.c ****                 action.code = ACTION_MACRO(keycode & 0xFF);
  94:quantum/keymap_common.c ****             break;
  95:quantum/keymap_common.c **** #endif
  96:quantum/keymap_common.c ****         case QK_LAYER_TAP ... QK_LAYER_TAP_MAX:
  97:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_KEY((keycode >> 0x8) & 0xF, keycode & 0xFF);
  98:quantum/keymap_common.c ****             break;
  99:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX:;
 100:quantum/keymap_common.c ****             // Layer set "GOTO"
 101:quantum/keymap_common.c ****             when         = (keycode >> 0x4) & 0x3;
 102:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 103:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_SET(action_layer, when);
 104:quantum/keymap_common.c ****             break;
 105:quantum/keymap_common.c ****         case QK_MOMENTARY ... QK_MOMENTARY_MAX:;
 106:quantum/keymap_common.c ****             // Momentary action_layer
 107:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 108:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MOMENTARY(action_layer);
 109:quantum/keymap_common.c ****             break;
 110:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 111:quantum/keymap_common.c ****             // Set default action_layer
 112:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 113:quantum/keymap_common.c ****             action.code  = ACTION_DEFAULT_LAYER_SET(action_layer);
 114:quantum/keymap_common.c ****             break;
 115:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX:;
 116:quantum/keymap_common.c ****             // Set toggle
 117:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 118:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_TOGGLE(action_layer);
 119:quantum/keymap_common.c ****             break;
 120:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX:;
 121:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 122:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 123:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_ONESHOT(action_layer);
 124:quantum/keymap_common.c ****             break;
 125:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX:;
 126:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 127:quantum/keymap_common.c ****             mod         = mod_config(keycode & 0xFF);
 128:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 129:quantum/keymap_common.c ****             break;
 130:quantum/keymap_common.c ****         case QK_LAYER_TAP_TOGGLE ... QK_LAYER_TAP_TOGGLE_MAX:
 131:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_TOGGLE(keycode & 0xFF);
 132:quantum/keymap_common.c ****             break;
 133:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 134:quantum/keymap_common.c ****             mod          = mod_config(keycode & 0xF);
 135:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 136:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 137:quantum/keymap_common.c ****             break;
 138:quantum/keymap_common.c ****         case QK_MOD_TAP ... QK_MOD_TAP_MAX:
 139:quantum/keymap_common.c ****             mod         = mod_config((keycode >> 0x8) & 0x1F);
 140:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 141:quantum/keymap_common.c ****             break;
 142:quantum/keymap_common.c **** #ifdef BACKLIGHT_ENABLE
 143:quantum/keymap_common.c ****         case BL_ON:
 144:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_ON();
 145:quantum/keymap_common.c ****             break;
 146:quantum/keymap_common.c ****         case BL_OFF:
 147:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_OFF();
 148:quantum/keymap_common.c ****             break;
 149:quantum/keymap_common.c ****         case BL_DEC:
 150:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_DECREASE();
 151:quantum/keymap_common.c ****             break;
 152:quantum/keymap_common.c ****         case BL_INC:
 153:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_INCREASE();
 154:quantum/keymap_common.c ****             break;
 155:quantum/keymap_common.c ****         case BL_TOGG:
 156:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_TOGGLE();
 157:quantum/keymap_common.c ****             break;
 158:quantum/keymap_common.c ****         case BL_STEP:
 159:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_STEP();
 160:quantum/keymap_common.c ****             break;
 161:quantum/keymap_common.c **** #endif
 162:quantum/keymap_common.c **** #ifdef SWAP_HANDS_ENABLE
 163:quantum/keymap_common.c ****         case QK_SWAP_HANDS ... QK_SWAP_HANDS_MAX:
 164:quantum/keymap_common.c ****             action.code = ACTION(ACT_SWAP_HANDS, keycode & 0xff);
 165:quantum/keymap_common.c ****             break;
 166:quantum/keymap_common.c **** #endif
 167:quantum/keymap_common.c **** 
 168:quantum/keymap_common.c ****         default:
 169:quantum/keymap_common.c ****             action.code = ACTION_NO;
 170:quantum/keymap_common.c ****             break;
 171:quantum/keymap_common.c ****     }
 172:quantum/keymap_common.c ****     return action;
 173:quantum/keymap_common.c **** }
 174:quantum/keymap_common.c **** 
 175:quantum/keymap_common.c **** __attribute__((weak)) const uint16_t PROGMEM fn_actions[] = {
 176:quantum/keymap_common.c **** 
 177:quantum/keymap_common.c **** };
 178:quantum/keymap_common.c **** 
 179:quantum/keymap_common.c **** /* Macro */
 180:quantum/keymap_common.c **** __attribute__((weak)) const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
  17               		.loc 1 180 101 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               		.loc 1 180 103 view .LVU1
  24               		.loc 1 180 1 is_stmt 0 view .LVU2
  25 0000 90E0      		ldi r25,0
  26 0002 80E0      		ldi r24,0
  27               	.LVL1:
  28               	/* epilogue start */
  29               		.loc 1 180 1 view .LVU3
  30 0004 0895      		ret
  31               		.cfi_endproc
  32               	.LFE110:
  34               		.section	.text.action_function,"ax",@progbits
  35               		.weak	action_function
  37               	action_function:
  38               	.LVL2:
  39               	.LFB111:
 181:quantum/keymap_common.c **** 
 182:quantum/keymap_common.c **** /* Function */
 183:quantum/keymap_common.c **** __attribute__((weak)) void action_function(keyrecord_t *record, uint8_t id, uint8_t opt) {}
  40               		.loc 1 183 90 is_stmt 1 view -0
  41               		.cfi_startproc
  42               	/* prologue: function */
  43               	/* frame size = 0 */
  44               	/* stack size = 0 */
  45               	.L__stack_usage = 0
  46               		.loc 1 183 91 view .LVU5
  47               	/* epilogue start */
  48               		.loc 1 183 1 is_stmt 0 view .LVU6
  49 0000 0895      		ret
  50               		.cfi_endproc
  51               	.LFE111:
  53               		.section	.text.keymap_key_to_keycode,"ax",@progbits
  54               		.weak	keymap_key_to_keycode
  56               	keymap_key_to_keycode:
  57               	.LVL3:
  58               	.LFB112:
 184:quantum/keymap_common.c **** 
 185:quantum/keymap_common.c **** // translates key to keycode
 186:quantum/keymap_common.c **** __attribute__((weak)) uint16_t keymap_key_to_keycode(uint8_t layer, keypos_t key) {
  59               		.loc 1 186 83 is_stmt 1 view -0
  60               		.cfi_startproc
  61               	/* prologue: function */
  62               	/* frame size = 0 */
  63               	/* stack size = 0 */
  64               	.L__stack_usage = 0
  65               		.loc 1 186 83 is_stmt 0 view .LVU8
  66 0000 282F      		mov r18,r24
  67 0002 E62F      		mov r30,r22
 187:quantum/keymap_common.c ****     // Read entire word (16bits)
 188:quantum/keymap_common.c ****     return pgm_read_word(&keymaps[(layer)][(key.row)][(key.col)]);
  68               		.loc 1 188 5 is_stmt 1 view .LVU9
  69               	.LBB2:
  70               		.loc 1 188 12 view .LVU10
  71               		.loc 1 188 12 is_stmt 0 view .LVU11
  72 0004 872F      		mov r24,r23
  73               	.LVL4:
  74               		.loc 1 188 12 view .LVU12
  75 0006 90E0      		ldi r25,0
  76 0008 6CE0      		ldi r22,lo8(12)
  77 000a 70E0      		ldi r23,0
  78               	.LVL5:
  79               		.loc 1 188 12 view .LVU13
  80 000c 0E94 0000 		call __mulhi3
  81 0010 E80F      		add r30,r24
  82 0012 F92F      		mov r31,r25
  83 0014 F11D      		adc r31,__zero_reg__
  84               	.LVL6:
  85               		.loc 1 188 12 view .LVU14
  86 0016 822F      		mov r24,r18
  87 0018 90E0      		ldi r25,0
  88 001a 60E3      		ldi r22,lo8(48)
  89 001c 70E0      		ldi r23,0
  90 001e 0E94 0000 		call __mulhi3
  91 0022 E80F      		add r30,r24
  92 0024 F91F      		adc r31,r25
  93 0026 EE0F      		lsl r30
  94 0028 FF1F      		rol r31
  95 002a E050      		subi r30,lo8(-(keymaps))
  96 002c F040      		sbci r31,hi8(-(keymaps))
  97               	.LVL7:
  98               		.loc 1 188 12 is_stmt 1 view .LVU15
  99               		.loc 1 188 12 view .LVU16
 100               	/* #APP */
 101               	 ;  188 "quantum/keymap_common.c" 1
 102 002e 8591      		lpm r24, Z+
 103 0030 9491      		lpm r25, Z
 104               		
 105               	 ;  0 "" 2
 106               	.LVL8:
 107               		.loc 1 188 12 view .LVU17
 108               	/* #NOAPP */
 109               	/* epilogue start */
 110               	.LBE2:
 189:quantum/keymap_common.c **** }
 111               		.loc 1 189 1 is_stmt 0 view .LVU18
 112 0032 0895      		ret
 113               		.cfi_endproc
 114               	.LFE112:
 116               		.section	.text.keymap_function_id_to_action,"ax",@progbits
 117               		.weak	keymap_function_id_to_action
 119               	keymap_function_id_to_action:
 120               	.LVL9:
 121               	.LFB113:
 190:quantum/keymap_common.c **** 
 191:quantum/keymap_common.c **** // translates function id to action
 192:quantum/keymap_common.c **** __attribute__((weak)) uint16_t keymap_function_id_to_action(uint16_t function_id) {
 122               		.loc 1 192 83 is_stmt 1 view -0
 123               		.cfi_startproc
 124               	/* prologue: function */
 125               	/* frame size = 0 */
 126               	/* stack size = 0 */
 127               	.L__stack_usage = 0
 193:quantum/keymap_common.c **** // The compiler sees the empty (weak) fn_actions and generates a warning
 194:quantum/keymap_common.c **** // This function should not be called in that case, so the warning is too strict
 195:quantum/keymap_common.c **** // If this function is called however, the keymap should have overridden fn_actions, and then the c
 196:quantum/keymap_common.c **** // is comparing against the wrong array
 197:quantum/keymap_common.c **** #pragma GCC diagnostic push
 198:quantum/keymap_common.c **** #pragma GCC diagnostic ignored "-Warray-bounds"
 199:quantum/keymap_common.c ****     return pgm_read_word(&fn_actions[function_id]);
 128               		.loc 1 199 5 view .LVU20
 129               	.LBB3:
 130               		.loc 1 199 12 view .LVU21
 131 0000 FC01      		movw r30,r24
 132 0002 EE0F      		lsl r30
 133 0004 FF1F      		rol r31
 134               	.LVL10:
 135               		.loc 1 199 12 is_stmt 0 view .LVU22
 136 0006 E050      		subi r30,lo8(-(fn_actions))
 137 0008 F040      		sbci r31,hi8(-(fn_actions))
 138               	.LVL11:
 139               		.loc 1 199 12 is_stmt 1 view .LVU23
 140               		.loc 1 199 12 view .LVU24
 141               	/* #APP */
 142               	 ;  199 "quantum/keymap_common.c" 1
 143 000a 8591      		lpm r24, Z+
 144 000c 9491      		lpm r25, Z
 145               		
 146               	 ;  0 "" 2
 147               	.LVL12:
 148               		.loc 1 199 12 view .LVU25
 149               	/* #NOAPP */
 150               	/* epilogue start */
 151               	.LBE3:
 200:quantum/keymap_common.c **** #pragma GCC diagnostic pop
 201:quantum/keymap_common.c **** }
 152               		.loc 1 201 1 is_stmt 0 view .LVU26
 153 000e 0895      		ret
 154               		.cfi_endproc
 155               	.LFE113:
 157               		.section	.text.action_for_key,"ax",@progbits
 158               	.global	action_for_key
 160               	action_for_key:
 161               	.LVL13:
 162               	.LFB109:
  44:quantum/keymap_common.c ****     // 16bit keycodes - important
 163               		.loc 1 44 54 is_stmt 1 view -0
 164               		.cfi_startproc
  44:quantum/keymap_common.c ****     // 16bit keycodes - important
 165               		.loc 1 44 54 is_stmt 0 view .LVU28
 166 0000 CF93      		push r28
 167               	.LCFI0:
 168               		.cfi_def_cfa_offset 3
 169               		.cfi_offset 28, -2
 170 0002 DF93      		push r29
 171               	.LCFI1:
 172               		.cfi_def_cfa_offset 4
 173               		.cfi_offset 29, -3
 174               	/* prologue: function */
 175               	/* frame size = 0 */
 176               	/* stack size = 2 */
 177               	.L__stack_usage = 2
  46:quantum/keymap_common.c **** 
 178               		.loc 1 46 5 is_stmt 1 view .LVU29
  46:quantum/keymap_common.c **** 
 179               		.loc 1 46 24 is_stmt 0 view .LVU30
 180 0004 0E94 0000 		call keymap_key_to_keycode
 181               	.LVL14:
  49:quantum/keymap_common.c **** 
 182               		.loc 1 49 5 is_stmt 1 view .LVU31
  49:quantum/keymap_common.c **** 
 183               		.loc 1 49 15 is_stmt 0 view .LVU32
 184 0008 0E94 0000 		call keycode_config
 185               	.LVL15:
  49:quantum/keymap_common.c **** 
 186               		.loc 1 49 15 view .LVU33
 187 000c EC01      		movw r28,r24
 188               	.LVL16:
  51:quantum/keymap_common.c ****     uint8_t  action_layer, when, mod;
 189               		.loc 1 51 5 is_stmt 1 view .LVU34
  52:quantum/keymap_common.c **** 
 190               		.loc 1 52 5 view .LVU35
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 191               		.loc 1 54 5 view .LVU36
 192 000e 8115      		cp r24,__zero_reg__
 193 0010 20E5      		ldi r18,80
 194 0012 9207      		cpc r25,r18
 195 0014 00F0      		brlo .+2
 196 0016 00C0      		rjmp .L6
 197 0018 8115      		cp r24,__zero_reg__
 198 001a 30E4      		ldi r19,64
 199 001c 9307      		cpc r25,r19
 200 001e 00F0      		brlo .+2
 201 0020 00C0      		rjmp .L7
 202 0022 883E      		cpi r24,-24
 203 0024 9105      		cpc r25,__zero_reg__
 204 0026 00F4      		brsh .L8
 205 0028 803E      		cpi r24,-32
 206 002a 9105      		cpc r25,__zero_reg__
 207 002c 00F0      		brlo .+2
 208 002e 00C0      		rjmp .L9
 209 0030 883A      		cpi r24,-88
 210 0032 9105      		cpc r25,__zero_reg__
 211 0034 00F4      		brsh .L10
 212 0036 853A      		cpi r24,-91
 213 0038 9105      		cpc r25,__zero_reg__
 214 003a 00F0      		brlo .+2
 215 003c 00C0      		rjmp .L11
 216 003e 8130      		cpi r24,1
 217 0040 9105      		cpc r25,__zero_reg__
 218 0042 01F4      		brne .+2
 219 0044 00C0      		rjmp .L9
 220 0046 0097      		sbiw r24,0
 221 0048 01F4      		brne .+2
 222 004a 00C0      		rjmp .L9
 223 004c 0497      		sbiw r24,4
 224 004e 00F0      		brlo .+2
 225 0050 00C0      		rjmp .L9
 226               	.LVL17:
 227               	.L36:
 169:quantum/keymap_common.c ****             break;
 228               		.loc 1 169 25 is_stmt 0 view .LVU37
 229 0052 D0E0      		ldi r29,0
 230 0054 C0E0      		ldi r28,0
 231 0056 00C0      		rjmp .L9
 232               	.LVL18:
 233               	.L10:
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 234               		.loc 1 54 5 view .LVU38
 235 0058 8F3B      		cpi r24,-65
 236 005a 9105      		cpc r25,__zero_reg__
 237 005c 00F4      		brsh .+2
 238 005e 00C0      		rjmp .L12
  80:quantum/keymap_common.c ****             break;
 239               		.loc 1 80 27 view .LVU39
 240 0060 805C      		subi r24,-64
 241 0062 9109      		sbc r25,__zero_reg__
 242               	.LVL19:
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 243               		.loc 1 54 5 view .LVU40
 244 0064 C03C      		cpi r28,-64
 245 0066 D105      		cpc r29,__zero_reg__
 246 0068 00F0      		brlo .L36
 247               	.L49:
  85:quantum/keymap_common.c ****             break;
 248               		.loc 1 85 27 view .LVU41
 249 006a 0E94 0000 		call keymap_function_id_to_action
 250               	.LVL20:
  85:quantum/keymap_common.c ****             break;
 251               		.loc 1 85 27 view .LVU42
 252 006e EC01      		movw r28,r24
 253               	.LVL21:
  86:quantum/keymap_common.c **** #endif
 254               		.loc 1 86 13 is_stmt 1 view .LVU43
 255 0070 00C0      		rjmp .L9
 256               	.LVL22:
 257               	.L8:
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 258               		.loc 1 54 5 is_stmt 0 view .LVU44
 259 0072 8115      		cp r24,__zero_reg__
 260 0074 40E2      		ldi r20,32
 261 0076 9407      		cpc r25,r20
 262 0078 00F4      		brsh .L14
 263 007a C115      		cp r28,__zero_reg__
 264 007c 81E0      		ldi r24,1
 265 007e D807      		cpc r29,r24
 266               	.LVL23:
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 267               		.loc 1 54 5 view .LVU45
 268 0080 00F0      		brlo .+2
 269 0082 00C0      		rjmp .L9
 270 0084 C03F      		cpi r28,-16
 271 0086 D105      		cpc r29,__zero_reg__
 272 0088 00F0      		brlo .L36
  67:quantum/keymap_common.c ****             break;
 273               		.loc 1 67 13 is_stmt 1 view .LVU46
 274               	.LVL24:
  67:quantum/keymap_common.c ****             break;
 275               		.loc 1 67 27 is_stmt 0 view .LVU47
 276 008a D065      		ori r29,80
 277               	.LVL25:
  68:quantum/keymap_common.c **** #endif
 278               		.loc 1 68 13 is_stmt 1 view .LVU48
 279 008c 00C0      		rjmp .L9
 280               	.LVL26:
 281               	.L14:
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 282               		.loc 1 54 5 is_stmt 0 view .LVU49
 283 008e 8115      		cp r24,__zero_reg__
 284 0090 20E3      		ldi r18,48
 285 0092 9207      		cpc r25,r18
 286 0094 00F0      		brlo .+2
 287 0096 00C0      		rjmp .L44
  82:quantum/keymap_common.c ****             // Is a shortcut for function action_layer, pull last 12bits
 288               		.loc 1 82 46 is_stmt 1 view .LVU50
  85:quantum/keymap_common.c ****             break;
 289               		.loc 1 85 13 view .LVU51
  85:quantum/keymap_common.c ****             break;
 290               		.loc 1 85 27 is_stmt 0 view .LVU52
 291 0098 9F70      		andi r25,15
 292               	.LVL27:
  85:quantum/keymap_common.c ****             break;
 293               		.loc 1 85 27 view .LVU53
 294 009a 00C0      		rjmp .L49
 295               	.LVL28:
 296               	.L6:
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 297               		.loc 1 54 5 view .LVU54
 298 009c 8115      		cp r24,__zero_reg__
 299 009e 35E5      		ldi r19,85
 300 00a0 9307      		cpc r25,r19
 301 00a2 00F4      		brsh .L18
 302 00a4 8115      		cp r24,__zero_reg__
 303 00a6 44E5      		ldi r20,84
 304 00a8 9407      		cpc r25,r20
 305 00aa 00F0      		brlo .+2
 306 00ac 00C0      		rjmp .L19
 307 00ae C115      		cp r28,__zero_reg__
 308 00b0 82E5      		ldi r24,82
 309 00b2 D807      		cpc r29,r24
 310               	.LVL29:
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 311               		.loc 1 54 5 view .LVU55
 312 00b4 00F4      		brsh .L20
 313 00b6 C115      		cp r28,__zero_reg__
 314 00b8 21E5      		ldi r18,81
 315 00ba D207      		cpc r29,r18
 316 00bc 00F4      		brsh .+2
 317 00be 00C0      		rjmp .L45
 105:quantum/keymap_common.c ****             // Momentary action_layer
 318               		.loc 1 105 48 is_stmt 1 view .LVU56
 107:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MOMENTARY(action_layer);
 319               		.loc 1 107 13 view .LVU57
 320               	.LVL30:
 108:quantum/keymap_common.c ****             break;
 321               		.loc 1 108 13 view .LVU58
 108:quantum/keymap_common.c ****             break;
 322               		.loc 1 108 28 is_stmt 0 view .LVU59
 323 00c0 DC2F      		mov r29,r28
 324 00c2 CC27      		clr r28
 325               	.LVL31:
 108:quantum/keymap_common.c ****             break;
 326               		.loc 1 108 28 view .LVU60
 327 00c4 C16F      		ori r28,241
 328 00c6 D06A      		ori r29,160
 329               	.LVL32:
 109:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 330               		.loc 1 109 13 is_stmt 1 view .LVU61
 331 00c8 00C0      		rjmp .L9
 332               	.LVL33:
 333               	.L20:
 109:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 334               		.loc 1 109 13 is_stmt 0 view .LVU62
 335 00ca 9C2F      		mov r25,r28
 336 00cc 9695      		lsr r25
 337 00ce 9695      		lsr r25
 338 00d0 9E01      		movw r18,r28
 339 00d2 2370      		andi r18,3
 340 00d4 3327      		clr r19
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 341               		.loc 1 54 5 view .LVU63
 342 00d6 C115      		cp r28,__zero_reg__
 343 00d8 D345      		sbci r29,83
 344 00da 00F0      		brlo .+2
 345 00dc 00C0      		rjmp .L46
 110:quantum/keymap_common.c ****             // Set default action_layer
 346               		.loc 1 110 48 is_stmt 1 view .LVU64
 112:quantum/keymap_common.c ****             action.code  = ACTION_DEFAULT_LAYER_SET(action_layer);
 347               		.loc 1 112 13 view .LVU65
 348               	.LVL34:
 113:quantum/keymap_common.c ****             break;
 349               		.loc 1 113 13 view .LVU66
 113:quantum/keymap_common.c ****             break;
 350               		.loc 1 113 28 is_stmt 0 view .LVU67
 351 00de C1E0      		ldi r28,lo8(1)
 352 00e0 D0E0      		ldi r29,0
 353               	.LVL35:
 113:quantum/keymap_common.c ****             break;
 354               		.loc 1 113 28 view .LVU68
 355 00e2 00C0      		rjmp 2f
 356               		1:
 357 00e4 CC0F      		lsl r28
 358 00e6 DD1F      		rol r29
 359               		2:
 360 00e8 2A95      		dec r18
 361 00ea 02F4      		brpl 1b
 362 00ec 892F      		mov r24,r25
 363 00ee 90E0      		ldi r25,0
 364 00f0 E5E0      		ldi r30,5
 365               		1:
 366 00f2 880F      		lsl r24
 367 00f4 991F      		rol r25
 368 00f6 EA95      		dec r30
 369 00f8 01F4      		brne 1b
 370 00fa C82B      		or r28,r24
 371 00fc D92B      		or r29,r25
 372 00fe 00C0      		rjmp .L50
 373               	.LVL36:
 374               	.L18:
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 375               		.loc 1 54 5 view .LVU69
 376 0100 C115      		cp r28,__zero_reg__
 377 0102 89E5      		ldi r24,89
 378 0104 D807      		cpc r29,r24
 379               	.LVL37:
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 380               		.loc 1 54 5 view .LVU70
 381 0106 00F4      		brsh .L25
 382 0108 C115      		cp r28,__zero_reg__
 383 010a 28E5      		ldi r18,88
 384 010c D207      		cpc r29,r18
 385 010e 00F0      		brlo .+2
 386 0110 00C0      		rjmp .L26
 387 0112 C115      		cp r28,__zero_reg__
 388 0114 36E5      		ldi r19,86
 389 0116 D307      		cpc r29,r19
 390 0118 00F0      		brlo .+2
 391 011a 00C0      		rjmp .L36
 125:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 392               		.loc 1 125 54 is_stmt 1 view .LVU71
 127:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 393               		.loc 1 127 13 view .LVU72
 127:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 394               		.loc 1 127 27 is_stmt 0 view .LVU73
 395 011c 8C2F      		mov r24,r28
 396 011e 0E94 0000 		call mod_config
 397               	.LVL38:
 128:quantum/keymap_common.c ****             break;
 398               		.loc 1 128 13 is_stmt 1 view .LVU74
 128:quantum/keymap_common.c ****             break;
 399               		.loc 1 128 27 is_stmt 0 view .LVU75
 400 0122 C82F      		mov r28,r24
 401               	.LVL39:
 128:quantum/keymap_common.c ****             break;
 402               		.loc 1 128 27 view .LVU76
 403 0124 D0E0      		ldi r29,0
 404 0126 DC2F      		mov r29,r28
 405 0128 CC27      		clr r28
 406 012a CC27      		clr r28
 407 012c DF71      		andi r29,31
 408               	.LVL40:
 409               	.L51:
 140:quantum/keymap_common.c ****             break;
 410               		.loc 1 140 27 view .LVU77
 411 012e D062      		ori r29,32
 412               	.LVL41:
 141:quantum/keymap_common.c **** #ifdef BACKLIGHT_ENABLE
 413               		.loc 1 141 13 is_stmt 1 view .LVU78
 414 0130 00C0      		rjmp .L9
 415               	.LVL42:
 416               	.L25:
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 417               		.loc 1 54 5 is_stmt 0 view .LVU79
 418 0132 C115      		cp r28,__zero_reg__
 419 0134 4AE5      		ldi r20,90
 420 0136 D407      		cpc r29,r20
 421 0138 00F4      		brsh .+2
 422 013a 00C0      		rjmp .L28
 423 013c CE01      		movw r24,r28
 424 013e 9056      		subi r25,96
 425 0140 8115      		cp r24,__zero_reg__
 426 0142 9042      		sbci r25,32
 427 0144 00F0      		brlo .+2
 428 0146 00C0      		rjmp .L36
 139:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 429               		.loc 1 139 13 is_stmt 1 view .LVU80
 139:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 430               		.loc 1 139 27 is_stmt 0 view .LVU81
 431 0148 8D2F      		mov r24,r29
 432 014a 8F71      		andi r24,lo8(31)
 433 014c 0E94 0000 		call mod_config
 434               	.LVL43:
 140:quantum/keymap_common.c ****             break;
 435               		.loc 1 140 13 is_stmt 1 view .LVU82
 140:quantum/keymap_common.c ****             break;
 436               		.loc 1 140 27 is_stmt 0 view .LVU83
 437 0150 90E0      		ldi r25,0
 438 0152 982F      		mov r25,r24
 439 0154 8827      		clr r24
 440               	.LVL44:
 140:quantum/keymap_common.c ****             break;
 441               		.loc 1 140 27 view .LVU84
 442 0156 8827      		clr r24
 443 0158 9F71      		andi r25,31
 444 015a 9C01      		movw r18,r24
 445 015c 2C2B      		or r18,r28
 446 015e E901      		movw r28,r18
 447               	.LVL45:
 140:quantum/keymap_common.c ****             break;
 448               		.loc 1 140 27 view .LVU85
 449 0160 00C0      		rjmp .L51
 450               	.LVL46:
 451               	.L11:
  60:quantum/keymap_common.c ****             break;
 452               		.loc 1 60 13 is_stmt 1 view .LVU86
 453               	.LBB8:
 454               	.LBI8:
 455               		.file 2 "tmk_core/common/report.h"
   1:tmk_core/common/report.h **** /*
   2:tmk_core/common/report.h **** Copyright 2011,2012 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/report.h **** 
   4:tmk_core/common/report.h **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/report.h **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/report.h **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/report.h **** (at your option) any later version.
   8:tmk_core/common/report.h **** 
   9:tmk_core/common/report.h **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/report.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/report.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/report.h **** GNU General Public License for more details.
  13:tmk_core/common/report.h **** 
  14:tmk_core/common/report.h **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/report.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/report.h **** */
  17:tmk_core/common/report.h **** 
  18:tmk_core/common/report.h **** #ifndef REPORT_H
  19:tmk_core/common/report.h **** #define REPORT_H
  20:tmk_core/common/report.h **** 
  21:tmk_core/common/report.h **** #include <stdint.h>
  22:tmk_core/common/report.h **** #include "keycode.h"
  23:tmk_core/common/report.h **** 
  24:tmk_core/common/report.h **** /* report id */
  25:tmk_core/common/report.h **** #define REPORT_ID_KEYBOARD 1
  26:tmk_core/common/report.h **** #define REPORT_ID_MOUSE 2
  27:tmk_core/common/report.h **** #define REPORT_ID_SYSTEM 3
  28:tmk_core/common/report.h **** #define REPORT_ID_CONSUMER 4
  29:tmk_core/common/report.h **** #define REPORT_ID_NKRO 5
  30:tmk_core/common/report.h **** 
  31:tmk_core/common/report.h **** /* mouse buttons */
  32:tmk_core/common/report.h **** #define MOUSE_BTN1 (1 << 0)
  33:tmk_core/common/report.h **** #define MOUSE_BTN2 (1 << 1)
  34:tmk_core/common/report.h **** #define MOUSE_BTN3 (1 << 2)
  35:tmk_core/common/report.h **** #define MOUSE_BTN4 (1 << 3)
  36:tmk_core/common/report.h **** #define MOUSE_BTN5 (1 << 4)
  37:tmk_core/common/report.h **** 
  38:tmk_core/common/report.h **** /* Consumer Page(0x0C)
  39:tmk_core/common/report.h ****  * following are supported by Windows: http://msdn.microsoft.com/en-us/windows/hardware/gg463372.as
  40:tmk_core/common/report.h ****  * see also https://docs.microsoft.com/en-us/windows-hardware/drivers/hid/display-brightness-contro
  41:tmk_core/common/report.h ****  */
  42:tmk_core/common/report.h **** #define AUDIO_MUTE 0x00E2
  43:tmk_core/common/report.h **** #define AUDIO_VOL_UP 0x00E9
  44:tmk_core/common/report.h **** #define AUDIO_VOL_DOWN 0x00EA
  45:tmk_core/common/report.h **** #define TRANSPORT_NEXT_TRACK 0x00B5
  46:tmk_core/common/report.h **** #define TRANSPORT_PREV_TRACK 0x00B6
  47:tmk_core/common/report.h **** #define TRANSPORT_STOP 0x00B7
  48:tmk_core/common/report.h **** #define TRANSPORT_STOP_EJECT 0x00CC
  49:tmk_core/common/report.h **** #define TRANSPORT_PLAY_PAUSE 0x00CD
  50:tmk_core/common/report.h **** #define BRIGHTNESS_UP 0x006F
  51:tmk_core/common/report.h **** #define BRIGHTNESS_DOWN 0x0070
  52:tmk_core/common/report.h **** /* application launch */
  53:tmk_core/common/report.h **** #define AL_CC_CONFIG 0x0183
  54:tmk_core/common/report.h **** #define AL_EMAIL 0x018A
  55:tmk_core/common/report.h **** #define AL_CALCULATOR 0x0192
  56:tmk_core/common/report.h **** #define AL_LOCAL_BROWSER 0x0194
  57:tmk_core/common/report.h **** /* application control */
  58:tmk_core/common/report.h **** #define AC_SEARCH 0x0221
  59:tmk_core/common/report.h **** #define AC_HOME 0x0223
  60:tmk_core/common/report.h **** #define AC_BACK 0x0224
  61:tmk_core/common/report.h **** #define AC_FORWARD 0x0225
  62:tmk_core/common/report.h **** #define AC_STOP 0x0226
  63:tmk_core/common/report.h **** #define AC_REFRESH 0x0227
  64:tmk_core/common/report.h **** #define AC_BOOKMARKS 0x022A
  65:tmk_core/common/report.h **** /* supplement for Bluegiga iWRAP HID(not supported by Windows?) */
  66:tmk_core/common/report.h **** #define AL_LOCK 0x019E
  67:tmk_core/common/report.h **** #define TRANSPORT_RECORD 0x00B2
  68:tmk_core/common/report.h **** #define TRANSPORT_FAST_FORWARD 0x00B3
  69:tmk_core/common/report.h **** #define TRANSPORT_REWIND 0x00B4
  70:tmk_core/common/report.h **** #define TRANSPORT_EJECT 0x00B8
  71:tmk_core/common/report.h **** #define AC_MINIMIZE 0x0206
  72:tmk_core/common/report.h **** 
  73:tmk_core/common/report.h **** /* Generic Desktop Page(0x01) - system power control */
  74:tmk_core/common/report.h **** #define SYSTEM_POWER_DOWN 0x0081
  75:tmk_core/common/report.h **** #define SYSTEM_SLEEP 0x0082
  76:tmk_core/common/report.h **** #define SYSTEM_WAKE_UP 0x0083
  77:tmk_core/common/report.h **** 
  78:tmk_core/common/report.h **** #define NKRO_SHARED_EP
  79:tmk_core/common/report.h **** /* key report size(NKRO or boot mode) */
  80:tmk_core/common/report.h **** #if defined(NKRO_ENABLE)
  81:tmk_core/common/report.h **** #    if defined(PROTOCOL_LUFA) || defined(PROTOCOL_CHIBIOS)
  82:tmk_core/common/report.h **** #        include "protocol/usb_descriptor.h"
  83:tmk_core/common/report.h **** #        define KEYBOARD_REPORT_BITS (SHARED_EPSIZE - 2)
  84:tmk_core/common/report.h **** #    elif defined(PROTOCOL_ARM_ATSAM)
  85:tmk_core/common/report.h **** #        include "protocol/arm_atsam/usb/udi_device_epsize.h"
  86:tmk_core/common/report.h **** #        define KEYBOARD_REPORT_BITS (NKRO_EPSIZE - 1)
  87:tmk_core/common/report.h **** #        undef NKRO_SHARED_EP
  88:tmk_core/common/report.h **** #        undef MOUSE_SHARED_EP
  89:tmk_core/common/report.h **** #    else
  90:tmk_core/common/report.h **** #        error "NKRO not supported with this protocol"
  91:tmk_core/common/report.h **** #    endif
  92:tmk_core/common/report.h **** #endif
  93:tmk_core/common/report.h **** 
  94:tmk_core/common/report.h **** #ifdef KEYBOARD_SHARED_EP
  95:tmk_core/common/report.h **** #    define KEYBOARD_REPORT_SIZE 9
  96:tmk_core/common/report.h **** #else
  97:tmk_core/common/report.h **** #    define KEYBOARD_REPORT_SIZE 8
  98:tmk_core/common/report.h **** #endif
  99:tmk_core/common/report.h **** 
 100:tmk_core/common/report.h **** #define KEYBOARD_REPORT_KEYS 6
 101:tmk_core/common/report.h **** 
 102:tmk_core/common/report.h **** /* VUSB hardcodes keyboard and mouse+extrakey only */
 103:tmk_core/common/report.h **** #if defined(PROTOCOL_VUSB)
 104:tmk_core/common/report.h **** #    undef KEYBOARD_SHARED_EP
 105:tmk_core/common/report.h **** #    undef MOUSE_SHARED_EP
 106:tmk_core/common/report.h **** #endif
 107:tmk_core/common/report.h **** 
 108:tmk_core/common/report.h **** #ifdef __cplusplus
 109:tmk_core/common/report.h **** extern "C" {
 110:tmk_core/common/report.h **** #endif
 111:tmk_core/common/report.h **** 
 112:tmk_core/common/report.h **** /*
 113:tmk_core/common/report.h ****  * keyboard report is 8-byte array retains state of 8 modifiers and 6 keys.
 114:tmk_core/common/report.h ****  *
 115:tmk_core/common/report.h ****  * byte |0       |1       |2       |3       |4       |5       |6       |7
 116:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------
 117:tmk_core/common/report.h ****  * desc |mods    |reserved|keys[0] |keys[1] |keys[2] |keys[3] |keys[4] |keys[5]
 118:tmk_core/common/report.h ****  *
 119:tmk_core/common/report.h ****  * It is exended to 16 bytes to retain 120keys+8mods when NKRO mode.
 120:tmk_core/common/report.h ****  *
 121:tmk_core/common/report.h ****  * byte |0       |1       |2       |3       |4       |5       |6       |7        ... |15
 122:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------     +--------
 123:tmk_core/common/report.h ****  * desc |mods    |bits[0] |bits[1] |bits[2] |bits[3] |bits[4] |bits[5] |bits[6]  ... |bit[14]
 124:tmk_core/common/report.h ****  *
 125:tmk_core/common/report.h ****  * mods retains state of 8 modifiers.
 126:tmk_core/common/report.h ****  *
 127:tmk_core/common/report.h ****  *  bit |0       |1       |2       |3       |4       |5       |6       |7
 128:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------
 129:tmk_core/common/report.h ****  * desc |Lcontrol|Lshift  |Lalt    |Lgui    |Rcontrol|Rshift  |Ralt    |Rgui
 130:tmk_core/common/report.h ****  *
 131:tmk_core/common/report.h ****  */
 132:tmk_core/common/report.h **** typedef union {
 133:tmk_core/common/report.h ****     uint8_t raw[KEYBOARD_REPORT_SIZE];
 134:tmk_core/common/report.h ****     struct {
 135:tmk_core/common/report.h **** #ifdef KEYBOARD_SHARED_EP
 136:tmk_core/common/report.h ****         uint8_t report_id;
 137:tmk_core/common/report.h **** #endif
 138:tmk_core/common/report.h ****         uint8_t mods;
 139:tmk_core/common/report.h ****         uint8_t reserved;
 140:tmk_core/common/report.h ****         uint8_t keys[KEYBOARD_REPORT_KEYS];
 141:tmk_core/common/report.h ****     };
 142:tmk_core/common/report.h **** #ifdef NKRO_ENABLE
 143:tmk_core/common/report.h ****     struct nkro_report {
 144:tmk_core/common/report.h **** #    ifdef NKRO_SHARED_EP
 145:tmk_core/common/report.h ****         uint8_t report_id;
 146:tmk_core/common/report.h **** #    endif
 147:tmk_core/common/report.h ****         uint8_t mods;
 148:tmk_core/common/report.h ****         uint8_t bits[KEYBOARD_REPORT_BITS];
 149:tmk_core/common/report.h ****     } nkro;
 150:tmk_core/common/report.h **** #endif
 151:tmk_core/common/report.h **** } __attribute__((packed)) report_keyboard_t;
 152:tmk_core/common/report.h **** 
 153:tmk_core/common/report.h **** typedef struct {
 154:tmk_core/common/report.h ****     uint8_t  report_id;
 155:tmk_core/common/report.h ****     uint16_t usage;
 156:tmk_core/common/report.h **** } __attribute__((packed)) report_extra_t;
 157:tmk_core/common/report.h **** 
 158:tmk_core/common/report.h **** typedef struct {
 159:tmk_core/common/report.h **** #ifdef MOUSE_SHARED_EP
 160:tmk_core/common/report.h ****     uint8_t report_id;
 161:tmk_core/common/report.h **** #endif
 162:tmk_core/common/report.h ****     uint8_t buttons;
 163:tmk_core/common/report.h ****     int8_t  x;
 164:tmk_core/common/report.h ****     int8_t  y;
 165:tmk_core/common/report.h ****     int8_t  v;
 166:tmk_core/common/report.h ****     int8_t  h;
 167:tmk_core/common/report.h **** } __attribute__((packed)) report_mouse_t;
 168:tmk_core/common/report.h **** 
 169:tmk_core/common/report.h **** /* keycode to system usage */
 170:tmk_core/common/report.h **** static inline uint16_t KEYCODE2SYSTEM(uint8_t key) {
 456               		.loc 2 170 24 view .LVU87
 457               	.LBE8:
 171:tmk_core/common/report.h ****     switch (key) {
 458               		.loc 2 171 5 view .LVU88
  60:quantum/keymap_common.c ****             break;
 459               		.loc 1 60 27 is_stmt 0 view .LVU89
 460 0162 C55A      		subi r28,lo8(-(91))
 461 0164 D0E0      		ldi r29,0
 462 0166 C050      		subi r28,lo8(-(CSWTCH.0))
 463 0168 D040      		sbci r29,hi8(-(CSWTCH.0))
 464 016a C881      		ld r28,Y
 465 016c D0E0      		ldi r29,0
 466               	.LVL47:
  60:quantum/keymap_common.c ****             break;
 467               		.loc 1 60 27 view .LVU90
 468 016e D064      		ori r29,64
 469               	.LVL48:
  61:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_BRIGHTNESS_DOWN:
 470               		.loc 1 61 13 is_stmt 1 view .LVU91
 471               	.L9:
 172:quantum/keymap_common.c **** }
 472               		.loc 1 172 5 view .LVU92
 173:quantum/keymap_common.c **** 
 473               		.loc 1 173 1 is_stmt 0 view .LVU93
 474 0170 CE01      		movw r24,r28
 475               	/* epilogue start */
 476 0172 DF91      		pop r29
 477 0174 CF91      		pop r28
 478 0176 0895      		ret
 479               	.LVL49:
 480               	.L12:
  63:quantum/keymap_common.c ****             break;
 481               		.loc 1 63 13 is_stmt 1 view .LVU94
 482               	.LBB9:
 483               	.LBI9:
 172:tmk_core/common/report.h ****         case KC_SYSTEM_POWER:
 173:tmk_core/common/report.h ****             return SYSTEM_POWER_DOWN;
 174:tmk_core/common/report.h ****         case KC_SYSTEM_SLEEP:
 175:tmk_core/common/report.h ****             return SYSTEM_SLEEP;
 176:tmk_core/common/report.h ****         case KC_SYSTEM_WAKE:
 177:tmk_core/common/report.h ****             return SYSTEM_WAKE_UP;
 178:tmk_core/common/report.h ****         default:
 179:tmk_core/common/report.h ****             return 0;
 180:tmk_core/common/report.h ****     }
 181:tmk_core/common/report.h **** }
 182:tmk_core/common/report.h **** 
 183:tmk_core/common/report.h **** /* keycode to consumer usage */
 184:tmk_core/common/report.h **** static inline uint16_t KEYCODE2CONSUMER(uint8_t key) {
 484               		.loc 2 184 24 view .LVU95
 485               	.LBE9:
 185:tmk_core/common/report.h ****     switch (key) {
 486               		.loc 2 185 5 view .LVU96
  63:quantum/keymap_common.c ****             break;
 487               		.loc 1 63 27 is_stmt 0 view .LVU97
 488 0178 C85A      		subi r28,lo8(-(88))
 489 017a D0E0      		ldi r29,0
 490 017c CC0F      		lsl r28
 491 017e DD1F      		rol r29
 492               	.LVL50:
  63:quantum/keymap_common.c ****             break;
 493               		.loc 1 63 27 view .LVU98
 494 0180 C050      		subi r28,lo8(-(CSWTCH.1))
 495 0182 D040      		sbci r29,hi8(-(CSWTCH.1))
 496 0184 0990      		ld __tmp_reg__,Y+
 497 0186 D881      		ld r29,Y
 498 0188 C02D      		mov r28,__tmp_reg__
 499               	.LVL51:
  63:quantum/keymap_common.c ****             break;
 500               		.loc 1 63 27 view .LVU99
 501 018a D464      		ori r29,68
 502               	.LVL52:
  64:quantum/keymap_common.c **** #ifdef MOUSEKEY_ENABLE
 503               		.loc 1 64 13 is_stmt 1 view .LVU100
 504 018c 00C0      		rjmp .L9
 505               	.LVL53:
 506               	.L44:
  90:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
 507               		.loc 1 90 13 view .LVU101
 508 018e 9927      		clr r25
 509               	.LVL54:
  90:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
 510               		.loc 1 90 16 is_stmt 0 view .LVU102
 511 0190 D3FF      		sbrs r29,3
 512 0192 00C0      		rjmp .L30
  91:quantum/keymap_common.c ****             else
 513               		.loc 1 91 17 is_stmt 1 view .LVU103
 514               	.LVL55:
  91:quantum/keymap_common.c ****             else
 515               		.loc 1 91 31 is_stmt 0 view .LVU104
 516 0194 EC01      		movw r28,r24
 517 0196 D86C      		ori r29,200
 518               	.LVL56:
  91:quantum/keymap_common.c ****             else
 519               		.loc 1 91 31 view .LVU105
 520 0198 00C0      		rjmp .L9
 521               	.LVL57:
 522               	.L30:
  93:quantum/keymap_common.c ****             break;
 523               		.loc 1 93 17 is_stmt 1 view .LVU106
  93:quantum/keymap_common.c ****             break;
 524               		.loc 1 93 31 is_stmt 0 view .LVU107
 525 019a EC01      		movw r28,r24
 526 019c D06C      		ori r29,192
 527               	.LVL58:
  93:quantum/keymap_common.c ****             break;
 528               		.loc 1 93 31 view .LVU108
 529 019e 00C0      		rjmp .L9
 530               	.LVL59:
 531               	.L7:
  97:quantum/keymap_common.c ****             break;
 532               		.loc 1 97 13 is_stmt 1 view .LVU109
  97:quantum/keymap_common.c ****             break;
 533               		.loc 1 97 27 is_stmt 0 view .LVU110
 534 01a0 DF70      		andi r29,15
 535               	.LVL60:
  97:quantum/keymap_common.c ****             break;
 536               		.loc 1 97 27 view .LVU111
 537 01a2 D06A      		ori r29,160
 538               	.LVL61:
  98:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX:;
 539               		.loc 1 98 13 is_stmt 1 view .LVU112
 540 01a4 00C0      		rjmp .L9
 541               	.LVL62:
 542               	.L45:
  99:quantum/keymap_common.c ****             // Layer set "GOTO"
 543               		.loc 1 99 34 view .LVU113
 101:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 544               		.loc 1 101 13 view .LVU114
 102:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_SET(action_layer, when);
 545               		.loc 1 102 13 view .LVU115
 103:quantum/keymap_common.c ****             break;
 546               		.loc 1 103 13 view .LVU116
 101:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 547               		.loc 1 101 37 is_stmt 0 view .LVU117
 548 01a6 CE01      		movw r24,r28
 549 01a8 A4E0      		ldi r26,4
 550               		1:
 551 01aa 9695      		lsr r25
 552 01ac 8795      		ror r24
 553 01ae AA95      		dec r26
 554 01b0 01F4      		brne 1b
 101:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 555               		.loc 1 101 26 view .LVU118
 556 01b2 8370      		andi r24,lo8(3)
 103:quantum/keymap_common.c ****             break;
 557               		.loc 1 103 28 view .LVU119
 558 01b4 2C2F      		mov r18,r28
 559 01b6 2695      		lsr r18
 560 01b8 2695      		lsr r18
 561 01ba 2370      		andi r18,lo8(3)
 562 01bc 30E0      		ldi r19,0
 563 01be B5E0      		ldi r27,5
 564               		1:
 565 01c0 220F      		lsl r18
 566 01c2 331F      		rol r19
 567 01c4 BA95      		dec r27
 568 01c6 01F4      		brne 1b
 569 01c8 382B      		or r19,r24
 570 01ca 8C2F      		mov r24,r28
 571 01cc 8370      		andi r24,lo8(3)
 572 01ce C1E0      		ldi r28,lo8(1)
 573 01d0 D0E0      		ldi r29,0
 574               	.LVL63:
 103:quantum/keymap_common.c ****             break;
 575               		.loc 1 103 28 view .LVU120
 576 01d2 00C0      		rjmp 2f
 577               		1:
 578 01d4 CC0F      		lsl r28
 579 01d6 DD1F      		rol r29
 580               		2:
 581 01d8 8A95      		dec r24
 582 01da 02F4      		brpl 1b
 583 01dc C22B      		or r28,r18
 584 01de D32B      		or r29,r19
 585               	.LVL64:
 586               	.L50:
 113:quantum/keymap_common.c ****             break;
 587               		.loc 1 113 28 view .LVU121
 588 01e0 DC68      		ori r29,140
 589               	.LVL65:
 114:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX:;
 590               		.loc 1 114 13 is_stmt 1 view .LVU122
 591 01e2 00C0      		rjmp .L9
 592               	.LVL66:
 593               	.L46:
 115:quantum/keymap_common.c ****             // Set toggle
 594               		.loc 1 115 54 view .LVU123
 117:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_TOGGLE(action_layer);
 595               		.loc 1 117 13 view .LVU124
 118:quantum/keymap_common.c ****             break;
 596               		.loc 1 118 13 view .LVU125
 118:quantum/keymap_common.c ****             break;
 597               		.loc 1 118 28 is_stmt 0 view .LVU126
 598 01e4 C1E0      		ldi r28,lo8(1)
 599 01e6 D0E0      		ldi r29,0
 600               	.LVL67:
 118:quantum/keymap_common.c ****             break;
 601               		.loc 1 118 28 view .LVU127
 602 01e8 00C0      		rjmp 2f
 603               		1:
 604 01ea CC0F      		lsl r28
 605 01ec DD1F      		rol r29
 606               		2:
 607 01ee 2A95      		dec r18
 608 01f0 02F4      		brpl 1b
 609 01f2 892F      		mov r24,r25
 610 01f4 90E0      		ldi r25,0
 611 01f6 75E0      		ldi r23,5
 612               		1:
 613 01f8 880F      		lsl r24
 614 01fa 991F      		rol r25
 615 01fc 7A95      		dec r23
 616 01fe 01F4      		brne 1b
 617 0200 C82B      		or r28,r24
 618 0202 D92B      		or r29,r25
 619               	.LVL68:
 118:quantum/keymap_common.c ****             break;
 620               		.loc 1 118 28 view .LVU128
 621 0204 DA68      		ori r29,138
 622               	.LVL69:
 119:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX:;
 623               		.loc 1 119 13 is_stmt 1 view .LVU129
 624 0206 00C0      		rjmp .L9
 625               	.LVL70:
 626               	.L19:
 120:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 627               		.loc 1 120 58 view .LVU130
 122:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_ONESHOT(action_layer);
 628               		.loc 1 122 13 view .LVU131
 123:quantum/keymap_common.c ****             break;
 629               		.loc 1 123 13 view .LVU132
 123:quantum/keymap_common.c ****             break;
 630               		.loc 1 123 28 is_stmt 0 view .LVU133
 631 0208 D82F      		mov r29,r24
 632 020a CC27      		clr r28
 633               	.LVL71:
 123:quantum/keymap_common.c ****             break;
 634               		.loc 1 123 28 view .LVU134
 635 020c C46F      		ori r28,244
 636 020e D06A      		ori r29,160
 637               	.LVL72:
 124:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX:;
 638               		.loc 1 124 13 is_stmt 1 view .LVU135
 639 0210 00C0      		rjmp .L9
 640               	.LVL73:
 641               	.L26:
 131:quantum/keymap_common.c ****             break;
 642               		.loc 1 131 13 view .LVU136
 131:quantum/keymap_common.c ****             break;
 643               		.loc 1 131 27 is_stmt 0 view .LVU137
 644 0212 DC2F      		mov r29,r28
 645 0214 CC27      		clr r28
 646               	.LVL74:
 131:quantum/keymap_common.c ****             break;
 647               		.loc 1 131 27 view .LVU138
 648 0216 C06F      		ori r28,240
 649 0218 D06A      		ori r29,160
 650               	.LVL75:
 132:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 651               		.loc 1 132 13 is_stmt 1 view .LVU139
 652 021a 00C0      		rjmp .L9
 653               	.LVL76:
 654               	.L28:
 134:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 655               		.loc 1 134 13 view .LVU140
 134:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 656               		.loc 1 134 28 is_stmt 0 view .LVU141
 657 021c 8C2F      		mov r24,r28
 658 021e 8F70      		andi r24,lo8(15)
 659 0220 0E94 0000 		call mod_config
 660               	.LVL77:
 135:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 661               		.loc 1 135 13 is_stmt 1 view .LVU142
 136:quantum/keymap_common.c ****             break;
 662               		.loc 1 136 13 view .LVU143
 135:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 663               		.loc 1 135 37 is_stmt 0 view .LVU144
 664 0224 34E0      		ldi r19,4
 665               		1:
 666 0226 D695      		lsr r29
 667 0228 C795      		ror r28
 668 022a 3A95      		dec r19
 669 022c 01F4      		brne 1b
 670               	.LVL78:
 135:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 671               		.loc 1 135 26 view .LVU145
 672 022e CF70      		andi r28,lo8(15)
 136:quantum/keymap_common.c ****             break;
 673               		.loc 1 136 28 view .LVU146
 674 0230 9C2F      		mov r25,r28
 675               	.LVL79:
 136:quantum/keymap_common.c ****             break;
 676               		.loc 1 136 28 view .LVU147
 677 0232 EC01      		movw r28,r24
 678 0234 D069      		ori r29,144
 679               	.LVL80:
 137:quantum/keymap_common.c ****         case QK_MOD_TAP ... QK_MOD_TAP_MAX:
 680               		.loc 1 137 13 is_stmt 1 view .LVU148
 681 0236 00C0      		rjmp .L9
 682               		.cfi_endproc
 683               	.LFE109:
 685               		.section	.rodata.CSWTCH.1,"a"
 688               	CSWTCH.1:
 689 0000 E200      		.word	226
 690 0002 E900      		.word	233
 691 0004 EA00      		.word	234
 692 0006 B500      		.word	181
 693 0008 B600      		.word	182
 694 000a B700      		.word	183
 695 000c CD00      		.word	205
 696 000e 8301      		.word	387
 697 0010 CC00      		.word	204
 698 0012 8A01      		.word	394
 699 0014 9201      		.word	402
 700 0016 9401      		.word	404
 701 0018 2102      		.word	545
 702 001a 2302      		.word	547
 703 001c 2402      		.word	548
 704 001e 2502      		.word	549
 705 0020 2602      		.word	550
 706 0022 2702      		.word	551
 707 0024 2A02      		.word	554
 708 0026 B300      		.word	179
 709 0028 B400      		.word	180
 710 002a 6F00      		.word	111
 711 002c 7000      		.word	112
 712               		.section	.rodata.CSWTCH.0,"a"
 715               	CSWTCH.0:
 716 0000 81        		.byte	-127
 717 0001 82        		.byte	-126
 718 0002 83        		.byte	-125
 719               		.weak	fn_actions
 720               		.section	.progmem.data.fn_actions,"a"
 723               	fn_actions:
 724               		.text
 725               	.Letext0:
 726               		.file 3 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchain
 727               		.file 4 "tmk_core/common/keyboard.h"
 728               		.file 5 "tmk_core/common/keycode.h"
 729               		.file 6 "tmk_core/common/action_code.h"
 730               		.file 7 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchain
 731               		.file 8 "tmk_core/common/action_macro.h"
 732               		.file 9 "tmk_core/common/action.h"
 733               		.file 10 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 734               		.file 11 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 735               		.file 12 "lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 736               		.file 13 "lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
 737               		.file 14 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchai
 738               		.file 15 "tmk_core/common/host.h"
 739               		.file 16 "tmk_core/common/debug.h"
 740               		.file 17 "quantum/keycode_config.h"
 741               		.file 18 "quantum/quantum_keycodes.h"
 742               		.file 19 "quantum/keymap.h"
 743               		.file 20 "tmk_core/common/action_layer.h"
 744               		.file 21 "./quantum/color.h"
 745               		.file 22 "quantum/rgblight.h"
 746               		.file 23 "tmk_core/common/timer.h"
 747               		.file 24 "tmk_core/common/action_util.h"
 748               		.file 25 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchai
 749               		.file 26 "quantum/process_keycode/process_unicode_common.h"
 750               		.file 27 "quantum/process_keycode/process_tap_dance.h"
 751               		.file 28 "quantum/quantum.h"
DEFINED SYMBOLS
                            *ABS*:00000000 keymap_common.c
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccny7646.s:2      *ABS*:0000003e __SP_H__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccny7646.s:3      *ABS*:0000003d __SP_L__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccny7646.s:4      *ABS*:0000003f __SREG__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccny7646.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccny7646.s:6      *ABS*:00000001 __zero_reg__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccny7646.s:13     .text.action_get_macro:00000000 action_get_macro
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccny7646.s:37     .text.action_function:00000000 action_function
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccny7646.s:56     .text.keymap_key_to_keycode:00000000 keymap_key_to_keycode
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccny7646.s:119    .text.keymap_function_id_to_action:00000000 keymap_function_id_to_action
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccny7646.s:723    .progmem.data.fn_actions:00000000 fn_actions
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccny7646.s:160    .text.action_for_key:00000000 action_for_key
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccny7646.s:715    .rodata.CSWTCH.0:00000000 CSWTCH.0
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccny7646.s:688    .rodata.CSWTCH.1:00000000 CSWTCH.1

UNDEFINED SYMBOLS
__mulhi3
keymaps
keycode_config
mod_config
__do_copy_data
