   1               		.file	"rgblight.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.rgblight_effect_dummy,"ax",@progbits
  12               	rgblight_effect_dummy:
  13               	.LVL0:
  14               	.LFB161:
  15               		.file 1 "quantum/rgblight.c"
   1:quantum/rgblight.c **** /* Copyright 2016-2017 Yang Liu
   2:quantum/rgblight.c ****  *
   3:quantum/rgblight.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/rgblight.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/rgblight.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/rgblight.c ****  * (at your option) any later version.
   7:quantum/rgblight.c ****  *
   8:quantum/rgblight.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/rgblight.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/rgblight.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/rgblight.c ****  * GNU General Public License for more details.
  12:quantum/rgblight.c ****  *
  13:quantum/rgblight.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/rgblight.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/rgblight.c ****  */
  16:quantum/rgblight.c **** #include <math.h>
  17:quantum/rgblight.c **** #include <string.h>
  18:quantum/rgblight.c **** #ifdef __AVR__
  19:quantum/rgblight.c **** #    include <avr/eeprom.h>
  20:quantum/rgblight.c **** #    include <avr/interrupt.h>
  21:quantum/rgblight.c **** #endif
  22:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
  23:quantum/rgblight.c **** #    include "eeprom.h"
  24:quantum/rgblight.c **** #endif
  25:quantum/rgblight.c **** #ifdef STM32_EEPROM_ENABLE
  26:quantum/rgblight.c **** #    include "hal.h"
  27:quantum/rgblight.c **** #    include "eeprom_stm32.h"
  28:quantum/rgblight.c **** #endif
  29:quantum/rgblight.c **** #include "wait.h"
  30:quantum/rgblight.c **** #include "progmem.h"
  31:quantum/rgblight.c **** #include "timer.h"
  32:quantum/rgblight.c **** #include "rgblight.h"
  33:quantum/rgblight.c **** #include "color.h"
  34:quantum/rgblight.c **** #include "debug.h"
  35:quantum/rgblight.c **** #include "led_tables.h"
  36:quantum/rgblight.c **** #include "lib/lib8tion/lib8tion.h"
  37:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
  38:quantum/rgblight.c **** #    include "velocikey.h"
  39:quantum/rgblight.c **** #endif
  40:quantum/rgblight.c **** 
  41:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
  42:quantum/rgblight.c **** /* for split keyboard */
  43:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODE rgblight_status.change_flags |= RGBLIGHT_STATUS_CHANGE_M
  44:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_HSVS rgblight_status.change_flags |= RGBLIGHT_STATUS_CHANGE_H
  45:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS rgblight_status.change_flags |= (RGBLIGHT_STATUS_CHA
  46:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE rgblight_status.change_flags |= RGBLIGHT_STATUS_
  47:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_ANIMATION_TICK rgblight_status.change_flags |= RGBLIGHT_STATUS_ANIMATION
  48:quantum/rgblight.c **** #else
  49:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODE
  50:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_HSVS
  51:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS
  52:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE
  53:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_ANIMATION_TICK
  54:quantum/rgblight.c **** #endif
  55:quantum/rgblight.c **** 
  56:quantum/rgblight.c **** #define _RGBM_SINGLE_STATIC(sym) RGBLIGHT_MODE_##sym,
  57:quantum/rgblight.c **** #define _RGBM_SINGLE_DYNAMIC(sym)
  58:quantum/rgblight.c **** #define _RGBM_MULTI_STATIC(sym) RGBLIGHT_MODE_##sym,
  59:quantum/rgblight.c **** #define _RGBM_MULTI_DYNAMIC(sym)
  60:quantum/rgblight.c **** #define _RGBM_TMP_STATIC(sym, msym) RGBLIGHT_MODE_##sym,
  61:quantum/rgblight.c **** #define _RGBM_TMP_DYNAMIC(sym, msym)
  62:quantum/rgblight.c **** static uint8_t static_effect_table[] = {
  63:quantum/rgblight.c **** #include "rgblight_modes.h"
  64:quantum/rgblight.c **** };
  65:quantum/rgblight.c **** 
  66:quantum/rgblight.c **** #define _RGBM_SINGLE_STATIC(sym) RGBLIGHT_MODE_##sym,
  67:quantum/rgblight.c **** #define _RGBM_SINGLE_DYNAMIC(sym) RGBLIGHT_MODE_##sym,
  68:quantum/rgblight.c **** #define _RGBM_MULTI_STATIC(sym) RGBLIGHT_MODE_##sym,
  69:quantum/rgblight.c **** #define _RGBM_MULTI_DYNAMIC(sym) RGBLIGHT_MODE_##sym,
  70:quantum/rgblight.c **** #define _RGBM_TMP_STATIC(sym, msym) RGBLIGHT_MODE_##msym,
  71:quantum/rgblight.c **** #define _RGBM_TMP_DYNAMIC(sym, msym) RGBLIGHT_MODE_##msym,
  72:quantum/rgblight.c **** static uint8_t mode_base_table[] = {
  73:quantum/rgblight.c ****     0,  // RGBLIGHT_MODE_zero
  74:quantum/rgblight.c **** #include "rgblight_modes.h"
  75:quantum/rgblight.c **** };
  76:quantum/rgblight.c **** 
  77:quantum/rgblight.c **** static inline int is_static_effect(uint8_t mode) { return memchr(static_effect_table, mode, sizeof(
  78:quantum/rgblight.c **** 
  79:quantum/rgblight.c **** #ifdef RGBLIGHT_LED_MAP
  80:quantum/rgblight.c **** const uint8_t led_map[] PROGMEM = RGBLIGHT_LED_MAP;
  81:quantum/rgblight.c **** #endif
  82:quantum/rgblight.c **** 
  83:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_STATIC_GRADIENT
  84:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_GRADIENT_RANGES[] PROGMEM = {255, 170, 127, 85, 64};
  85:quantum/rgblight.c **** #endif
  86:quantum/rgblight.c **** 
  87:quantum/rgblight.c **** rgblight_config_t rgblight_config;
  88:quantum/rgblight.c **** rgblight_status_t rgblight_status         = {.timer_enabled = false};
  89:quantum/rgblight.c **** bool              is_rgblight_initialized = false;
  90:quantum/rgblight.c **** 
  91:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
  92:quantum/rgblight.c **** animation_status_t animation_status = {};
  93:quantum/rgblight.c **** #endif
  94:quantum/rgblight.c **** 
  95:quantum/rgblight.c **** #ifndef LED_ARRAY
  96:quantum/rgblight.c **** LED_TYPE led[RGBLED_NUM];
  97:quantum/rgblight.c **** #    define LED_ARRAY led
  98:quantum/rgblight.c **** #endif
  99:quantum/rgblight.c **** 
 100:quantum/rgblight.c **** static uint8_t clipping_start_pos = 0;
 101:quantum/rgblight.c **** static uint8_t clipping_num_leds  = RGBLED_NUM;
 102:quantum/rgblight.c **** static uint8_t effect_start_pos   = 0;
 103:quantum/rgblight.c **** static uint8_t effect_end_pos     = RGBLED_NUM;
 104:quantum/rgblight.c **** static uint8_t effect_num_leds    = RGBLED_NUM;
 105:quantum/rgblight.c **** 
 106:quantum/rgblight.c **** void rgblight_set_clipping_range(uint8_t start_pos, uint8_t num_leds) {
 107:quantum/rgblight.c ****     clipping_start_pos = start_pos;
 108:quantum/rgblight.c ****     clipping_num_leds  = num_leds;
 109:quantum/rgblight.c **** }
 110:quantum/rgblight.c **** 
 111:quantum/rgblight.c **** void rgblight_set_effect_range(uint8_t start_pos, uint8_t num_leds) {
 112:quantum/rgblight.c ****     if (start_pos >= RGBLED_NUM) return;
 113:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
 114:quantum/rgblight.c ****     effect_start_pos = start_pos;
 115:quantum/rgblight.c ****     effect_end_pos   = start_pos + num_leds;
 116:quantum/rgblight.c ****     effect_num_leds  = num_leds;
 117:quantum/rgblight.c **** }
 118:quantum/rgblight.c **** 
 119:quantum/rgblight.c **** void sethsv_raw(uint8_t hue, uint8_t sat, uint8_t val, LED_TYPE *led1) {
 120:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 121:quantum/rgblight.c ****     RGB rgb = hsv_to_rgb(hsv);
 122:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 123:quantum/rgblight.c **** }
 124:quantum/rgblight.c **** 
 125:quantum/rgblight.c **** void sethsv(uint8_t hue, uint8_t sat, uint8_t val, LED_TYPE *led1) { sethsv_raw(hue, sat, val > RGB
 126:quantum/rgblight.c **** 
 127:quantum/rgblight.c **** void setrgb(uint8_t r, uint8_t g, uint8_t b, LED_TYPE *led1) {
 128:quantum/rgblight.c ****     (*led1).r = r;
 129:quantum/rgblight.c ****     (*led1).g = g;
 130:quantum/rgblight.c ****     (*led1).b = b;
 131:quantum/rgblight.c **** #ifdef RGBW
 132:quantum/rgblight.c ****     (*led1).w = 0;
 133:quantum/rgblight.c **** #endif
 134:quantum/rgblight.c **** }
 135:quantum/rgblight.c **** 
 136:quantum/rgblight.c **** void rgblight_check_config(void) {
 137:quantum/rgblight.c ****     /* Add some out of bound checks for RGB light config */
 138:quantum/rgblight.c **** 
 139:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODE_STATIC_LIGHT) {
 140:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 141:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 142:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 143:quantum/rgblight.c ****     }
 144:quantum/rgblight.c **** 
 145:quantum/rgblight.c ****     if (rgblight_config.val > RGBLIGHT_LIMIT_VAL) {
 146:quantum/rgblight.c ****         rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 147:quantum/rgblight.c ****     }
 148:quantum/rgblight.c **** }
 149:quantum/rgblight.c **** 
 150:quantum/rgblight.c **** uint32_t eeconfig_read_rgblight(void) {
 151:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 152:quantum/rgblight.c ****     return eeprom_read_dword(EECONFIG_RGBLIGHT);
 153:quantum/rgblight.c **** #else
 154:quantum/rgblight.c ****     return 0;
 155:quantum/rgblight.c **** #endif
 156:quantum/rgblight.c **** }
 157:quantum/rgblight.c **** 
 158:quantum/rgblight.c **** void eeconfig_update_rgblight(uint32_t val) {
 159:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 160:quantum/rgblight.c ****     rgblight_check_config();
 161:quantum/rgblight.c ****     eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 162:quantum/rgblight.c **** #endif
 163:quantum/rgblight.c **** }
 164:quantum/rgblight.c **** 
 165:quantum/rgblight.c **** void eeconfig_update_rgblight_current(void) { eeconfig_update_rgblight(rgblight_config.raw); }
 166:quantum/rgblight.c **** 
 167:quantum/rgblight.c **** void eeconfig_update_rgblight_default(void) {
 168:quantum/rgblight.c ****     rgblight_config.enable = 1;
 169:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_MODE_STATIC_LIGHT;
 170:quantum/rgblight.c ****     rgblight_config.hue    = 0;
 171:quantum/rgblight.c ****     rgblight_config.sat    = UINT8_MAX;
 172:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_LIMIT_VAL;
 173:quantum/rgblight.c ****     rgblight_config.speed  = 0;
 174:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 175:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 176:quantum/rgblight.c **** }
 177:quantum/rgblight.c **** 
 178:quantum/rgblight.c **** void eeconfig_debug_rgblight(void) {
 179:quantum/rgblight.c ****     dprintf("rgblight_config EEPROM:\n");
 180:quantum/rgblight.c ****     dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 181:quantum/rgblight.c ****     dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 182:quantum/rgblight.c ****     dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 183:quantum/rgblight.c ****     dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 184:quantum/rgblight.c ****     dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 185:quantum/rgblight.c ****     dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 186:quantum/rgblight.c **** }
 187:quantum/rgblight.c **** 
 188:quantum/rgblight.c **** void rgblight_init(void) {
 189:quantum/rgblight.c ****     /* if already initialized, don't do it again.
 190:quantum/rgblight.c ****        If you must do it again, extern this and set to false, first.
 191:quantum/rgblight.c ****        This is a dirty, dirty hack until proper hooks can be added for keyboard startup. */
 192:quantum/rgblight.c ****     if (is_rgblight_initialized) {
 193:quantum/rgblight.c ****         return;
 194:quantum/rgblight.c ****     }
 195:quantum/rgblight.c **** 
 196:quantum/rgblight.c ****     dprintf("rgblight_init called.\n");
 197:quantum/rgblight.c ****     dprintf("rgblight_init start!\n");
 198:quantum/rgblight.c ****     if (!eeconfig_is_enabled()) {
 199:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 200:quantum/rgblight.c ****         eeconfig_init();
 201:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 202:quantum/rgblight.c ****     }
 203:quantum/rgblight.c ****     rgblight_config.raw = eeconfig_read_rgblight();
 204:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 205:quantum/rgblight.c ****     if (!rgblight_config.mode) {
 206:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 207:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 208:quantum/rgblight.c ****         rgblight_config.raw = eeconfig_read_rgblight();
 209:quantum/rgblight.c ****     }
 210:quantum/rgblight.c ****     rgblight_check_config();
 211:quantum/rgblight.c **** 
 212:quantum/rgblight.c ****     eeconfig_debug_rgblight();  // display current eeprom values
 213:quantum/rgblight.c **** 
 214:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 215:quantum/rgblight.c ****     rgblight_timer_init();  // setup the timer
 216:quantum/rgblight.c **** #endif
 217:quantum/rgblight.c **** 
 218:quantum/rgblight.c ****     if (rgblight_config.enable) {
 219:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 220:quantum/rgblight.c ****     }
 221:quantum/rgblight.c **** 
 222:quantum/rgblight.c ****     is_rgblight_initialized = true;
 223:quantum/rgblight.c **** }
 224:quantum/rgblight.c **** 
 225:quantum/rgblight.c **** uint32_t rgblight_read_dword(void) { return rgblight_config.raw; }
 226:quantum/rgblight.c **** 
 227:quantum/rgblight.c **** void rgblight_update_dword(uint32_t dword) {
 228:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 229:quantum/rgblight.c ****     rgblight_config.raw = dword;
 230:quantum/rgblight.c ****     if (rgblight_config.enable)
 231:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 232:quantum/rgblight.c ****     else {
 233:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 234:quantum/rgblight.c ****         rgblight_timer_disable();
 235:quantum/rgblight.c **** #endif
 236:quantum/rgblight.c ****         rgblight_set();
 237:quantum/rgblight.c ****     }
 238:quantum/rgblight.c **** }
 239:quantum/rgblight.c **** 
 240:quantum/rgblight.c **** void rgblight_increase(void) {
 241:quantum/rgblight.c ****     uint8_t mode = 0;
 242:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 243:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 244:quantum/rgblight.c ****     }
 245:quantum/rgblight.c ****     rgblight_mode(mode);
 246:quantum/rgblight.c **** }
 247:quantum/rgblight.c **** void rgblight_decrease(void) {
 248:quantum/rgblight.c ****     uint8_t mode = 0;
 249:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 250:quantum/rgblight.c ****     if (rgblight_config.mode > RGBLIGHT_MODE_STATIC_LIGHT) {
 251:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 252:quantum/rgblight.c ****     }
 253:quantum/rgblight.c ****     rgblight_mode(mode);
 254:quantum/rgblight.c **** }
 255:quantum/rgblight.c **** void rgblight_step_helper(bool write_to_eeprom) {
 256:quantum/rgblight.c ****     uint8_t mode = 0;
 257:quantum/rgblight.c ****     mode         = rgblight_config.mode + 1;
 258:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 259:quantum/rgblight.c ****         mode = 1;
 260:quantum/rgblight.c ****     }
 261:quantum/rgblight.c ****     rgblight_mode_eeprom_helper(mode, write_to_eeprom);
 262:quantum/rgblight.c **** }
 263:quantum/rgblight.c **** void rgblight_step_noeeprom(void) { rgblight_step_helper(false); }
 264:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 265:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 266:quantum/rgblight.c ****     uint8_t mode = 0;
 267:quantum/rgblight.c ****     mode         = rgblight_config.mode - 1;
 268:quantum/rgblight.c ****     if (mode < 1) {
 269:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 270:quantum/rgblight.c ****     }
 271:quantum/rgblight.c ****     rgblight_mode_eeprom_helper(mode, write_to_eeprom);
 272:quantum/rgblight.c **** }
 273:quantum/rgblight.c **** void rgblight_step_reverse_noeeprom(void) { rgblight_step_reverse_helper(false); }
 274:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 275:quantum/rgblight.c **** 
 276:quantum/rgblight.c **** uint8_t rgblight_get_mode(void) {
 277:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 278:quantum/rgblight.c ****         return false;
 279:quantum/rgblight.c ****     }
 280:quantum/rgblight.c **** 
 281:quantum/rgblight.c ****     return rgblight_config.mode;
 282:quantum/rgblight.c **** }
 283:quantum/rgblight.c **** 
 284:quantum/rgblight.c **** void rgblight_mode_eeprom_helper(uint8_t mode, bool write_to_eeprom) {
 285:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 286:quantum/rgblight.c ****         return;
 287:quantum/rgblight.c ****     }
 288:quantum/rgblight.c ****     if (mode < RGBLIGHT_MODE_STATIC_LIGHT) {
 289:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 290:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 291:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 292:quantum/rgblight.c ****     } else {
 293:quantum/rgblight.c ****         rgblight_config.mode = mode;
 294:quantum/rgblight.c ****     }
 295:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 296:quantum/rgblight.c ****     if (write_to_eeprom) {
 297:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 298:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 299:quantum/rgblight.c ****     } else {
 300:quantum/rgblight.c ****         dprintf("rgblight mode [NOEEPROM]: %u\n", rgblight_config.mode);
 301:quantum/rgblight.c ****     }
 302:quantum/rgblight.c ****     if (is_static_effect(rgblight_config.mode)) {
 303:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 304:quantum/rgblight.c ****         rgblight_timer_disable();
 305:quantum/rgblight.c **** #endif
 306:quantum/rgblight.c ****     } else {
 307:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 308:quantum/rgblight.c ****         rgblight_timer_enable();
 309:quantum/rgblight.c **** #endif
 310:quantum/rgblight.c ****     }
 311:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 312:quantum/rgblight.c ****     animation_status.restart = true;
 313:quantum/rgblight.c **** #endif
 314:quantum/rgblight.c ****     rgblight_sethsv_noeeprom(rgblight_config.hue, rgblight_config.sat, rgblight_config.val);
 315:quantum/rgblight.c **** }
 316:quantum/rgblight.c **** 
 317:quantum/rgblight.c **** void rgblight_mode(uint8_t mode) { rgblight_mode_eeprom_helper(mode, true); }
 318:quantum/rgblight.c **** 
 319:quantum/rgblight.c **** void rgblight_mode_noeeprom(uint8_t mode) { rgblight_mode_eeprom_helper(mode, false); }
 320:quantum/rgblight.c **** 
 321:quantum/rgblight.c **** void rgblight_toggle(void) {
 322:quantum/rgblight.c ****     dprintf("rgblight toggle [EEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 323:quantum/rgblight.c ****     if (rgblight_config.enable) {
 324:quantum/rgblight.c ****         rgblight_disable();
 325:quantum/rgblight.c ****     } else {
 326:quantum/rgblight.c ****         rgblight_enable();
 327:quantum/rgblight.c ****     }
 328:quantum/rgblight.c **** }
 329:quantum/rgblight.c **** 
 330:quantum/rgblight.c **** void rgblight_toggle_noeeprom(void) {
 331:quantum/rgblight.c ****     dprintf("rgblight toggle [NOEEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 332:quantum/rgblight.c ****     if (rgblight_config.enable) {
 333:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 334:quantum/rgblight.c ****     } else {
 335:quantum/rgblight.c ****         rgblight_enable_noeeprom();
 336:quantum/rgblight.c ****     }
 337:quantum/rgblight.c **** }
 338:quantum/rgblight.c **** 
 339:quantum/rgblight.c **** void rgblight_enable(void) {
 340:quantum/rgblight.c ****     rgblight_config.enable = 1;
 341:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 342:quantum/rgblight.c ****     // eeconfig_update_rgblight(rgblight_config.raw);
 343:quantum/rgblight.c ****     dprintf("rgblight enable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 344:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 345:quantum/rgblight.c **** }
 346:quantum/rgblight.c **** 
 347:quantum/rgblight.c **** void rgblight_enable_noeeprom(void) {
 348:quantum/rgblight.c ****     rgblight_config.enable = 1;
 349:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 350:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 351:quantum/rgblight.c **** }
 352:quantum/rgblight.c **** 
 353:quantum/rgblight.c **** void rgblight_disable(void) {
 354:quantum/rgblight.c ****     rgblight_config.enable = 0;
 355:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 356:quantum/rgblight.c ****     dprintf("rgblight disable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 357:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 358:quantum/rgblight.c ****     rgblight_timer_disable();
 359:quantum/rgblight.c **** #endif
 360:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 361:quantum/rgblight.c ****     wait_ms(50);
 362:quantum/rgblight.c ****     rgblight_set();
 363:quantum/rgblight.c **** }
 364:quantum/rgblight.c **** 
 365:quantum/rgblight.c **** void rgblight_disable_noeeprom(void) {
 366:quantum/rgblight.c ****     rgblight_config.enable = 0;
 367:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 368:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 369:quantum/rgblight.c ****     rgblight_timer_disable();
 370:quantum/rgblight.c **** #endif
 371:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 372:quantum/rgblight.c ****     wait_ms(50);
 373:quantum/rgblight.c ****     rgblight_set();
 374:quantum/rgblight.c **** }
 375:quantum/rgblight.c **** 
 376:quantum/rgblight.c **** void rgblight_increase_hue_helper(bool write_to_eeprom) {
 377:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue + RGBLIGHT_HUE_STEP;
 378:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 379:quantum/rgblight.c **** }
 380:quantum/rgblight.c **** void rgblight_increase_hue_noeeprom(void) { rgblight_increase_hue_helper(false); }
 381:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 382:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 383:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue - RGBLIGHT_HUE_STEP;
 384:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 385:quantum/rgblight.c **** }
 386:quantum/rgblight.c **** void rgblight_decrease_hue_noeeprom(void) { rgblight_decrease_hue_helper(false); }
 387:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 388:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 389:quantum/rgblight.c ****     uint8_t sat = qadd8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 390:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 391:quantum/rgblight.c **** }
 392:quantum/rgblight.c **** void rgblight_increase_sat_noeeprom(void) { rgblight_increase_sat_helper(false); }
 393:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 394:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 395:quantum/rgblight.c ****     uint8_t sat = qsub8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 396:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 397:quantum/rgblight.c **** }
 398:quantum/rgblight.c **** void rgblight_decrease_sat_noeeprom(void) { rgblight_decrease_sat_helper(false); }
 399:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 400:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 401:quantum/rgblight.c ****     uint8_t val = qadd8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 402:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 403:quantum/rgblight.c **** }
 404:quantum/rgblight.c **** void rgblight_increase_val_noeeprom(void) { rgblight_increase_val_helper(false); }
 405:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 406:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 407:quantum/rgblight.c ****     uint8_t val = qsub8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 408:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 409:quantum/rgblight.c **** }
 410:quantum/rgblight.c **** void rgblight_decrease_val_noeeprom(void) { rgblight_decrease_val_helper(false); }
 411:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 412:quantum/rgblight.c **** void rgblight_increase_speed(void) {
 413:quantum/rgblight.c ****     if (rgblight_config.speed < 3) rgblight_config.speed++;
 414:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 415:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to support th
 416:quantum/rgblight.c **** }
 417:quantum/rgblight.c **** 
 418:quantum/rgblight.c **** void rgblight_decrease_speed(void) {
 419:quantum/rgblight.c ****     if (rgblight_config.speed > 0) rgblight_config.speed--;
 420:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 421:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to support th
 422:quantum/rgblight.c **** }
 423:quantum/rgblight.c **** 
 424:quantum/rgblight.c **** void rgblight_sethsv_noeeprom_old(uint8_t hue, uint8_t sat, uint8_t val) {
 425:quantum/rgblight.c ****     if (rgblight_config.enable) {
 426:quantum/rgblight.c ****         LED_TYPE tmp_led;
 427:quantum/rgblight.c ****         sethsv(hue, sat, val, &tmp_led);
 428:quantum/rgblight.c ****         rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 429:quantum/rgblight.c ****     }
 430:quantum/rgblight.c **** }
 431:quantum/rgblight.c **** 
 432:quantum/rgblight.c **** void rgblight_sethsv_eeprom_helper(uint8_t hue, uint8_t sat, uint8_t val, bool write_to_eeprom) {
 433:quantum/rgblight.c ****     if (rgblight_config.enable) {
 434:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 435:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 436:quantum/rgblight.c ****             // same static color
 437:quantum/rgblight.c ****             LED_TYPE tmp_led;
 438:quantum/rgblight.c ****             sethsv(hue, sat, val, &tmp_led);
 439:quantum/rgblight.c ****             rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 440:quantum/rgblight.c ****         } else {
 441:quantum/rgblight.c ****             // all LEDs in same color
 442:quantum/rgblight.c ****             if (1 == 0) {  // dummy
 443:quantum/rgblight.c ****             }
 444:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
 445:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_BREATHING) {
 446:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 447:quantum/rgblight.c ****                 val = rgblight_config.val;
 448:quantum/rgblight.c ****             }
 449:quantum/rgblight.c **** #endif
 450:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 451:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_MOOD) {
 452:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 453:quantum/rgblight.c ****                 hue = rgblight_config.hue;
 454:quantum/rgblight.c ****             }
 455:quantum/rgblight.c **** #endif
 456:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 457:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_SWIRL) {
 458:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 459:quantum/rgblight.c ****                 hue = rgblight_config.hue;
 460:quantum/rgblight.c ****             }
 461:quantum/rgblight.c **** #endif
 462:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_STATIC_GRADIENT
 463:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_STATIC_GRADIENT) {
 464:quantum/rgblight.c ****                 // static gradient
 465:quantum/rgblight.c ****                 uint8_t delta     = rgblight_config.mode - rgblight_status.base_mode;
 466:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 467:quantum/rgblight.c **** #    ifdef __AVR__
 468:quantum/rgblight.c ****                 // probably due to how pgm_read_word is defined for ARM, but the ARM compiler reall
 469:quantum/rgblight.c ****                 uint8_t range = pgm_read_word(&RGBLED_GRADIENT_RANGES[delta / 2]);
 470:quantum/rgblight.c **** #    else
 471:quantum/rgblight.c ****                 uint8_t range = RGBLED_GRADIENT_RANGES[delta / 2];
 472:quantum/rgblight.c **** #    endif
 473:quantum/rgblight.c ****                 for (uint8_t i = 0; i < effect_num_leds; i++) {
 474:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 475:quantum/rgblight.c ****                     if (direction) {
 476:quantum/rgblight.c ****                         _hue = hue + _hue;
 477:quantum/rgblight.c ****                     } else {
 478:quantum/rgblight.c ****                         _hue = hue - _hue;
 479:quantum/rgblight.c ****                     }
 480:quantum/rgblight.c ****                     dprintf("rgblight rainbow set hsv: %d,%d,%d,%u\n", i, _hue, direction, range);
 481:quantum/rgblight.c ****                     sethsv(_hue, sat, val, (LED_TYPE *)&led[i + effect_start_pos]);
 482:quantum/rgblight.c ****                 }
 483:quantum/rgblight.c ****                 rgblight_set();
 484:quantum/rgblight.c ****             }
 485:quantum/rgblight.c **** #endif
 486:quantum/rgblight.c ****         }
 487:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
 488:quantum/rgblight.c ****         if (rgblight_config.hue != hue || rgblight_config.sat != sat || rgblight_config.val != val)
 489:quantum/rgblight.c ****             RGBLIGHT_SPLIT_SET_CHANGE_HSVS;
 490:quantum/rgblight.c ****         }
 491:quantum/rgblight.c **** #endif
 492:quantum/rgblight.c ****         rgblight_config.hue = hue;
 493:quantum/rgblight.c ****         rgblight_config.sat = sat;
 494:quantum/rgblight.c ****         rgblight_config.val = val;
 495:quantum/rgblight.c ****         if (write_to_eeprom) {
 496:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 497:quantum/rgblight.c ****             dprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.s
 498:quantum/rgblight.c ****         } else {
 499:quantum/rgblight.c ****             dprintf("rgblight set hsv [NOEEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config
 500:quantum/rgblight.c ****         }
 501:quantum/rgblight.c ****     }
 502:quantum/rgblight.c **** }
 503:quantum/rgblight.c **** 
 504:quantum/rgblight.c **** void rgblight_sethsv(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_eeprom_helper(hue, sa
 505:quantum/rgblight.c **** 
 506:quantum/rgblight.c **** void rgblight_sethsv_noeeprom(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_eeprom_helpe
 507:quantum/rgblight.c **** 
 508:quantum/rgblight.c **** uint8_t rgblight_get_speed(void) { return rgblight_config.speed; }
 509:quantum/rgblight.c **** 
 510:quantum/rgblight.c **** void rgblight_set_speed_eeprom_helper(uint8_t speed, bool write_to_eeprom) {
 511:quantum/rgblight.c ****     rgblight_config.speed = speed;
 512:quantum/rgblight.c ****     if (write_to_eeprom) {
 513:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 514:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 515:quantum/rgblight.c ****     } else {
 516:quantum/rgblight.c ****         dprintf("rgblight set speed [NOEEPROM]: %u\n", rgblight_config.speed);
 517:quantum/rgblight.c ****     }
 518:quantum/rgblight.c **** }
 519:quantum/rgblight.c **** 
 520:quantum/rgblight.c **** void rgblight_set_speed(uint8_t speed) { rgblight_set_speed_eeprom_helper(speed, true); }
 521:quantum/rgblight.c **** 
 522:quantum/rgblight.c **** void rgblight_set_speed_noeeprom(uint8_t speed) { rgblight_set_speed_eeprom_helper(speed, false); }
 523:quantum/rgblight.c **** 
 524:quantum/rgblight.c **** uint8_t rgblight_get_hue(void) { return rgblight_config.hue; }
 525:quantum/rgblight.c **** 
 526:quantum/rgblight.c **** uint8_t rgblight_get_sat(void) { return rgblight_config.sat; }
 527:quantum/rgblight.c **** 
 528:quantum/rgblight.c **** uint8_t rgblight_get_val(void) { return rgblight_config.val; }
 529:quantum/rgblight.c **** 
 530:quantum/rgblight.c **** void rgblight_setrgb(uint8_t r, uint8_t g, uint8_t b) {
 531:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 532:quantum/rgblight.c ****         return;
 533:quantum/rgblight.c ****     }
 534:quantum/rgblight.c **** 
 535:quantum/rgblight.c ****     for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 536:quantum/rgblight.c ****         led[i].r = r;
 537:quantum/rgblight.c ****         led[i].g = g;
 538:quantum/rgblight.c ****         led[i].b = b;
 539:quantum/rgblight.c **** #ifdef RGBW
 540:quantum/rgblight.c ****         led[i].w = 0;
 541:quantum/rgblight.c **** #endif
 542:quantum/rgblight.c ****     }
 543:quantum/rgblight.c ****     rgblight_set();
 544:quantum/rgblight.c **** }
 545:quantum/rgblight.c **** 
 546:quantum/rgblight.c **** void rgblight_setrgb_at(uint8_t r, uint8_t g, uint8_t b, uint8_t index) {
 547:quantum/rgblight.c ****     if (!rgblight_config.enable || index >= RGBLED_NUM) {
 548:quantum/rgblight.c ****         return;
 549:quantum/rgblight.c ****     }
 550:quantum/rgblight.c **** 
 551:quantum/rgblight.c ****     led[index].r = r;
 552:quantum/rgblight.c ****     led[index].g = g;
 553:quantum/rgblight.c ****     led[index].b = b;
 554:quantum/rgblight.c **** #ifdef RGBW
 555:quantum/rgblight.c ****     led[index].w = 0;
 556:quantum/rgblight.c **** #endif
 557:quantum/rgblight.c ****     rgblight_set();
 558:quantum/rgblight.c **** }
 559:quantum/rgblight.c **** 
 560:quantum/rgblight.c **** void rgblight_sethsv_at(uint8_t hue, uint8_t sat, uint8_t val, uint8_t index) {
 561:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 562:quantum/rgblight.c ****         return;
 563:quantum/rgblight.c ****     }
 564:quantum/rgblight.c **** 
 565:quantum/rgblight.c ****     LED_TYPE tmp_led;
 566:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 567:quantum/rgblight.c ****     rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 568:quantum/rgblight.c **** }
 569:quantum/rgblight.c **** 
 570:quantum/rgblight.c **** #if defined(RGBLIGHT_EFFECT_BREATHING) || defined(RGBLIGHT_EFFECT_RAINBOW_MOOD) || defined(RGBLIGHT
 571:quantum/rgblight.c **** 
 572:quantum/rgblight.c **** static uint8_t get_interval_time(const uint8_t *default_interval_address, uint8_t velocikey_min, ui
 573:quantum/rgblight.c ****     return
 574:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 575:quantum/rgblight.c ****         velocikey_enabled() ? velocikey_match_speed(velocikey_min, velocikey_max) :
 576:quantum/rgblight.c **** #    endif
 577:quantum/rgblight.c ****                             pgm_read_byte(default_interval_address);
 578:quantum/rgblight.c **** }
 579:quantum/rgblight.c **** 
 580:quantum/rgblight.c **** #endif
 581:quantum/rgblight.c **** 
 582:quantum/rgblight.c **** void rgblight_setrgb_range(uint8_t r, uint8_t g, uint8_t b, uint8_t start, uint8_t end) {
 583:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 584:quantum/rgblight.c ****         return;
 585:quantum/rgblight.c ****     }
 586:quantum/rgblight.c **** 
 587:quantum/rgblight.c ****     for (uint8_t i = start; i < end; i++) {
 588:quantum/rgblight.c ****         led[i].r = r;
 589:quantum/rgblight.c ****         led[i].g = g;
 590:quantum/rgblight.c ****         led[i].b = b;
 591:quantum/rgblight.c **** #ifdef RGBW
 592:quantum/rgblight.c ****         led[i].w = 0;
 593:quantum/rgblight.c **** #endif
 594:quantum/rgblight.c ****     }
 595:quantum/rgblight.c ****     rgblight_set();
 596:quantum/rgblight.c ****     wait_ms(1);
 597:quantum/rgblight.c **** }
 598:quantum/rgblight.c **** 
 599:quantum/rgblight.c **** void rgblight_sethsv_range(uint8_t hue, uint8_t sat, uint8_t val, uint8_t start, uint8_t end) {
 600:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 601:quantum/rgblight.c ****         return;
 602:quantum/rgblight.c ****     }
 603:quantum/rgblight.c **** 
 604:quantum/rgblight.c ****     LED_TYPE tmp_led;
 605:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 606:quantum/rgblight.c ****     rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 607:quantum/rgblight.c **** }
 608:quantum/rgblight.c **** 
 609:quantum/rgblight.c **** #ifndef RGBLIGHT_SPLIT
 610:quantum/rgblight.c **** void rgblight_setrgb_master(uint8_t r, uint8_t g, uint8_t b) { rgblight_setrgb_range(r, g, b, 0, (u
 611:quantum/rgblight.c **** 
 612:quantum/rgblight.c **** void rgblight_setrgb_slave(uint8_t r, uint8_t g, uint8_t b) { rgblight_setrgb_range(r, g, b, (uint8
 613:quantum/rgblight.c **** 
 614:quantum/rgblight.c **** void rgblight_sethsv_master(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_range(hue, sat
 615:quantum/rgblight.c **** 
 616:quantum/rgblight.c **** void rgblight_sethsv_slave(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_range(hue, sat,
 617:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 618:quantum/rgblight.c **** 
 619:quantum/rgblight.c **** #ifndef RGBLIGHT_CUSTOM_DRIVER
 620:quantum/rgblight.c **** void rgblight_set(void) {
 621:quantum/rgblight.c ****     LED_TYPE *start_led;
 622:quantum/rgblight.c ****     uint16_t  num_leds = clipping_num_leds;
 623:quantum/rgblight.c **** 
 624:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 625:quantum/rgblight.c ****         for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 626:quantum/rgblight.c ****             led[i].r = 0;
 627:quantum/rgblight.c ****             led[i].g = 0;
 628:quantum/rgblight.c ****             led[i].b = 0;
 629:quantum/rgblight.c **** #    ifdef RGBW
 630:quantum/rgblight.c ****             led[i].w = 0;
 631:quantum/rgblight.c **** #    endif
 632:quantum/rgblight.c ****         }
 633:quantum/rgblight.c ****     }
 634:quantum/rgblight.c **** 
 635:quantum/rgblight.c **** #    ifdef RGBLIGHT_LED_MAP
 636:quantum/rgblight.c ****     LED_TYPE led0[RGBLED_NUM];
 637:quantum/rgblight.c ****     for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 638:quantum/rgblight.c ****         led0[i] = led[pgm_read_byte(&led_map[i])];
 639:quantum/rgblight.c ****     }
 640:quantum/rgblight.c ****     start_led = led0 + clipping_start_pos;
 641:quantum/rgblight.c **** #    else
 642:quantum/rgblight.c ****     start_led = led + clipping_start_pos;
 643:quantum/rgblight.c **** #    endif
 644:quantum/rgblight.c **** 
 645:quantum/rgblight.c **** #    ifdef RGBW
 646:quantum/rgblight.c ****     for (uint8_t i = 0; i < num_leds; i++) {
 647:quantum/rgblight.c ****         convert_rgb_to_rgbw(&start_led[i]);
 648:quantum/rgblight.c ****     }
 649:quantum/rgblight.c **** #    endif
 650:quantum/rgblight.c ****     ws2812_setleds(start_led, num_leds);
 651:quantum/rgblight.c **** }
 652:quantum/rgblight.c **** #endif
 653:quantum/rgblight.c **** 
 654:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
 655:quantum/rgblight.c **** /* for split keyboard master side */
 656:quantum/rgblight.c **** uint8_t rgblight_get_change_flags(void) { return rgblight_status.change_flags; }
 657:quantum/rgblight.c **** 
 658:quantum/rgblight.c **** void rgblight_clear_change_flags(void) { rgblight_status.change_flags = 0; }
 659:quantum/rgblight.c **** 
 660:quantum/rgblight.c **** void rgblight_get_syncinfo(rgblight_syncinfo_t *syncinfo) {
 661:quantum/rgblight.c ****     syncinfo->config = rgblight_config;
 662:quantum/rgblight.c ****     syncinfo->status = rgblight_status;
 663:quantum/rgblight.c **** }
 664:quantum/rgblight.c **** 
 665:quantum/rgblight.c **** /* for split keyboard slave side */
 666:quantum/rgblight.c **** void rgblight_update_sync(rgblight_syncinfo_t *syncinfo, bool write_to_eeprom) {
 667:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_MODE) {
 668:quantum/rgblight.c ****         if (syncinfo->config.enable) {
 669:quantum/rgblight.c ****             rgblight_config.enable = 1;  // == rgblight_enable_noeeprom();
 670:quantum/rgblight.c ****             rgblight_mode_eeprom_helper(syncinfo->config.mode, write_to_eeprom);
 671:quantum/rgblight.c ****         } else {
 672:quantum/rgblight.c ****             rgblight_disable_noeeprom();
 673:quantum/rgblight.c ****         }
 674:quantum/rgblight.c ****     }
 675:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_HSVS) {
 676:quantum/rgblight.c ****         rgblight_sethsv_eeprom_helper(syncinfo->config.hue, syncinfo->config.sat, syncinfo->config.
 677:quantum/rgblight.c ****         // rgblight_config.speed = config->speed; // NEED???
 678:quantum/rgblight.c ****     }
 679:quantum/rgblight.c **** #    ifdef RGBLIGHT_USE_TIMER
 680:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_TIMER) {
 681:quantum/rgblight.c ****         if (syncinfo->status.timer_enabled) {
 682:quantum/rgblight.c ****             rgblight_timer_enable();
 683:quantum/rgblight.c ****         } else {
 684:quantum/rgblight.c ****             rgblight_timer_disable();
 685:quantum/rgblight.c ****         }
 686:quantum/rgblight.c ****     }
 687:quantum/rgblight.c **** #        ifndef RGBLIGHT_SPLIT_NO_ANIMATION_SYNC
 688:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_ANIMATION_TICK) {
 689:quantum/rgblight.c ****         animation_status.restart = true;
 690:quantum/rgblight.c ****     }
 691:quantum/rgblight.c **** #        endif /* RGBLIGHT_SPLIT_NO_ANIMATION_SYNC */
 692:quantum/rgblight.c **** #    endif     /* RGBLIGHT_USE_TIMER */
 693:quantum/rgblight.c **** }
 694:quantum/rgblight.c **** #endif /* RGBLIGHT_SPLIT */
 695:quantum/rgblight.c **** 
 696:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 697:quantum/rgblight.c **** 
 698:quantum/rgblight.c **** typedef void (*effect_func_t)(animation_status_t *anim);
 699:quantum/rgblight.c **** 
 700:quantum/rgblight.c **** // Animation timer -- use system timer (AVR Timer0)
 701:quantum/rgblight.c **** void rgblight_timer_init(void) {
 702:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 703:quantum/rgblight.c ****     // static uint8_t rgblight_timer_is_init = 0;
 704:quantum/rgblight.c ****     // if (rgblight_timer_is_init) {
 705:quantum/rgblight.c ****     //   return;
 706:quantum/rgblight.c ****     // }
 707:quantum/rgblight.c ****     // rgblight_timer_is_init = 1;
 708:quantum/rgblight.c ****     // /* Timer 3 setup */
 709:quantum/rgblight.c ****     // TCCR3B = _BV(WGM32) // CTC mode OCR3A as TOP
 710:quantum/rgblight.c ****     //       | _BV(CS30); // Clock selelct: clk/1
 711:quantum/rgblight.c ****     // /* Set TOP value */
 712:quantum/rgblight.c ****     // uint8_t sreg = SREG;
 713:quantum/rgblight.c ****     // cli();
 714:quantum/rgblight.c ****     // OCR3AH = (RGBLED_TIMER_TOP >> 8) & 0xff;
 715:quantum/rgblight.c ****     // OCR3AL = RGBLED_TIMER_TOP & 0xff;
 716:quantum/rgblight.c ****     // SREG = sreg;
 717:quantum/rgblight.c **** 
 718:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 719:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 720:quantum/rgblight.c **** }
 721:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 722:quantum/rgblight.c ****     if (!is_static_effect(rgblight_config.mode)) {
 723:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 724:quantum/rgblight.c ****     }
 725:quantum/rgblight.c ****     animation_status.last_timer = timer_read();
 726:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 727:quantum/rgblight.c ****     dprintf("rgblight timer enabled.\n");
 728:quantum/rgblight.c **** }
 729:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 730:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 731:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 732:quantum/rgblight.c ****     dprintf("rgblight timer disable.\n");
 733:quantum/rgblight.c **** }
 734:quantum/rgblight.c **** void rgblight_timer_toggle(void) {
 735:quantum/rgblight.c ****     dprintf("rgblight timer toggle.\n");
 736:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 737:quantum/rgblight.c ****         rgblight_timer_disable();
 738:quantum/rgblight.c ****     } else {
 739:quantum/rgblight.c ****         rgblight_timer_enable();
 740:quantum/rgblight.c ****     }
 741:quantum/rgblight.c **** }
 742:quantum/rgblight.c **** 
 743:quantum/rgblight.c **** void rgblight_show_solid_color(uint8_t r, uint8_t g, uint8_t b) {
 744:quantum/rgblight.c ****     rgblight_enable();
 745:quantum/rgblight.c ****     rgblight_mode(RGBLIGHT_MODE_STATIC_LIGHT);
 746:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 747:quantum/rgblight.c **** }
 748:quantum/rgblight.c **** 
 749:quantum/rgblight.c **** static void rgblight_effect_dummy(animation_status_t *anim) {
  16               		.loc 1 749 61 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 750:quantum/rgblight.c ****     // do nothing
 751:quantum/rgblight.c ****     /********
 752:quantum/rgblight.c ****     dprintf("rgblight_task() what happened?\n");
 753:quantum/rgblight.c ****     dprintf("is_static_effect %d\n", is_static_effect(rgblight_config.mode));
 754:quantum/rgblight.c ****     dprintf("mode = %d, base_mode = %d, timer_enabled %d, ",
 755:quantum/rgblight.c ****             rgblight_config.mode, rgblight_status.base_mode,
 756:quantum/rgblight.c ****             rgblight_status.timer_enabled);
 757:quantum/rgblight.c ****     dprintf("last_timer = %d\n",anim->last_timer);
 758:quantum/rgblight.c ****     **/
 759:quantum/rgblight.c **** }
  22               		.loc 1 759 1 view .LVU1
  23               	/* epilogue start */
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE161:
  28               		.section	.text.rgblight_set_clipping_range,"ax",@progbits
  29               	.global	rgblight_set_clipping_range
  31               	rgblight_set_clipping_range:
  32               	.LVL1:
  33               	.LFB82:
 106:quantum/rgblight.c ****     clipping_start_pos = start_pos;
  34               		.loc 1 106 71 view -0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
 107:quantum/rgblight.c ****     clipping_num_leds  = num_leds;
  40               		.loc 1 107 5 view .LVU3
 107:quantum/rgblight.c ****     clipping_num_leds  = num_leds;
  41               		.loc 1 107 24 is_stmt 0 view .LVU4
  42 0000 8093 0000 		sts clipping_start_pos,r24
 108:quantum/rgblight.c **** }
  43               		.loc 1 108 5 is_stmt 1 view .LVU5
 108:quantum/rgblight.c **** }
  44               		.loc 1 108 24 is_stmt 0 view .LVU6
  45 0004 6093 0000 		sts clipping_num_leds,r22
  46               	/* epilogue start */
 109:quantum/rgblight.c **** 
  47               		.loc 1 109 1 view .LVU7
  48 0008 0895      		ret
  49               		.cfi_endproc
  50               	.LFE82:
  52               		.section	.text.rgblight_set_effect_range,"ax",@progbits
  53               	.global	rgblight_set_effect_range
  55               	rgblight_set_effect_range:
  56               	.LVL2:
  57               	.LFB83:
 111:quantum/rgblight.c ****     if (start_pos >= RGBLED_NUM) return;
  58               		.loc 1 111 69 is_stmt 1 view -0
  59               		.cfi_startproc
  60               	/* prologue: function */
  61               	/* frame size = 0 */
  62               	/* stack size = 0 */
  63               	.L__stack_usage = 0
 112:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
  64               		.loc 1 112 5 view .LVU9
 112:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
  65               		.loc 1 112 8 is_stmt 0 view .LVU10
  66 0000 8830      		cpi r24,lo8(8)
  67 0002 00F4      		brsh .L3
 113:quantum/rgblight.c ****     effect_start_pos = start_pos;
  68               		.loc 1 113 5 is_stmt 1 view .LVU11
 113:quantum/rgblight.c ****     effect_start_pos = start_pos;
  69               		.loc 1 113 19 is_stmt 0 view .LVU12
  70 0004 482F      		mov r20,r24
  71 0006 460F      		add r20,r22
  72 0008 5527      		clr r21
  73 000a 551F      		rol r21
 113:quantum/rgblight.c ****     effect_start_pos = start_pos;
  74               		.loc 1 113 8 view .LVU13
  75 000c 4930      		cpi r20,9
  76 000e 5105      		cpc r21,__zero_reg__
  77 0010 04F4      		brge .L3
 114:quantum/rgblight.c ****     effect_end_pos   = start_pos + num_leds;
  78               		.loc 1 114 5 is_stmt 1 view .LVU14
 114:quantum/rgblight.c ****     effect_end_pos   = start_pos + num_leds;
  79               		.loc 1 114 22 is_stmt 0 view .LVU15
  80 0012 8093 0000 		sts effect_start_pos,r24
 115:quantum/rgblight.c ****     effect_num_leds  = num_leds;
  81               		.loc 1 115 5 is_stmt 1 view .LVU16
 115:quantum/rgblight.c ****     effect_num_leds  = num_leds;
  82               		.loc 1 115 34 is_stmt 0 view .LVU17
  83 0016 860F      		add r24,r22
  84               	.LVL3:
 115:quantum/rgblight.c ****     effect_num_leds  = num_leds;
  85               		.loc 1 115 22 view .LVU18
  86 0018 8093 0000 		sts effect_end_pos,r24
 116:quantum/rgblight.c **** }
  87               		.loc 1 116 5 is_stmt 1 view .LVU19
 116:quantum/rgblight.c **** }
  88               		.loc 1 116 22 is_stmt 0 view .LVU20
  89 001c 6093 0000 		sts effect_num_leds,r22
  90               	.LVL4:
  91               	.L3:
  92               	/* epilogue start */
 117:quantum/rgblight.c **** 
  93               		.loc 1 117 1 view .LVU21
  94 0020 0895      		ret
  95               		.cfi_endproc
  96               	.LFE83:
  98               		.section	.text.sethsv_raw,"ax",@progbits
  99               	.global	sethsv_raw
 101               	sethsv_raw:
 102               	.LVL5:
 103               	.LFB84:
 119:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 104               		.loc 1 119 72 is_stmt 1 view -0
 105               		.cfi_startproc
 119:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 106               		.loc 1 119 72 is_stmt 0 view .LVU23
 107 0000 CF93      		push r28
 108               	.LCFI0:
 109               		.cfi_def_cfa_offset 3
 110               		.cfi_offset 28, -2
 111 0002 DF93      		push r29
 112               	.LCFI1:
 113               		.cfi_def_cfa_offset 4
 114               		.cfi_offset 29, -3
 115               	/* prologue: function */
 116               	/* frame size = 0 */
 117               	/* stack size = 2 */
 118               	.L__stack_usage = 2
 119 0004 762F      		mov r23,r22
 120 0006 E901      		movw r28,r18
 120:quantum/rgblight.c ****     RGB rgb = hsv_to_rgb(hsv);
 121               		.loc 1 120 5 is_stmt 1 view .LVU24
 121:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 122               		.loc 1 121 5 view .LVU25
 121:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 123               		.loc 1 121 15 is_stmt 0 view .LVU26
 124 0008 682F      		mov r22,r24
 125               	.LVL6:
 121:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 126               		.loc 1 121 15 view .LVU27
 127 000a 842F      		mov r24,r20
 128               	.LVL7:
 121:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 129               		.loc 1 121 15 view .LVU28
 130 000c 0E94 0000 		call hsv_to_rgb
 131               	.LVL8:
 122:quantum/rgblight.c **** }
 132               		.loc 1 122 5 is_stmt 1 view .LVU29
 133               	.LBB20:
 134               	.LBI20:
 127:quantum/rgblight.c ****     (*led1).r = r;
 135               		.loc 1 127 6 view .LVU30
 136               	.LBB21:
 128:quantum/rgblight.c ****     (*led1).g = g;
 137               		.loc 1 128 5 view .LVU31
 128:quantum/rgblight.c ****     (*led1).g = g;
 138               		.loc 1 128 15 is_stmt 0 view .LVU32
 139 0010 7983      		std Y+1,r23
 129:quantum/rgblight.c ****     (*led1).b = b;
 140               		.loc 1 129 5 is_stmt 1 view .LVU33
 129:quantum/rgblight.c ****     (*led1).b = b;
 141               		.loc 1 129 15 is_stmt 0 view .LVU34
 142 0012 6883      		st Y,r22
 130:quantum/rgblight.c **** #ifdef RGBW
 143               		.loc 1 130 5 is_stmt 1 view .LVU35
 130:quantum/rgblight.c **** #ifdef RGBW
 144               		.loc 1 130 15 is_stmt 0 view .LVU36
 145 0014 8A83      		std Y+2,r24
 146               	.LVL9:
 147               	/* epilogue start */
 130:quantum/rgblight.c **** #ifdef RGBW
 148               		.loc 1 130 15 view .LVU37
 149               	.LBE21:
 150               	.LBE20:
 123:quantum/rgblight.c **** 
 151               		.loc 1 123 1 view .LVU38
 152 0016 DF91      		pop r29
 153 0018 CF91      		pop r28
 154               	.LVL10:
 123:quantum/rgblight.c **** 
 155               		.loc 1 123 1 view .LVU39
 156 001a 0895      		ret
 157               		.cfi_endproc
 158               	.LFE84:
 160               		.section	.text.sethsv,"ax",@progbits
 161               	.global	sethsv
 163               	sethsv:
 164               	.LVL11:
 165               	.LFB85:
 125:quantum/rgblight.c **** 
 166               		.loc 1 125 68 is_stmt 1 view -0
 167               		.cfi_startproc
 168               	/* prologue: function */
 169               	/* frame size = 0 */
 170               	/* stack size = 0 */
 171               	.L__stack_usage = 0
 125:quantum/rgblight.c **** 
 172               		.loc 1 125 70 view .LVU41
 173 0000 0C94 0000 		jmp sethsv_raw
 174               	.LVL12:
 125:quantum/rgblight.c **** 
 175               		.loc 1 125 70 is_stmt 0 view .LVU42
 176               		.cfi_endproc
 177               	.LFE85:
 179               		.section	.text.setrgb,"ax",@progbits
 180               	.global	setrgb
 182               	setrgb:
 183               	.LVL13:
 184               	.LFB86:
 127:quantum/rgblight.c ****     (*led1).r = r;
 185               		.loc 1 127 62 is_stmt 1 view -0
 186               		.cfi_startproc
 187               	/* prologue: function */
 188               	/* frame size = 0 */
 189               	/* stack size = 0 */
 190               	.L__stack_usage = 0
 127:quantum/rgblight.c ****     (*led1).r = r;
 191               		.loc 1 127 62 is_stmt 0 view .LVU44
 192 0000 F901      		movw r30,r18
 128:quantum/rgblight.c ****     (*led1).g = g;
 193               		.loc 1 128 5 is_stmt 1 view .LVU45
 128:quantum/rgblight.c ****     (*led1).g = g;
 194               		.loc 1 128 15 is_stmt 0 view .LVU46
 195 0002 8183      		std Z+1,r24
 129:quantum/rgblight.c ****     (*led1).b = b;
 196               		.loc 1 129 5 is_stmt 1 view .LVU47
 129:quantum/rgblight.c ****     (*led1).b = b;
 197               		.loc 1 129 15 is_stmt 0 view .LVU48
 198 0004 6083      		st Z,r22
 130:quantum/rgblight.c **** #ifdef RGBW
 199               		.loc 1 130 5 is_stmt 1 view .LVU49
 130:quantum/rgblight.c **** #ifdef RGBW
 200               		.loc 1 130 15 is_stmt 0 view .LVU50
 201 0006 4283      		std Z+2,r20
 202               	/* epilogue start */
 134:quantum/rgblight.c **** 
 203               		.loc 1 134 1 view .LVU51
 204 0008 0895      		ret
 205               		.cfi_endproc
 206               	.LFE86:
 208               		.section	.text.rgblight_check_config,"ax",@progbits
 209               	.global	rgblight_check_config
 211               	rgblight_check_config:
 212               	.LFB87:
 136:quantum/rgblight.c ****     /* Add some out of bound checks for RGB light config */
 213               		.loc 1 136 34 is_stmt 1 view -0
 214               		.cfi_startproc
 215               	/* prologue: function */
 216               	/* frame size = 0 */
 217               	/* stack size = 0 */
 218               	.L__stack_usage = 0
 139:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 219               		.loc 1 139 5 view .LVU53
 139:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 220               		.loc 1 139 30 is_stmt 0 view .LVU54
 221 0000 8091 0000 		lds r24,rgblight_config
 222 0004 982F      		mov r25,r24
 223 0006 9E7F      		andi r25,lo8(-2)
 139:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 224               		.loc 1 139 8 view .LVU55
 225 0008 01F4      		brne .L9
 140:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 226               		.loc 1 140 9 is_stmt 1 view .LVU56
 140:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 227               		.loc 1 140 30 is_stmt 0 view .LVU57
 228 000a 8170      		andi r24,lo8(1)
 229 000c 8260      		ori r24,lo8(2)
 230               	.L11:
 142:quantum/rgblight.c ****     }
 231               		.loc 1 142 30 view .LVU58
 232 000e 8093 0000 		sts rgblight_config,r24
 145:quantum/rgblight.c ****         rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 233               		.loc 1 145 5 is_stmt 1 view .LVU59
 234               	.L8:
 235               	/* epilogue start */
 148:quantum/rgblight.c **** 
 236               		.loc 1 148 1 is_stmt 0 view .LVU60
 237 0012 0895      		ret
 238               	.L9:
 141:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 239               		.loc 1 141 12 is_stmt 1 view .LVU61
 141:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 240               		.loc 1 141 15 is_stmt 0 view .LVU62
 241 0014 8A34      		cpi r24,lo8(74)
 242 0016 00F0      		brlo .L8
 142:quantum/rgblight.c ****     }
 243               		.loc 1 142 9 is_stmt 1 view .LVU63
 142:quantum/rgblight.c ****     }
 244               		.loc 1 142 30 is_stmt 0 view .LVU64
 245 0018 8170      		andi r24,lo8(1)
 246 001a 8864      		ori r24,lo8(72)
 247 001c 00C0      		rjmp .L11
 248               		.cfi_endproc
 249               	.LFE87:
 251               		.section	.text.eeconfig_read_rgblight,"ax",@progbits
 252               	.global	eeconfig_read_rgblight
 254               	eeconfig_read_rgblight:
 255               	.LFB88:
 150:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 256               		.loc 1 150 39 is_stmt 1 view -0
 257               		.cfi_startproc
 258               	/* prologue: function */
 259               	/* frame size = 0 */
 260               	/* stack size = 0 */
 261               	.L__stack_usage = 0
 152:quantum/rgblight.c **** #else
 262               		.loc 1 152 5 view .LVU66
 152:quantum/rgblight.c **** #else
 263               		.loc 1 152 12 is_stmt 0 view .LVU67
 264 0000 88E0      		ldi r24,lo8(8)
 265 0002 90E0      		ldi r25,0
 266 0004 0C94 0000 		jmp eeprom_read_dword
 267               	.LVL14:
 268               		.cfi_endproc
 269               	.LFE88:
 271               		.section	.text.eeconfig_update_rgblight,"ax",@progbits
 272               	.global	eeconfig_update_rgblight
 274               	eeconfig_update_rgblight:
 275               	.LVL15:
 276               	.LFB89:
 158:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 277               		.loc 1 158 45 is_stmt 1 view -0
 278               		.cfi_startproc
 158:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 279               		.loc 1 158 45 is_stmt 0 view .LVU69
 280 0000 CF92      		push r12
 281               	.LCFI2:
 282               		.cfi_def_cfa_offset 3
 283               		.cfi_offset 12, -2
 284 0002 DF92      		push r13
 285               	.LCFI3:
 286               		.cfi_def_cfa_offset 4
 287               		.cfi_offset 13, -3
 288 0004 EF92      		push r14
 289               	.LCFI4:
 290               		.cfi_def_cfa_offset 5
 291               		.cfi_offset 14, -4
 292 0006 FF92      		push r15
 293               	.LCFI5:
 294               		.cfi_def_cfa_offset 6
 295               		.cfi_offset 15, -5
 296               	/* prologue: function */
 297               	/* frame size = 0 */
 298               	/* stack size = 4 */
 299               	.L__stack_usage = 4
 300 0008 6B01      		movw r12,r22
 301 000a 7C01      		movw r14,r24
 160:quantum/rgblight.c ****     eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 302               		.loc 1 160 5 is_stmt 1 view .LVU70
 303 000c 0E94 0000 		call rgblight_check_config
 304               	.LVL16:
 161:quantum/rgblight.c **** #endif
 305               		.loc 1 161 5 view .LVU71
 306 0010 B701      		movw r22,r14
 307 0012 A601      		movw r20,r12
 308 0014 88E0      		ldi r24,lo8(8)
 309 0016 90E0      		ldi r25,0
 310               	/* epilogue start */
 163:quantum/rgblight.c **** 
 311               		.loc 1 163 1 is_stmt 0 view .LVU72
 312 0018 FF90      		pop r15
 313 001a EF90      		pop r14
 314 001c DF90      		pop r13
 315 001e CF90      		pop r12
 161:quantum/rgblight.c **** #endif
 316               		.loc 1 161 5 view .LVU73
 317 0020 0C94 0000 		jmp eeprom_update_dword
 318               	.LVL17:
 319               		.cfi_endproc
 320               	.LFE89:
 322               		.section	.text.eeconfig_update_rgblight_current,"ax",@progbits
 323               	.global	eeconfig_update_rgblight_current
 325               	eeconfig_update_rgblight_current:
 326               	.LFB90:
 165:quantum/rgblight.c **** 
 327               		.loc 1 165 45 is_stmt 1 view -0
 328               		.cfi_startproc
 329               	/* prologue: function */
 330               	/* frame size = 0 */
 331               	/* stack size = 0 */
 332               	.L__stack_usage = 0
 165:quantum/rgblight.c **** 
 333               		.loc 1 165 47 view .LVU75
 334 0000 6091 0000 		lds r22,rgblight_config
 335 0004 7091 0000 		lds r23,rgblight_config+1
 336 0008 8091 0000 		lds r24,rgblight_config+2
 337 000c 9091 0000 		lds r25,rgblight_config+3
 338 0010 0C94 0000 		jmp eeconfig_update_rgblight
 339               	.LVL18:
 340               		.cfi_endproc
 341               	.LFE90:
 343               		.section	.text.eeconfig_update_rgblight_default,"ax",@progbits
 344               	.global	eeconfig_update_rgblight_default
 346               	eeconfig_update_rgblight_default:
 347               	.LFB91:
 167:quantum/rgblight.c ****     rgblight_config.enable = 1;
 348               		.loc 1 167 45 view -0
 349               		.cfi_startproc
 350               	/* prologue: function */
 351               	/* frame size = 0 */
 352               	/* stack size = 0 */
 353               	.L__stack_usage = 0
 168:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_MODE_STATIC_LIGHT;
 354               		.loc 1 168 5 view .LVU77
 169:quantum/rgblight.c ****     rgblight_config.hue    = 0;
 355               		.loc 1 169 5 view .LVU78
 170:quantum/rgblight.c ****     rgblight_config.sat    = UINT8_MAX;
 356               		.loc 1 170 5 view .LVU79
 171:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_LIMIT_VAL;
 357               		.loc 1 171 5 view .LVU80
 172:quantum/rgblight.c ****     rgblight_config.speed  = 0;
 358               		.loc 1 172 5 view .LVU81
 173:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 359               		.loc 1 173 5 view .LVU82
 168:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_MODE_STATIC_LIGHT;
 360               		.loc 1 168 28 is_stmt 0 view .LVU83
 361 0000 E0E0      		ldi r30,lo8(rgblight_config)
 362 0002 F0E0      		ldi r31,hi8(rgblight_config)
 363 0004 83E0      		ldi r24,lo8(3)
 364 0006 8083      		st Z,r24
 170:quantum/rgblight.c ****     rgblight_config.sat    = UINT8_MAX;
 365               		.loc 1 170 28 view .LVU84
 366 0008 1182      		std Z+1,__zero_reg__
 171:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_LIMIT_VAL;
 367               		.loc 1 171 28 view .LVU85
 368 000a 8FEF      		ldi r24,lo8(-1)
 369 000c 8283      		std Z+2,r24
 172:quantum/rgblight.c ****     rgblight_config.speed  = 0;
 370               		.loc 1 172 28 view .LVU86
 371 000e 8383      		std Z+3,r24
 173:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 372               		.loc 1 173 28 view .LVU87
 373 0010 1482      		std Z+4,__zero_reg__
 174:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 374               		.loc 1 174 39 is_stmt 1 view .LVU88
 175:quantum/rgblight.c **** }
 375               		.loc 1 175 5 view .LVU89
 376 0012 6081      		ld r22,Z
 377 0014 7181      		ldd r23,Z+1
 378 0016 8281      		ldd r24,Z+2
 379 0018 9381      		ldd r25,Z+3
 380 001a 0C94 0000 		jmp eeconfig_update_rgblight
 381               	.LVL19:
 382               		.cfi_endproc
 383               	.LFE91:
 385               		.section	.text.eeconfig_debug_rgblight,"ax",@progbits
 386               	.global	eeconfig_debug_rgblight
 388               	eeconfig_debug_rgblight:
 389               	.LFB92:
 178:quantum/rgblight.c ****     dprintf("rgblight_config EEPROM:\n");
 390               		.loc 1 178 36 view -0
 391               		.cfi_startproc
 392               	/* prologue: function */
 393               	/* frame size = 0 */
 394               	/* stack size = 0 */
 395               	.L__stack_usage = 0
 179:quantum/rgblight.c ****     dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 396               		.loc 1 179 41 view .LVU91
 180:quantum/rgblight.c ****     dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 397               		.loc 1 180 69 view .LVU92
 181:quantum/rgblight.c ****     dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 398               		.loc 1 181 65 view .LVU93
 182:quantum/rgblight.c ****     dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 399               		.loc 1 182 63 view .LVU94
 183:quantum/rgblight.c ****     dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 400               		.loc 1 183 63 view .LVU95
 184:quantum/rgblight.c ****     dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 401               		.loc 1 184 63 view .LVU96
 185:quantum/rgblight.c **** }
 402               		.loc 1 185 67 view .LVU97
 403               	/* epilogue start */
 186:quantum/rgblight.c **** 
 404               		.loc 1 186 1 is_stmt 0 view .LVU98
 405 0000 0895      		ret
 406               		.cfi_endproc
 407               	.LFE92:
 409               		.section	.text.rgblight_read_dword,"ax",@progbits
 410               	.global	rgblight_read_dword
 412               	rgblight_read_dword:
 413               	.LFB94:
 225:quantum/rgblight.c **** 
 414               		.loc 1 225 36 is_stmt 1 view -0
 415               		.cfi_startproc
 416               	/* prologue: function */
 417               	/* frame size = 0 */
 418               	/* stack size = 0 */
 419               	.L__stack_usage = 0
 225:quantum/rgblight.c **** 
 420               		.loc 1 225 38 view .LVU100
 225:quantum/rgblight.c **** 
 421               		.loc 1 225 60 is_stmt 0 view .LVU101
 422 0000 6091 0000 		lds r22,rgblight_config
 423 0004 7091 0000 		lds r23,rgblight_config+1
 424 0008 8091 0000 		lds r24,rgblight_config+2
 425 000c 9091 0000 		lds r25,rgblight_config+3
 426               	/* epilogue start */
 225:quantum/rgblight.c **** 
 427               		.loc 1 225 1 view .LVU102
 428 0010 0895      		ret
 429               		.cfi_endproc
 430               	.LFE94:
 432               		.section	.text.rgblight_get_mode,"ax",@progbits
 433               	.global	rgblight_get_mode
 435               	rgblight_get_mode:
 436               	.LFB104:
 276:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 437               		.loc 1 276 33 is_stmt 1 view -0
 438               		.cfi_startproc
 439               	/* prologue: function */
 440               	/* frame size = 0 */
 441               	/* stack size = 0 */
 442               	.L__stack_usage = 0
 277:quantum/rgblight.c ****         return false;
 443               		.loc 1 277 5 view .LVU104
 277:quantum/rgblight.c ****         return false;
 444               		.loc 1 277 25 is_stmt 0 view .LVU105
 445 0000 8091 0000 		lds r24,rgblight_config
 277:quantum/rgblight.c ****         return false;
 446               		.loc 1 277 8 view .LVU106
 447 0004 80FF      		sbrs r24,0
 448 0006 00C0      		rjmp .L20
 281:quantum/rgblight.c **** }
 449               		.loc 1 281 5 is_stmt 1 view .LVU107
 281:quantum/rgblight.c **** }
 450               		.loc 1 281 27 is_stmt 0 view .LVU108
 451 0008 8695      		lsr r24
 452 000a 0895      		ret
 453               	.L20:
 278:quantum/rgblight.c ****     }
 454               		.loc 1 278 16 view .LVU109
 455 000c 80E0      		ldi r24,0
 456               	/* epilogue start */
 282:quantum/rgblight.c **** 
 457               		.loc 1 282 1 view .LVU110
 458 000e 0895      		ret
 459               		.cfi_endproc
 460               	.LFE104:
 462               		.section	.text.rgblight_increase_speed,"ax",@progbits
 463               	.global	rgblight_increase_speed
 465               	rgblight_increase_speed:
 466               	.LFB132:
 412:quantum/rgblight.c ****     if (rgblight_config.speed < 3) rgblight_config.speed++;
 467               		.loc 1 412 36 is_stmt 1 view -0
 468               		.cfi_startproc
 469               	/* prologue: function */
 470               	/* frame size = 0 */
 471               	/* stack size = 0 */
 472               	.L__stack_usage = 0
 413:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 473               		.loc 1 413 5 view .LVU112
 413:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 474               		.loc 1 413 24 is_stmt 0 view .LVU113
 475 0000 8091 0000 		lds r24,rgblight_config+4
 413:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 476               		.loc 1 413 8 view .LVU114
 477 0004 8330      		cpi r24,lo8(3)
 478 0006 00F4      		brsh .L22
 413:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 479               		.loc 1 413 36 is_stmt 1 discriminator 1 view .LVU115
 413:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 480               		.loc 1 413 57 is_stmt 0 discriminator 1 view .LVU116
 481 0008 8F5F      		subi r24,lo8(-(1))
 482 000a 8093 0000 		sts rgblight_config+4,r24
 483               	.L22:
 415:quantum/rgblight.c **** }
 484               		.loc 1 415 5 is_stmt 1 view .LVU117
 485 000e 6091 0000 		lds r22,rgblight_config
 486 0012 7091 0000 		lds r23,rgblight_config+1
 487 0016 8091 0000 		lds r24,rgblight_config+2
 488 001a 9091 0000 		lds r25,rgblight_config+3
 489 001e 0C94 0000 		jmp eeconfig_update_rgblight
 490               	.LVL20:
 491               		.cfi_endproc
 492               	.LFE132:
 494               		.section	.text.rgblight_decrease_speed,"ax",@progbits
 495               	.global	rgblight_decrease_speed
 497               	rgblight_decrease_speed:
 498               	.LFB133:
 418:quantum/rgblight.c ****     if (rgblight_config.speed > 0) rgblight_config.speed--;
 499               		.loc 1 418 36 view -0
 500               		.cfi_startproc
 501               	/* prologue: function */
 502               	/* frame size = 0 */
 503               	/* stack size = 0 */
 504               	.L__stack_usage = 0
 419:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 505               		.loc 1 419 5 view .LVU119
 419:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 506               		.loc 1 419 24 is_stmt 0 view .LVU120
 507 0000 8091 0000 		lds r24,rgblight_config+4
 419:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 508               		.loc 1 419 8 view .LVU121
 509 0004 8823      		tst r24
 510 0006 01F0      		breq .L24
 419:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 511               		.loc 1 419 36 is_stmt 1 discriminator 1 view .LVU122
 419:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 512               		.loc 1 419 57 is_stmt 0 discriminator 1 view .LVU123
 513 0008 8150      		subi r24,lo8(-(-1))
 514 000a 8093 0000 		sts rgblight_config+4,r24
 515               	.L24:
 421:quantum/rgblight.c **** }
 516               		.loc 1 421 5 is_stmt 1 view .LVU124
 517 000e 6091 0000 		lds r22,rgblight_config
 518 0012 7091 0000 		lds r23,rgblight_config+1
 519 0016 8091 0000 		lds r24,rgblight_config+2
 520 001a 9091 0000 		lds r25,rgblight_config+3
 521 001e 0C94 0000 		jmp eeconfig_update_rgblight
 522               	.LVL21:
 523               		.cfi_endproc
 524               	.LFE133:
 526               		.section	.text.rgblight_get_speed,"ax",@progbits
 527               	.global	rgblight_get_speed
 529               	rgblight_get_speed:
 530               	.LFB138:
 508:quantum/rgblight.c **** 
 531               		.loc 1 508 34 view -0
 532               		.cfi_startproc
 533               	/* prologue: function */
 534               	/* frame size = 0 */
 535               	/* stack size = 0 */
 536               	.L__stack_usage = 0
 508:quantum/rgblight.c **** 
 537               		.loc 1 508 36 view .LVU126
 508:quantum/rgblight.c **** 
 538               		.loc 1 508 1 is_stmt 0 view .LVU127
 539 0000 8091 0000 		lds r24,rgblight_config+4
 540               	/* epilogue start */
 541 0004 0895      		ret
 542               		.cfi_endproc
 543               	.LFE138:
 545               		.section	.text.rgblight_set_speed_eeprom_helper,"ax",@progbits
 546               	.global	rgblight_set_speed_eeprom_helper
 548               	rgblight_set_speed_eeprom_helper:
 549               	.LVL22:
 550               	.LFB139:
 510:quantum/rgblight.c ****     rgblight_config.speed = speed;
 551               		.loc 1 510 76 is_stmt 1 view -0
 552               		.cfi_startproc
 553               	/* prologue: function */
 554               	/* frame size = 0 */
 555               	/* stack size = 0 */
 556               	.L__stack_usage = 0
 511:quantum/rgblight.c ****     if (write_to_eeprom) {
 557               		.loc 1 511 5 view .LVU129
 511:quantum/rgblight.c ****     if (write_to_eeprom) {
 558               		.loc 1 511 27 is_stmt 0 view .LVU130
 559 0000 8093 0000 		sts rgblight_config+4,r24
 512:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 560               		.loc 1 512 5 is_stmt 1 view .LVU131
 512:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 561               		.loc 1 512 8 is_stmt 0 view .LVU132
 562 0004 6623      		tst r22
 563 0006 01F0      		breq .L29
 513:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 564               		.loc 1 513 9 is_stmt 1 view .LVU133
 565 0008 6091 0000 		lds r22,rgblight_config
 566 000c 7091 0000 		lds r23,rgblight_config+1
 567 0010 8091 0000 		lds r24,rgblight_config+2
 568 0014 9091 0000 		lds r25,rgblight_config+3
 569               	.LVL23:
 513:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 570               		.loc 1 513 9 is_stmt 0 view .LVU134
 571 0018 0C94 0000 		jmp eeconfig_update_rgblight
 572               	.LVL24:
 573               	.L29:
 574               	/* epilogue start */
 518:quantum/rgblight.c **** 
 575               		.loc 1 518 1 view .LVU135
 576 001c 0895      		ret
 577               		.cfi_endproc
 578               	.LFE139:
 580               		.section	.text.rgblight_set_speed,"ax",@progbits
 581               	.global	rgblight_set_speed
 583               	rgblight_set_speed:
 584               	.LVL25:
 585               	.LFB140:
 520:quantum/rgblight.c **** 
 586               		.loc 1 520 40 is_stmt 1 view -0
 587               		.cfi_startproc
 588               	/* prologue: function */
 589               	/* frame size = 0 */
 590               	/* stack size = 0 */
 591               	.L__stack_usage = 0
 520:quantum/rgblight.c **** 
 592               		.loc 1 520 42 view .LVU137
 593 0000 61E0      		ldi r22,lo8(1)
 594 0002 0C94 0000 		jmp rgblight_set_speed_eeprom_helper
 595               	.LVL26:
 520:quantum/rgblight.c **** 
 596               		.loc 1 520 42 is_stmt 0 view .LVU138
 597               		.cfi_endproc
 598               	.LFE140:
 600               		.section	.text.rgblight_set_speed_noeeprom,"ax",@progbits
 601               	.global	rgblight_set_speed_noeeprom
 603               	rgblight_set_speed_noeeprom:
 604               	.LVL27:
 605               	.LFB141:
 522:quantum/rgblight.c **** 
 606               		.loc 1 522 49 is_stmt 1 view -0
 607               		.cfi_startproc
 608               	/* prologue: function */
 609               	/* frame size = 0 */
 610               	/* stack size = 0 */
 611               	.L__stack_usage = 0
 522:quantum/rgblight.c **** 
 612               		.loc 1 522 51 view .LVU140
 613 0000 60E0      		ldi r22,0
 614 0002 0C94 0000 		jmp rgblight_set_speed_eeprom_helper
 615               	.LVL28:
 522:quantum/rgblight.c **** 
 616               		.loc 1 522 51 is_stmt 0 view .LVU141
 617               		.cfi_endproc
 618               	.LFE141:
 620               		.section	.text.rgblight_get_hue,"ax",@progbits
 621               	.global	rgblight_get_hue
 623               	rgblight_get_hue:
 624               	.LFB142:
 524:quantum/rgblight.c **** 
 625               		.loc 1 524 32 is_stmt 1 view -0
 626               		.cfi_startproc
 627               	/* prologue: function */
 628               	/* frame size = 0 */
 629               	/* stack size = 0 */
 630               	.L__stack_usage = 0
 524:quantum/rgblight.c **** 
 631               		.loc 1 524 34 view .LVU143
 524:quantum/rgblight.c **** 
 632               		.loc 1 524 1 is_stmt 0 view .LVU144
 633 0000 8091 0000 		lds r24,rgblight_config+1
 634               	/* epilogue start */
 635 0004 0895      		ret
 636               		.cfi_endproc
 637               	.LFE142:
 639               		.section	.text.rgblight_get_sat,"ax",@progbits
 640               	.global	rgblight_get_sat
 642               	rgblight_get_sat:
 643               	.LFB143:
 526:quantum/rgblight.c **** 
 644               		.loc 1 526 32 is_stmt 1 view -0
 645               		.cfi_startproc
 646               	/* prologue: function */
 647               	/* frame size = 0 */
 648               	/* stack size = 0 */
 649               	.L__stack_usage = 0
 526:quantum/rgblight.c **** 
 650               		.loc 1 526 34 view .LVU146
 526:quantum/rgblight.c **** 
 651               		.loc 1 526 1 is_stmt 0 view .LVU147
 652 0000 8091 0000 		lds r24,rgblight_config+2
 653               	/* epilogue start */
 654 0004 0895      		ret
 655               		.cfi_endproc
 656               	.LFE143:
 658               		.section	.text.rgblight_get_val,"ax",@progbits
 659               	.global	rgblight_get_val
 661               	rgblight_get_val:
 662               	.LFB144:
 528:quantum/rgblight.c **** 
 663               		.loc 1 528 32 is_stmt 1 view -0
 664               		.cfi_startproc
 665               	/* prologue: function */
 666               	/* frame size = 0 */
 667               	/* stack size = 0 */
 668               	.L__stack_usage = 0
 528:quantum/rgblight.c **** 
 669               		.loc 1 528 34 view .LVU149
 528:quantum/rgblight.c **** 
 670               		.loc 1 528 1 is_stmt 0 view .LVU150
 671 0000 8091 0000 		lds r24,rgblight_config+3
 672               	/* epilogue start */
 673 0004 0895      		ret
 674               		.cfi_endproc
 675               	.LFE144:
 677               		.section	.text.rgblight_set,"ax",@progbits
 678               	.global	rgblight_set
 680               	rgblight_set:
 681               	.LFB155:
 620:quantum/rgblight.c ****     LED_TYPE *start_led;
 682               		.loc 1 620 25 is_stmt 1 view -0
 683               		.cfi_startproc
 684               	/* prologue: function */
 685               	/* frame size = 0 */
 686               	/* stack size = 0 */
 687               	.L__stack_usage = 0
 621:quantum/rgblight.c ****     uint16_t  num_leds = clipping_num_leds;
 688               		.loc 1 621 5 view .LVU152
 622:quantum/rgblight.c **** 
 689               		.loc 1 622 5 view .LVU153
 622:quantum/rgblight.c **** 
 690               		.loc 1 622 15 is_stmt 0 view .LVU154
 691 0000 A091 0000 		lds r26,clipping_num_leds
 692 0004 B0E0      		ldi r27,0
 693               	.LVL29:
 624:quantum/rgblight.c ****         for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 694               		.loc 1 624 5 is_stmt 1 view .LVU155
 624:quantum/rgblight.c ****         for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 695               		.loc 1 624 25 is_stmt 0 view .LVU156
 696 0006 8091 0000 		lds r24,rgblight_config
 624:quantum/rgblight.c ****         for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 697               		.loc 1 624 8 view .LVU157
 698 000a 80FF      		sbrs r24,0
 699 000c 00C0      		rjmp .L37
 700               	.L40:
 642:quantum/rgblight.c **** #    endif
 701               		.loc 1 642 5 is_stmt 1 view .LVU158
 702               	.LVL30:
 650:quantum/rgblight.c **** }
 703               		.loc 1 650 5 view .LVU159
 642:quantum/rgblight.c **** #    endif
 704               		.loc 1 642 21 is_stmt 0 view .LVU160
 705 000e 8091 0000 		lds r24,clipping_start_pos
 706 0012 90E0      		ldi r25,0
 707 0014 63E0      		ldi r22,lo8(3)
 708 0016 70E0      		ldi r23,0
 709 0018 0E94 0000 		call __mulhi3
 650:quantum/rgblight.c **** }
 710               		.loc 1 650 5 view .LVU161
 711 001c BD01      		movw r22,r26
 712 001e 8050      		subi r24,lo8(-(led))
 713 0020 9040      		sbci r25,hi8(-(led))
 714 0022 0C94 0000 		jmp ws2812_setleds
 715               	.LVL31:
 716               	.L37:
 625:quantum/rgblight.c ****             led[i].r = 0;
 717               		.loc 1 625 9 is_stmt 1 view .LVU162
 718               	.LBB22:
 625:quantum/rgblight.c ****             led[i].r = 0;
 719               		.loc 1 625 14 view .LVU163
 625:quantum/rgblight.c ****             led[i].r = 0;
 720               		.loc 1 625 22 is_stmt 0 view .LVU164
 721 0026 2091 0000 		lds r18,effect_start_pos
 722               	.LVL32:
 625:quantum/rgblight.c ****             led[i].r = 0;
 723               		.loc 1 625 46 view .LVU165
 724 002a 3091 0000 		lds r19,effect_end_pos
 725 002e 822F      		mov r24,r18
 726 0030 90E0      		ldi r25,0
 727 0032 63E0      		ldi r22,lo8(3)
 728 0034 70E0      		ldi r23,0
 729 0036 0E94 0000 		call __mulhi3
 730 003a FC01      		movw r30,r24
 731 003c E050      		subi r30,lo8(-(led))
 732 003e F040      		sbci r31,hi8(-(led))
 733               	.L38:
 625:quantum/rgblight.c ****             led[i].r = 0;
 734               		.loc 1 625 9 discriminator 1 view .LVU166
 735 0040 2317      		cp r18,r19
 736 0042 00F4      		brsh .L40
 626:quantum/rgblight.c ****             led[i].g = 0;
 737               		.loc 1 626 13 is_stmt 1 discriminator 3 view .LVU167
 626:quantum/rgblight.c ****             led[i].g = 0;
 738               		.loc 1 626 22 is_stmt 0 discriminator 3 view .LVU168
 739 0044 1182      		std Z+1,__zero_reg__
 627:quantum/rgblight.c ****             led[i].b = 0;
 740               		.loc 1 627 13 is_stmt 1 discriminator 3 view .LVU169
 627:quantum/rgblight.c ****             led[i].b = 0;
 741               		.loc 1 627 22 is_stmt 0 discriminator 3 view .LVU170
 742 0046 1082      		st Z,__zero_reg__
 628:quantum/rgblight.c **** #    ifdef RGBW
 743               		.loc 1 628 13 is_stmt 1 discriminator 3 view .LVU171
 628:quantum/rgblight.c **** #    ifdef RGBW
 744               		.loc 1 628 22 is_stmt 0 discriminator 3 view .LVU172
 745 0048 1282      		std Z+2,__zero_reg__
 625:quantum/rgblight.c ****             led[i].r = 0;
 746               		.loc 1 625 65 discriminator 3 view .LVU173
 747 004a 2F5F      		subi r18,lo8(-(1))
 748               	.LVL33:
 625:quantum/rgblight.c ****             led[i].r = 0;
 749               		.loc 1 625 65 discriminator 3 view .LVU174
 750 004c 3396      		adiw r30,3
 751 004e 00C0      		rjmp .L38
 752               	.LBE22:
 753               		.cfi_endproc
 754               	.LFE155:
 756               		.section	.text.rgblight_setrgb,"ax",@progbits
 757               	.global	rgblight_setrgb
 759               	rgblight_setrgb:
 760               	.LVL34:
 761               	.LFB145:
 530:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 762               		.loc 1 530 55 is_stmt 1 view -0
 763               		.cfi_startproc
 764               	/* prologue: function */
 765               	/* frame size = 0 */
 766               	/* stack size = 0 */
 767               	.L__stack_usage = 0
 530:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 768               		.loc 1 530 55 is_stmt 0 view .LVU176
 769 0000 A82F      		mov r26,r24
 770 0002 B62F      		mov r27,r22
 531:quantum/rgblight.c ****         return;
 771               		.loc 1 531 5 is_stmt 1 view .LVU177
 531:quantum/rgblight.c ****         return;
 772               		.loc 1 531 25 is_stmt 0 view .LVU178
 773 0004 8091 0000 		lds r24,rgblight_config
 774               	.LVL35:
 531:quantum/rgblight.c ****         return;
 775               		.loc 1 531 8 view .LVU179
 776 0008 80FF      		sbrs r24,0
 777 000a 00C0      		rjmp .L41
 535:quantum/rgblight.c ****         led[i].r = r;
 778               		.loc 1 535 5 is_stmt 1 view .LVU180
 779               	.LBB23:
 535:quantum/rgblight.c ****         led[i].r = r;
 780               		.loc 1 535 10 view .LVU181
 535:quantum/rgblight.c ****         led[i].r = r;
 781               		.loc 1 535 18 is_stmt 0 view .LVU182
 782 000c 2091 0000 		lds r18,effect_start_pos
 783               	.LVL36:
 535:quantum/rgblight.c ****         led[i].r = r;
 784               		.loc 1 535 42 view .LVU183
 785 0010 3091 0000 		lds r19,effect_end_pos
 786 0014 822F      		mov r24,r18
 787 0016 90E0      		ldi r25,0
 788 0018 63E0      		ldi r22,lo8(3)
 789 001a 70E0      		ldi r23,0
 790               	.LVL37:
 535:quantum/rgblight.c ****         led[i].r = r;
 791               		.loc 1 535 42 view .LVU184
 792 001c 0E94 0000 		call __mulhi3
 793 0020 FC01      		movw r30,r24
 794 0022 E050      		subi r30,lo8(-(led))
 795 0024 F040      		sbci r31,hi8(-(led))
 796               	.L43:
 535:quantum/rgblight.c ****         led[i].r = r;
 797               		.loc 1 535 5 discriminator 1 view .LVU185
 798 0026 2317      		cp r18,r19
 799 0028 00F0      		brlo .L44
 535:quantum/rgblight.c ****         led[i].r = r;
 800               		.loc 1 535 5 discriminator 1 view .LVU186
 801               	.LBE23:
 543:quantum/rgblight.c **** }
 802               		.loc 1 543 5 is_stmt 1 view .LVU187
 803 002a 0C94 0000 		jmp rgblight_set
 804               	.LVL38:
 805               	.L44:
 806               	.LBB24:
 536:quantum/rgblight.c ****         led[i].g = g;
 807               		.loc 1 536 9 discriminator 3 view .LVU188
 536:quantum/rgblight.c ****         led[i].g = g;
 808               		.loc 1 536 18 is_stmt 0 discriminator 3 view .LVU189
 809 002e A183      		std Z+1,r26
 537:quantum/rgblight.c ****         led[i].b = b;
 810               		.loc 1 537 9 is_stmt 1 discriminator 3 view .LVU190
 537:quantum/rgblight.c ****         led[i].b = b;
 811               		.loc 1 537 18 is_stmt 0 discriminator 3 view .LVU191
 812 0030 B083      		st Z,r27
 538:quantum/rgblight.c **** #ifdef RGBW
 813               		.loc 1 538 9 is_stmt 1 discriminator 3 view .LVU192
 538:quantum/rgblight.c **** #ifdef RGBW
 814               		.loc 1 538 18 is_stmt 0 discriminator 3 view .LVU193
 815 0032 4283      		std Z+2,r20
 535:quantum/rgblight.c ****         led[i].r = r;
 816               		.loc 1 535 61 discriminator 3 view .LVU194
 817 0034 2F5F      		subi r18,lo8(-(1))
 818               	.LVL39:
 535:quantum/rgblight.c ****         led[i].r = r;
 819               		.loc 1 535 61 discriminator 3 view .LVU195
 820 0036 3396      		adiw r30,3
 821 0038 00C0      		rjmp .L43
 822               	.LVL40:
 823               	.L41:
 824               	/* epilogue start */
 535:quantum/rgblight.c ****         led[i].r = r;
 825               		.loc 1 535 61 discriminator 3 view .LVU196
 826               	.LBE24:
 544:quantum/rgblight.c **** 
 827               		.loc 1 544 1 view .LVU197
 828 003a 0895      		ret
 829               		.cfi_endproc
 830               	.LFE145:
 832               		.section	.text.rgblight_sethsv_noeeprom_old,"ax",@progbits
 833               	.global	rgblight_sethsv_noeeprom_old
 835               	rgblight_sethsv_noeeprom_old:
 836               	.LVL41:
 837               	.LFB134:
 424:quantum/rgblight.c ****     if (rgblight_config.enable) {
 838               		.loc 1 424 74 is_stmt 1 view -0
 839               		.cfi_startproc
 424:quantum/rgblight.c ****     if (rgblight_config.enable) {
 840               		.loc 1 424 74 is_stmt 0 view .LVU199
 841 0000 CF93      		push r28
 842               	.LCFI6:
 843               		.cfi_def_cfa_offset 3
 844               		.cfi_offset 28, -2
 845 0002 DF93      		push r29
 846               	.LCFI7:
 847               		.cfi_def_cfa_offset 4
 848               		.cfi_offset 29, -3
 849 0004 00D0      		rcall .
 850 0006 0F92      		push __tmp_reg__
 851               	.LCFI8:
 852               		.cfi_def_cfa_offset 7
 853 0008 CDB7      		in r28,__SP_L__
 854 000a DEB7      		in r29,__SP_H__
 855               	.LCFI9:
 856               		.cfi_def_cfa_register 28
 857               	/* prologue: function */
 858               	/* frame size = 3 */
 859               	/* stack size = 5 */
 860               	.L__stack_usage = 5
 425:quantum/rgblight.c ****         LED_TYPE tmp_led;
 861               		.loc 1 425 5 is_stmt 1 view .LVU200
 425:quantum/rgblight.c ****         LED_TYPE tmp_led;
 862               		.loc 1 425 9 is_stmt 0 view .LVU201
 863 000c 9091 0000 		lds r25,rgblight_config
 425:quantum/rgblight.c ****         LED_TYPE tmp_led;
 864               		.loc 1 425 8 view .LVU202
 865 0010 90FF      		sbrs r25,0
 866 0012 00C0      		rjmp .L45
 867               	.LBB28:
 426:quantum/rgblight.c ****         sethsv(hue, sat, val, &tmp_led);
 868               		.loc 1 426 9 is_stmt 1 view .LVU203
 427:quantum/rgblight.c ****         rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 869               		.loc 1 427 9 view .LVU204
 870               	.LVL42:
 871               	.LBB29:
 872               	.LBI29:
 125:quantum/rgblight.c **** 
 873               		.loc 1 125 6 view .LVU205
 874               	.LBB30:
 125:quantum/rgblight.c **** 
 875               		.loc 1 125 70 view .LVU206
 876 0014 9E01      		movw r18,r28
 877 0016 2F5F      		subi r18,-1
 878 0018 3F4F      		sbci r19,-1
 879 001a 0E94 0000 		call sethsv_raw
 880               	.LVL43:
 125:quantum/rgblight.c **** 
 881               		.loc 1 125 70 is_stmt 0 view .LVU207
 882               	.LBE30:
 883               	.LBE29:
 428:quantum/rgblight.c ****     }
 884               		.loc 1 428 9 is_stmt 1 view .LVU208
 885 001e 4B81      		ldd r20,Y+3
 886 0020 6981      		ldd r22,Y+1
 887 0022 8A81      		ldd r24,Y+2
 888 0024 0E94 0000 		call rgblight_setrgb
 889               	.LVL44:
 890               	.L45:
 891               	/* epilogue start */
 892               	.LBE28:
 430:quantum/rgblight.c **** 
 893               		.loc 1 430 1 is_stmt 0 view .LVU209
 894 0028 0F90      		pop __tmp_reg__
 895 002a 0F90      		pop __tmp_reg__
 896 002c 0F90      		pop __tmp_reg__
 897 002e DF91      		pop r29
 898 0030 CF91      		pop r28
 899 0032 0895      		ret
 900               		.cfi_endproc
 901               	.LFE134:
 903               		.section	.text.rgblight_effect_breathing,"ax",@progbits
 904               	.global	rgblight_effect_breathing
 906               	rgblight_effect_breathing:
 907               	.LVL45:
 908               	.LFB163:
 760:quantum/rgblight.c **** 
 761:quantum/rgblight.c **** void rgblight_task(void) {
 762:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 763:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 764:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 765:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 766:quantum/rgblight.c ****         animation_status.delta      = delta;
 767:quantum/rgblight.c **** 
 768:quantum/rgblight.c ****         // static light mode, do nothing here
 769:quantum/rgblight.c ****         if (1 == 0) {  // dummy
 770:quantum/rgblight.c ****         }
 771:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_BREATHING
 772:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_BREATHING) {
 773:quantum/rgblight.c ****             // breathing mode
 774:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_BREATHING_INTERVALS[delta], 1, 100);
 775:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 776:quantum/rgblight.c ****         }
 777:quantum/rgblight.c **** #    endif
 778:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 779:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_MOOD) {
 780:quantum/rgblight.c ****             // rainbow mood mode
 781:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_RAINBOW_MOOD_INTERVALS[delta], 5, 100);
 782:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 783:quantum/rgblight.c ****         }
 784:quantum/rgblight.c **** #    endif
 785:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 786:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_SWIRL) {
 787:quantum/rgblight.c ****             // rainbow swirl mode
 788:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_RAINBOW_SWIRL_INTERVALS[delta / 2], 1, 100);
 789:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 790:quantum/rgblight.c ****         }
 791:quantum/rgblight.c **** #    endif
 792:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_SNAKE
 793:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_SNAKE) {
 794:quantum/rgblight.c ****             // snake mode
 795:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_SNAKE_INTERVALS[delta / 2], 1, 200);
 796:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 797:quantum/rgblight.c ****         }
 798:quantum/rgblight.c **** #    endif
 799:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_KNIGHT
 800:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_KNIGHT) {
 801:quantum/rgblight.c ****             // knight mode
 802:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_KNIGHT_INTERVALS[delta], 5, 100);
 803:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 804:quantum/rgblight.c ****         }
 805:quantum/rgblight.c **** #    endif
 806:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_CHRISTMAS
 807:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_CHRISTMAS) {
 808:quantum/rgblight.c ****             // christmas mode
 809:quantum/rgblight.c ****             interval_time = RGBLIGHT_EFFECT_CHRISTMAS_INTERVAL;
 810:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_christmas;
 811:quantum/rgblight.c ****         }
 812:quantum/rgblight.c **** #    endif
 813:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RGB_TEST
 814:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RGB_TEST) {
 815:quantum/rgblight.c ****             // RGB test mode
 816:quantum/rgblight.c ****             interval_time = pgm_read_word(&RGBLED_RGBTEST_INTERVALS[0]);
 817:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 818:quantum/rgblight.c ****         }
 819:quantum/rgblight.c **** #    endif
 820:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_ALTERNATING
 821:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_ALTERNATING) {
 822:quantum/rgblight.c ****             interval_time = 500;
 823:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_alternating;
 824:quantum/rgblight.c ****         }
 825:quantum/rgblight.c **** #    endif
 826:quantum/rgblight.c ****         if (animation_status.restart) {
 827:quantum/rgblight.c ****             animation_status.restart    = false;
 828:quantum/rgblight.c ****             animation_status.last_timer = timer_read() - interval_time - 1;
 829:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 830:quantum/rgblight.c ****         }
 831:quantum/rgblight.c ****         if (timer_elapsed(animation_status.last_timer) >= interval_time) {
 832:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 833:quantum/rgblight.c ****             static uint16_t report_last_timer = 0;
 834:quantum/rgblight.c ****             static bool     tick_flag         = false;
 835:quantum/rgblight.c ****             uint16_t        oldpos16;
 836:quantum/rgblight.c ****             if (tick_flag) {
 837:quantum/rgblight.c ****                 tick_flag = false;
 838:quantum/rgblight.c ****                 if (timer_elapsed(report_last_timer) >= 30000) {
 839:quantum/rgblight.c ****                     report_last_timer = timer_read();
 840:quantum/rgblight.c ****                     dprintf("rgblight animation tick report to slave\n");
 841:quantum/rgblight.c ****                     RGBLIGHT_SPLIT_ANIMATION_TICK;
 842:quantum/rgblight.c ****                 }
 843:quantum/rgblight.c ****             }
 844:quantum/rgblight.c ****             oldpos16 = animation_status.pos16;
 845:quantum/rgblight.c **** #    endif
 846:quantum/rgblight.c ****             animation_status.last_timer += interval_time;
 847:quantum/rgblight.c ****             effect_func(&animation_status);
 848:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 849:quantum/rgblight.c ****             if (animation_status.pos16 == 0 && oldpos16 != 0) {
 850:quantum/rgblight.c ****                 tick_flag = true;
 851:quantum/rgblight.c ****             }
 852:quantum/rgblight.c **** #    endif
 853:quantum/rgblight.c ****         }
 854:quantum/rgblight.c ****     }
 855:quantum/rgblight.c **** }
 856:quantum/rgblight.c **** 
 857:quantum/rgblight.c **** #endif /* RGBLIGHT_USE_TIMER */
 858:quantum/rgblight.c **** 
 859:quantum/rgblight.c **** // Effects
 860:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
 861:quantum/rgblight.c **** 
 862:quantum/rgblight.c **** #    ifndef RGBLIGHT_EFFECT_BREATHE_CENTER
 863:quantum/rgblight.c **** #        ifndef RGBLIGHT_BREATHE_TABLE_SIZE
 864:quantum/rgblight.c **** #            define RGBLIGHT_BREATHE_TABLE_SIZE 256  // 256 or 128 or 64
 865:quantum/rgblight.c **** #        endif
 866:quantum/rgblight.c **** #        include <rgblight_breathe_table.h>
 867:quantum/rgblight.c **** #    endif
 868:quantum/rgblight.c **** 
 869:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_BREATHING_INTERVALS[] PROGMEM = {30, 20, 10, 5};
 870:quantum/rgblight.c **** 
 871:quantum/rgblight.c **** void rgblight_effect_breathing(animation_status_t *anim) {
 909               		.loc 1 871 58 is_stmt 1 view -0
 910               		.cfi_startproc
 911               		.loc 1 871 58 is_stmt 0 view .LVU211
 912 0000 CF93      		push r28
 913               	.LCFI10:
 914               		.cfi_def_cfa_offset 3
 915               		.cfi_offset 28, -2
 916 0002 DF93      		push r29
 917               	.LCFI11:
 918               		.cfi_def_cfa_offset 4
 919               		.cfi_offset 29, -3
 920               	/* prologue: function */
 921               	/* frame size = 0 */
 922               	/* stack size = 2 */
 923               	.L__stack_usage = 2
 924 0004 EC01      		movw r28,r24
 872:quantum/rgblight.c ****     float val;
 925               		.loc 1 872 5 is_stmt 1 view .LVU212
 873:quantum/rgblight.c **** 
 874:quantum/rgblight.c ****     // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
 875:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_BREATHE_TABLE
 876:quantum/rgblight.c ****     val = pgm_read_byte(&rgblight_effect_breathe_table[anim->pos / table_scale]);
 926               		.loc 1 876 5 view .LVU213
 927               	.LBB31:
 928               		.loc 1 876 11 view .LVU214
 929               	.LVL46:
 930               		.loc 1 876 11 view .LVU215
 931               		.loc 1 876 11 view .LVU216
 932 0006 EC81      		ldd r30,Y+4
 933 0008 F0E0      		ldi r31,0
 934 000a E050      		subi r30,lo8(-(rgblight_effect_breathe_table))
 935 000c F040      		sbci r31,hi8(-(rgblight_effect_breathe_table))
 936               	/* #APP */
 937               	 ;  876 "quantum/rgblight.c" 1
 938 000e 4491      		lpm r20, Z
 939               		
 940               	 ;  0 "" 2
 941               	.LVL47:
 942               		.loc 1 876 11 view .LVU217
 943               		.loc 1 876 11 is_stmt 0 view .LVU218
 944               	/* #NOAPP */
 945               	.LBE31:
 877:quantum/rgblight.c **** #    else
 878:quantum/rgblight.c ****     val = (exp(sin((anim->pos / 255.0) * M_PI)) - RGBLIGHT_EFFECT_BREATHE_CENTER / M_E) * (RGBLIGHT
 879:quantum/rgblight.c **** #    endif
 880:quantum/rgblight.c ****     rgblight_sethsv_noeeprom_old(rgblight_config.hue, rgblight_config.sat, val);
 946               		.loc 1 880 5 is_stmt 1 view .LVU219
 947 0010 E0E0      		ldi r30,lo8(rgblight_config)
 948 0012 F0E0      		ldi r31,hi8(rgblight_config)
 949 0014 6281      		ldd r22,Z+2
 950 0016 8181      		ldd r24,Z+1
 951               	.LVL48:
 952               		.loc 1 880 5 is_stmt 0 view .LVU220
 953 0018 0E94 0000 		call rgblight_sethsv_noeeprom_old
 954               	.LVL49:
 881:quantum/rgblight.c ****     anim->pos = (anim->pos + 1);
 955               		.loc 1 881 5 is_stmt 1 view .LVU221
 956               		.loc 1 881 28 is_stmt 0 view .LVU222
 957 001c 8C81      		ldd r24,Y+4
 958 001e 8F5F      		subi r24,lo8(-(1))
 959               		.loc 1 881 15 view .LVU223
 960 0020 8C83      		std Y+4,r24
 961               	/* epilogue start */
 882:quantum/rgblight.c **** }
 962               		.loc 1 882 1 view .LVU224
 963 0022 DF91      		pop r29
 964 0024 CF91      		pop r28
 965               	.LVL50:
 966               		.loc 1 882 1 view .LVU225
 967 0026 0895      		ret
 968               		.cfi_endproc
 969               	.LFE163:
 971               		.section	.text.rgblight_effect_rainbow_mood,"ax",@progbits
 972               	.global	rgblight_effect_rainbow_mood
 974               	rgblight_effect_rainbow_mood:
 975               	.LVL51:
 976               	.LFB164:
 883:quantum/rgblight.c **** #endif
 884:quantum/rgblight.c **** 
 885:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 886:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_RAINBOW_MOOD_INTERVALS[] PROGMEM = {120, 60, 30};
 887:quantum/rgblight.c **** 
 888:quantum/rgblight.c **** void rgblight_effect_rainbow_mood(animation_status_t *anim) {
 977               		.loc 1 888 61 is_stmt 1 view -0
 978               		.cfi_startproc
 979               		.loc 1 888 61 is_stmt 0 view .LVU227
 980 0000 CF93      		push r28
 981               	.LCFI12:
 982               		.cfi_def_cfa_offset 3
 983               		.cfi_offset 28, -2
 984 0002 DF93      		push r29
 985               	.LCFI13:
 986               		.cfi_def_cfa_offset 4
 987               		.cfi_offset 29, -3
 988               	/* prologue: function */
 989               	/* frame size = 0 */
 990               	/* stack size = 2 */
 991               	.L__stack_usage = 2
 992 0004 EC01      		movw r28,r24
 889:quantum/rgblight.c ****     rgblight_sethsv_noeeprom_old(anim->current_hue, rgblight_config.sat, rgblight_config.val);
 993               		.loc 1 889 5 is_stmt 1 view .LVU228
 994 0006 E0E0      		ldi r30,lo8(rgblight_config)
 995 0008 F0E0      		ldi r31,hi8(rgblight_config)
 996 000a 4381      		ldd r20,Z+3
 997 000c 6281      		ldd r22,Z+2
 998 000e 8C81      		ldd r24,Y+4
 999               	.LVL52:
 1000               		.loc 1 889 5 is_stmt 0 view .LVU229
 1001 0010 0E94 0000 		call rgblight_sethsv_noeeprom_old
 1002               	.LVL53:
 890:quantum/rgblight.c ****     anim->current_hue++;
 1003               		.loc 1 890 5 is_stmt 1 view .LVU230
 1004               		.loc 1 890 22 is_stmt 0 view .LVU231
 1005 0014 8C81      		ldd r24,Y+4
 1006 0016 8F5F      		subi r24,lo8(-(1))
 1007 0018 8C83      		std Y+4,r24
 1008               	/* epilogue start */
 891:quantum/rgblight.c **** }
 1009               		.loc 1 891 1 view .LVU232
 1010 001a DF91      		pop r29
 1011 001c CF91      		pop r28
 1012               	.LVL54:
 1013               		.loc 1 891 1 view .LVU233
 1014 001e 0895      		ret
 1015               		.cfi_endproc
 1016               	.LFE164:
 1018               		.section	.text.rgblight_effect_rgbtest,"ax",@progbits
 1019               	.global	rgblight_effect_rgbtest
 1021               	rgblight_effect_rgbtest:
 1022               	.LVL55:
 1023               	.LFB169:
 892:quantum/rgblight.c **** #endif
 893:quantum/rgblight.c **** 
 894:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 895:quantum/rgblight.c **** #    ifndef RGBLIGHT_RAINBOW_SWIRL_RANGE
 896:quantum/rgblight.c **** #        define RGBLIGHT_RAINBOW_SWIRL_RANGE 255
 897:quantum/rgblight.c **** #    endif
 898:quantum/rgblight.c **** 
 899:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_RAINBOW_SWIRL_INTERVALS[] PROGMEM = {100, 50, 20};
 900:quantum/rgblight.c **** 
 901:quantum/rgblight.c **** void rgblight_effect_rainbow_swirl(animation_status_t *anim) {
 902:quantum/rgblight.c ****     uint8_t hue;
 903:quantum/rgblight.c ****     uint8_t i;
 904:quantum/rgblight.c **** 
 905:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
 906:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 907:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 908:quantum/rgblight.c ****     }
 909:quantum/rgblight.c ****     rgblight_set();
 910:quantum/rgblight.c **** 
 911:quantum/rgblight.c ****     if (anim->delta % 2) {
 912:quantum/rgblight.c ****         anim->current_hue++;
 913:quantum/rgblight.c ****     } else {
 914:quantum/rgblight.c ****         anim->current_hue--;
 915:quantum/rgblight.c ****     }
 916:quantum/rgblight.c **** }
 917:quantum/rgblight.c **** #endif
 918:quantum/rgblight.c **** 
 919:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_SNAKE
 920:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_SNAKE_INTERVALS[] PROGMEM = {100, 50, 20};
 921:quantum/rgblight.c **** 
 922:quantum/rgblight.c **** void rgblight_effect_snake(animation_status_t *anim) {
 923:quantum/rgblight.c ****     static uint8_t pos = 0;
 924:quantum/rgblight.c ****     uint8_t        i, j;
 925:quantum/rgblight.c ****     int8_t         k;
 926:quantum/rgblight.c ****     int8_t         increment = 1;
 927:quantum/rgblight.c **** 
 928:quantum/rgblight.c ****     if (anim->delta % 2) {
 929:quantum/rgblight.c ****         increment = -1;
 930:quantum/rgblight.c ****     }
 931:quantum/rgblight.c **** 
 932:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 933:quantum/rgblight.c ****     if (anim->pos == 0) {  // restart signal
 934:quantum/rgblight.c ****         if (increment == 1) {
 935:quantum/rgblight.c ****             pos = effect_num_leds - 1;
 936:quantum/rgblight.c ****         } else {
 937:quantum/rgblight.c ****             pos = 0;
 938:quantum/rgblight.c ****         }
 939:quantum/rgblight.c ****         anim->pos = 1;
 940:quantum/rgblight.c ****     }
 941:quantum/rgblight.c **** #    endif
 942:quantum/rgblight.c **** 
 943:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
 944:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 945:quantum/rgblight.c ****         ledp->r        = 0;
 946:quantum/rgblight.c ****         ledp->g        = 0;
 947:quantum/rgblight.c ****         ledp->b        = 0;
 948:quantum/rgblight.c **** #    ifdef RGBW
 949:quantum/rgblight.c ****         ledp->w = 0;
 950:quantum/rgblight.c **** #    endif
 951:quantum/rgblight.c ****         for (j = 0; j < RGBLIGHT_EFFECT_SNAKE_LENGTH; j++) {
 952:quantum/rgblight.c ****             k = pos + j * increment;
 953:quantum/rgblight.c ****             if (k > RGBLED_NUM) {
 954:quantum/rgblight.c ****                 k = k % RGBLED_NUM;
 955:quantum/rgblight.c ****             }
 956:quantum/rgblight.c ****             if (k < 0) {
 957:quantum/rgblight.c ****                 k = k + effect_num_leds;
 958:quantum/rgblight.c ****             }
 959:quantum/rgblight.c ****             if (i == k) {
 960:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
 961:quantum/rgblight.c ****             }
 962:quantum/rgblight.c ****         }
 963:quantum/rgblight.c ****     }
 964:quantum/rgblight.c ****     rgblight_set();
 965:quantum/rgblight.c ****     if (increment == 1) {
 966:quantum/rgblight.c ****         if (pos - 1 < 0) {
 967:quantum/rgblight.c ****             pos = effect_num_leds - 1;
 968:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 969:quantum/rgblight.c ****             anim->pos = 0;
 970:quantum/rgblight.c **** #    endif
 971:quantum/rgblight.c ****         } else {
 972:quantum/rgblight.c ****             pos -= 1;
 973:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 974:quantum/rgblight.c ****             anim->pos = 1;
 975:quantum/rgblight.c **** #    endif
 976:quantum/rgblight.c ****         }
 977:quantum/rgblight.c ****     } else {
 978:quantum/rgblight.c ****         pos = (pos + 1) % effect_num_leds;
 979:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 980:quantum/rgblight.c ****         anim->pos = pos;
 981:quantum/rgblight.c **** #    endif
 982:quantum/rgblight.c ****     }
 983:quantum/rgblight.c **** }
 984:quantum/rgblight.c **** #endif
 985:quantum/rgblight.c **** 
 986:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_KNIGHT
 987:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_KNIGHT_INTERVALS[] PROGMEM = {127, 63, 31};
 988:quantum/rgblight.c **** 
 989:quantum/rgblight.c **** void rgblight_effect_knight(animation_status_t *anim) {
 990:quantum/rgblight.c ****     static int8_t low_bound  = 0;
 991:quantum/rgblight.c ****     static int8_t high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
 992:quantum/rgblight.c ****     static int8_t increment  = 1;
 993:quantum/rgblight.c ****     uint8_t       i, cur;
 994:quantum/rgblight.c **** 
 995:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 996:quantum/rgblight.c ****     if (anim->pos == 0) {  // restart signal
 997:quantum/rgblight.c ****         anim->pos  = 1;
 998:quantum/rgblight.c ****         low_bound  = 0;
 999:quantum/rgblight.c ****         high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
1000:quantum/rgblight.c ****         increment  = 1;
1001:quantum/rgblight.c ****     }
1002:quantum/rgblight.c **** #    endif
1003:quantum/rgblight.c ****     // Set all the LEDs to 0
1004:quantum/rgblight.c ****     for (i = effect_start_pos; i < effect_end_pos; i++) {
1005:quantum/rgblight.c ****         led[i].r = 0;
1006:quantum/rgblight.c ****         led[i].g = 0;
1007:quantum/rgblight.c ****         led[i].b = 0;
1008:quantum/rgblight.c **** #    ifdef RGBW
1009:quantum/rgblight.c ****         led[i].w = 0;
1010:quantum/rgblight.c **** #    endif
1011:quantum/rgblight.c ****     }
1012:quantum/rgblight.c ****     // Determine which LEDs should be lit up
1013:quantum/rgblight.c ****     for (i = 0; i < RGBLIGHT_EFFECT_KNIGHT_LED_NUM; i++) {
1014:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
1015:quantum/rgblight.c **** 
1016:quantum/rgblight.c ****         if (i >= low_bound && i <= high_bound) {
1017:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
1018:quantum/rgblight.c ****         } else {
1019:quantum/rgblight.c ****             led[cur].r = 0;
1020:quantum/rgblight.c ****             led[cur].g = 0;
1021:quantum/rgblight.c ****             led[cur].b = 0;
1022:quantum/rgblight.c **** #    ifdef RGBW
1023:quantum/rgblight.c ****             led[cur].w = 0;
1024:quantum/rgblight.c **** #    endif
1025:quantum/rgblight.c ****         }
1026:quantum/rgblight.c ****     }
1027:quantum/rgblight.c ****     rgblight_set();
1028:quantum/rgblight.c **** 
1029:quantum/rgblight.c ****     // Move from low_bound to high_bound changing the direction we increment each
1030:quantum/rgblight.c ****     // time a boundary is hit.
1031:quantum/rgblight.c ****     low_bound += increment;
1032:quantum/rgblight.c ****     high_bound += increment;
1033:quantum/rgblight.c **** 
1034:quantum/rgblight.c ****     if (high_bound <= 0 || low_bound >= RGBLIGHT_EFFECT_KNIGHT_LED_NUM - 1) {
1035:quantum/rgblight.c ****         increment = -increment;
1036:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1037:quantum/rgblight.c ****         if (increment == 1) {
1038:quantum/rgblight.c ****             anim->pos = 0;
1039:quantum/rgblight.c ****         }
1040:quantum/rgblight.c **** #    endif
1041:quantum/rgblight.c ****     }
1042:quantum/rgblight.c **** }
1043:quantum/rgblight.c **** #endif
1044:quantum/rgblight.c **** 
1045:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_CHRISTMAS
1046:quantum/rgblight.c **** void rgblight_effect_christmas(animation_status_t *anim) {
1047:quantum/rgblight.c ****     uint8_t hue;
1048:quantum/rgblight.c ****     uint8_t i;
1049:quantum/rgblight.c **** 
1050:quantum/rgblight.c ****     anim->current_offset = (anim->current_offset + 1) % 2;
1051:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
1052:quantum/rgblight.c ****         hue = 0 + ((i / RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
1053:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
1054:quantum/rgblight.c ****     }
1055:quantum/rgblight.c ****     rgblight_set();
1056:quantum/rgblight.c **** }
1057:quantum/rgblight.c **** #endif
1058:quantum/rgblight.c **** 
1059:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RGB_TEST
1060:quantum/rgblight.c **** __attribute__((weak)) const uint16_t RGBLED_RGBTEST_INTERVALS[] PROGMEM = {1024};
1061:quantum/rgblight.c **** 
1062:quantum/rgblight.c **** void rgblight_effect_rgbtest(animation_status_t *anim) {
 1024               		.loc 1 1062 56 is_stmt 1 view -0
 1025               		.cfi_startproc
 1026               		.loc 1 1062 56 is_stmt 0 view .LVU235
 1027 0000 0F93      		push r16
 1028               	.LCFI14:
 1029               		.cfi_def_cfa_offset 3
 1030               		.cfi_offset 16, -2
 1031 0002 1F93      		push r17
 1032               	.LCFI15:
 1033               		.cfi_def_cfa_offset 4
 1034               		.cfi_offset 17, -3
 1035 0004 CF93      		push r28
 1036               	.LCFI16:
 1037               		.cfi_def_cfa_offset 5
 1038               		.cfi_offset 28, -4
 1039 0006 DF93      		push r29
 1040               	.LCFI17:
 1041               		.cfi_def_cfa_offset 6
 1042               		.cfi_offset 29, -5
 1043 0008 00D0      		rcall .
 1044 000a 0F92      		push __tmp_reg__
 1045               	.LCFI18:
 1046               		.cfi_def_cfa_offset 9
 1047 000c CDB7      		in r28,__SP_L__
 1048 000e DEB7      		in r29,__SP_H__
 1049               	.LCFI19:
 1050               		.cfi_def_cfa_register 28
 1051               	/* prologue: function */
 1052               	/* frame size = 3 */
 1053               	/* stack size = 7 */
 1054               	.L__stack_usage = 7
 1055 0010 8C01      		movw r16,r24
1063:quantum/rgblight.c ****     static uint8_t maxval = 0;
 1056               		.loc 1 1063 5 is_stmt 1 view .LVU236
1064:quantum/rgblight.c ****     uint8_t        g;
 1057               		.loc 1 1064 5 view .LVU237
1065:quantum/rgblight.c ****     uint8_t        r;
 1058               		.loc 1 1065 5 view .LVU238
1066:quantum/rgblight.c ****     uint8_t        b;
 1059               		.loc 1 1066 5 view .LVU239
1067:quantum/rgblight.c **** 
1068:quantum/rgblight.c ****     if (maxval == 0) {
 1060               		.loc 1 1068 5 view .LVU240
 1061               		.loc 1 1068 8 is_stmt 0 view .LVU241
 1062 0012 8091 0000 		lds r24,maxval.3251
 1063               	.LVL56:
 1064               		.loc 1 1068 8 view .LVU242
 1065 0016 8111      		cpse r24,__zero_reg__
 1066 0018 00C0      		rjmp .L53
 1067               	.LBB35:
1069:quantum/rgblight.c ****         LED_TYPE tmp_led;
 1068               		.loc 1 1069 9 is_stmt 1 view .LVU243
1070:quantum/rgblight.c ****         sethsv(0, 255, RGBLIGHT_LIMIT_VAL, &tmp_led);
 1069               		.loc 1 1070 9 view .LVU244
 1070               	.LVL57:
 1071               	.LBB36:
 1072               	.LBI36:
 125:quantum/rgblight.c **** 
 1073               		.loc 1 125 6 view .LVU245
 1074               	.LBB37:
 125:quantum/rgblight.c **** 
 1075               		.loc 1 125 70 view .LVU246
 1076 001a 9E01      		movw r18,r28
 1077 001c 2F5F      		subi r18,-1
 1078 001e 3F4F      		sbci r19,-1
 1079 0020 4FEF      		ldi r20,lo8(-1)
 1080 0022 6FEF      		ldi r22,lo8(-1)
 1081 0024 0E94 0000 		call sethsv_raw
 1082               	.LVL58:
 125:quantum/rgblight.c **** 
 1083               		.loc 1 125 70 is_stmt 0 view .LVU247
 1084               	.LBE37:
 1085               	.LBE36:
1071:quantum/rgblight.c ****         maxval = tmp_led.r;
 1086               		.loc 1 1071 9 is_stmt 1 view .LVU248
 1087               		.loc 1 1071 16 is_stmt 0 view .LVU249
 1088 0028 8A81      		ldd r24,Y+2
 1089 002a 8093 0000 		sts maxval.3251,r24
 1090               	.L53:
 1091               	.LBE35:
1072:quantum/rgblight.c ****     }
1073:quantum/rgblight.c ****     g = r = b = 0;
 1092               		.loc 1 1073 5 is_stmt 1 view .LVU250
 1093               	.LVL59:
1074:quantum/rgblight.c ****     switch (anim->pos) {
 1094               		.loc 1 1074 5 view .LVU251
 1095               		.loc 1 1074 17 is_stmt 0 view .LVU252
 1096 002e F801      		movw r30,r16
 1097 0030 6481      		ldd r22,Z+4
 1098               		.loc 1 1074 5 view .LVU253
 1099 0032 6130      		cpi r22,lo8(1)
 1100 0034 01F0      		breq .L54
1075:quantum/rgblight.c ****         case 0:
1076:quantum/rgblight.c ****             r = maxval;
 1101               		.loc 1 1076 15 view .LVU254
 1102 0036 8091 0000 		lds r24,maxval.3251
 1103               	.LVL60:
1077:quantum/rgblight.c ****             break;
 1104               		.loc 1 1077 13 is_stmt 1 view .LVU255
1073:quantum/rgblight.c ****     switch (anim->pos) {
 1105               		.loc 1 1073 15 is_stmt 0 view .LVU256
 1106 003a 40E0      		ldi r20,0
1074:quantum/rgblight.c ****         case 0:
 1107               		.loc 1 1074 5 view .LVU257
 1108 003c 6623      		tst r22
 1109 003e 01F0      		breq .L57
1073:quantum/rgblight.c ****     switch (anim->pos) {
 1110               		.loc 1 1073 15 view .LVU258
 1111 0040 40E0      		ldi r20,0
1074:quantum/rgblight.c ****         case 0:
 1112               		.loc 1 1074 5 view .LVU259
 1113 0042 6230      		cpi r22,lo8(2)
 1114 0044 01F4      		brne .L58
1078:quantum/rgblight.c ****         case 1:
1079:quantum/rgblight.c ****             g = maxval;
1080:quantum/rgblight.c ****             break;
1081:quantum/rgblight.c ****         case 2:
1082:quantum/rgblight.c ****             b = maxval;
 1115               		.loc 1 1082 13 is_stmt 1 view .LVU260
 1116               		.loc 1 1082 15 is_stmt 0 view .LVU261
 1117 0046 4091 0000 		lds r20,maxval.3251
 1118               	.L58:
 1119               	.LVL61:
1083:quantum/rgblight.c ****             break;
 1120               		.loc 1 1083 13 is_stmt 1 view .LVU262
1073:quantum/rgblight.c ****     switch (anim->pos) {
 1121               		.loc 1 1073 11 is_stmt 0 view .LVU263
 1122 004a 80E0      		ldi r24,0
 1123               	.LVL62:
1073:quantum/rgblight.c ****     switch (anim->pos) {
 1124               		.loc 1 1073 7 view .LVU264
 1125 004c 60E0      		ldi r22,0
 1126               		.loc 1 1083 13 view .LVU265
 1127 004e 00C0      		rjmp .L57
 1128               	.LVL63:
 1129               	.L54:
1079:quantum/rgblight.c ****             break;
 1130               		.loc 1 1079 13 is_stmt 1 view .LVU266
1079:quantum/rgblight.c ****             break;
 1131               		.loc 1 1079 15 is_stmt 0 view .LVU267
 1132 0050 6091 0000 		lds r22,maxval.3251
 1133               	.LVL64:
1080:quantum/rgblight.c ****         case 2:
 1134               		.loc 1 1080 13 is_stmt 1 view .LVU268
1073:quantum/rgblight.c ****     switch (anim->pos) {
 1135               		.loc 1 1073 15 is_stmt 0 view .LVU269
 1136 0054 40E0      		ldi r20,0
1073:quantum/rgblight.c ****     switch (anim->pos) {
 1137               		.loc 1 1073 11 view .LVU270
 1138 0056 80E0      		ldi r24,0
 1139               	.LVL65:
 1140               	.L57:
1084:quantum/rgblight.c ****     }
1085:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 1141               		.loc 1 1085 5 is_stmt 1 view .LVU271
 1142 0058 0E94 0000 		call rgblight_setrgb
 1143               	.LVL66:
1086:quantum/rgblight.c ****     anim->pos = (anim->pos + 1) % 3;
 1144               		.loc 1 1086 5 view .LVU272
 1145               		.loc 1 1086 22 is_stmt 0 view .LVU273
 1146 005c F801      		movw r30,r16
 1147 005e 8481      		ldd r24,Z+4
 1148 0060 90E0      		ldi r25,0
 1149               		.loc 1 1086 28 view .LVU274
 1150 0062 0196      		adiw r24,1
 1151               		.loc 1 1086 33 view .LVU275
 1152 0064 63E0      		ldi r22,lo8(3)
 1153 0066 70E0      		ldi r23,0
 1154 0068 0E94 0000 		call __divmodhi4
 1155               		.loc 1 1086 15 view .LVU276
 1156 006c 8483      		std Z+4,r24
 1157               	/* epilogue start */
1087:quantum/rgblight.c **** }
 1158               		.loc 1 1087 1 view .LVU277
 1159 006e 0F90      		pop __tmp_reg__
 1160 0070 0F90      		pop __tmp_reg__
 1161 0072 0F90      		pop __tmp_reg__
 1162 0074 DF91      		pop r29
 1163 0076 CF91      		pop r28
 1164 0078 1F91      		pop r17
 1165 007a 0F91      		pop r16
 1166               	.LVL67:
 1167               		.loc 1 1087 1 view .LVU278
 1168 007c 0895      		ret
 1169               		.cfi_endproc
 1170               	.LFE169:
 1172               		.section	.text.rgblight_sethsv_eeprom_helper,"ax",@progbits
 1173               	.global	rgblight_sethsv_eeprom_helper
 1175               	rgblight_sethsv_eeprom_helper:
 1176               	.LVL68:
 1177               	.LFB135:
 432:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1178               		.loc 1 432 97 is_stmt 1 view -0
 1179               		.cfi_startproc
 432:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1180               		.loc 1 432 97 is_stmt 0 view .LVU280
 1181 0000 AF92      		push r10
 1182               	.LCFI20:
 1183               		.cfi_def_cfa_offset 3
 1184               		.cfi_offset 10, -2
 1185 0002 BF92      		push r11
 1186               	.LCFI21:
 1187               		.cfi_def_cfa_offset 4
 1188               		.cfi_offset 11, -3
 1189 0004 CF92      		push r12
 1190               	.LCFI22:
 1191               		.cfi_def_cfa_offset 5
 1192               		.cfi_offset 12, -4
 1193 0006 DF92      		push r13
 1194               	.LCFI23:
 1195               		.cfi_def_cfa_offset 6
 1196               		.cfi_offset 13, -5
 1197 0008 EF92      		push r14
 1198               	.LCFI24:
 1199               		.cfi_def_cfa_offset 7
 1200               		.cfi_offset 14, -6
 1201 000a FF92      		push r15
 1202               	.LCFI25:
 1203               		.cfi_def_cfa_offset 8
 1204               		.cfi_offset 15, -7
 1205 000c 0F93      		push r16
 1206               	.LCFI26:
 1207               		.cfi_def_cfa_offset 9
 1208               		.cfi_offset 16, -8
 1209 000e 1F93      		push r17
 1210               	.LCFI27:
 1211               		.cfi_def_cfa_offset 10
 1212               		.cfi_offset 17, -9
 1213 0010 CF93      		push r28
 1214               	.LCFI28:
 1215               		.cfi_def_cfa_offset 11
 1216               		.cfi_offset 28, -10
 1217 0012 DF93      		push r29
 1218               	.LCFI29:
 1219               		.cfi_def_cfa_offset 12
 1220               		.cfi_offset 29, -11
 1221 0014 00D0      		rcall .
 1222 0016 0F92      		push __tmp_reg__
 1223               	.LCFI30:
 1224               		.cfi_def_cfa_offset 15
 1225 0018 CDB7      		in r28,__SP_L__
 1226 001a DEB7      		in r29,__SP_H__
 1227               	.LCFI31:
 1228               		.cfi_def_cfa_register 28
 1229               	/* prologue: function */
 1230               	/* frame size = 3 */
 1231               	/* stack size = 13 */
 1232               	.L__stack_usage = 13
 1233 001c 182F      		mov r17,r24
 1234 001e F62E      		mov r15,r22
 1235 0020 042F      		mov r16,r20
 1236 0022 E22E      		mov r14,r18
 433:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1237               		.loc 1 433 5 is_stmt 1 view .LVU281
 433:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1238               		.loc 1 433 9 is_stmt 0 view .LVU282
 1239 0024 9091 0000 		lds r25,rgblight_config
 433:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1240               		.loc 1 433 8 view .LVU283
 1241 0028 90FF      		sbrs r25,0
 1242 002a 00C0      		rjmp .L59
 434:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1243               		.loc 1 434 9 is_stmt 1 view .LVU284
 434:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1244               		.loc 1 434 68 is_stmt 0 view .LVU285
 1245 002c E92F      		mov r30,r25
 1246 002e E695      		lsr r30
 1247 0030 AE2F      		mov r26,r30
 1248 0032 B0E0      		ldi r27,0
 434:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1249               		.loc 1 434 52 view .LVU286
 1250 0034 A050      		subi r26,lo8(-(mode_base_table))
 1251 0036 B040      		sbci r27,hi8(-(mode_base_table))
 1252 0038 8C91      		ld r24,X
 1253               	.LVL69:
 434:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1254               		.loc 1 434 35 view .LVU287
 1255 003a 8093 0000 		sts rgblight_status,r24
 435:quantum/rgblight.c ****             // same static color
 1256               		.loc 1 435 9 is_stmt 1 view .LVU288
 435:quantum/rgblight.c ****             // same static color
 1257               		.loc 1 435 34 is_stmt 0 view .LVU289
 1258 003e 9E7F      		andi r25,lo8(-2)
 435:quantum/rgblight.c ****             // same static color
 1259               		.loc 1 435 12 view .LVU290
 1260 0040 9230      		cpi r25,lo8(2)
 1261 0042 01F4      		brne .L62
 1262               	.LBB47:
 437:quantum/rgblight.c ****             sethsv(hue, sat, val, &tmp_led);
 1263               		.loc 1 437 13 is_stmt 1 view .LVU291
 438:quantum/rgblight.c ****             rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 1264               		.loc 1 438 13 view .LVU292
 1265               	.LVL70:
 1266               	.LBB48:
 1267               	.LBI48:
 125:quantum/rgblight.c **** 
 1268               		.loc 1 125 6 view .LVU293
 1269               	.LBB49:
 125:quantum/rgblight.c **** 
 1270               		.loc 1 125 70 view .LVU294
 1271 0044 9E01      		movw r18,r28
 1272               	.LVL71:
 125:quantum/rgblight.c **** 
 1273               		.loc 1 125 70 is_stmt 0 view .LVU295
 1274 0046 2F5F      		subi r18,-1
 1275 0048 3F4F      		sbci r19,-1
 1276 004a 812F      		mov r24,r17
 1277 004c 0E94 0000 		call sethsv_raw
 1278               	.LVL72:
 125:quantum/rgblight.c **** 
 1279               		.loc 1 125 70 view .LVU296
 1280               	.LBE49:
 1281               	.LBE48:
 439:quantum/rgblight.c ****         } else {
 1282               		.loc 1 439 13 is_stmt 1 view .LVU297
 1283 0050 4B81      		ldd r20,Y+3
 1284 0052 6981      		ldd r22,Y+1
 1285 0054 8A81      		ldd r24,Y+2
 1286 0056 0E94 0000 		call rgblight_setrgb
 1287               	.LVL73:
 1288               	.L63:
 439:quantum/rgblight.c ****         } else {
 1289               		.loc 1 439 13 is_stmt 0 view .LVU298
 1290               	.LBE47:
 492:quantum/rgblight.c ****         rgblight_config.sat = sat;
 1291               		.loc 1 492 9 is_stmt 1 view .LVU299
 492:quantum/rgblight.c ****         rgblight_config.sat = sat;
 1292               		.loc 1 492 29 is_stmt 0 view .LVU300
 1293 005a 1093 0000 		sts rgblight_config+1,r17
 493:quantum/rgblight.c ****         rgblight_config.val = val;
 1294               		.loc 1 493 9 is_stmt 1 view .LVU301
 493:quantum/rgblight.c ****         rgblight_config.val = val;
 1295               		.loc 1 493 29 is_stmt 0 view .LVU302
 1296 005e F092 0000 		sts rgblight_config+2,r15
 494:quantum/rgblight.c ****         if (write_to_eeprom) {
 1297               		.loc 1 494 9 is_stmt 1 view .LVU303
 494:quantum/rgblight.c ****         if (write_to_eeprom) {
 1298               		.loc 1 494 29 is_stmt 0 view .LVU304
 1299 0062 0093 0000 		sts rgblight_config+3,r16
 495:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 1300               		.loc 1 495 9 is_stmt 1 view .LVU305
 495:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 1301               		.loc 1 495 12 is_stmt 0 view .LVU306
 1302 0066 EE20      		tst r14
 1303 0068 01F0      		breq .L59
 496:quantum/rgblight.c ****             dprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.s
 1304               		.loc 1 496 13 is_stmt 1 view .LVU307
 1305 006a 6091 0000 		lds r22,rgblight_config
 1306 006e 7091 0000 		lds r23,rgblight_config+1
 1307 0072 8091 0000 		lds r24,rgblight_config+2
 1308 0076 9091 0000 		lds r25,rgblight_config+3
 1309 007a 0E94 0000 		call eeconfig_update_rgblight
 1310               	.LVL74:
 497:quantum/rgblight.c ****         } else {
 1311               		.loc 1 497 124 view .LVU308
 499:quantum/rgblight.c ****         }
 1312               		.loc 1 499 126 view .LVU309
 1313               	.L59:
 1314               	/* epilogue start */
 502:quantum/rgblight.c **** 
 1315               		.loc 1 502 1 is_stmt 0 view .LVU310
 1316 007e 0F90      		pop __tmp_reg__
 1317 0080 0F90      		pop __tmp_reg__
 1318 0082 0F90      		pop __tmp_reg__
 1319 0084 DF91      		pop r29
 1320 0086 CF91      		pop r28
 1321 0088 1F91      		pop r17
 1322               	.LVL75:
 502:quantum/rgblight.c **** 
 1323               		.loc 1 502 1 view .LVU311
 1324 008a 0F91      		pop r16
 1325               	.LVL76:
 502:quantum/rgblight.c **** 
 1326               		.loc 1 502 1 view .LVU312
 1327 008c FF90      		pop r15
 1328               	.LVL77:
 502:quantum/rgblight.c **** 
 1329               		.loc 1 502 1 view .LVU313
 1330 008e EF90      		pop r14
 1331               	.LVL78:
 502:quantum/rgblight.c **** 
 1332               		.loc 1 502 1 view .LVU314
 1333 0090 DF90      		pop r13
 1334 0092 CF90      		pop r12
 1335 0094 BF90      		pop r11
 1336 0096 AF90      		pop r10
 1337 0098 0895      		ret
 1338               	.LVL79:
 1339               	.L62:
 442:quantum/rgblight.c ****             }
 1340               		.loc 1 442 13 is_stmt 1 view .LVU315
 445:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 1341               		.loc 1 445 18 view .LVU316
 445:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 1342               		.loc 1 445 21 is_stmt 0 view .LVU317
 1343 009a 8230      		cpi r24,lo8(2)
 1344 009c 01F4      		brne .L64
 447:quantum/rgblight.c ****             }
 1345               		.loc 1 447 17 is_stmt 1 view .LVU318
 447:quantum/rgblight.c ****             }
 1346               		.loc 1 447 21 is_stmt 0 view .LVU319
 1347 009e 0091 0000 		lds r16,rgblight_config+3
 1348               	.LVL80:
 447:quantum/rgblight.c ****             }
 1349               		.loc 1 447 21 view .LVU320
 1350 00a2 00C0      		rjmp .L63
 1351               	.L64:
 451:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 1352               		.loc 1 451 18 is_stmt 1 view .LVU321
 451:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 1353               		.loc 1 451 21 is_stmt 0 view .LVU322
 1354 00a4 8630      		cpi r24,lo8(6)
 1355 00a6 01F4      		brne .L65
 1356               	.L66:
 453:quantum/rgblight.c ****             }
 1357               		.loc 1 453 17 is_stmt 1 view .LVU323
 453:quantum/rgblight.c ****             }
 1358               		.loc 1 453 21 is_stmt 0 view .LVU324
 1359 00a8 1091 0000 		lds r17,rgblight_config+1
 1360               	.LVL81:
 453:quantum/rgblight.c ****             }
 1361               		.loc 1 453 21 view .LVU325
 1362 00ac 00C0      		rjmp .L63
 1363               	.L65:
 457:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 1364               		.loc 1 457 18 is_stmt 1 view .LVU326
 457:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 1365               		.loc 1 457 21 is_stmt 0 view .LVU327
 1366 00ae 8930      		cpi r24,lo8(9)
 1367 00b0 01F0      		breq .L66
 463:quantum/rgblight.c ****                 // static gradient
 1368               		.loc 1 463 18 is_stmt 1 view .LVU328
 463:quantum/rgblight.c ****                 // static gradient
 1369               		.loc 1 463 21 is_stmt 0 view .LVU329
 1370 00b2 8931      		cpi r24,lo8(25)
 1371 00b4 01F4      		brne .L63
 1372               	.LBB50:
 465:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 1373               		.loc 1 465 17 is_stmt 1 view .LVU330
 465:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 1374               		.loc 1 465 25 is_stmt 0 view .LVU331
 1375 00b6 E951      		subi r30,lo8(-(-25))
 1376               	.LVL82:
 466:quantum/rgblight.c **** #    ifdef __AVR__
 1377               		.loc 1 466 17 is_stmt 1 view .LVU332
 466:quantum/rgblight.c **** #    ifdef __AVR__
 1378               		.loc 1 466 49 is_stmt 0 view .LVU333
 1379 00b8 8E2F      		mov r24,r30
 1380 00ba 8170      		andi r24,lo8(1)
 1381 00bc D82E      		mov r13,r24
 1382               	.LVL83:
 469:quantum/rgblight.c **** #    else
 1383               		.loc 1 469 17 is_stmt 1 view .LVU334
 1384               	.LBB51:
 469:quantum/rgblight.c **** #    else
 1385               		.loc 1 469 33 view .LVU335
 1386 00be E695      		lsr r30
 1387               	.LVL84:
 469:quantum/rgblight.c **** #    else
 1388               		.loc 1 469 33 is_stmt 0 view .LVU336
 1389 00c0 F0E0      		ldi r31,0
 1390 00c2 E050      		subi r30,lo8(-(RGBLED_GRADIENT_RANGES))
 1391 00c4 F040      		sbci r31,hi8(-(RGBLED_GRADIENT_RANGES))
 1392               	.LVL85:
 469:quantum/rgblight.c **** #    else
 1393               		.loc 1 469 33 is_stmt 1 view .LVU337
 469:quantum/rgblight.c **** #    else
 1394               		.loc 1 469 33 view .LVU338
 1395               	/* #APP */
 1396               	 ;  469 "quantum/rgblight.c" 1
 1397 00c6 A590      		lpm r10, Z+
 1398 00c8 B490      		lpm r11, Z
 1399               		
 1400               	 ;  0 "" 2
 1401               	.LVL86:
 469:quantum/rgblight.c **** #    else
 1402               		.loc 1 469 33 view .LVU339
 469:quantum/rgblight.c **** #    else
 1403               		.loc 1 469 33 is_stmt 0 view .LVU340
 1404               	/* #NOAPP */
 1405               	.LBE51:
 473:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1406               		.loc 1 473 17 is_stmt 1 view .LVU341
 1407               	.LBB52:
 473:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1408               		.loc 1 473 22 view .LVU342
 473:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1409               		.loc 1 473 30 is_stmt 0 view .LVU343
 1410 00ca C12C      		mov r12,__zero_reg__
 1411               	.LBB53:
 474:quantum/rgblight.c ****                     if (direction) {
 1412               		.loc 1 474 49 view .LVU344
 1413 00cc BB24      		clr r11
 1414               	.LVL87:
 1415               	.L67:
 474:quantum/rgblight.c ****                     if (direction) {
 1416               		.loc 1 474 49 view .LVU345
 1417               	.LBE53:
 473:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1418               		.loc 1 473 39 discriminator 1 view .LVU346
 1419 00ce 4091 0000 		lds r20,effect_num_leds
 473:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1420               		.loc 1 473 17 discriminator 1 view .LVU347
 1421 00d2 C416      		cp r12,r20
 1422 00d4 00F0      		brlo .L70
 1423               	.LBE52:
 483:quantum/rgblight.c ****             }
 1424               		.loc 1 483 17 is_stmt 1 view .LVU348
 1425 00d6 0E94 0000 		call rgblight_set
 1426               	.LVL88:
 1427 00da 00C0      		rjmp .L63
 1428               	.L70:
 1429               	.LBB60:
 1430               	.LBB58:
 474:quantum/rgblight.c ****                     if (direction) {
 1431               		.loc 1 474 21 view .LVU349
 474:quantum/rgblight.c ****                     if (direction) {
 1432               		.loc 1 474 37 is_stmt 0 view .LVU350
 1433 00dc 2C2D      		mov r18,r12
 1434 00de 30E0      		ldi r19,0
 474:quantum/rgblight.c ****                     if (direction) {
 1435               		.loc 1 474 49 view .LVU351
 1436 00e0 C501      		movw r24,r10
 1437 00e2 B901      		movw r22,r18
 1438 00e4 0E94 0000 		call __mulhi3
 474:quantum/rgblight.c ****                     if (direction) {
 1439               		.loc 1 474 68 view .LVU352
 1440 00e8 642F      		mov r22,r20
 1441 00ea 70E0      		ldi r23,0
 1442 00ec 0E94 0000 		call __udivmodhi4
 1443               	.LVL89:
 475:quantum/rgblight.c ****                         _hue = hue + _hue;
 1444               		.loc 1 475 21 is_stmt 1 view .LVU353
 476:quantum/rgblight.c ****                     } else {
 1445               		.loc 1 476 30 is_stmt 0 view .LVU354
 1446 00f0 E12F      		mov r30,r17
 475:quantum/rgblight.c ****                         _hue = hue + _hue;
 1447               		.loc 1 475 24 view .LVU355
 1448 00f2 D110      		cpse r13,__zero_reg__
 1449 00f4 00C0      		rjmp .L68
 476:quantum/rgblight.c ****                     } else {
 1450               		.loc 1 476 25 is_stmt 1 view .LVU356
 476:quantum/rgblight.c ****                     } else {
 1451               		.loc 1 476 30 is_stmt 0 view .LVU357
 1452 00f6 E60F      		add r30,r22
 1453               	.LVL90:
 1454               	.L69:
 480:quantum/rgblight.c ****                     sethsv(_hue, sat, val, (LED_TYPE *)&led[i + effect_start_pos]);
 1455               		.loc 1 480 98 is_stmt 1 discriminator 2 view .LVU358
 481:quantum/rgblight.c ****                 }
 1456               		.loc 1 481 21 discriminator 2 view .LVU359
 1457               	.LBB54:
 1458               	.LBI54:
 125:quantum/rgblight.c **** 
 1459               		.loc 1 125 6 discriminator 2 view .LVU360
 1460               	.LBB55:
 125:quantum/rgblight.c **** 
 1461               		.loc 1 125 70 discriminator 2 view .LVU361
 1462               	.LBE55:
 1463               	.LBE54:
 481:quantum/rgblight.c ****                 }
 1464               		.loc 1 481 63 is_stmt 0 discriminator 2 view .LVU362
 1465 00f8 8091 0000 		lds r24,effect_start_pos
 481:quantum/rgblight.c ****                 }
 1466               		.loc 1 481 21 discriminator 2 view .LVU363
 1467 00fc 820F      		add r24,r18
 1468 00fe 932F      		mov r25,r19
 1469 0100 911D      		adc r25,__zero_reg__
 1470 0102 63E0      		ldi r22,lo8(3)
 1471 0104 70E0      		ldi r23,0
 1472 0106 0E94 0000 		call __mulhi3
 1473 010a 9C01      		movw r18,r24
 1474 010c 2050      		subi r18,lo8(-(led))
 1475 010e 3040      		sbci r19,hi8(-(led))
 1476               	.LBB57:
 1477               	.LBB56:
 125:quantum/rgblight.c **** 
 1478               		.loc 1 125 70 discriminator 2 view .LVU364
 1479 0110 402F      		mov r20,r16
 1480 0112 6F2D      		mov r22,r15
 1481 0114 8E2F      		mov r24,r30
 1482 0116 0E94 0000 		call sethsv_raw
 1483               	.LVL91:
 125:quantum/rgblight.c **** 
 1484               		.loc 1 125 70 discriminator 2 view .LVU365
 1485               	.LBE56:
 1486               	.LBE57:
 1487               	.LBE58:
 473:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1488               		.loc 1 473 59 discriminator 2 view .LVU366
 1489 011a C394      		inc r12
 1490               	.LVL92:
 473:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 1491               		.loc 1 473 59 discriminator 2 view .LVU367
 1492 011c 00C0      		rjmp .L67
 1493               	.LVL93:
 1494               	.L68:
 1495               	.LBB59:
 478:quantum/rgblight.c ****                     }
 1496               		.loc 1 478 25 is_stmt 1 view .LVU368
 478:quantum/rgblight.c ****                     }
 1497               		.loc 1 478 30 is_stmt 0 view .LVU369
 1498 011e E61B      		sub r30,r22
 1499               	.LVL94:
 478:quantum/rgblight.c ****                     }
 1500               		.loc 1 478 30 view .LVU370
 1501 0120 00C0      		rjmp .L69
 1502               	.LBE59:
 1503               	.LBE60:
 1504               	.LBE50:
 1505               		.cfi_endproc
 1506               	.LFE135:
 1508               		.section	.text.rgblight_increase_hue_helper,"ax",@progbits
 1509               	.global	rgblight_increase_hue_helper
 1511               	rgblight_increase_hue_helper:
 1512               	.LVL95:
 1513               	.LFB114:
 376:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue + RGBLIGHT_HUE_STEP;
 1514               		.loc 1 376 57 is_stmt 1 view -0
 1515               		.cfi_startproc
 1516               	/* prologue: function */
 1517               	/* frame size = 0 */
 1518               	/* stack size = 0 */
 1519               	.L__stack_usage = 0
 377:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1520               		.loc 1 377 5 view .LVU372
 378:quantum/rgblight.c **** }
 1521               		.loc 1 378 5 view .LVU373
 1522 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1523 0002 F0E0      		ldi r31,hi8(rgblight_config)
 377:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1524               		.loc 1 377 13 is_stmt 0 view .LVU374
 1525 0004 9181      		ldd r25,Z+1
 378:quantum/rgblight.c **** }
 1526               		.loc 1 378 5 view .LVU375
 1527 0006 282F      		mov r18,r24
 1528 0008 4381      		ldd r20,Z+3
 1529 000a 6281      		ldd r22,Z+2
 1530 000c 88E0      		ldi r24,lo8(8)
 1531               	.LVL96:
 378:quantum/rgblight.c **** }
 1532               		.loc 1 378 5 view .LVU376
 1533 000e 890F      		add r24,r25
 1534               	.LVL97:
 378:quantum/rgblight.c **** }
 1535               		.loc 1 378 5 view .LVU377
 1536 0010 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1537               	.LVL98:
 378:quantum/rgblight.c **** }
 1538               		.loc 1 378 5 view .LVU378
 1539               		.cfi_endproc
 1540               	.LFE114:
 1542               		.section	.text.rgblight_increase_hue_noeeprom,"ax",@progbits
 1543               	.global	rgblight_increase_hue_noeeprom
 1545               	rgblight_increase_hue_noeeprom:
 1546               	.LFB115:
 380:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 1547               		.loc 1 380 43 is_stmt 1 view -0
 1548               		.cfi_startproc
 1549               	/* prologue: function */
 1550               	/* frame size = 0 */
 1551               	/* stack size = 0 */
 1552               	.L__stack_usage = 0
 380:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 1553               		.loc 1 380 45 view .LVU380
 1554 0000 80E0      		ldi r24,0
 1555 0002 0C94 0000 		jmp rgblight_increase_hue_helper
 1556               	.LVL99:
 1557               		.cfi_endproc
 1558               	.LFE115:
 1560               		.section	.text.rgblight_increase_hue,"ax",@progbits
 1561               	.global	rgblight_increase_hue
 1563               	rgblight_increase_hue:
 1564               	.LFB116:
 381:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 1565               		.loc 1 381 34 view -0
 1566               		.cfi_startproc
 1567               	/* prologue: function */
 1568               	/* frame size = 0 */
 1569               	/* stack size = 0 */
 1570               	.L__stack_usage = 0
 381:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 1571               		.loc 1 381 36 view .LVU382
 1572 0000 81E0      		ldi r24,lo8(1)
 1573 0002 0C94 0000 		jmp rgblight_increase_hue_helper
 1574               	.LVL100:
 1575               		.cfi_endproc
 1576               	.LFE116:
 1578               		.section	.text.rgblight_decrease_hue_helper,"ax",@progbits
 1579               	.global	rgblight_decrease_hue_helper
 1581               	rgblight_decrease_hue_helper:
 1582               	.LVL101:
 1583               	.LFB117:
 382:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue - RGBLIGHT_HUE_STEP;
 1584               		.loc 1 382 57 view -0
 1585               		.cfi_startproc
 1586               	/* prologue: function */
 1587               	/* frame size = 0 */
 1588               	/* stack size = 0 */
 1589               	.L__stack_usage = 0
 383:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1590               		.loc 1 383 5 view .LVU384
 384:quantum/rgblight.c **** }
 1591               		.loc 1 384 5 view .LVU385
 1592 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1593 0002 F0E0      		ldi r31,hi8(rgblight_config)
 383:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1594               		.loc 1 383 13 is_stmt 0 view .LVU386
 1595 0004 9181      		ldd r25,Z+1
 384:quantum/rgblight.c **** }
 1596               		.loc 1 384 5 view .LVU387
 1597 0006 282F      		mov r18,r24
 1598 0008 4381      		ldd r20,Z+3
 1599 000a 6281      		ldd r22,Z+2
 1600 000c 88EF      		ldi r24,lo8(-8)
 1601               	.LVL102:
 384:quantum/rgblight.c **** }
 1602               		.loc 1 384 5 view .LVU388
 1603 000e 890F      		add r24,r25
 1604               	.LVL103:
 384:quantum/rgblight.c **** }
 1605               		.loc 1 384 5 view .LVU389
 1606 0010 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1607               	.LVL104:
 384:quantum/rgblight.c **** }
 1608               		.loc 1 384 5 view .LVU390
 1609               		.cfi_endproc
 1610               	.LFE117:
 1612               		.section	.text.rgblight_decrease_hue_noeeprom,"ax",@progbits
 1613               	.global	rgblight_decrease_hue_noeeprom
 1615               	rgblight_decrease_hue_noeeprom:
 1616               	.LFB118:
 386:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 1617               		.loc 1 386 43 is_stmt 1 view -0
 1618               		.cfi_startproc
 1619               	/* prologue: function */
 1620               	/* frame size = 0 */
 1621               	/* stack size = 0 */
 1622               	.L__stack_usage = 0
 386:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 1623               		.loc 1 386 45 view .LVU392
 1624 0000 80E0      		ldi r24,0
 1625 0002 0C94 0000 		jmp rgblight_decrease_hue_helper
 1626               	.LVL105:
 1627               		.cfi_endproc
 1628               	.LFE118:
 1630               		.section	.text.rgblight_decrease_hue,"ax",@progbits
 1631               	.global	rgblight_decrease_hue
 1633               	rgblight_decrease_hue:
 1634               	.LFB119:
 387:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 1635               		.loc 1 387 34 view -0
 1636               		.cfi_startproc
 1637               	/* prologue: function */
 1638               	/* frame size = 0 */
 1639               	/* stack size = 0 */
 1640               	.L__stack_usage = 0
 387:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 1641               		.loc 1 387 36 view .LVU394
 1642 0000 81E0      		ldi r24,lo8(1)
 1643 0002 0C94 0000 		jmp rgblight_decrease_hue_helper
 1644               	.LVL106:
 1645               		.cfi_endproc
 1646               	.LFE119:
 1648               		.section	.text.rgblight_increase_sat_helper,"ax",@progbits
 1649               	.global	rgblight_increase_sat_helper
 1651               	rgblight_increase_sat_helper:
 1652               	.LVL107:
 1653               	.LFB120:
 388:quantum/rgblight.c ****     uint8_t sat = qadd8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 1654               		.loc 1 388 57 view -0
 1655               		.cfi_startproc
 1656               	/* prologue: function */
 1657               	/* frame size = 0 */
 1658               	/* stack size = 0 */
 1659               	.L__stack_usage = 0
 389:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1660               		.loc 1 389 5 view .LVU396
 1661               	.LBB61:
 1662               	.LBI61:
 1663               		.file 2 "./lib/lib8tion/math8.h"
   1:./lib/lib8tion/math8.h **** #ifndef __INC_LIB8TION_MATH_H
   2:./lib/lib8tion/math8.h **** #define __INC_LIB8TION_MATH_H
   3:./lib/lib8tion/math8.h **** 
   4:./lib/lib8tion/math8.h **** #include "scale8.h"
   5:./lib/lib8tion/math8.h **** 
   6:./lib/lib8tion/math8.h **** ///@ingroup lib8tion
   7:./lib/lib8tion/math8.h **** 
   8:./lib/lib8tion/math8.h **** ///@defgroup Math Basic math operations
   9:./lib/lib8tion/math8.h **** /// Fast, efficient 8-bit math functions specifically
  10:./lib/lib8tion/math8.h **** /// designed for high-performance LED programming.
  11:./lib/lib8tion/math8.h **** ///
  12:./lib/lib8tion/math8.h **** /// Because of the AVR(Arduino) and ARM assembly language
  13:./lib/lib8tion/math8.h **** /// implementations provided, using these functions often
  14:./lib/lib8tion/math8.h **** /// results in smaller and faster code than the equivalent
  15:./lib/lib8tion/math8.h **** /// program using plain "C" arithmetic and logic.
  16:./lib/lib8tion/math8.h **** ///@{
  17:./lib/lib8tion/math8.h **** 
  18:./lib/lib8tion/math8.h **** 
  19:./lib/lib8tion/math8.h **** /// add one byte to another, saturating at 0xFF
  20:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  21:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  22:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  23:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qadd8( uint8_t i, uint8_t j)
 1664               		.loc 2 23 34 view .LVU397
 1665               	.LBB62:
  24:./lib/lib8tion/math8.h **** {
  25:./lib/lib8tion/math8.h **** #if QADD8_C == 1
  26:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
  27:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
  28:./lib/lib8tion/math8.h ****     return t;
  29:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
  30:./lib/lib8tion/math8.h ****     asm volatile(
 1666               		.loc 2 30 5 view .LVU398
 1667               	.LBE62:
 1668               	.LBE61:
 389:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1669               		.loc 1 389 19 is_stmt 0 view .LVU399
 1670 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1671 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1672               	.LBB64:
 1673               	.LBB63:
 1674               		.loc 2 30 5 view .LVU400
 1675 0004 6281      		ldd r22,Z+2
 1676 0006 28E0      		ldi r18,lo8(8)
 1677               	/* #APP */
 1678               	 ;  30 "./lib/lib8tion/math8.h" 1
 1679 0008 620F      		add r22, r18    
 1680 000a 00F4      		brcc L_1343     
 1681 000c 6FEF      		ldi r22, 0xFF  
 1682               		L_1343: 
 1683               	 ;  0 "" 2
 1684               	.LVL108:
  31:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
  32:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  33:./lib/lib8tion/math8.h **** 
  34:./lib/lib8tion/math8.h ****          /* Now test the C flag.
  35:./lib/lib8tion/math8.h ****            If C is clear, we branch around a load of 0xFF into i.
  36:./lib/lib8tion/math8.h ****            If C is set, we go ahead and load 0xFF into i.
  37:./lib/lib8tion/math8.h ****          */
  38:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
  39:./lib/lib8tion/math8.h ****          "ldi %0, 0xFF  \n\t"
  40:./lib/lib8tion/math8.h ****          "L_%=: "
  41:./lib/lib8tion/math8.h ****          : "+a" (i)
  42:./lib/lib8tion/math8.h ****          : "a"  (j) );
  43:./lib/lib8tion/math8.h ****     return i;
 1685               		.loc 2 43 5 is_stmt 1 view .LVU401
 1686               		.loc 2 43 5 is_stmt 0 view .LVU402
 1687               	/* #NOAPP */
 1688               	.LBE63:
 1689               	.LBE64:
 390:quantum/rgblight.c **** }
 1690               		.loc 1 390 5 is_stmt 1 view .LVU403
 1691 000e 282F      		mov r18,r24
 1692 0010 4381      		ldd r20,Z+3
 1693 0012 8181      		ldd r24,Z+1
 1694               	.LVL109:
 390:quantum/rgblight.c **** }
 1695               		.loc 1 390 5 is_stmt 0 view .LVU404
 1696 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1697               	.LVL110:
 390:quantum/rgblight.c **** }
 1698               		.loc 1 390 5 view .LVU405
 1699               		.cfi_endproc
 1700               	.LFE120:
 1702               		.section	.text.rgblight_increase_sat_noeeprom,"ax",@progbits
 1703               	.global	rgblight_increase_sat_noeeprom
 1705               	rgblight_increase_sat_noeeprom:
 1706               	.LFB121:
 392:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 1707               		.loc 1 392 43 is_stmt 1 view -0
 1708               		.cfi_startproc
 1709               	/* prologue: function */
 1710               	/* frame size = 0 */
 1711               	/* stack size = 0 */
 1712               	.L__stack_usage = 0
 392:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 1713               		.loc 1 392 45 view .LVU407
 1714 0000 80E0      		ldi r24,0
 1715 0002 0C94 0000 		jmp rgblight_increase_sat_helper
 1716               	.LVL111:
 1717               		.cfi_endproc
 1718               	.LFE121:
 1720               		.section	.text.rgblight_increase_sat,"ax",@progbits
 1721               	.global	rgblight_increase_sat
 1723               	rgblight_increase_sat:
 1724               	.LFB122:
 393:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 1725               		.loc 1 393 34 view -0
 1726               		.cfi_startproc
 1727               	/* prologue: function */
 1728               	/* frame size = 0 */
 1729               	/* stack size = 0 */
 1730               	.L__stack_usage = 0
 393:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 1731               		.loc 1 393 36 view .LVU409
 1732 0000 81E0      		ldi r24,lo8(1)
 1733 0002 0C94 0000 		jmp rgblight_increase_sat_helper
 1734               	.LVL112:
 1735               		.cfi_endproc
 1736               	.LFE122:
 1738               		.section	.text.rgblight_decrease_sat_helper,"ax",@progbits
 1739               	.global	rgblight_decrease_sat_helper
 1741               	rgblight_decrease_sat_helper:
 1742               	.LVL113:
 1743               	.LFB123:
 394:quantum/rgblight.c ****     uint8_t sat = qsub8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 1744               		.loc 1 394 57 view -0
 1745               		.cfi_startproc
 1746               	/* prologue: function */
 1747               	/* frame size = 0 */
 1748               	/* stack size = 0 */
 1749               	.L__stack_usage = 0
 395:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1750               		.loc 1 395 5 view .LVU411
 1751               	.LBB65:
 1752               	.LBI65:
  44:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
  45:./lib/lib8tion/math8.h ****     asm volatile( "uqadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  46:./lib/lib8tion/math8.h ****     return i;
  47:./lib/lib8tion/math8.h **** #else
  48:./lib/lib8tion/math8.h **** #error "No implementation for qadd8 available."
  49:./lib/lib8tion/math8.h **** #endif
  50:./lib/lib8tion/math8.h **** }
  51:./lib/lib8tion/math8.h **** 
  52:./lib/lib8tion/math8.h **** /// Add one byte to another, saturating at 0x7F
  53:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  54:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  55:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  56:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t qadd7( int8_t i, int8_t j)
  57:./lib/lib8tion/math8.h **** {
  58:./lib/lib8tion/math8.h **** #if QADD7_C == 1
  59:./lib/lib8tion/math8.h ****     int16_t t = i + j;
  60:./lib/lib8tion/math8.h ****     if (t > 127) t = 127;
  61:./lib/lib8tion/math8.h ****     return t;
  62:./lib/lib8tion/math8.h **** #elif QADD7_AVRASM == 1
  63:./lib/lib8tion/math8.h ****     asm volatile(
  64:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the V flag */
  65:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  66:./lib/lib8tion/math8.h **** 
  67:./lib/lib8tion/math8.h ****          /* Now test the V flag.
  68:./lib/lib8tion/math8.h ****           If V is clear, we branch around a load of 0x7F into i.
  69:./lib/lib8tion/math8.h ****           If V is set, we go ahead and load 0x7F into i.
  70:./lib/lib8tion/math8.h ****           */
  71:./lib/lib8tion/math8.h ****          "brvc L_%=     \n\t"
  72:./lib/lib8tion/math8.h ****          "ldi %0, 0x7F  \n\t"
  73:./lib/lib8tion/math8.h ****          "L_%=: "
  74:./lib/lib8tion/math8.h ****          : "+a" (i)
  75:./lib/lib8tion/math8.h ****          : "a"  (j) );
  76:./lib/lib8tion/math8.h **** 
  77:./lib/lib8tion/math8.h ****     return i;
  78:./lib/lib8tion/math8.h **** #elif QADD7_ARM_DSP_ASM == 1
  79:./lib/lib8tion/math8.h ****     asm volatile( "qadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  80:./lib/lib8tion/math8.h ****     return i;
  81:./lib/lib8tion/math8.h **** #else
  82:./lib/lib8tion/math8.h **** #error "No implementation for qadd7 available."
  83:./lib/lib8tion/math8.h **** #endif
  84:./lib/lib8tion/math8.h **** }
  85:./lib/lib8tion/math8.h **** 
  86:./lib/lib8tion/math8.h **** /// subtract one byte from another, saturating at 0x00
  87:./lib/lib8tion/math8.h **** /// @returns i - j with a floor of 0
  88:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qsub8( uint8_t i, uint8_t j)
 1753               		.loc 2 88 34 view .LVU412
 1754               	.LBB66:
  89:./lib/lib8tion/math8.h **** {
  90:./lib/lib8tion/math8.h **** #if QSUB8_C == 1
  91:./lib/lib8tion/math8.h ****     int16_t t = i - j;
  92:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
  93:./lib/lib8tion/math8.h ****     return t;
  94:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
  95:./lib/lib8tion/math8.h **** 
  96:./lib/lib8tion/math8.h ****     asm volatile(
 1755               		.loc 2 96 5 view .LVU413
 1756               	.LBE66:
 1757               	.LBE65:
 395:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1758               		.loc 1 395 19 is_stmt 0 view .LVU414
 1759 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1760 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1761               	.LBB68:
 1762               	.LBB67:
 1763               		.loc 2 96 5 view .LVU415
 1764 0004 6281      		ldd r22,Z+2
 1765 0006 28E0      		ldi r18,lo8(8)
 1766               	/* #APP */
 1767               	 ;  96 "./lib/lib8tion/math8.h" 1
 1768 0008 621B      		sub r22, r18    
 1769 000a 00F4      		brcc L_1399     
 1770 000c 60E0      		ldi r22, 0x00  
 1771               		L_1399: 
 1772               	 ;  0 "" 2
 1773               	.LVL114:
  97:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
  98:./lib/lib8tion/math8.h ****          "sub %0, %1    \n\t"
  99:./lib/lib8tion/math8.h **** 
 100:./lib/lib8tion/math8.h ****          /* Now test the C flag.
 101:./lib/lib8tion/math8.h ****           If C is clear, we branch around a load of 0x00 into i.
 102:./lib/lib8tion/math8.h ****           If C is set, we go ahead and load 0x00 into i.
 103:./lib/lib8tion/math8.h ****           */
 104:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
 105:./lib/lib8tion/math8.h ****          "ldi %0, 0x00  \n\t"
 106:./lib/lib8tion/math8.h ****          "L_%=: "
 107:./lib/lib8tion/math8.h ****          : "+a" (i)
 108:./lib/lib8tion/math8.h ****          : "a"  (j) );
 109:./lib/lib8tion/math8.h **** 
 110:./lib/lib8tion/math8.h ****     return i;
 1774               		.loc 2 110 5 is_stmt 1 view .LVU416
 1775               		.loc 2 110 5 is_stmt 0 view .LVU417
 1776               	/* #NOAPP */
 1777               	.LBE67:
 1778               	.LBE68:
 396:quantum/rgblight.c **** }
 1779               		.loc 1 396 5 is_stmt 1 view .LVU418
 1780 000e 282F      		mov r18,r24
 1781 0010 4381      		ldd r20,Z+3
 1782 0012 8181      		ldd r24,Z+1
 1783               	.LVL115:
 396:quantum/rgblight.c **** }
 1784               		.loc 1 396 5 is_stmt 0 view .LVU419
 1785 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1786               	.LVL116:
 396:quantum/rgblight.c **** }
 1787               		.loc 1 396 5 view .LVU420
 1788               		.cfi_endproc
 1789               	.LFE123:
 1791               		.section	.text.rgblight_decrease_sat_noeeprom,"ax",@progbits
 1792               	.global	rgblight_decrease_sat_noeeprom
 1794               	rgblight_decrease_sat_noeeprom:
 1795               	.LFB124:
 398:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 1796               		.loc 1 398 43 is_stmt 1 view -0
 1797               		.cfi_startproc
 1798               	/* prologue: function */
 1799               	/* frame size = 0 */
 1800               	/* stack size = 0 */
 1801               	.L__stack_usage = 0
 398:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 1802               		.loc 1 398 45 view .LVU422
 1803 0000 80E0      		ldi r24,0
 1804 0002 0C94 0000 		jmp rgblight_decrease_sat_helper
 1805               	.LVL117:
 1806               		.cfi_endproc
 1807               	.LFE124:
 1809               		.section	.text.rgblight_decrease_sat,"ax",@progbits
 1810               	.global	rgblight_decrease_sat
 1812               	rgblight_decrease_sat:
 1813               	.LFB125:
 399:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 1814               		.loc 1 399 34 view -0
 1815               		.cfi_startproc
 1816               	/* prologue: function */
 1817               	/* frame size = 0 */
 1818               	/* stack size = 0 */
 1819               	.L__stack_usage = 0
 399:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 1820               		.loc 1 399 36 view .LVU424
 1821 0000 81E0      		ldi r24,lo8(1)
 1822 0002 0C94 0000 		jmp rgblight_decrease_sat_helper
 1823               	.LVL118:
 1824               		.cfi_endproc
 1825               	.LFE125:
 1827               		.section	.text.rgblight_increase_val_helper,"ax",@progbits
 1828               	.global	rgblight_increase_val_helper
 1830               	rgblight_increase_val_helper:
 1831               	.LVL119:
 1832               	.LFB126:
 400:quantum/rgblight.c ****     uint8_t val = qadd8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 1833               		.loc 1 400 57 view -0
 1834               		.cfi_startproc
 1835               	/* prologue: function */
 1836               	/* frame size = 0 */
 1837               	/* stack size = 0 */
 1838               	.L__stack_usage = 0
 401:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 1839               		.loc 1 401 5 view .LVU426
 1840               	.LBB69:
 1841               	.LBI69:
  23:./lib/lib8tion/math8.h **** {
 1842               		.loc 2 23 34 view .LVU427
 1843               	.LBB70:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 1844               		.loc 2 30 5 view .LVU428
 1845               	.LBE70:
 1846               	.LBE69:
 401:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 1847               		.loc 1 401 19 is_stmt 0 view .LVU429
 1848 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1849 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1850               	.LBB72:
 1851               	.LBB71:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 1852               		.loc 2 30 5 view .LVU430
 1853 0004 4381      		ldd r20,Z+3
 1854 0006 28E0      		ldi r18,lo8(8)
 1855               	/* #APP */
 1856               	 ;  30 "./lib/lib8tion/math8.h" 1
 1857 0008 420F      		add r20, r18    
 1858 000a 00F4      		brcc L_1455     
 1859 000c 4FEF      		ldi r20, 0xFF  
 1860               		L_1455: 
 1861               	 ;  0 "" 2
 1862               	.LVL120:
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 1863               		.loc 2 43 5 is_stmt 1 view .LVU431
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 1864               		.loc 2 43 5 is_stmt 0 view .LVU432
 1865               	/* #NOAPP */
 1866               	.LBE71:
 1867               	.LBE72:
 402:quantum/rgblight.c **** }
 1868               		.loc 1 402 5 is_stmt 1 view .LVU433
 1869 000e 282F      		mov r18,r24
 1870 0010 6281      		ldd r22,Z+2
 1871 0012 8181      		ldd r24,Z+1
 1872               	.LVL121:
 402:quantum/rgblight.c **** }
 1873               		.loc 1 402 5 is_stmt 0 view .LVU434
 1874 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1875               	.LVL122:
 402:quantum/rgblight.c **** }
 1876               		.loc 1 402 5 view .LVU435
 1877               		.cfi_endproc
 1878               	.LFE126:
 1880               		.section	.text.rgblight_increase_val_noeeprom,"ax",@progbits
 1881               	.global	rgblight_increase_val_noeeprom
 1883               	rgblight_increase_val_noeeprom:
 1884               	.LFB127:
 404:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 1885               		.loc 1 404 43 is_stmt 1 view -0
 1886               		.cfi_startproc
 1887               	/* prologue: function */
 1888               	/* frame size = 0 */
 1889               	/* stack size = 0 */
 1890               	.L__stack_usage = 0
 404:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 1891               		.loc 1 404 45 view .LVU437
 1892 0000 80E0      		ldi r24,0
 1893 0002 0C94 0000 		jmp rgblight_increase_val_helper
 1894               	.LVL123:
 1895               		.cfi_endproc
 1896               	.LFE127:
 1898               		.section	.text.rgblight_increase_val,"ax",@progbits
 1899               	.global	rgblight_increase_val
 1901               	rgblight_increase_val:
 1902               	.LFB128:
 405:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 1903               		.loc 1 405 34 view -0
 1904               		.cfi_startproc
 1905               	/* prologue: function */
 1906               	/* frame size = 0 */
 1907               	/* stack size = 0 */
 1908               	.L__stack_usage = 0
 405:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 1909               		.loc 1 405 36 view .LVU439
 1910 0000 81E0      		ldi r24,lo8(1)
 1911 0002 0C94 0000 		jmp rgblight_increase_val_helper
 1912               	.LVL124:
 1913               		.cfi_endproc
 1914               	.LFE128:
 1916               		.section	.text.rgblight_decrease_val_helper,"ax",@progbits
 1917               	.global	rgblight_decrease_val_helper
 1919               	rgblight_decrease_val_helper:
 1920               	.LVL125:
 1921               	.LFB129:
 406:quantum/rgblight.c ****     uint8_t val = qsub8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 1922               		.loc 1 406 57 view -0
 1923               		.cfi_startproc
 1924               	/* prologue: function */
 1925               	/* frame size = 0 */
 1926               	/* stack size = 0 */
 1927               	.L__stack_usage = 0
 407:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 1928               		.loc 1 407 5 view .LVU441
 1929               	.LBB73:
 1930               	.LBI73:
  88:./lib/lib8tion/math8.h **** {
 1931               		.loc 2 88 34 view .LVU442
 1932               	.LBB74:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 1933               		.loc 2 96 5 view .LVU443
 1934               	.LBE74:
 1935               	.LBE73:
 407:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 1936               		.loc 1 407 19 is_stmt 0 view .LVU444
 1937 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1938 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1939               	.LBB76:
 1940               	.LBB75:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 1941               		.loc 2 96 5 view .LVU445
 1942 0004 4381      		ldd r20,Z+3
 1943 0006 28E0      		ldi r18,lo8(8)
 1944               	/* #APP */
 1945               	 ;  96 "./lib/lib8tion/math8.h" 1
 1946 0008 421B      		sub r20, r18    
 1947 000a 00F4      		brcc L_1511     
 1948 000c 40E0      		ldi r20, 0x00  
 1949               		L_1511: 
 1950               	 ;  0 "" 2
 1951               	.LVL126:
 1952               		.loc 2 110 5 is_stmt 1 view .LVU446
 1953               		.loc 2 110 5 is_stmt 0 view .LVU447
 1954               	/* #NOAPP */
 1955               	.LBE75:
 1956               	.LBE76:
 408:quantum/rgblight.c **** }
 1957               		.loc 1 408 5 is_stmt 1 view .LVU448
 1958 000e 282F      		mov r18,r24
 1959 0010 6281      		ldd r22,Z+2
 1960 0012 8181      		ldd r24,Z+1
 1961               	.LVL127:
 408:quantum/rgblight.c **** }
 1962               		.loc 1 408 5 is_stmt 0 view .LVU449
 1963 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1964               	.LVL128:
 408:quantum/rgblight.c **** }
 1965               		.loc 1 408 5 view .LVU450
 1966               		.cfi_endproc
 1967               	.LFE129:
 1969               		.section	.text.rgblight_decrease_val_noeeprom,"ax",@progbits
 1970               	.global	rgblight_decrease_val_noeeprom
 1972               	rgblight_decrease_val_noeeprom:
 1973               	.LFB130:
 410:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 1974               		.loc 1 410 43 is_stmt 1 view -0
 1975               		.cfi_startproc
 1976               	/* prologue: function */
 1977               	/* frame size = 0 */
 1978               	/* stack size = 0 */
 1979               	.L__stack_usage = 0
 410:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 1980               		.loc 1 410 45 view .LVU452
 1981 0000 80E0      		ldi r24,0
 1982 0002 0C94 0000 		jmp rgblight_decrease_val_helper
 1983               	.LVL129:
 1984               		.cfi_endproc
 1985               	.LFE130:
 1987               		.section	.text.rgblight_decrease_val,"ax",@progbits
 1988               	.global	rgblight_decrease_val
 1990               	rgblight_decrease_val:
 1991               	.LFB131:
 411:quantum/rgblight.c **** void rgblight_increase_speed(void) {
 1992               		.loc 1 411 34 view -0
 1993               		.cfi_startproc
 1994               	/* prologue: function */
 1995               	/* frame size = 0 */
 1996               	/* stack size = 0 */
 1997               	.L__stack_usage = 0
 411:quantum/rgblight.c **** void rgblight_increase_speed(void) {
 1998               		.loc 1 411 36 view .LVU454
 1999 0000 81E0      		ldi r24,lo8(1)
 2000 0002 0C94 0000 		jmp rgblight_decrease_val_helper
 2001               	.LVL130:
 2002               		.cfi_endproc
 2003               	.LFE131:
 2005               		.section	.text.rgblight_sethsv,"ax",@progbits
 2006               	.global	rgblight_sethsv
 2008               	rgblight_sethsv:
 2009               	.LVL131:
 2010               	.LFB136:
 504:quantum/rgblight.c **** 
 2011               		.loc 1 504 61 view -0
 2012               		.cfi_startproc
 2013               	/* prologue: function */
 2014               	/* frame size = 0 */
 2015               	/* stack size = 0 */
 2016               	.L__stack_usage = 0
 504:quantum/rgblight.c **** 
 2017               		.loc 1 504 63 view .LVU456
 2018 0000 21E0      		ldi r18,lo8(1)
 2019 0002 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2020               	.LVL132:
 504:quantum/rgblight.c **** 
 2021               		.loc 1 504 63 is_stmt 0 view .LVU457
 2022               		.cfi_endproc
 2023               	.LFE136:
 2025               		.section	.text.rgblight_sethsv_noeeprom,"ax",@progbits
 2026               	.global	rgblight_sethsv_noeeprom
 2028               	rgblight_sethsv_noeeprom:
 2029               	.LVL133:
 2030               	.LFB137:
 506:quantum/rgblight.c **** 
 2031               		.loc 1 506 70 is_stmt 1 view -0
 2032               		.cfi_startproc
 2033               	/* prologue: function */
 2034               	/* frame size = 0 */
 2035               	/* stack size = 0 */
 2036               	.L__stack_usage = 0
 506:quantum/rgblight.c **** 
 2037               		.loc 1 506 72 view .LVU459
 2038 0000 20E0      		ldi r18,0
 2039 0002 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 2040               	.LVL134:
 506:quantum/rgblight.c **** 
 2041               		.loc 1 506 72 is_stmt 0 view .LVU460
 2042               		.cfi_endproc
 2043               	.LFE137:
 2045               		.section	.text.rgblight_setrgb_at,"ax",@progbits
 2046               	.global	rgblight_setrgb_at
 2048               	rgblight_setrgb_at:
 2049               	.LVL135:
 2050               	.LFB146:
 546:quantum/rgblight.c ****     if (!rgblight_config.enable || index >= RGBLED_NUM) {
 2051               		.loc 1 546 73 is_stmt 1 view -0
 2052               		.cfi_startproc
 2053               	/* prologue: function */
 2054               	/* frame size = 0 */
 2055               	/* stack size = 0 */
 2056               	.L__stack_usage = 0
 546:quantum/rgblight.c ****     if (!rgblight_config.enable || index >= RGBLED_NUM) {
 2057               		.loc 1 546 73 is_stmt 0 view .LVU462
 2058 0000 A82F      		mov r26,r24
 2059 0002 362F      		mov r19,r22
 547:quantum/rgblight.c ****         return;
 2060               		.loc 1 547 5 is_stmt 1 view .LVU463
 547:quantum/rgblight.c ****         return;
 2061               		.loc 1 547 25 is_stmt 0 view .LVU464
 2062 0004 8091 0000 		lds r24,rgblight_config
 2063               	.LVL136:
 547:quantum/rgblight.c ****         return;
 2064               		.loc 1 547 8 view .LVU465
 2065 0008 80FF      		sbrs r24,0
 2066 000a 00C0      		rjmp .L98
 547:quantum/rgblight.c ****         return;
 2067               		.loc 1 547 33 discriminator 1 view .LVU466
 2068 000c 2830      		cpi r18,lo8(8)
 2069 000e 00F4      		brsh .L98
 551:quantum/rgblight.c ****     led[index].g = g;
 2070               		.loc 1 551 5 is_stmt 1 view .LVU467
 551:quantum/rgblight.c ****     led[index].g = g;
 2071               		.loc 1 551 18 is_stmt 0 view .LVU468
 2072 0010 822F      		mov r24,r18
 2073 0012 90E0      		ldi r25,0
 2074 0014 63E0      		ldi r22,lo8(3)
 2075 0016 70E0      		ldi r23,0
 2076               	.LVL137:
 551:quantum/rgblight.c ****     led[index].g = g;
 2077               		.loc 1 551 18 view .LVU469
 2078 0018 0E94 0000 		call __mulhi3
 2079 001c FC01      		movw r30,r24
 2080 001e E050      		subi r30,lo8(-(led))
 2081 0020 F040      		sbci r31,hi8(-(led))
 2082 0022 A183      		std Z+1,r26
 552:quantum/rgblight.c ****     led[index].b = b;
 2083               		.loc 1 552 5 is_stmt 1 view .LVU470
 552:quantum/rgblight.c ****     led[index].b = b;
 2084               		.loc 1 552 18 is_stmt 0 view .LVU471
 2085 0024 3083      		st Z,r19
 553:quantum/rgblight.c **** #ifdef RGBW
 2086               		.loc 1 553 5 is_stmt 1 view .LVU472
 553:quantum/rgblight.c **** #ifdef RGBW
 2087               		.loc 1 553 18 is_stmt 0 view .LVU473
 2088 0026 4283      		std Z+2,r20
 557:quantum/rgblight.c **** }
 2089               		.loc 1 557 5 is_stmt 1 view .LVU474
 2090 0028 0C94 0000 		jmp rgblight_set
 2091               	.LVL138:
 2092               	.L98:
 2093               	/* epilogue start */
 558:quantum/rgblight.c **** 
 2094               		.loc 1 558 1 is_stmt 0 view .LVU475
 2095 002c 0895      		ret
 2096               		.cfi_endproc
 2097               	.LFE146:
 2099               		.section	.text.rgblight_sethsv_at,"ax",@progbits
 2100               	.global	rgblight_sethsv_at
 2102               	rgblight_sethsv_at:
 2103               	.LVL139:
 2104               	.LFB147:
 560:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2105               		.loc 1 560 79 is_stmt 1 view -0
 2106               		.cfi_startproc
 560:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2107               		.loc 1 560 79 is_stmt 0 view .LVU477
 2108 0000 1F93      		push r17
 2109               	.LCFI32:
 2110               		.cfi_def_cfa_offset 3
 2111               		.cfi_offset 17, -2
 2112 0002 CF93      		push r28
 2113               	.LCFI33:
 2114               		.cfi_def_cfa_offset 4
 2115               		.cfi_offset 28, -3
 2116 0004 DF93      		push r29
 2117               	.LCFI34:
 2118               		.cfi_def_cfa_offset 5
 2119               		.cfi_offset 29, -4
 2120 0006 00D0      		rcall .
 2121 0008 0F92      		push __tmp_reg__
 2122               	.LCFI35:
 2123               		.cfi_def_cfa_offset 8
 2124 000a CDB7      		in r28,__SP_L__
 2125 000c DEB7      		in r29,__SP_H__
 2126               	.LCFI36:
 2127               		.cfi_def_cfa_register 28
 2128               	/* prologue: function */
 2129               	/* frame size = 3 */
 2130               	/* stack size = 6 */
 2131               	.L__stack_usage = 6
 2132 000e 122F      		mov r17,r18
 561:quantum/rgblight.c ****         return;
 2133               		.loc 1 561 5 is_stmt 1 view .LVU478
 561:quantum/rgblight.c ****         return;
 2134               		.loc 1 561 25 is_stmt 0 view .LVU479
 2135 0010 9091 0000 		lds r25,rgblight_config
 561:quantum/rgblight.c ****         return;
 2136               		.loc 1 561 8 view .LVU480
 2137 0014 90FF      		sbrs r25,0
 2138 0016 00C0      		rjmp .L103
 565:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 2139               		.loc 1 565 5 is_stmt 1 view .LVU481
 566:quantum/rgblight.c ****     rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 2140               		.loc 1 566 5 view .LVU482
 2141               	.LVL140:
 2142               	.LBB79:
 2143               	.LBI79:
 125:quantum/rgblight.c **** 
 2144               		.loc 1 125 6 view .LVU483
 2145               	.LBB80:
 125:quantum/rgblight.c **** 
 2146               		.loc 1 125 70 view .LVU484
 2147 0018 9E01      		movw r18,r28
 2148               	.LVL141:
 125:quantum/rgblight.c **** 
 2149               		.loc 1 125 70 is_stmt 0 view .LVU485
 2150 001a 2F5F      		subi r18,-1
 2151 001c 3F4F      		sbci r19,-1
 2152 001e 0E94 0000 		call sethsv_raw
 2153               	.LVL142:
 125:quantum/rgblight.c **** 
 2154               		.loc 1 125 70 view .LVU486
 2155               	.LBE80:
 2156               	.LBE79:
 567:quantum/rgblight.c **** }
 2157               		.loc 1 567 5 is_stmt 1 view .LVU487
 2158 0022 212F      		mov r18,r17
 2159 0024 4B81      		ldd r20,Y+3
 2160 0026 6981      		ldd r22,Y+1
 2161 0028 8A81      		ldd r24,Y+2
 2162 002a 0E94 0000 		call rgblight_setrgb_at
 2163               	.LVL143:
 2164               	.L103:
 2165               	/* epilogue start */
 568:quantum/rgblight.c **** 
 2166               		.loc 1 568 1 is_stmt 0 view .LVU488
 2167 002e 0F90      		pop __tmp_reg__
 2168 0030 0F90      		pop __tmp_reg__
 2169 0032 0F90      		pop __tmp_reg__
 2170 0034 DF91      		pop r29
 2171 0036 CF91      		pop r28
 2172 0038 1F91      		pop r17
 2173               	.LVL144:
 568:quantum/rgblight.c **** 
 2174               		.loc 1 568 1 view .LVU489
 2175 003a 0895      		ret
 2176               		.cfi_endproc
 2177               	.LFE147:
 2179               		.section	.text.rgblight_setrgb_range,"ax",@progbits
 2180               	.global	rgblight_setrgb_range
 2182               	rgblight_setrgb_range:
 2183               	.LVL145:
 2184               	.LFB149:
 582:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 2185               		.loc 1 582 89 is_stmt 1 view -0
 2186               		.cfi_startproc
 582:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 2187               		.loc 1 582 89 is_stmt 0 view .LVU491
 2188 0000 0F93      		push r16
 2189               	.LCFI37:
 2190               		.cfi_def_cfa_offset 3
 2191               		.cfi_offset 16, -2
 2192               	/* prologue: function */
 2193               	/* frame size = 0 */
 2194               	/* stack size = 1 */
 2195               	.L__stack_usage = 1
 2196 0002 A82F      		mov r26,r24
 2197 0004 362F      		mov r19,r22
 583:quantum/rgblight.c ****         return;
 2198               		.loc 1 583 5 is_stmt 1 view .LVU492
 583:quantum/rgblight.c ****         return;
 2199               		.loc 1 583 25 is_stmt 0 view .LVU493
 2200 0006 8091 0000 		lds r24,rgblight_config
 2201               	.LVL146:
 583:quantum/rgblight.c ****         return;
 2202               		.loc 1 583 8 view .LVU494
 2203 000a 80FF      		sbrs r24,0
 2204 000c 00C0      		rjmp .L106
 583:quantum/rgblight.c ****         return;
 2205               		.loc 1 583 46 discriminator 1 view .LVU495
 2206 000e 2017      		cp r18,r16
 2207 0010 00F4      		brsh .L106
 583:quantum/rgblight.c ****         return;
 2208               		.loc 1 583 62 discriminator 2 view .LVU496
 2209 0012 0930      		cpi r16,lo8(9)
 2210 0014 00F4      		brsh .L106
 2211 0016 822F      		mov r24,r18
 2212 0018 90E0      		ldi r25,0
 2213 001a 63E0      		ldi r22,lo8(3)
 2214 001c 70E0      		ldi r23,0
 2215               	.LVL147:
 583:quantum/rgblight.c ****         return;
 2216               		.loc 1 583 62 discriminator 2 view .LVU497
 2217 001e 0E94 0000 		call __mulhi3
 2218 0022 FC01      		movw r30,r24
 2219 0024 E050      		subi r30,lo8(-(led))
 2220 0026 F040      		sbci r31,hi8(-(led))
 2221               	.LVL148:
 2222               	.L108:
 2223               	.LBB81:
 588:quantum/rgblight.c ****         led[i].g = g;
 2224               		.loc 1 588 9 is_stmt 1 discriminator 3 view .LVU498
 588:quantum/rgblight.c ****         led[i].g = g;
 2225               		.loc 1 588 18 is_stmt 0 discriminator 3 view .LVU499
 2226 0028 A183      		std Z+1,r26
 589:quantum/rgblight.c ****         led[i].b = b;
 2227               		.loc 1 589 9 is_stmt 1 discriminator 3 view .LVU500
 589:quantum/rgblight.c ****         led[i].b = b;
 2228               		.loc 1 589 18 is_stmt 0 discriminator 3 view .LVU501
 2229 002a 3083      		st Z,r19
 590:quantum/rgblight.c **** #ifdef RGBW
 2230               		.loc 1 590 9 is_stmt 1 discriminator 3 view .LVU502
 590:quantum/rgblight.c **** #ifdef RGBW
 2231               		.loc 1 590 18 is_stmt 0 discriminator 3 view .LVU503
 2232 002c 4283      		std Z+2,r20
 587:quantum/rgblight.c ****         led[i].r = r;
 2233               		.loc 1 587 39 discriminator 3 view .LVU504
 2234 002e 2F5F      		subi r18,lo8(-(1))
 2235               	.LVL149:
 587:quantum/rgblight.c ****         led[i].r = r;
 2236               		.loc 1 587 39 discriminator 3 view .LVU505
 2237 0030 3396      		adiw r30,3
 587:quantum/rgblight.c ****         led[i].r = r;
 2238               		.loc 1 587 5 discriminator 3 view .LVU506
 2239 0032 0213      		cpse r16,r18
 2240 0034 00C0      		rjmp .L108
 587:quantum/rgblight.c ****         led[i].r = r;
 2241               		.loc 1 587 5 discriminator 3 view .LVU507
 2242               	.LBE81:
 595:quantum/rgblight.c ****     wait_ms(1);
 2243               		.loc 1 595 5 is_stmt 1 view .LVU508
 2244 0036 0E94 0000 		call rgblight_set
 2245               	.LVL150:
 596:quantum/rgblight.c **** }
 2246               		.loc 1 596 5 view .LVU509
 2247               	.LBB82:
 2248               	.LBI82:
 2249               		.file 3 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchain
   1:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    All rights reserved.
   5:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
   6:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Redistribution and use in source and binary forms, with or without
   7:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    modification, are permitted provided that the following conditions are met:
   8:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
   9:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    * Redistributions of source code must retain the above copyright
  10:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer.
  11:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  12:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer in
  14:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      the documentation and/or other materials provided with the
  15:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      distribution.
  16:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  17:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    * Neither the name of the copyright holders nor the names of
  18:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      contributors may be used to endorse or promote products derived
  19:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      from this software without specific prior written permission.
  20:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  21:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  33:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  35:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #ifndef _UTIL_DELAY_H_
  36:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #define _UTIL_DELAY_H_ 1
  37:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  38:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #ifndef __DOXYGEN__
  39:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #  endif
  42:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif  /* __DOXYGEN__ */
  43:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  44:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #include <inttypes.h>
  45:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #include <util/delay_basic.h>
  46:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #include <math.h>
  47:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  48:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /** \file */
  49:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \code
  51:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     //#define F_CPU 14.7456E6
  53:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     #include <util/delay.h>
  54:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \endcode
  55:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  56:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \note As an alternative method, it is possible to pass the
  57:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     used.
  60:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  61:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     The functions in this header file are wrappers around the basic
  62:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     convenience functions where actual time values can be specified
  64:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     that compile-time constant expressions will be eliminated by
  66:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     compiler optimization so floating-point expressions can be used
  67:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     frequency passed by the macro F_CPU.
  69:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  70:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \note In order for these functions to work as intended, compiler
  71:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     <em>must</em> be an expression that is a known constant at
  73:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     delay will be much longer (and basically unpredictable), and
  75:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     applications that otherwise do not use floating-point calculations
  76:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     will experience severe code bloat by the floating-point library
  77:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     routines linked into the application.
  78:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  79:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     The functions available allow the specification of microsecond, and
  80:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     millisecond delays directly, using the application-supplied macro
  81:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  83:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** */
  84:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  85:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #if !defined(__DOXYGEN__)
  86:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif
  89:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  90:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #ifndef F_CPU
  91:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /* prevent compiler error by supplying a default */
  92:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /** \ingroup util_delay
  94:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \def F_CPU
  95:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \brief CPU frequency in Hz
  96:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  97:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     the delay macros.  This macro is normally supplied by the
  99:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     environment (e.g. from within a project header, or the project's
 100:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     fallback if no such user-provided definition could be found.
 102:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 103:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     integer value.
 107:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****  */
 108:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** # define F_CPU 1000000UL
 109:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif
 110:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 111:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #ifndef __OPTIMIZE__
 112:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif
 114:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 115:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   __STDC_HOSTED__
 118:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #  include <math.h>
 119:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif
 120:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 121:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /**
 122:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    \ingroup util_delay
 123:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 124:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 126:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    The macro F_CPU is supposed to be defined to a
 127:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 129:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 131:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    When the user request delay which exceed the maximum possible one,
 132:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    user will not be informed about decreased resolution.
 136:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 137:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    values greater than the maximal possible delay, overflows results in
 140:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    no delay i.e., 0ms.
 141:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 142:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    microseconds of delay.
 146:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 147:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    respectively.
 151:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 152:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    \note
 153:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 154:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    The implementation of _delay_ms() based on
 155:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    implementations.  In order to get functionality backward compatible
 157:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    must be defined before including this header file. Also, the
 159:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    backward compatible algorithm will be chosen if the code is
 160:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    not available to the compiler then.
 163:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 164:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****  */
 165:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** void
 166:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** _delay_ms(double __ms)
 2250               		.loc 3 166 1 view .LVU510
 2251               	.LBB83:
 167:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** {
 168:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	double __tmp ;
 2252               		.loc 3 168 2 view .LVU511
 169:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   __STDC_HOSTED__
 172:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	uint32_t __ticks_dc;
 2253               		.loc 3 172 2 view .LVU512
 173:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 2254               		.loc 3 173 2 view .LVU513
 174:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 2255               		.loc 3 174 2 view .LVU514
 175:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 176:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 179:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 182:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#else
 183:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 		//round up by default
 184:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 2256               		.loc 3 184 3 view .LVU515
 185:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#endif
 186:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 187:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 2257               		.loc 3 187 2 view .LVU516
 2258 003a 8FE9      		ldi r24,lo8(3999)
 2259 003c 9FE0      		ldi r25,hi8(3999)
 2260 003e 0197      	1:	sbiw r24,1
 2261 0040 01F4      		brne 1b
 2262 0042 00C0      		rjmp .
 2263 0044 0000      		nop
 2264               	.LVL151:
 2265               	.L106:
 2266               	/* epilogue start */
 2267               		.loc 3 187 2 is_stmt 0 view .LVU517
 2268               	.LBE83:
 2269               	.LBE82:
 597:quantum/rgblight.c **** 
 2270               		.loc 1 597 1 view .LVU518
 2271 0046 0F91      		pop r16
 2272               	.LVL152:
 597:quantum/rgblight.c **** 
 2273               		.loc 1 597 1 view .LVU519
 2274 0048 0895      		ret
 2275               		.cfi_endproc
 2276               	.LFE149:
 2278               		.section	.text.rgblight_sethsv_range,"ax",@progbits
 2279               	.global	rgblight_sethsv_range
 2281               	rgblight_sethsv_range:
 2282               	.LVL153:
 2283               	.LFB150:
 599:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2284               		.loc 1 599 95 is_stmt 1 view -0
 2285               		.cfi_startproc
 599:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2286               		.loc 1 599 95 is_stmt 0 view .LVU521
 2287 0000 0F93      		push r16
 2288               	.LCFI38:
 2289               		.cfi_def_cfa_offset 3
 2290               		.cfi_offset 16, -2
 2291 0002 1F93      		push r17
 2292               	.LCFI39:
 2293               		.cfi_def_cfa_offset 4
 2294               		.cfi_offset 17, -3
 2295 0004 CF93      		push r28
 2296               	.LCFI40:
 2297               		.cfi_def_cfa_offset 5
 2298               		.cfi_offset 28, -4
 2299 0006 DF93      		push r29
 2300               	.LCFI41:
 2301               		.cfi_def_cfa_offset 6
 2302               		.cfi_offset 29, -5
 2303 0008 00D0      		rcall .
 2304 000a 0F92      		push __tmp_reg__
 2305               	.LCFI42:
 2306               		.cfi_def_cfa_offset 9
 2307 000c CDB7      		in r28,__SP_L__
 2308 000e DEB7      		in r29,__SP_H__
 2309               	.LCFI43:
 2310               		.cfi_def_cfa_register 28
 2311               	/* prologue: function */
 2312               	/* frame size = 3 */
 2313               	/* stack size = 7 */
 2314               	.L__stack_usage = 7
 2315 0010 122F      		mov r17,r18
 600:quantum/rgblight.c ****         return;
 2316               		.loc 1 600 5 is_stmt 1 view .LVU522
 600:quantum/rgblight.c ****         return;
 2317               		.loc 1 600 25 is_stmt 0 view .LVU523
 2318 0012 9091 0000 		lds r25,rgblight_config
 600:quantum/rgblight.c ****         return;
 2319               		.loc 1 600 8 view .LVU524
 2320 0016 90FF      		sbrs r25,0
 2321 0018 00C0      		rjmp .L113
 604:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 2322               		.loc 1 604 5 is_stmt 1 view .LVU525
 605:quantum/rgblight.c ****     rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 2323               		.loc 1 605 5 view .LVU526
 2324               	.LVL154:
 2325               	.LBB86:
 2326               	.LBI86:
 125:quantum/rgblight.c **** 
 2327               		.loc 1 125 6 view .LVU527
 2328               	.LBB87:
 125:quantum/rgblight.c **** 
 2329               		.loc 1 125 70 view .LVU528
 2330 001a 9E01      		movw r18,r28
 2331               	.LVL155:
 125:quantum/rgblight.c **** 
 2332               		.loc 1 125 70 is_stmt 0 view .LVU529
 2333 001c 2F5F      		subi r18,-1
 2334 001e 3F4F      		sbci r19,-1
 2335 0020 0E94 0000 		call sethsv_raw
 2336               	.LVL156:
 125:quantum/rgblight.c **** 
 2337               		.loc 1 125 70 view .LVU530
 2338               	.LBE87:
 2339               	.LBE86:
 606:quantum/rgblight.c **** }
 2340               		.loc 1 606 5 is_stmt 1 view .LVU531
 2341 0024 212F      		mov r18,r17
 2342 0026 4B81      		ldd r20,Y+3
 2343 0028 6981      		ldd r22,Y+1
 2344 002a 8A81      		ldd r24,Y+2
 2345 002c 0E94 0000 		call rgblight_setrgb_range
 2346               	.LVL157:
 2347               	.L113:
 2348               	/* epilogue start */
 607:quantum/rgblight.c **** 
 2349               		.loc 1 607 1 is_stmt 0 view .LVU532
 2350 0030 0F90      		pop __tmp_reg__
 2351 0032 0F90      		pop __tmp_reg__
 2352 0034 0F90      		pop __tmp_reg__
 2353 0036 DF91      		pop r29
 2354 0038 CF91      		pop r28
 2355 003a 1F91      		pop r17
 2356               	.LVL158:
 607:quantum/rgblight.c **** 
 2357               		.loc 1 607 1 view .LVU533
 2358 003c 0F91      		pop r16
 2359               	.LVL159:
 607:quantum/rgblight.c **** 
 2360               		.loc 1 607 1 view .LVU534
 2361 003e 0895      		ret
 2362               		.cfi_endproc
 2363               	.LFE150:
 2365               		.section	.text.rgblight_sethsv_master,"ax",@progbits
 2366               	.global	rgblight_sethsv_master
 2368               	rgblight_sethsv_master:
 2369               	.LVL160:
 2370               	.LFB153:
 614:quantum/rgblight.c **** 
 2371               		.loc 1 614 68 is_stmt 1 view -0
 2372               		.cfi_startproc
 614:quantum/rgblight.c **** 
 2373               		.loc 1 614 68 is_stmt 0 view .LVU536
 2374 0000 0F93      		push r16
 2375               	.LCFI44:
 2376               		.cfi_def_cfa_offset 3
 2377               		.cfi_offset 16, -2
 2378               	/* prologue: function */
 2379               	/* frame size = 0 */
 2380               	/* stack size = 1 */
 2381               	.L__stack_usage = 1
 614:quantum/rgblight.c **** 
 2382               		.loc 1 614 70 is_stmt 1 view .LVU537
 2383 0002 04E0      		ldi r16,lo8(4)
 2384 0004 20E0      		ldi r18,0
 2385 0006 0E94 0000 		call rgblight_sethsv_range
 2386               	.LVL161:
 2387               	/* epilogue start */
 614:quantum/rgblight.c **** 
 2388               		.loc 1 614 1 is_stmt 0 view .LVU538
 2389 000a 0F91      		pop r16
 2390 000c 0895      		ret
 2391               		.cfi_endproc
 2392               	.LFE153:
 2394               		.section	.text.rgblight_sethsv_slave,"ax",@progbits
 2395               	.global	rgblight_sethsv_slave
 2397               	rgblight_sethsv_slave:
 2398               	.LVL162:
 2399               	.LFB154:
 616:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2400               		.loc 1 616 67 is_stmt 1 view -0
 2401               		.cfi_startproc
 616:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2402               		.loc 1 616 67 is_stmt 0 view .LVU540
 2403 0000 0F93      		push r16
 2404               	.LCFI45:
 2405               		.cfi_def_cfa_offset 3
 2406               		.cfi_offset 16, -2
 2407               	/* prologue: function */
 2408               	/* frame size = 0 */
 2409               	/* stack size = 1 */
 2410               	.L__stack_usage = 1
 616:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2411               		.loc 1 616 69 is_stmt 1 view .LVU541
 2412 0002 08E0      		ldi r16,lo8(8)
 2413 0004 24E0      		ldi r18,lo8(4)
 2414 0006 0E94 0000 		call rgblight_sethsv_range
 2415               	.LVL163:
 2416               	/* epilogue start */
 616:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2417               		.loc 1 616 1 is_stmt 0 view .LVU542
 2418 000a 0F91      		pop r16
 2419 000c 0895      		ret
 2420               		.cfi_endproc
 2421               	.LFE154:
 2423               		.section	.text.rgblight_setrgb_master,"ax",@progbits
 2424               	.global	rgblight_setrgb_master
 2426               	rgblight_setrgb_master:
 2427               	.LVL164:
 2428               	.LFB151:
 610:quantum/rgblight.c **** 
 2429               		.loc 1 610 62 is_stmt 1 view -0
 2430               		.cfi_startproc
 610:quantum/rgblight.c **** 
 2431               		.loc 1 610 62 is_stmt 0 view .LVU544
 2432 0000 0F93      		push r16
 2433               	.LCFI46:
 2434               		.cfi_def_cfa_offset 3
 2435               		.cfi_offset 16, -2
 2436               	/* prologue: function */
 2437               	/* frame size = 0 */
 2438               	/* stack size = 1 */
 2439               	.L__stack_usage = 1
 610:quantum/rgblight.c **** 
 2440               		.loc 1 610 64 is_stmt 1 view .LVU545
 2441 0002 04E0      		ldi r16,lo8(4)
 2442 0004 20E0      		ldi r18,0
 2443 0006 0E94 0000 		call rgblight_setrgb_range
 2444               	.LVL165:
 2445               	/* epilogue start */
 610:quantum/rgblight.c **** 
 2446               		.loc 1 610 1 is_stmt 0 view .LVU546
 2447 000a 0F91      		pop r16
 2448 000c 0895      		ret
 2449               		.cfi_endproc
 2450               	.LFE151:
 2452               		.section	.text.rgblight_setrgb_slave,"ax",@progbits
 2453               	.global	rgblight_setrgb_slave
 2455               	rgblight_setrgb_slave:
 2456               	.LVL166:
 2457               	.LFB152:
 612:quantum/rgblight.c **** 
 2458               		.loc 1 612 61 is_stmt 1 view -0
 2459               		.cfi_startproc
 612:quantum/rgblight.c **** 
 2460               		.loc 1 612 61 is_stmt 0 view .LVU548
 2461 0000 0F93      		push r16
 2462               	.LCFI47:
 2463               		.cfi_def_cfa_offset 3
 2464               		.cfi_offset 16, -2
 2465               	/* prologue: function */
 2466               	/* frame size = 0 */
 2467               	/* stack size = 1 */
 2468               	.L__stack_usage = 1
 612:quantum/rgblight.c **** 
 2469               		.loc 1 612 63 is_stmt 1 view .LVU549
 2470 0002 08E0      		ldi r16,lo8(8)
 2471 0004 24E0      		ldi r18,lo8(4)
 2472 0006 0E94 0000 		call rgblight_setrgb_range
 2473               	.LVL167:
 2474               	/* epilogue start */
 612:quantum/rgblight.c **** 
 2475               		.loc 1 612 1 is_stmt 0 view .LVU550
 2476 000a 0F91      		pop r16
 2477 000c 0895      		ret
 2478               		.cfi_endproc
 2479               	.LFE152:
 2481               		.section	.text.rgblight_effect_rainbow_swirl,"ax",@progbits
 2482               	.global	rgblight_effect_rainbow_swirl
 2484               	rgblight_effect_rainbow_swirl:
 2485               	.LVL168:
 2486               	.LFB165:
 901:quantum/rgblight.c ****     uint8_t hue;
 2487               		.loc 1 901 62 is_stmt 1 view -0
 2488               		.cfi_startproc
 901:quantum/rgblight.c ****     uint8_t hue;
 2489               		.loc 1 901 62 is_stmt 0 view .LVU552
 2490 0000 EF92      		push r14
 2491               	.LCFI48:
 2492               		.cfi_def_cfa_offset 3
 2493               		.cfi_offset 14, -2
 2494 0002 FF92      		push r15
 2495               	.LCFI49:
 2496               		.cfi_def_cfa_offset 4
 2497               		.cfi_offset 15, -3
 2498 0004 1F93      		push r17
 2499               	.LCFI50:
 2500               		.cfi_def_cfa_offset 5
 2501               		.cfi_offset 17, -4
 2502 0006 CF93      		push r28
 2503               	.LCFI51:
 2504               		.cfi_def_cfa_offset 6
 2505               		.cfi_offset 28, -5
 2506 0008 DF93      		push r29
 2507               	.LCFI52:
 2508               		.cfi_def_cfa_offset 7
 2509               		.cfi_offset 29, -6
 2510               	/* prologue: function */
 2511               	/* frame size = 0 */
 2512               	/* stack size = 5 */
 2513               	.L__stack_usage = 5
 2514 000a EC01      		movw r28,r24
 902:quantum/rgblight.c ****     uint8_t i;
 2515               		.loc 1 902 5 is_stmt 1 view .LVU553
 903:quantum/rgblight.c **** 
 2516               		.loc 1 903 5 view .LVU554
 905:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2517               		.loc 1 905 5 view .LVU555
 2518               	.LVL169:
 905:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2519               		.loc 1 905 12 is_stmt 0 view .LVU556
 2520 000c 10E0      		ldi r17,0
 906:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 2521               		.loc 1 906 45 view .LVU557
 2522 000e EE24      		clr r14
 2523 0010 EA94      		dec r14
 2524 0012 F12C      		mov r15,__zero_reg__
 2525               	.LVL170:
 2526               	.L121:
 905:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2527               		.loc 1 905 19 discriminator 1 view .LVU558
 2528 0014 3091 0000 		lds r19,effect_num_leds
 905:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2529               		.loc 1 905 5 discriminator 1 view .LVU559
 2530 0018 1317      		cp r17,r19
 2531 001a 00F0      		brlo .L122
 909:quantum/rgblight.c **** 
 2532               		.loc 1 909 5 is_stmt 1 view .LVU560
 2533 001c 0E94 0000 		call rgblight_set
 2534               	.LVL171:
 911:quantum/rgblight.c ****         anim->current_hue++;
 2535               		.loc 1 911 5 view .LVU561
 911:quantum/rgblight.c ****         anim->current_hue++;
 2536               		.loc 1 911 9 is_stmt 0 view .LVU562
 2537 0020 9A81      		ldd r25,Y+2
 2538 0022 8C81      		ldd r24,Y+4
 911:quantum/rgblight.c ****         anim->current_hue++;
 2539               		.loc 1 911 8 view .LVU563
 2540 0024 90FF      		sbrs r25,0
 2541 0026 00C0      		rjmp .L123
 912:quantum/rgblight.c ****     } else {
 2542               		.loc 1 912 9 is_stmt 1 view .LVU564
 912:quantum/rgblight.c ****     } else {
 2543               		.loc 1 912 26 is_stmt 0 view .LVU565
 2544 0028 8F5F      		subi r24,lo8(-(1))
 2545               	.L125:
 914:quantum/rgblight.c ****     }
 2546               		.loc 1 914 26 view .LVU566
 2547 002a 8C83      		std Y+4,r24
 2548               	/* epilogue start */
 916:quantum/rgblight.c **** #endif
 2549               		.loc 1 916 1 view .LVU567
 2550 002c DF91      		pop r29
 2551 002e CF91      		pop r28
 2552               	.LVL172:
 916:quantum/rgblight.c **** #endif
 2553               		.loc 1 916 1 view .LVU568
 2554 0030 1F91      		pop r17
 2555               	.LVL173:
 916:quantum/rgblight.c **** #endif
 2556               		.loc 1 916 1 view .LVU569
 2557 0032 FF90      		pop r15
 2558 0034 EF90      		pop r14
 2559 0036 0895      		ret
 2560               	.LVL174:
 2561               	.L122:
 906:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 2562               		.loc 1 906 9 is_stmt 1 discriminator 3 view .LVU570
 907:quantum/rgblight.c ****     }
 2563               		.loc 1 907 9 discriminator 3 view .LVU571
 2564               	.LBB90:
 2565               	.LBI90:
 125:quantum/rgblight.c **** 
 2566               		.loc 1 125 6 discriminator 3 view .LVU572
 2567               	.LBB91:
 125:quantum/rgblight.c **** 
 2568               		.loc 1 125 70 discriminator 3 view .LVU573
 2569               	.LBE91:
 2570               	.LBE90:
 907:quantum/rgblight.c ****     }
 2571               		.loc 1 907 82 is_stmt 0 discriminator 3 view .LVU574
 2572 0038 8091 0000 		lds r24,effect_start_pos
 907:quantum/rgblight.c ****     }
 2573               		.loc 1 907 9 discriminator 3 view .LVU575
 2574 003c 810F      		add r24,r17
 2575 003e 9927      		clr r25
 2576 0040 991F      		rol r25
 2577 0042 63E0      		ldi r22,lo8(3)
 2578 0044 70E0      		ldi r23,0
 2579 0046 0E94 0000 		call __mulhi3
 2580 004a FC01      		movw r30,r24
 2581 004c E050      		subi r30,lo8(-(led))
 2582 004e F040      		sbci r31,hi8(-(led))
 906:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 2583               		.loc 1 906 45 discriminator 3 view .LVU576
 2584 0050 632F      		mov r22,r19
 2585 0052 70E0      		ldi r23,0
 2586 0054 C701      		movw r24,r14
 2587 0056 0E94 0000 		call __divmodhi4
 906:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 2588               		.loc 1 906 67 discriminator 3 view .LVU577
 2589 005a 812F      		mov r24,r17
 2590 005c 0E94 0000 		call __mulqi3
 906:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 2591               		.loc 1 906 13 discriminator 3 view .LVU578
 2592 0060 9C81      		ldd r25,Y+4
 2593               	.LBB93:
 2594               	.LBB92:
 125:quantum/rgblight.c **** 
 2595               		.loc 1 125 70 discriminator 3 view .LVU579
 2596 0062 9F01      		movw r18,r30
 2597 0064 4091 0000 		lds r20,rgblight_config+3
 2598 0068 6091 0000 		lds r22,rgblight_config+2
 2599 006c 890F      		add r24,r25
 2600 006e 0E94 0000 		call sethsv_raw
 2601               	.LVL175:
 125:quantum/rgblight.c **** 
 2602               		.loc 1 125 70 discriminator 3 view .LVU580
 2603               	.LBE92:
 2604               	.LBE93:
 905:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2605               		.loc 1 905 39 discriminator 3 view .LVU581
 2606 0072 1F5F      		subi r17,lo8(-(1))
 2607               	.LVL176:
 905:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 2608               		.loc 1 905 39 discriminator 3 view .LVU582
 2609 0074 00C0      		rjmp .L121
 2610               	.L123:
 914:quantum/rgblight.c ****     }
 2611               		.loc 1 914 9 is_stmt 1 view .LVU583
 914:quantum/rgblight.c ****     }
 2612               		.loc 1 914 26 is_stmt 0 view .LVU584
 2613 0076 8150      		subi r24,lo8(-(-1))
 2614 0078 00C0      		rjmp .L125
 2615               		.cfi_endproc
 2616               	.LFE165:
 2618               		.section	.text.rgblight_effect_snake,"ax",@progbits
 2619               	.global	rgblight_effect_snake
 2621               	rgblight_effect_snake:
 2622               	.LVL177:
 2623               	.LFB166:
 922:quantum/rgblight.c ****     static uint8_t pos = 0;
 2624               		.loc 1 922 54 is_stmt 1 view -0
 2625               		.cfi_startproc
 922:quantum/rgblight.c ****     static uint8_t pos = 0;
 2626               		.loc 1 922 54 is_stmt 0 view .LVU586
 2627 0000 BF92      		push r11
 2628               	.LCFI53:
 2629               		.cfi_def_cfa_offset 3
 2630               		.cfi_offset 11, -2
 2631 0002 CF92      		push r12
 2632               	.LCFI54:
 2633               		.cfi_def_cfa_offset 4
 2634               		.cfi_offset 12, -3
 2635 0004 DF92      		push r13
 2636               	.LCFI55:
 2637               		.cfi_def_cfa_offset 5
 2638               		.cfi_offset 13, -4
 2639 0006 EF92      		push r14
 2640               	.LCFI56:
 2641               		.cfi_def_cfa_offset 6
 2642               		.cfi_offset 14, -5
 2643 0008 FF92      		push r15
 2644               	.LCFI57:
 2645               		.cfi_def_cfa_offset 7
 2646               		.cfi_offset 15, -6
 2647 000a 0F93      		push r16
 2648               	.LCFI58:
 2649               		.cfi_def_cfa_offset 8
 2650               		.cfi_offset 16, -7
 2651 000c 1F93      		push r17
 2652               	.LCFI59:
 2653               		.cfi_def_cfa_offset 9
 2654               		.cfi_offset 17, -8
 2655 000e CF93      		push r28
 2656               	.LCFI60:
 2657               		.cfi_def_cfa_offset 10
 2658               		.cfi_offset 28, -9
 2659 0010 DF93      		push r29
 2660               	.LCFI61:
 2661               		.cfi_def_cfa_offset 11
 2662               		.cfi_offset 29, -10
 2663               	/* prologue: function */
 2664               	/* frame size = 0 */
 2665               	/* stack size = 9 */
 2666               	.L__stack_usage = 9
 923:quantum/rgblight.c ****     uint8_t        i, j;
 2667               		.loc 1 923 5 is_stmt 1 view .LVU587
 924:quantum/rgblight.c ****     int8_t         k;
 2668               		.loc 1 924 5 view .LVU588
 925:quantum/rgblight.c ****     int8_t         increment = 1;
 2669               		.loc 1 925 5 view .LVU589
 926:quantum/rgblight.c **** 
 2670               		.loc 1 926 5 view .LVU590
 2671               	.LVL178:
 928:quantum/rgblight.c ****         increment = -1;
 2672               		.loc 1 928 5 view .LVU591
 928:quantum/rgblight.c ****         increment = -1;
 2673               		.loc 1 928 9 is_stmt 0 view .LVU592
 2674 0012 FC01      		movw r30,r24
 2675 0014 8281      		ldd r24,Z+2
 2676               	.LVL179:
 929:quantum/rgblight.c ****     }
 2677               		.loc 1 929 19 view .LVU593
 2678 0016 DFEF      		ldi r29,lo8(-1)
 928:quantum/rgblight.c ****         increment = -1;
 2679               		.loc 1 928 8 view .LVU594
 2680 0018 80FF      		sbrs r24,0
 926:quantum/rgblight.c **** 
 2681               		.loc 1 926 20 view .LVU595
 2682 001a D1E0      		ldi r29,lo8(1)
 2683               	.L127:
 2684               	.LVL180:
 943:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 2685               		.loc 1 943 5 is_stmt 1 view .LVU596
 943:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 2686               		.loc 1 943 12 is_stmt 0 view .LVU597
 2687 001c C0E0      		ldi r28,0
 2688               	.LVL181:
 2689               	.L128:
 943:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 2690               		.loc 1 943 5 discriminator 1 view .LVU598
 2691 001e 8091 0000 		lds r24,effect_num_leds
 2692 0022 C817      		cp r28,r24
 2693 0024 00F0      		brlo .L133
 964:quantum/rgblight.c ****     if (increment == 1) {
 2694               		.loc 1 964 5 is_stmt 1 view .LVU599
 2695 0026 0E94 0000 		call rgblight_set
 2696               	.LVL182:
 965:quantum/rgblight.c ****         if (pos - 1 < 0) {
 2697               		.loc 1 965 5 view .LVU600
 2698 002a 8091 0000 		lds r24,pos.3212
 965:quantum/rgblight.c ****         if (pos - 1 < 0) {
 2699               		.loc 1 965 8 is_stmt 0 view .LVU601
 2700 002e D130      		cpi r29,lo8(1)
 2701 0030 01F0      		breq .+2
 2702 0032 00C0      		rjmp .L134
 966:quantum/rgblight.c ****             pos = effect_num_leds - 1;
 2703               		.loc 1 966 9 is_stmt 1 view .LVU602
 966:quantum/rgblight.c ****             pos = effect_num_leds - 1;
 2704               		.loc 1 966 12 is_stmt 0 view .LVU603
 2705 0034 8111      		cpse r24,__zero_reg__
 2706 0036 00C0      		rjmp .L135
 967:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2707               		.loc 1 967 13 is_stmt 1 view .LVU604
 967:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2708               		.loc 1 967 35 is_stmt 0 view .LVU605
 2709 0038 8091 0000 		lds r24,effect_num_leds
 2710               	.L135:
 972:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2711               		.loc 1 972 13 is_stmt 1 view .LVU606
 972:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2712               		.loc 1 972 17 is_stmt 0 view .LVU607
 2713 003c 8150      		subi r24,lo8(-(-1))
 2714               	.L139:
 978:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2715               		.loc 1 978 13 view .LVU608
 2716 003e 8093 0000 		sts pos.3212,r24
 2717               	/* epilogue start */
 983:quantum/rgblight.c **** #endif
 2718               		.loc 1 983 1 view .LVU609
 2719 0042 DF91      		pop r29
 2720               	.LVL183:
 983:quantum/rgblight.c **** #endif
 2721               		.loc 1 983 1 view .LVU610
 2722 0044 CF91      		pop r28
 2723               	.LVL184:
 983:quantum/rgblight.c **** #endif
 2724               		.loc 1 983 1 view .LVU611
 2725 0046 1F91      		pop r17
 2726 0048 0F91      		pop r16
 2727 004a FF90      		pop r15
 2728 004c EF90      		pop r14
 2729 004e DF90      		pop r13
 2730 0050 CF90      		pop r12
 2731 0052 BF90      		pop r11
 2732 0054 0895      		ret
 2733               	.LVL185:
 2734               	.L133:
 2735               	.LBB97:
 944:quantum/rgblight.c ****         ledp->r        = 0;
 2736               		.loc 1 944 9 is_stmt 1 view .LVU612
 944:quantum/rgblight.c ****         ledp->r        = 0;
 2737               		.loc 1 944 34 is_stmt 0 view .LVU613
 2738 0056 8091 0000 		lds r24,effect_start_pos
 2739 005a CC2E      		mov r12,r28
 2740 005c D12C      		mov r13,__zero_reg__
 2741 005e 8C0D      		add r24,r12
 2742 0060 9D2D      		mov r25,r13
 2743 0062 911D      		adc r25,__zero_reg__
 2744 0064 63E0      		ldi r22,lo8(3)
 2745 0066 70E0      		ldi r23,0
 2746 0068 0E94 0000 		call __mulhi3
 944:quantum/rgblight.c ****         ledp->r        = 0;
 2747               		.loc 1 944 19 view .LVU614
 2748 006c 8050      		subi r24,lo8(-(led))
 2749 006e 9040      		sbci r25,hi8(-(led))
 2750 0070 7C01      		movw r14,r24
 2751               	.LVL186:
 945:quantum/rgblight.c ****         ledp->g        = 0;
 2752               		.loc 1 945 9 is_stmt 1 view .LVU615
 945:quantum/rgblight.c ****         ledp->g        = 0;
 2753               		.loc 1 945 24 is_stmt 0 view .LVU616
 2754 0072 FC01      		movw r30,r24
 2755 0074 1182      		std Z+1,__zero_reg__
 946:quantum/rgblight.c ****         ledp->b        = 0;
 2756               		.loc 1 946 9 is_stmt 1 view .LVU617
 946:quantum/rgblight.c ****         ledp->b        = 0;
 2757               		.loc 1 946 24 is_stmt 0 view .LVU618
 2758 0076 1082      		st Z,__zero_reg__
 947:quantum/rgblight.c **** #    ifdef RGBW
 2759               		.loc 1 947 9 is_stmt 1 view .LVU619
 947:quantum/rgblight.c **** #    ifdef RGBW
 2760               		.loc 1 947 24 is_stmt 0 view .LVU620
 2761 0078 1282      		std Z+2,__zero_reg__
 951:quantum/rgblight.c ****             k = pos + j * increment;
 2762               		.loc 1 951 9 is_stmt 1 view .LVU621
 2763               	.LVL187:
 947:quantum/rgblight.c **** #    ifdef RGBW
 2764               		.loc 1 947 24 is_stmt 0 view .LVU622
 2765 007a 04E0      		ldi r16,lo8(4)
 2766 007c 10E0      		ldi r17,0
 2767 007e B12C      		mov r11,__zero_reg__
 2768               	.LVL188:
 2769               	.L132:
 952:quantum/rgblight.c ****             if (k > RGBLED_NUM) {
 2770               		.loc 1 952 13 is_stmt 1 view .LVU623
 952:quantum/rgblight.c ****             if (k > RGBLED_NUM) {
 2771               		.loc 1 952 21 is_stmt 0 view .LVU624
 2772 0080 8091 0000 		lds r24,pos.3212
 2773 0084 8B0D      		add r24,r11
 2774               	.LVL189:
 953:quantum/rgblight.c ****                 k = k % RGBLED_NUM;
 2775               		.loc 1 953 13 is_stmt 1 view .LVU625
 953:quantum/rgblight.c ****                 k = k % RGBLED_NUM;
 2776               		.loc 1 953 16 is_stmt 0 view .LVU626
 2777 0086 8930      		cpi r24,lo8(9)
 2778 0088 04F0      		brlt .L129
 954:quantum/rgblight.c ****             }
 2779               		.loc 1 954 17 is_stmt 1 view .LVU627
 954:quantum/rgblight.c ****             }
 2780               		.loc 1 954 19 is_stmt 0 view .LVU628
 2781 008a 8770      		andi r24,lo8(7)
 2782               	.LVL190:
 956:quantum/rgblight.c ****                 k = k + effect_num_leds;
 2783               		.loc 1 956 13 is_stmt 1 view .LVU629
 2784               	.L130:
 959:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
 2785               		.loc 1 959 13 view .LVU630
 959:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
 2786               		.loc 1 959 19 is_stmt 0 view .LVU631
 2787 008c 082E      		mov __tmp_reg__,r24
 2788 008e 000C      		lsl r0
 2789 0090 990B      		sbc r25,r25
 959:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
 2790               		.loc 1 959 16 view .LVU632
 2791 0092 C816      		cp r12,r24
 2792 0094 D906      		cpc r13,r25
 2793 0096 01F4      		brne .L131
 960:quantum/rgblight.c ****             }
 2794               		.loc 1 960 17 is_stmt 1 view .LVU633
 2795               	.LVL191:
 2796               	.LBB98:
 2797               	.LBI98:
 125:quantum/rgblight.c **** 
 2798               		.loc 1 125 6 view .LVU634
 2799               	.LBB99:
 125:quantum/rgblight.c **** 
 2800               		.loc 1 125 70 view .LVU635
 2801               	.LBE99:
 2802               	.LBE98:
 960:quantum/rgblight.c ****             }
 2803               		.loc 1 960 91 is_stmt 0 view .LVU636
 2804 0098 8091 0000 		lds r24,rgblight_config+3
 2805               	.LVL192:
 960:quantum/rgblight.c ****             }
 2806               		.loc 1 960 96 view .LVU637
 2807 009c 90E0      		ldi r25,0
 2808 009e B801      		movw r22,r16
 2809 00a0 0E94 0000 		call __mulhi3
 960:quantum/rgblight.c ****             }
 2810               		.loc 1 960 133 view .LVU638
 2811 00a4 9595      		asr r25
 2812 00a6 8795      		ror r24
 2813 00a8 9595      		asr r25
 2814 00aa 8795      		ror r24
 2815               	.LBB101:
 2816               	.LBB100:
 125:quantum/rgblight.c **** 
 2817               		.loc 1 125 70 view .LVU639
 2818 00ac 9701      		movw r18,r14
 2819 00ae 482F      		mov r20,r24
 2820 00b0 6091 0000 		lds r22,rgblight_config+2
 2821 00b4 8091 0000 		lds r24,rgblight_config+1
 2822 00b8 0E94 0000 		call sethsv_raw
 2823               	.LVL193:
 2824               	.L131:
 125:quantum/rgblight.c **** 
 2825               		.loc 1 125 70 view .LVU640
 2826 00bc BD0E      		add r11,r29
 2827 00be 0150      		subi r16,1
 2828 00c0 1109      		sbc r17,__zero_reg__
 2829               	.LBE100:
 2830               	.LBE101:
 951:quantum/rgblight.c ****             k = pos + j * increment;
 2831               		.loc 1 951 9 discriminator 2 view .LVU641
 2832 00c2 01F4      		brne .L132
 2833               	.LBE97:
 943:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 2834               		.loc 1 943 39 discriminator 2 view .LVU642
 2835 00c4 CF5F      		subi r28,lo8(-(1))
 2836               	.LVL194:
 943:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 2837               		.loc 1 943 39 discriminator 2 view .LVU643
 2838 00c6 00C0      		rjmp .L128
 2839               	.LVL195:
 2840               	.L129:
 2841               	.LBB102:
 956:quantum/rgblight.c ****                 k = k + effect_num_leds;
 2842               		.loc 1 956 13 is_stmt 1 view .LVU644
 956:quantum/rgblight.c ****                 k = k + effect_num_leds;
 2843               		.loc 1 956 16 is_stmt 0 view .LVU645
 2844 00c8 87FF      		sbrs r24,7
 2845 00ca 00C0      		rjmp .L130
 957:quantum/rgblight.c ****             }
 2846               		.loc 1 957 17 is_stmt 1 view .LVU646
 957:quantum/rgblight.c ****             }
 2847               		.loc 1 957 23 is_stmt 0 view .LVU647
 2848 00cc 9091 0000 		lds r25,effect_num_leds
 2849 00d0 890F      		add r24,r25
 2850               	.LVL196:
 957:quantum/rgblight.c ****             }
 2851               		.loc 1 957 23 view .LVU648
 2852 00d2 00C0      		rjmp .L130
 2853               	.LVL197:
 2854               	.L134:
 957:quantum/rgblight.c ****             }
 2855               		.loc 1 957 23 view .LVU649
 2856               	.LBE102:
 978:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2857               		.loc 1 978 9 is_stmt 1 view .LVU650
 978:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2858               		.loc 1 978 20 is_stmt 0 view .LVU651
 2859 00d4 90E0      		ldi r25,0
 2860 00d6 0196      		adiw r24,1
 978:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2861               		.loc 1 978 25 view .LVU652
 2862 00d8 6091 0000 		lds r22,effect_num_leds
 2863 00dc 70E0      		ldi r23,0
 2864 00de 0E94 0000 		call __divmodhi4
 2865 00e2 00C0      		rjmp .L139
 2866               		.cfi_endproc
 2867               	.LFE166:
 2869               		.section	.text.rgblight_effect_knight,"ax",@progbits
 2870               	.global	rgblight_effect_knight
 2872               	rgblight_effect_knight:
 2873               	.LVL198:
 2874               	.LFB167:
 989:quantum/rgblight.c ****     static int8_t low_bound  = 0;
 2875               		.loc 1 989 55 is_stmt 1 view -0
 2876               		.cfi_startproc
 989:quantum/rgblight.c ****     static int8_t low_bound  = 0;
 2877               		.loc 1 989 55 is_stmt 0 view .LVU654
 2878 0000 CF93      		push r28
 2879               	.LCFI62:
 2880               		.cfi_def_cfa_offset 3
 2881               		.cfi_offset 28, -2
 2882               	/* prologue: function */
 2883               	/* frame size = 0 */
 2884               	/* stack size = 1 */
 2885               	.L__stack_usage = 1
 990:quantum/rgblight.c ****     static int8_t high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
 2886               		.loc 1 990 5 is_stmt 1 view .LVU655
 991:quantum/rgblight.c ****     static int8_t increment  = 1;
 2887               		.loc 1 991 5 view .LVU656
 992:quantum/rgblight.c ****     uint8_t       i, cur;
 2888               		.loc 1 992 5 view .LVU657
 993:quantum/rgblight.c **** 
 2889               		.loc 1 993 5 view .LVU658
1004:quantum/rgblight.c ****         led[i].r = 0;
 2890               		.loc 1 1004 5 view .LVU659
1004:quantum/rgblight.c ****         led[i].r = 0;
 2891               		.loc 1 1004 12 is_stmt 0 view .LVU660
 2892 0002 2091 0000 		lds r18,effect_start_pos
 2893               	.LVL199:
1004:quantum/rgblight.c ****         led[i].r = 0;
 2894               		.loc 1 1004 34 view .LVU661
 2895 0006 3091 0000 		lds r19,effect_end_pos
 2896 000a 822F      		mov r24,r18
 2897               	.LVL200:
1004:quantum/rgblight.c ****         led[i].r = 0;
 2898               		.loc 1 1004 34 view .LVU662
 2899 000c 90E0      		ldi r25,0
 2900 000e 63E0      		ldi r22,lo8(3)
 2901 0010 70E0      		ldi r23,0
 2902 0012 0E94 0000 		call __mulhi3
 2903 0016 FC01      		movw r30,r24
 2904 0018 E050      		subi r30,lo8(-(led))
 2905 001a F040      		sbci r31,hi8(-(led))
 2906               	.L141:
1004:quantum/rgblight.c ****         led[i].r = 0;
 2907               		.loc 1 1004 5 discriminator 1 view .LVU663
 2908 001c 2317      		cp r18,r19
 2909 001e 00F0      		brlo .L142
1013:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
 2910               		.loc 1 1013 12 view .LVU664
 2911 0020 C0E0      		ldi r28,0
 2912               	.LVL201:
 2913               	.L143:
1013:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
 2914               		.loc 1 1013 19 discriminator 1 view .LVU665
 2915 0022 6091 0000 		lds r22,effect_num_leds
1013:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
 2916               		.loc 1 1013 5 discriminator 1 view .LVU666
 2917 0026 C617      		cp r28,r22
 2918 0028 00F0      		brlo .L146
1027:quantum/rgblight.c **** 
 2919               		.loc 1 1027 5 is_stmt 1 view .LVU667
 2920 002a 0E94 0000 		call rgblight_set
 2921               	.LVL202:
1031:quantum/rgblight.c ****     high_bound += increment;
 2922               		.loc 1 1031 5 view .LVU668
1031:quantum/rgblight.c ****     high_bound += increment;
 2923               		.loc 1 1031 15 is_stmt 0 view .LVU669
 2924 002e 2091 0000 		lds r18,increment.3230
 2925 0032 8091 0000 		lds r24,low_bound.3228
 2926 0036 820F      		add r24,r18
 2927 0038 8093 0000 		sts low_bound.3228,r24
1032:quantum/rgblight.c **** 
 2928               		.loc 1 1032 5 is_stmt 1 view .LVU670
1032:quantum/rgblight.c **** 
 2929               		.loc 1 1032 16 is_stmt 0 view .LVU671
 2930 003c 9091 0000 		lds r25,high_bound.3229
 2931 0040 920F      		add r25,r18
 2932 0042 9093 0000 		sts high_bound.3229,r25
1034:quantum/rgblight.c ****         increment = -increment;
 2933               		.loc 1 1034 5 is_stmt 1 view .LVU672
1034:quantum/rgblight.c ****         increment = -increment;
 2934               		.loc 1 1034 8 is_stmt 0 view .LVU673
 2935 0046 1916      		cp __zero_reg__,r25
 2936 0048 04F4      		brge .L147
1034:quantum/rgblight.c ****         increment = -increment;
 2937               		.loc 1 1034 38 discriminator 1 view .LVU674
 2938 004a 082E      		mov __tmp_reg__,r24
 2939 004c 000C      		lsl r0
 2940 004e 990B      		sbc r25,r25
1034:quantum/rgblight.c ****         increment = -increment;
 2941               		.loc 1 1034 72 discriminator 1 view .LVU675
 2942 0050 4091 0000 		lds r20,effect_num_leds
 2943 0054 4150      		subi r20,1
 2944 0056 550B      		sbc r21,r21
1034:quantum/rgblight.c ****         increment = -increment;
 2945               		.loc 1 1034 25 discriminator 1 view .LVU676
 2946 0058 8417      		cp r24,r20
 2947 005a 9507      		cpc r25,r21
 2948 005c 04F0      		brlt .L140
 2949               	.L147:
1035:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2950               		.loc 1 1035 9 is_stmt 1 view .LVU677
1035:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 2951               		.loc 1 1035 19 is_stmt 0 view .LVU678
 2952 005e 2195      		neg r18
 2953 0060 2093 0000 		sts increment.3230,r18
 2954               	.L140:
 2955               	/* epilogue start */
1042:quantum/rgblight.c **** #endif
 2956               		.loc 1 1042 1 view .LVU679
 2957 0064 CF91      		pop r28
 2958               	.LVL203:
1042:quantum/rgblight.c **** #endif
 2959               		.loc 1 1042 1 view .LVU680
 2960 0066 0895      		ret
 2961               	.LVL204:
 2962               	.L142:
1005:quantum/rgblight.c ****         led[i].g = 0;
 2963               		.loc 1 1005 9 is_stmt 1 discriminator 3 view .LVU681
1005:quantum/rgblight.c ****         led[i].g = 0;
 2964               		.loc 1 1005 18 is_stmt 0 discriminator 3 view .LVU682
 2965 0068 1182      		std Z+1,__zero_reg__
1006:quantum/rgblight.c ****         led[i].b = 0;
 2966               		.loc 1 1006 9 is_stmt 1 discriminator 3 view .LVU683
1006:quantum/rgblight.c ****         led[i].b = 0;
 2967               		.loc 1 1006 18 is_stmt 0 discriminator 3 view .LVU684
 2968 006a 1082      		st Z,__zero_reg__
1007:quantum/rgblight.c **** #    ifdef RGBW
 2969               		.loc 1 1007 9 is_stmt 1 discriminator 3 view .LVU685
1007:quantum/rgblight.c **** #    ifdef RGBW
 2970               		.loc 1 1007 18 is_stmt 0 discriminator 3 view .LVU686
 2971 006c 1282      		std Z+2,__zero_reg__
1004:quantum/rgblight.c ****         led[i].r = 0;
 2972               		.loc 1 1004 53 discriminator 3 view .LVU687
 2973 006e 2F5F      		subi r18,lo8(-(1))
 2974               	.LVL205:
1004:quantum/rgblight.c ****         led[i].r = 0;
 2975               		.loc 1 1004 53 discriminator 3 view .LVU688
 2976 0070 3396      		adiw r30,3
 2977 0072 00C0      		rjmp .L141
 2978               	.LVL206:
 2979               	.L146:
1014:quantum/rgblight.c **** 
 2980               		.loc 1 1014 9 is_stmt 1 view .LVU689
1014:quantum/rgblight.c **** 
 2981               		.loc 1 1014 18 is_stmt 0 view .LVU690
 2982 0074 EC2F      		mov r30,r28
 2983 0076 F0E0      		ldi r31,0
1014:quantum/rgblight.c **** 
 2984               		.loc 1 1014 51 view .LVU691
 2985 0078 70E0      		ldi r23,0
 2986 007a CF01      		movw r24,r30
 2987 007c 0E94 0000 		call __divmodhi4
1014:quantum/rgblight.c **** 
 2988               		.loc 1 1014 13 view .LVU692
 2989 0080 9091 0000 		lds r25,effect_start_pos
 2990 0084 890F      		add r24,r25
 2991               	.LVL207:
1016:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 2992               		.loc 1 1016 9 is_stmt 1 view .LVU693
 2993 0086 90E0      		ldi r25,0
1016:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 2994               		.loc 1 1016 15 is_stmt 0 view .LVU694
 2995 0088 2091 0000 		lds r18,low_bound.3228
 2996 008c 022E      		mov __tmp_reg__,r18
 2997 008e 000C      		lsl r0
 2998 0090 330B      		sbc r19,r19
1017:quantum/rgblight.c ****         } else {
 2999               		.loc 1 1017 13 view .LVU695
 3000 0092 63E0      		ldi r22,lo8(3)
 3001 0094 70E0      		ldi r23,0
 3002 0096 0E94 0000 		call __mulhi3
 3003               	.LVL208:
1016:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3004               		.loc 1 1016 12 view .LVU696
 3005 009a E217      		cp r30,r18
 3006 009c F307      		cpc r31,r19
 3007 009e 04F0      		brlt .L144
1016:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3008               		.loc 1 1016 33 discriminator 1 view .LVU697
 3009 00a0 2091 0000 		lds r18,high_bound.3229
 3010 00a4 022E      		mov __tmp_reg__,r18
 3011 00a6 000C      		lsl r0
 3012 00a8 330B      		sbc r19,r19
1016:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 3013               		.loc 1 1016 28 discriminator 1 view .LVU698
 3014 00aa 2E17      		cp r18,r30
 3015 00ac 3F07      		cpc r19,r31
 3016 00ae 04F0      		brlt .L144
1017:quantum/rgblight.c ****         } else {
 3017               		.loc 1 1017 13 is_stmt 1 view .LVU699
 3018               	.LVL209:
 3019               	.LBB105:
 3020               	.LBI105:
 125:quantum/rgblight.c **** 
 3021               		.loc 1 125 6 view .LVU700
 3022               	.LBB106:
 125:quantum/rgblight.c **** 
 3023               		.loc 1 125 70 view .LVU701
 3024               	.LBE106:
 3025               	.LBE105:
1017:quantum/rgblight.c ****         } else {
 3026               		.loc 1 1017 13 is_stmt 0 view .LVU702
 3027 00b0 9C01      		movw r18,r24
 3028 00b2 2050      		subi r18,lo8(-(led))
 3029 00b4 3040      		sbci r19,hi8(-(led))
 3030               	.LBB108:
 3031               	.LBB107:
 125:quantum/rgblight.c **** 
 3032               		.loc 1 125 70 view .LVU703
 3033 00b6 4091 0000 		lds r20,rgblight_config+3
 3034 00ba 6091 0000 		lds r22,rgblight_config+2
 3035 00be 8091 0000 		lds r24,rgblight_config+1
 3036 00c2 0E94 0000 		call sethsv_raw
 3037               	.LVL210:
 3038               	.L145:
 125:quantum/rgblight.c **** 
 3039               		.loc 1 125 70 view .LVU704
 3040               	.LBE107:
 3041               	.LBE108:
1013:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
 3042               		.loc 1 1013 54 discriminator 2 view .LVU705
 3043 00c6 CF5F      		subi r28,lo8(-(1))
 3044               	.LVL211:
1013:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
 3045               		.loc 1 1013 54 discriminator 2 view .LVU706
 3046 00c8 00C0      		rjmp .L143
 3047               	.L144:
1019:quantum/rgblight.c ****             led[cur].g = 0;
 3048               		.loc 1 1019 13 is_stmt 1 view .LVU707
1019:quantum/rgblight.c ****             led[cur].g = 0;
 3049               		.loc 1 1019 24 is_stmt 0 view .LVU708
 3050 00ca FC01      		movw r30,r24
 3051 00cc E050      		subi r30,lo8(-(led))
 3052 00ce F040      		sbci r31,hi8(-(led))
 3053 00d0 1182      		std Z+1,__zero_reg__
1020:quantum/rgblight.c ****             led[cur].b = 0;
 3054               		.loc 1 1020 13 is_stmt 1 view .LVU709
1020:quantum/rgblight.c ****             led[cur].b = 0;
 3055               		.loc 1 1020 24 is_stmt 0 view .LVU710
 3056 00d2 1082      		st Z,__zero_reg__
1021:quantum/rgblight.c **** #    ifdef RGBW
 3057               		.loc 1 1021 13 is_stmt 1 view .LVU711
1021:quantum/rgblight.c **** #    ifdef RGBW
 3058               		.loc 1 1021 24 is_stmt 0 view .LVU712
 3059 00d4 1282      		std Z+2,__zero_reg__
 3060 00d6 00C0      		rjmp .L145
 3061               		.cfi_endproc
 3062               	.LFE167:
 3064               		.section	.text.rgblight_effect_christmas,"ax",@progbits
 3065               	.global	rgblight_effect_christmas
 3067               	rgblight_effect_christmas:
 3068               	.LVL212:
 3069               	.LFB168:
1046:quantum/rgblight.c ****     uint8_t hue;
 3070               		.loc 1 1046 58 is_stmt 1 view -0
 3071               		.cfi_startproc
1046:quantum/rgblight.c ****     uint8_t hue;
 3072               		.loc 1 1046 58 is_stmt 0 view .LVU714
 3073 0000 0F93      		push r16
 3074               	.LCFI63:
 3075               		.cfi_def_cfa_offset 3
 3076               		.cfi_offset 16, -2
 3077 0002 1F93      		push r17
 3078               	.LCFI64:
 3079               		.cfi_def_cfa_offset 4
 3080               		.cfi_offset 17, -3
 3081 0004 CF93      		push r28
 3082               	.LCFI65:
 3083               		.cfi_def_cfa_offset 5
 3084               		.cfi_offset 28, -4
 3085               	/* prologue: function */
 3086               	/* frame size = 0 */
 3087               	/* stack size = 3 */
 3088               	.L__stack_usage = 3
 3089 0006 8C01      		movw r16,r24
1047:quantum/rgblight.c ****     uint8_t i;
 3090               		.loc 1 1047 5 is_stmt 1 view .LVU715
1048:quantum/rgblight.c **** 
 3091               		.loc 1 1048 5 view .LVU716
1050:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
 3092               		.loc 1 1050 5 view .LVU717
1050:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
 3093               		.loc 1 1050 50 is_stmt 0 view .LVU718
 3094 0008 FC01      		movw r30,r24
 3095 000a 8481      		ldd r24,Z+4
 3096 000c 9581      		ldd r25,Z+5
 3097               	.LVL213:
1050:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
 3098               		.loc 1 1050 50 view .LVU719
 3099 000e 0196      		adiw r24,1
1050:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
 3100               		.loc 1 1050 55 view .LVU720
 3101 0010 8170      		andi r24,1
 3102 0012 9927      		clr r25
1050:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
 3103               		.loc 1 1050 26 view .LVU721
 3104 0014 9583      		std Z+5,r25
 3105 0016 8483      		std Z+4,r24
1051:quantum/rgblight.c ****         hue = 0 + ((i / RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 3106               		.loc 1 1051 5 is_stmt 1 view .LVU722
 3107               	.LVL214:
1051:quantum/rgblight.c ****         hue = 0 + ((i / RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 3108               		.loc 1 1051 12 is_stmt 0 view .LVU723
 3109 0018 C0E0      		ldi r28,0
 3110               	.LVL215:
 3111               	.L150:
1051:quantum/rgblight.c ****         hue = 0 + ((i / RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 3112               		.loc 1 1051 5 discriminator 1 view .LVU724
 3113 001a 8091 0000 		lds r24,effect_num_leds
 3114 001e C817      		cp r28,r24
 3115 0020 00F0      		brlo .L151
1055:quantum/rgblight.c **** }
 3116               		.loc 1 1055 5 is_stmt 1 view .LVU725
 3117               	/* epilogue start */
1056:quantum/rgblight.c **** #endif
 3118               		.loc 1 1056 1 is_stmt 0 view .LVU726
 3119 0022 CF91      		pop r28
 3120               	.LVL216:
1056:quantum/rgblight.c **** #endif
 3121               		.loc 1 1056 1 view .LVU727
 3122 0024 1F91      		pop r17
 3123 0026 0F91      		pop r16
 3124               	.LVL217:
1055:quantum/rgblight.c **** }
 3125               		.loc 1 1055 5 view .LVU728
 3126 0028 0C94 0000 		jmp rgblight_set
 3127               	.LVL218:
 3128               	.L151:
1052:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 3129               		.loc 1 1052 9 is_stmt 1 discriminator 3 view .LVU729
1053:quantum/rgblight.c ****     }
 3130               		.loc 1 1053 9 discriminator 3 view .LVU730
 3131               	.LBB111:
 3132               	.LBI111:
 125:quantum/rgblight.c **** 
 3133               		.loc 1 125 6 discriminator 3 view .LVU731
 3134               	.LBB112:
 125:quantum/rgblight.c **** 
 3135               		.loc 1 125 70 discriminator 3 view .LVU732
 3136               	.LBE112:
 3137               	.LBE111:
1053:quantum/rgblight.c ****     }
 3138               		.loc 1 1053 82 is_stmt 0 discriminator 3 view .LVU733
 3139 002c 8091 0000 		lds r24,effect_start_pos
1053:quantum/rgblight.c ****     }
 3140               		.loc 1 1053 9 discriminator 3 view .LVU734
 3141 0030 8C0F      		add r24,r28
 3142 0032 9927      		clr r25
 3143 0034 991F      		rol r25
 3144 0036 63E0      		ldi r22,lo8(3)
 3145 0038 70E0      		ldi r23,0
 3146 003a 0E94 0000 		call __mulhi3
 3147 003e 9C01      		movw r18,r24
 3148 0040 2050      		subi r18,lo8(-(led))
 3149 0042 3040      		sbci r19,hi8(-(led))
1052:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 3150               		.loc 1 1052 23 discriminator 3 view .LVU735
 3151 0044 8C2F      		mov r24,r28
 3152 0046 8695      		lsr r24
1052:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 3153               		.loc 1 1052 56 discriminator 3 view .LVU736
 3154 0048 F801      		movw r30,r16
 3155 004a 4481      		ldd r20,Z+4
 3156 004c 5581      		ldd r21,Z+5
 3157 004e 840F      		add r24,r20
 3158 0050 952F      		mov r25,r21
 3159 0052 911D      		adc r25,__zero_reg__
1052:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 3160               		.loc 1 1052 13 discriminator 3 view .LVU737
 3161 0054 8170      		andi r24,lo8(1)
 3162 0056 65E5      		ldi r22,lo8(85)
 3163 0058 0E94 0000 		call __mulqi3
 3164               	.LBB114:
 3165               	.LBB113:
 125:quantum/rgblight.c **** 
 3166               		.loc 1 125 70 discriminator 3 view .LVU738
 3167 005c 4091 0000 		lds r20,rgblight_config+3
 3168 0060 6091 0000 		lds r22,rgblight_config+2
 3169 0064 0E94 0000 		call sethsv_raw
 3170               	.LVL219:
 125:quantum/rgblight.c **** 
 3171               		.loc 1 125 70 discriminator 3 view .LVU739
 3172               	.LBE113:
 3173               	.LBE114:
1051:quantum/rgblight.c ****         hue = 0 + ((i / RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 3174               		.loc 1 1051 39 discriminator 3 view .LVU740
 3175 0068 CF5F      		subi r28,lo8(-(1))
 3176               	.LVL220:
1051:quantum/rgblight.c ****         hue = 0 + ((i / RGBLIGHT_EFFECT_CHRISTMAS_STEP + anim->current_offset) % 2) * 85;
 3177               		.loc 1 1051 39 discriminator 3 view .LVU741
 3178 006a 00C0      		rjmp .L150
 3179               		.cfi_endproc
 3180               	.LFE168:
 3182               		.section	.text.rgblight_effect_alternating,"ax",@progbits
 3183               	.global	rgblight_effect_alternating
 3185               	rgblight_effect_alternating:
 3186               	.LVL221:
 3187               	.LFB170:
1088:quantum/rgblight.c **** #endif
1089:quantum/rgblight.c **** 
1090:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_ALTERNATING
1091:quantum/rgblight.c **** void rgblight_effect_alternating(animation_status_t *anim) {
 3188               		.loc 1 1091 60 is_stmt 1 view -0
 3189               		.cfi_startproc
 3190               		.loc 1 1091 60 is_stmt 0 view .LVU743
 3191 0000 0F93      		push r16
 3192               	.LCFI66:
 3193               		.cfi_def_cfa_offset 3
 3194               		.cfi_offset 16, -2
 3195 0002 1F93      		push r17
 3196               	.LCFI67:
 3197               		.cfi_def_cfa_offset 4
 3198               		.cfi_offset 17, -3
 3199 0004 CF93      		push r28
 3200               	.LCFI68:
 3201               		.cfi_def_cfa_offset 5
 3202               		.cfi_offset 28, -4
 3203 0006 DF93      		push r29
 3204               	.LCFI69:
 3205               		.cfi_def_cfa_offset 6
 3206               		.cfi_offset 29, -5
 3207               	/* prologue: function */
 3208               	/* frame size = 0 */
 3209               	/* stack size = 4 */
 3210               	.L__stack_usage = 4
 3211 0008 8C01      		movw r16,r24
1092:quantum/rgblight.c ****     for (int i = 0; i < effect_num_leds; i++) {
 3212               		.loc 1 1092 5 is_stmt 1 view .LVU744
 3213               	.LBB123:
 3214               		.loc 1 1092 10 view .LVU745
 3215               	.LVL222:
 3216               		.loc 1 1092 14 is_stmt 0 view .LVU746
 3217 000a D0E0      		ldi r29,0
 3218 000c C0E0      		ldi r28,0
 3219               	.LVL223:
 3220               	.L153:
 3221               		.loc 1 1092 23 discriminator 1 view .LVU747
 3222 000e 3091 0000 		lds r19,effect_num_leds
 3223               		.loc 1 1092 5 discriminator 1 view .LVU748
 3224 0012 3C17      		cp r19,r28
 3225 0014 1D06      		cpc __zero_reg__,r29
 3226 0016 01F0      		breq .+2
 3227 0018 04F4      		brge .L157
 3228               	.LBE123:
1093:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
1094:quantum/rgblight.c ****         if (i < effect_num_leds / 2 && anim->pos) {
1095:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
1096:quantum/rgblight.c ****         } else if (i >= effect_num_leds / 2 && !anim->pos) {
1097:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
1098:quantum/rgblight.c ****         } else {
1099:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, 0, ledp);
1100:quantum/rgblight.c ****         }
1101:quantum/rgblight.c ****     }
1102:quantum/rgblight.c ****     rgblight_set();
 3229               		.loc 1 1102 5 is_stmt 1 view .LVU749
 3230 001a 0E94 0000 		call rgblight_set
 3231               	.LVL224:
1103:quantum/rgblight.c ****     anim->pos = (anim->pos + 1) % 2;
 3232               		.loc 1 1103 5 view .LVU750
 3233               		.loc 1 1103 22 is_stmt 0 view .LVU751
 3234 001e F801      		movw r30,r16
 3235 0020 8481      		ldd r24,Z+4
 3236 0022 90E0      		ldi r25,0
 3237               		.loc 1 1103 28 view .LVU752
 3238 0024 0196      		adiw r24,1
 3239               		.loc 1 1103 33 view .LVU753
 3240 0026 8170      		andi r24,1
 3241 0028 9927      		clr r25
 3242               		.loc 1 1103 15 view .LVU754
 3243 002a 8483      		std Z+4,r24
 3244               	/* epilogue start */
1104:quantum/rgblight.c **** }
 3245               		.loc 1 1104 1 view .LVU755
 3246 002c DF91      		pop r29
 3247 002e CF91      		pop r28
 3248               	.LVL225:
 3249               		.loc 1 1104 1 view .LVU756
 3250 0030 1F91      		pop r17
 3251 0032 0F91      		pop r16
 3252               	.LVL226:
 3253               		.loc 1 1104 1 view .LVU757
 3254 0034 0895      		ret
 3255               	.LVL227:
 3256               	.L157:
 3257               	.LBB132:
 3258               	.LBB124:
1093:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 3259               		.loc 1 1093 9 is_stmt 1 view .LVU758
1093:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 3260               		.loc 1 1093 34 is_stmt 0 view .LVU759
 3261 0036 8091 0000 		lds r24,effect_start_pos
 3262 003a 8C0F      		add r24,r28
 3263 003c 9D2F      		mov r25,r29
 3264 003e 911D      		adc r25,__zero_reg__
 3265 0040 63E0      		ldi r22,lo8(3)
 3266 0042 70E0      		ldi r23,0
 3267 0044 0E94 0000 		call __mulhi3
1093:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 3268               		.loc 1 1093 19 view .LVU760
 3269 0048 AC01      		movw r20,r24
 3270 004a 4050      		subi r20,lo8(-(led))
 3271 004c 5040      		sbci r21,hi8(-(led))
 3272               	.LVL228:
1094:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3273               		.loc 1 1094 9 is_stmt 1 view .LVU761
 3274 004e F801      		movw r30,r16
 3275 0050 9481      		ldd r25,Z+4
 3276 0052 6091 0000 		lds r22,rgblight_config+2
 3277 0056 8091 0000 		lds r24,rgblight_config+1
1094:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3278               		.loc 1 1094 33 is_stmt 0 view .LVU762
 3279 005a 3695      		lsr r19
1094:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3280               		.loc 1 1094 12 view .LVU763
 3281 005c 3C17      		cp r19,r28
 3282 005e 1D06      		cpc __zero_reg__,r29
 3283 0060 01F0      		breq .L154
 3284 0062 04F0      		brlt .L154
1094:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3285               		.loc 1 1094 37 discriminator 1 view .LVU764
 3286 0064 9923      		tst r25
 3287 0066 01F0      		breq .L155
 3288               	.L162:
1097:quantum/rgblight.c ****         } else {
 3289               		.loc 1 1097 13 is_stmt 1 view .LVU765
 3290               	.LVL229:
 3291               	.LBB125:
 3292               	.LBI125:
 125:quantum/rgblight.c **** 
 3293               		.loc 1 125 6 view .LVU766
 3294               	.LBB126:
 125:quantum/rgblight.c **** 
 3295               		.loc 1 125 70 view .LVU767
 3296 0068 9A01      		movw r18,r20
 3297 006a 4091 0000 		lds r20,rgblight_config+3
 3298               	.LVL230:
 3299               	.L161:
 125:quantum/rgblight.c **** 
 3300               		.loc 1 125 70 is_stmt 0 view .LVU768
 3301               	.LBE126:
 3302               	.LBE125:
 3303               	.LBB127:
 3304               	.LBB128:
 3305 006e 0E94 0000 		call sethsv_raw
 3306               	.LVL231:
 125:quantum/rgblight.c **** 
 3307               		.loc 1 125 70 view .LVU769
 3308               	.LBE128:
 3309               	.LBE127:
 3310               	.LBE124:
1092:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 3311               		.loc 1 1092 43 view .LVU770
 3312 0072 2196      		adiw r28,1
 3313               	.LVL232:
1092:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 3314               		.loc 1 1092 43 view .LVU771
 3315 0074 00C0      		rjmp .L153
 3316               	.LVL233:
 3317               	.L154:
 3318               	.LBB131:
1096:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3319               		.loc 1 1096 16 is_stmt 1 discriminator 1 view .LVU772
1096:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, ledp);
 3320               		.loc 1 1096 45 is_stmt 0 discriminator 1 view .LVU773
 3321 0076 9923      		tst r25
 3322 0078 01F0      		breq .L162
 3323               	.L155:
1099:quantum/rgblight.c ****         }
 3324               		.loc 1 1099 13 is_stmt 1 view .LVU774
 3325               	.LVL234:
 3326               	.LBB130:
 3327               	.LBI127:
 125:quantum/rgblight.c **** 
 3328               		.loc 1 125 6 view .LVU775
 3329               	.LBB129:
 125:quantum/rgblight.c **** 
 3330               		.loc 1 125 70 view .LVU776
 3331 007a 9A01      		movw r18,r20
 3332 007c 40E0      		ldi r20,0
 3333               	.LVL235:
 125:quantum/rgblight.c **** 
 3334               		.loc 1 125 70 is_stmt 0 view .LVU777
 3335 007e 00C0      		rjmp .L161
 3336               	.LBE129:
 3337               	.LBE130:
 3338               	.LBE131:
 3339               	.LBE132:
 3340               		.cfi_endproc
 3341               	.LFE170:
 3343               		.section	.text.rgblight_disable,"ax",@progbits
 3344               	.global	rgblight_disable
 3346               	rgblight_disable:
 3347               	.LFB112:
 353:quantum/rgblight.c ****     rgblight_config.enable = 0;
 3348               		.loc 1 353 29 is_stmt 1 view -0
 3349               		.cfi_startproc
 3350               	/* prologue: function */
 3351               	/* frame size = 0 */
 3352               	/* stack size = 0 */
 3353               	.L__stack_usage = 0
 354:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 3354               		.loc 1 354 5 view .LVU779
 354:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 3355               		.loc 1 354 28 is_stmt 0 view .LVU780
 3356 0000 E0E0      		ldi r30,lo8(rgblight_config)
 3357 0002 F0E0      		ldi r31,hi8(rgblight_config)
 3358 0004 8081      		ld r24,Z
 3359 0006 8E7F      		andi r24,lo8(~(1<<0))
 3360 0008 8083      		st Z,r24
 355:quantum/rgblight.c ****     dprintf("rgblight disable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 3361               		.loc 1 355 5 is_stmt 1 view .LVU781
 3362 000a 6081      		ld r22,Z
 3363 000c 7181      		ldd r23,Z+1
 3364 000e 8281      		ldd r24,Z+2
 3365 0010 9381      		ldd r25,Z+3
 3366 0012 0E94 0000 		call eeconfig_update_rgblight
 3367               	.LVL236:
 356:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 3368               		.loc 1 356 96 view .LVU782
 358:quantum/rgblight.c **** #endif
 3369               		.loc 1 358 5 view .LVU783
 3370               	.LBB137:
 3371               	.LBI137:
 701:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 3372               		.loc 1 701 6 view .LVU784
 3373               	.LBB138:
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3374               		.loc 1 718 5 view .LVU785
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3375               		.loc 1 718 35 is_stmt 0 view .LVU786
 3376 0016 1092 0000 		sts rgblight_status+1,__zero_reg__
 719:quantum/rgblight.c **** }
 3377               		.loc 1 719 43 is_stmt 1 view .LVU787
 3378               	.LBE138:
 3379               	.LBE137:
 360:quantum/rgblight.c ****     wait_ms(50);
 3380               		.loc 1 360 35 view .LVU788
 361:quantum/rgblight.c ****     rgblight_set();
 3381               		.loc 1 361 5 view .LVU789
 3382               	.LVL237:
 3383               	.LBB139:
 3384               	.LBI139:
 166:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** {
 3385               		.loc 3 166 1 view .LVU790
 3386               	.LBB140:
 168:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 3387               		.loc 3 168 2 view .LVU791
 172:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 3388               		.loc 3 172 2 view .LVU792
 173:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 3389               		.loc 3 173 2 view .LVU793
 174:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 3390               		.loc 3 174 2 view .LVU794
 184:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#endif
 3391               		.loc 3 184 3 view .LVU795
 3392               		.loc 3 187 2 view .LVU796
 3393 001a 2FEF      		ldi r18,lo8(159999)
 3394 001c 80E7      		ldi r24,hi8(159999)
 3395 001e 92E0      		ldi r25,hlo8(159999)
 3396 0020 2150      	1:	subi r18,1
 3397 0022 8040      		sbci r24,0
 3398 0024 9040      		sbci r25,0
 3399 0026 01F4      		brne 1b
 3400 0028 00C0      		rjmp .
 3401 002a 0000      		nop
 3402               	.LVL238:
 3403               		.loc 3 187 2 is_stmt 0 view .LVU797
 3404               	.LBE140:
 3405               	.LBE139:
 362:quantum/rgblight.c **** }
 3406               		.loc 1 362 5 is_stmt 1 view .LVU798
 3407 002c 0C94 0000 		jmp rgblight_set
 3408               	.LVL239:
 3409               		.cfi_endproc
 3410               	.LFE112:
 3412               		.section	.text.rgblight_disable_noeeprom,"ax",@progbits
 3413               	.global	rgblight_disable_noeeprom
 3415               	rgblight_disable_noeeprom:
 3416               	.LFB113:
 365:quantum/rgblight.c ****     rgblight_config.enable = 0;
 3417               		.loc 1 365 38 view -0
 3418               		.cfi_startproc
 3419               	/* prologue: function */
 3420               	/* frame size = 0 */
 3421               	/* stack size = 0 */
 3422               	.L__stack_usage = 0
 366:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 3423               		.loc 1 366 5 view .LVU800
 366:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 3424               		.loc 1 366 28 is_stmt 0 view .LVU801
 3425 0000 E0E0      		ldi r30,lo8(rgblight_config)
 3426 0002 F0E0      		ldi r31,hi8(rgblight_config)
 3427 0004 8081      		ld r24,Z
 3428 0006 8E7F      		andi r24,lo8(~(1<<0))
 3429 0008 8083      		st Z,r24
 367:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 3430               		.loc 1 367 98 is_stmt 1 view .LVU802
 369:quantum/rgblight.c **** #endif
 3431               		.loc 1 369 5 view .LVU803
 3432               	.LBB145:
 3433               	.LBI145:
 701:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 3434               		.loc 1 701 6 view .LVU804
 3435               	.LBB146:
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3436               		.loc 1 718 5 view .LVU805
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3437               		.loc 1 718 35 is_stmt 0 view .LVU806
 3438 000a 1092 0000 		sts rgblight_status+1,__zero_reg__
 719:quantum/rgblight.c **** }
 3439               		.loc 1 719 43 is_stmt 1 view .LVU807
 3440               	.LBE146:
 3441               	.LBE145:
 371:quantum/rgblight.c ****     wait_ms(50);
 3442               		.loc 1 371 35 view .LVU808
 372:quantum/rgblight.c ****     rgblight_set();
 3443               		.loc 1 372 5 view .LVU809
 3444               	.LVL240:
 3445               	.LBB147:
 3446               	.LBI147:
 166:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** {
 3447               		.loc 3 166 1 view .LVU810
 3448               	.LBB148:
 168:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 3449               		.loc 3 168 2 view .LVU811
 172:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 3450               		.loc 3 172 2 view .LVU812
 173:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 3451               		.loc 3 173 2 view .LVU813
 174:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 3452               		.loc 3 174 2 view .LVU814
 184:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#endif
 3453               		.loc 3 184 3 view .LVU815
 3454               		.loc 3 187 2 view .LVU816
 3455 000e 2FEF      		ldi r18,lo8(159999)
 3456 0010 80E7      		ldi r24,hi8(159999)
 3457 0012 92E0      		ldi r25,hlo8(159999)
 3458 0014 2150      	1:	subi r18,1
 3459 0016 8040      		sbci r24,0
 3460 0018 9040      		sbci r25,0
 3461 001a 01F4      		brne 1b
 3462 001c 00C0      		rjmp .
 3463 001e 0000      		nop
 3464               	.LVL241:
 3465               		.loc 3 187 2 is_stmt 0 view .LVU817
 3466               	.LBE148:
 3467               	.LBE147:
 373:quantum/rgblight.c **** }
 3468               		.loc 1 373 5 is_stmt 1 view .LVU818
 3469 0020 0C94 0000 		jmp rgblight_set
 3470               	.LVL242:
 3471               		.cfi_endproc
 3472               	.LFE113:
 3474               		.section	.text.rgblight_timer_init,"ax",@progbits
 3475               	.global	rgblight_timer_init
 3477               	rgblight_timer_init:
 3478               	.LFB156:
 701:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 3479               		.loc 1 701 32 view -0
 3480               		.cfi_startproc
 3481               	/* prologue: function */
 3482               	/* frame size = 0 */
 3483               	/* stack size = 0 */
 3484               	.L__stack_usage = 0
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3485               		.loc 1 718 5 view .LVU820
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3486               		.loc 1 718 35 is_stmt 0 view .LVU821
 3487 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 719:quantum/rgblight.c **** }
 3488               		.loc 1 719 43 is_stmt 1 view .LVU822
 3489               	/* epilogue start */
 720:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 3490               		.loc 1 720 1 is_stmt 0 view .LVU823
 3491 0004 0895      		ret
 3492               		.cfi_endproc
 3493               	.LFE156:
 3495               		.section	.text.rgblight_timer_enable,"ax",@progbits
 3496               	.global	rgblight_timer_enable
 3498               	rgblight_timer_enable:
 3499               	.LFB157:
 721:quantum/rgblight.c ****     if (!is_static_effect(rgblight_config.mode)) {
 3500               		.loc 1 721 34 is_stmt 1 view -0
 3501               		.cfi_startproc
 3502               	/* prologue: function */
 3503               	/* frame size = 0 */
 3504               	/* stack size = 0 */
 3505               	.L__stack_usage = 0
 722:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 3506               		.loc 1 722 5 view .LVU825
 3507               	.LVL243:
 3508               	.LBB151:
 3509               	.LBI151:
  77:quantum/rgblight.c **** 
 3510               		.loc 1 77 19 view .LVU826
 3511               	.LBB152:
  77:quantum/rgblight.c **** 
 3512               		.loc 1 77 52 view .LVU827
 3513               	.LBE152:
 3514               	.LBE151:
 722:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 3515               		.loc 1 722 42 is_stmt 0 view .LVU828
 3516 0000 6091 0000 		lds r22,rgblight_config
 3517 0004 6695      		lsr r22
 3518               	.LBB154:
 3519               	.LBB153:
  77:quantum/rgblight.c **** 
 3520               		.loc 1 77 59 view .LVU829
 3521 0006 70E0      		ldi r23,0
 3522 0008 4BE0      		ldi r20,lo8(11)
 3523 000a 50E0      		ldi r21,0
 3524 000c 80E0      		ldi r24,lo8(static_effect_table)
 3525 000e 90E0      		ldi r25,hi8(static_effect_table)
 3526 0010 0E94 0000 		call memchr
 3527               	.LVL244:
  77:quantum/rgblight.c **** 
 3528               		.loc 1 77 59 view .LVU830
 3529               	.LBE153:
 3530               	.LBE154:
 722:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 3531               		.loc 1 722 8 view .LVU831
 3532 0014 892B      		or r24,r25
 3533 0016 01F4      		brne .L167
 723:quantum/rgblight.c ****     }
 3534               		.loc 1 723 9 is_stmt 1 view .LVU832
 723:quantum/rgblight.c ****     }
 3535               		.loc 1 723 39 is_stmt 0 view .LVU833
 3536 0018 81E0      		ldi r24,lo8(1)
 3537 001a 8093 0000 		sts rgblight_status+1,r24
 3538               	.L167:
 725:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3539               		.loc 1 725 5 is_stmt 1 view .LVU834
 725:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3540               		.loc 1 725 35 is_stmt 0 view .LVU835
 3541 001e 0E94 0000 		call timer_read
 3542               	.LVL245:
 725:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3543               		.loc 1 725 33 view .LVU836
 3544 0022 9093 0000 		sts animation_status+1,r25
 3545 0026 8093 0000 		sts animation_status,r24
 726:quantum/rgblight.c ****     dprintf("rgblight timer enabled.\n");
 3546               		.loc 1 726 43 is_stmt 1 view .LVU837
 727:quantum/rgblight.c **** }
 3547               		.loc 1 727 41 view .LVU838
 3548               	/* epilogue start */
 728:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 3549               		.loc 1 728 1 is_stmt 0 view .LVU839
 3550 002a 0895      		ret
 3551               		.cfi_endproc
 3552               	.LFE157:
 3554               		.section	.text.rgblight_mode_eeprom_helper,"ax",@progbits
 3555               	.global	rgblight_mode_eeprom_helper
 3557               	rgblight_mode_eeprom_helper:
 3558               	.LVL246:
 3559               	.LFB105:
 284:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 3560               		.loc 1 284 70 is_stmt 1 view -0
 3561               		.cfi_startproc
 3562               	/* prologue: function */
 3563               	/* frame size = 0 */
 3564               	/* stack size = 0 */
 3565               	.L__stack_usage = 0
 285:quantum/rgblight.c ****         return;
 3566               		.loc 1 285 5 view .LVU841
 285:quantum/rgblight.c ****         return;
 3567               		.loc 1 285 25 is_stmt 0 view .LVU842
 3568 0000 9091 0000 		lds r25,rgblight_config
 285:quantum/rgblight.c ****         return;
 3569               		.loc 1 285 8 view .LVU843
 3570 0004 90FF      		sbrs r25,0
 3571 0006 00C0      		rjmp .L168
 288:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 3572               		.loc 1 288 5 is_stmt 1 view .LVU844
 3573 0008 9170      		andi r25,lo8(1)
 288:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 3574               		.loc 1 288 8 is_stmt 0 view .LVU845
 3575 000a 8111      		cpse r24,__zero_reg__
 3576 000c 00C0      		rjmp .L170
 289:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 3577               		.loc 1 289 9 is_stmt 1 view .LVU846
 289:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 3578               		.loc 1 289 30 is_stmt 0 view .LVU847
 3579 000e 9260      		ori r25,lo8(2)
 3580               	.LVL247:
 3581               	.L179:
 293:quantum/rgblight.c ****     }
 3582               		.loc 1 293 30 view .LVU848
 3583 0010 9093 0000 		sts rgblight_config,r25
 295:quantum/rgblight.c ****     if (write_to_eeprom) {
 3584               		.loc 1 295 35 is_stmt 1 view .LVU849
 296:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 3585               		.loc 1 296 5 view .LVU850
 296:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 3586               		.loc 1 296 8 is_stmt 0 view .LVU851
 3587 0014 6623      		tst r22
 3588 0016 01F0      		breq .L173
 297:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 3589               		.loc 1 297 9 is_stmt 1 view .LVU852
 3590 0018 6091 0000 		lds r22,rgblight_config
 3591 001c 7091 0000 		lds r23,rgblight_config+1
 3592 0020 8091 0000 		lds r24,rgblight_config+2
 3593 0024 9091 0000 		lds r25,rgblight_config+3
 3594               	.LVL248:
 297:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 3595               		.loc 1 297 9 is_stmt 0 view .LVU853
 3596 0028 0E94 0000 		call eeconfig_update_rgblight
 3597               	.LVL249:
 298:quantum/rgblight.c ****     } else {
 3598               		.loc 1 298 70 is_stmt 1 view .LVU854
 3599               	.L173:
 300:quantum/rgblight.c ****     }
 3600               		.loc 1 300 72 view .LVU855
 302:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 3601               		.loc 1 302 5 view .LVU856
 3602               	.LBB159:
 3603               	.LBI159:
  77:quantum/rgblight.c **** 
 3604               		.loc 1 77 19 view .LVU857
 3605               	.LBB160:
  77:quantum/rgblight.c **** 
 3606               		.loc 1 77 52 view .LVU858
 3607               	.LBE160:
 3608               	.LBE159:
 302:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 3609               		.loc 1 302 41 is_stmt 0 view .LVU859
 3610 002c 6091 0000 		lds r22,rgblight_config
 3611 0030 6695      		lsr r22
 3612               	.LBB162:
 3613               	.LBB161:
  77:quantum/rgblight.c **** 
 3614               		.loc 1 77 59 view .LVU860
 3615 0032 70E0      		ldi r23,0
 3616 0034 4BE0      		ldi r20,lo8(11)
 3617 0036 50E0      		ldi r21,0
 3618 0038 80E0      		ldi r24,lo8(static_effect_table)
 3619 003a 90E0      		ldi r25,hi8(static_effect_table)
 3620 003c 0E94 0000 		call memchr
 3621               	.LVL250:
  77:quantum/rgblight.c **** 
 3622               		.loc 1 77 59 view .LVU861
 3623               	.LBE161:
 3624               	.LBE162:
 302:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 3625               		.loc 1 302 8 view .LVU862
 3626 0040 892B      		or r24,r25
 3627 0042 01F0      		breq .L174
 304:quantum/rgblight.c **** #endif
 3628               		.loc 1 304 9 is_stmt 1 view .LVU863
 3629               	.LBB163:
 3630               	.LBI163:
 701:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 3631               		.loc 1 701 6 view .LVU864
 3632               	.LBB164:
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3633               		.loc 1 718 5 view .LVU865
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3634               		.loc 1 718 35 is_stmt 0 view .LVU866
 3635 0044 1092 0000 		sts rgblight_status+1,__zero_reg__
 719:quantum/rgblight.c **** }
 3636               		.loc 1 719 43 is_stmt 1 view .LVU867
 3637               	.L175:
 3638               	.LBE164:
 3639               	.LBE163:
 312:quantum/rgblight.c **** #endif
 3640               		.loc 1 312 5 view .LVU868
 312:quantum/rgblight.c **** #endif
 3641               		.loc 1 312 30 is_stmt 0 view .LVU869
 3642 0048 81E0      		ldi r24,lo8(1)
 3643 004a 8093 0000 		sts animation_status+3,r24
 314:quantum/rgblight.c **** }
 3644               		.loc 1 314 5 is_stmt 1 view .LVU870
 3645 004e 4091 0000 		lds r20,rgblight_config+3
 3646 0052 6091 0000 		lds r22,rgblight_config+2
 3647 0056 8091 0000 		lds r24,rgblight_config+1
 3648 005a 0C94 0000 		jmp rgblight_sethsv_noeeprom
 3649               	.LVL251:
 3650               	.L170:
 290:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 3651               		.loc 1 290 12 view .LVU871
 290:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 3652               		.loc 1 290 15 is_stmt 0 view .LVU872
 3653 005e 8532      		cpi r24,lo8(37)
 3654 0060 00F0      		brlo .L172
 291:quantum/rgblight.c ****     } else {
 3655               		.loc 1 291 9 is_stmt 1 view .LVU873
 291:quantum/rgblight.c ****     } else {
 3656               		.loc 1 291 30 is_stmt 0 view .LVU874
 3657 0062 9864      		ori r25,lo8(72)
 3658 0064 00C0      		rjmp .L179
 3659               	.L172:
 293:quantum/rgblight.c ****     }
 3660               		.loc 1 293 9 is_stmt 1 view .LVU875
 293:quantum/rgblight.c ****     }
 3661               		.loc 1 293 30 is_stmt 0 view .LVU876
 3662 0066 880F      		lsl r24
 3663               	.LVL252:
 293:quantum/rgblight.c ****     }
 3664               		.loc 1 293 30 view .LVU877
 3665 0068 982B      		or r25,r24
 3666 006a 00C0      		rjmp .L179
 3667               	.LVL253:
 3668               	.L174:
 308:quantum/rgblight.c **** #endif
 3669               		.loc 1 308 9 is_stmt 1 view .LVU878
 3670 006c 0E94 0000 		call rgblight_timer_enable
 3671               	.LVL254:
 3672 0070 00C0      		rjmp .L175
 3673               	.LVL255:
 3674               	.L168:
 3675               	/* epilogue start */
 315:quantum/rgblight.c **** 
 3676               		.loc 1 315 1 is_stmt 0 view .LVU879
 3677 0072 0895      		ret
 3678               		.cfi_endproc
 3679               	.LFE105:
 3681               		.section	.text.rgblight_step_helper,"ax",@progbits
 3682               	.global	rgblight_step_helper
 3684               	rgblight_step_helper:
 3685               	.LVL256:
 3686               	.LFB98:
 255:quantum/rgblight.c ****     uint8_t mode = 0;
 3687               		.loc 1 255 49 is_stmt 1 view -0
 3688               		.cfi_startproc
 3689               	/* prologue: function */
 3690               	/* frame size = 0 */
 3691               	/* stack size = 0 */
 3692               	.L__stack_usage = 0
 255:quantum/rgblight.c ****     uint8_t mode = 0;
 3693               		.loc 1 255 49 is_stmt 0 view .LVU881
 3694 0000 682F      		mov r22,r24
 256:quantum/rgblight.c ****     mode         = rgblight_config.mode + 1;
 3695               		.loc 1 256 5 is_stmt 1 view .LVU882
 3696               	.LVL257:
 257:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 3697               		.loc 1 257 5 view .LVU883
 257:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 3698               		.loc 1 257 35 is_stmt 0 view .LVU884
 3699 0002 9091 0000 		lds r25,rgblight_config
 3700 0006 9695      		lsr r25
 257:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 3701               		.loc 1 257 18 view .LVU885
 3702 0008 81E0      		ldi r24,lo8(1)
 3703               	.LVL258:
 257:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 3704               		.loc 1 257 18 view .LVU886
 3705 000a 890F      		add r24,r25
 3706               	.LVL259:
 258:quantum/rgblight.c ****         mode = 1;
 3707               		.loc 1 258 5 is_stmt 1 view .LVU887
 258:quantum/rgblight.c ****         mode = 1;
 3708               		.loc 1 258 8 is_stmt 0 view .LVU888
 3709 000c 8532      		cpi r24,lo8(37)
 3710 000e 00F0      		brlo .L181
 259:quantum/rgblight.c ****     }
 3711               		.loc 1 259 14 view .LVU889
 3712 0010 81E0      		ldi r24,lo8(1)
 3713               	.LVL260:
 3714               	.L181:
 261:quantum/rgblight.c **** }
 3715               		.loc 1 261 5 is_stmt 1 view .LVU890
 3716 0012 0C94 0000 		jmp rgblight_mode_eeprom_helper
 3717               	.LVL261:
 261:quantum/rgblight.c **** }
 3718               		.loc 1 261 5 is_stmt 0 view .LVU891
 3719               		.cfi_endproc
 3720               	.LFE98:
 3722               		.section	.text.rgblight_step_noeeprom,"ax",@progbits
 3723               	.global	rgblight_step_noeeprom
 3725               	rgblight_step_noeeprom:
 3726               	.LFB99:
 263:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 3727               		.loc 1 263 35 is_stmt 1 view -0
 3728               		.cfi_startproc
 3729               	/* prologue: function */
 3730               	/* frame size = 0 */
 3731               	/* stack size = 0 */
 3732               	.L__stack_usage = 0
 263:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 3733               		.loc 1 263 37 view .LVU893
 3734 0000 80E0      		ldi r24,0
 3735 0002 0C94 0000 		jmp rgblight_step_helper
 3736               	.LVL262:
 3737               		.cfi_endproc
 3738               	.LFE99:
 3740               		.section	.text.rgblight_step,"ax",@progbits
 3741               	.global	rgblight_step
 3743               	rgblight_step:
 3744               	.LFB100:
 264:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 3745               		.loc 1 264 26 view -0
 3746               		.cfi_startproc
 3747               	/* prologue: function */
 3748               	/* frame size = 0 */
 3749               	/* stack size = 0 */
 3750               	.L__stack_usage = 0
 264:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 3751               		.loc 1 264 28 view .LVU895
 3752 0000 81E0      		ldi r24,lo8(1)
 3753 0002 0C94 0000 		jmp rgblight_step_helper
 3754               	.LVL263:
 3755               		.cfi_endproc
 3756               	.LFE100:
 3758               		.section	.text.rgblight_step_reverse_helper,"ax",@progbits
 3759               	.global	rgblight_step_reverse_helper
 3761               	rgblight_step_reverse_helper:
 3762               	.LVL264:
 3763               	.LFB101:
 265:quantum/rgblight.c ****     uint8_t mode = 0;
 3764               		.loc 1 265 57 view -0
 3765               		.cfi_startproc
 3766               	/* prologue: function */
 3767               	/* frame size = 0 */
 3768               	/* stack size = 0 */
 3769               	.L__stack_usage = 0
 265:quantum/rgblight.c ****     uint8_t mode = 0;
 3770               		.loc 1 265 57 is_stmt 0 view .LVU897
 3771 0000 682F      		mov r22,r24
 266:quantum/rgblight.c ****     mode         = rgblight_config.mode - 1;
 3772               		.loc 1 266 5 is_stmt 1 view .LVU898
 3773               	.LVL265:
 267:quantum/rgblight.c ****     if (mode < 1) {
 3774               		.loc 1 267 5 view .LVU899
 267:quantum/rgblight.c ****     if (mode < 1) {
 3775               		.loc 1 267 35 is_stmt 0 view .LVU900
 3776 0002 9091 0000 		lds r25,rgblight_config
 3777 0006 9695      		lsr r25
 267:quantum/rgblight.c ****     if (mode < 1) {
 3778               		.loc 1 267 18 view .LVU901
 3779 0008 8FEF      		ldi r24,lo8(-1)
 3780               	.LVL266:
 267:quantum/rgblight.c ****     if (mode < 1) {
 3781               		.loc 1 267 18 view .LVU902
 3782 000a 890F      		add r24,r25
 3783               	.LVL267:
 268:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 3784               		.loc 1 268 5 is_stmt 1 view .LVU903
 268:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 3785               		.loc 1 268 8 is_stmt 0 view .LVU904
 3786 000c 01F4      		brne .L185
 269:quantum/rgblight.c ****     }
 3787               		.loc 1 269 14 view .LVU905
 3788 000e 84E2      		ldi r24,lo8(36)
 3789               	.LVL268:
 3790               	.L185:
 271:quantum/rgblight.c **** }
 3791               		.loc 1 271 5 is_stmt 1 view .LVU906
 3792 0010 0C94 0000 		jmp rgblight_mode_eeprom_helper
 3793               	.LVL269:
 271:quantum/rgblight.c **** }
 3794               		.loc 1 271 5 is_stmt 0 view .LVU907
 3795               		.cfi_endproc
 3796               	.LFE101:
 3798               		.section	.text.rgblight_step_reverse_noeeprom,"ax",@progbits
 3799               	.global	rgblight_step_reverse_noeeprom
 3801               	rgblight_step_reverse_noeeprom:
 3802               	.LFB102:
 273:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 3803               		.loc 1 273 43 is_stmt 1 view -0
 3804               		.cfi_startproc
 3805               	/* prologue: function */
 3806               	/* frame size = 0 */
 3807               	/* stack size = 0 */
 3808               	.L__stack_usage = 0
 273:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 3809               		.loc 1 273 45 view .LVU909
 3810 0000 80E0      		ldi r24,0
 3811 0002 0C94 0000 		jmp rgblight_step_reverse_helper
 3812               	.LVL270:
 3813               		.cfi_endproc
 3814               	.LFE102:
 3816               		.section	.text.rgblight_step_reverse,"ax",@progbits
 3817               	.global	rgblight_step_reverse
 3819               	rgblight_step_reverse:
 3820               	.LFB103:
 274:quantum/rgblight.c **** 
 3821               		.loc 1 274 34 view -0
 3822               		.cfi_startproc
 3823               	/* prologue: function */
 3824               	/* frame size = 0 */
 3825               	/* stack size = 0 */
 3826               	.L__stack_usage = 0
 274:quantum/rgblight.c **** 
 3827               		.loc 1 274 36 view .LVU911
 3828 0000 81E0      		ldi r24,lo8(1)
 3829 0002 0C94 0000 		jmp rgblight_step_reverse_helper
 3830               	.LVL271:
 3831               		.cfi_endproc
 3832               	.LFE103:
 3834               		.section	.text.rgblight_mode,"ax",@progbits
 3835               	.global	rgblight_mode
 3837               	rgblight_mode:
 3838               	.LVL272:
 3839               	.LFB106:
 317:quantum/rgblight.c **** 
 3840               		.loc 1 317 34 view -0
 3841               		.cfi_startproc
 3842               	/* prologue: function */
 3843               	/* frame size = 0 */
 3844               	/* stack size = 0 */
 3845               	.L__stack_usage = 0
 317:quantum/rgblight.c **** 
 3846               		.loc 1 317 36 view .LVU913
 3847 0000 61E0      		ldi r22,lo8(1)
 3848 0002 0C94 0000 		jmp rgblight_mode_eeprom_helper
 3849               	.LVL273:
 317:quantum/rgblight.c **** 
 3850               		.loc 1 317 36 is_stmt 0 view .LVU914
 3851               		.cfi_endproc
 3852               	.LFE106:
 3854               		.section	.text.rgblight_increase,"ax",@progbits
 3855               	.global	rgblight_increase
 3857               	rgblight_increase:
 3858               	.LFB96:
 240:quantum/rgblight.c ****     uint8_t mode = 0;
 3859               		.loc 1 240 30 is_stmt 1 view -0
 3860               		.cfi_startproc
 3861               	/* prologue: function */
 3862               	/* frame size = 0 */
 3863               	/* stack size = 0 */
 3864               	.L__stack_usage = 0
 241:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 3865               		.loc 1 241 5 view .LVU916
 3866               	.LVL274:
 242:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 3867               		.loc 1 242 5 view .LVU917
 242:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 3868               		.loc 1 242 24 is_stmt 0 view .LVU918
 3869 0000 8091 0000 		lds r24,rgblight_config
 3870 0004 8695      		lsr r24
 242:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 3871               		.loc 1 242 8 view .LVU919
 3872 0006 8432      		cpi r24,lo8(36)
 3873 0008 00F4      		brsh .L191
 243:quantum/rgblight.c ****     }
 3874               		.loc 1 243 9 is_stmt 1 view .LVU920
 243:quantum/rgblight.c ****     }
 3875               		.loc 1 243 14 is_stmt 0 view .LVU921
 3876 000a 8F5F      		subi r24,lo8(-(1))
 3877               	.LVL275:
 3878               	.L190:
 245:quantum/rgblight.c **** }
 3879               		.loc 1 245 5 is_stmt 1 view .LVU922
 3880 000c 0C94 0000 		jmp rgblight_mode
 3881               	.LVL276:
 3882               	.L191:
 241:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 3883               		.loc 1 241 13 is_stmt 0 view .LVU923
 3884 0010 80E0      		ldi r24,0
 3885 0012 00C0      		rjmp .L190
 3886               		.cfi_endproc
 3887               	.LFE96:
 3889               		.section	.text.rgblight_decrease,"ax",@progbits
 3890               	.global	rgblight_decrease
 3892               	rgblight_decrease:
 3893               	.LFB97:
 247:quantum/rgblight.c ****     uint8_t mode = 0;
 3894               		.loc 1 247 30 is_stmt 1 view -0
 3895               		.cfi_startproc
 3896               	/* prologue: function */
 3897               	/* frame size = 0 */
 3898               	/* stack size = 0 */
 3899               	.L__stack_usage = 0
 248:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 3900               		.loc 1 248 5 view .LVU925
 3901               	.LVL277:
 250:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 3902               		.loc 1 250 5 view .LVU926
 250:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 3903               		.loc 1 250 24 is_stmt 0 view .LVU927
 3904 0000 8091 0000 		lds r24,rgblight_config
 3905 0004 8695      		lsr r24
 250:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 3906               		.loc 1 250 8 view .LVU928
 3907 0006 8230      		cpi r24,lo8(2)
 3908 0008 00F0      		brlo .L194
 251:quantum/rgblight.c ****     }
 3909               		.loc 1 251 9 is_stmt 1 view .LVU929
 251:quantum/rgblight.c ****     }
 3910               		.loc 1 251 14 is_stmt 0 view .LVU930
 3911 000a 8150      		subi r24,lo8(-(-1))
 3912               	.LVL278:
 3913               	.L193:
 253:quantum/rgblight.c **** }
 3914               		.loc 1 253 5 is_stmt 1 view .LVU931
 3915 000c 0C94 0000 		jmp rgblight_mode
 3916               	.LVL279:
 3917               	.L194:
 248:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 3918               		.loc 1 248 13 is_stmt 0 view .LVU932
 3919 0010 80E0      		ldi r24,0
 3920 0012 00C0      		rjmp .L193
 3921               		.cfi_endproc
 3922               	.LFE97:
 3924               		.section	.text.rgblight_enable,"ax",@progbits
 3925               	.global	rgblight_enable
 3927               	rgblight_enable:
 3928               	.LFB110:
 339:quantum/rgblight.c ****     rgblight_config.enable = 1;
 3929               		.loc 1 339 28 is_stmt 1 view -0
 3930               		.cfi_startproc
 3931               	/* prologue: function */
 3932               	/* frame size = 0 */
 3933               	/* stack size = 0 */
 3934               	.L__stack_usage = 0
 340:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 3935               		.loc 1 340 5 view .LVU934
 340:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 3936               		.loc 1 340 28 is_stmt 0 view .LVU935
 3937 0000 E0E0      		ldi r30,lo8(rgblight_config)
 3938 0002 F0E0      		ldi r31,hi8(rgblight_config)
 3939 0004 8081      		ld r24,Z
 3940 0006 8160      		ori r24,lo8(1<<0)
 3941 0008 8083      		st Z,r24
 343:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 3942               		.loc 1 343 95 is_stmt 1 view .LVU936
 344:quantum/rgblight.c **** }
 3943               		.loc 1 344 5 view .LVU937
 3944 000a 8695      		lsr r24
 3945 000c 0C94 0000 		jmp rgblight_mode
 3946               	.LVL280:
 3947               		.cfi_endproc
 3948               	.LFE110:
 3950               		.section	.text.rgblight_toggle,"ax",@progbits
 3951               	.global	rgblight_toggle
 3953               	rgblight_toggle:
 3954               	.LFB108:
 321:quantum/rgblight.c ****     dprintf("rgblight toggle [EEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 3955               		.loc 1 321 28 view -0
 3956               		.cfi_startproc
 3957               	/* prologue: function */
 3958               	/* frame size = 0 */
 3959               	/* stack size = 0 */
 3960               	.L__stack_usage = 0
 322:quantum/rgblight.c ****     if (rgblight_config.enable) {
 3961               		.loc 1 322 96 view .LVU939
 323:quantum/rgblight.c ****         rgblight_disable();
 3962               		.loc 1 323 5 view .LVU940
 323:quantum/rgblight.c ****         rgblight_disable();
 3963               		.loc 1 323 9 is_stmt 0 view .LVU941
 3964 0000 8091 0000 		lds r24,rgblight_config
 323:quantum/rgblight.c ****         rgblight_disable();
 3965               		.loc 1 323 8 view .LVU942
 3966 0004 80FD      		sbrc r24,0
 324:quantum/rgblight.c ****     } else {
 3967               		.loc 1 324 9 is_stmt 1 view .LVU943
 3968 0006 0C94 0000 		jmp rgblight_disable
 3969               	.LVL281:
 3970               	.L197:
 326:quantum/rgblight.c ****     }
 3971               		.loc 1 326 9 view .LVU944
 3972 000a 0C94 0000 		jmp rgblight_enable
 3973               	.LVL282:
 3974               		.cfi_endproc
 3975               	.LFE108:
 3977               		.section	.text.rgblight_mode_noeeprom,"ax",@progbits
 3978               	.global	rgblight_mode_noeeprom
 3980               	rgblight_mode_noeeprom:
 3981               	.LVL283:
 3982               	.LFB107:
 319:quantum/rgblight.c **** 
 3983               		.loc 1 319 43 view -0
 3984               		.cfi_startproc
 3985               	/* prologue: function */
 3986               	/* frame size = 0 */
 3987               	/* stack size = 0 */
 3988               	.L__stack_usage = 0
 319:quantum/rgblight.c **** 
 3989               		.loc 1 319 45 view .LVU946
 3990 0000 60E0      		ldi r22,0
 3991 0002 0C94 0000 		jmp rgblight_mode_eeprom_helper
 3992               	.LVL284:
 319:quantum/rgblight.c **** 
 3993               		.loc 1 319 45 is_stmt 0 view .LVU947
 3994               		.cfi_endproc
 3995               	.LFE107:
 3997               		.section	.text.rgblight_init,"ax",@progbits
 3998               	.global	rgblight_init
 4000               	rgblight_init:
 4001               	.LFB93:
 188:quantum/rgblight.c ****     /* if already initialized, don't do it again.
 4002               		.loc 1 188 26 is_stmt 1 view -0
 4003               		.cfi_startproc
 4004               	/* prologue: function */
 4005               	/* frame size = 0 */
 4006               	/* stack size = 0 */
 4007               	.L__stack_usage = 0
 192:quantum/rgblight.c ****         return;
 4008               		.loc 1 192 5 view .LVU949
 192:quantum/rgblight.c ****         return;
 4009               		.loc 1 192 8 is_stmt 0 view .LVU950
 4010 0000 8091 0000 		lds r24,is_rgblight_initialized
 4011 0004 8111      		cpse r24,__zero_reg__
 4012 0006 00C0      		rjmp .L199
 196:quantum/rgblight.c ****     dprintf("rgblight_init start!\n");
 4013               		.loc 1 196 39 is_stmt 1 view .LVU951
 197:quantum/rgblight.c ****     if (!eeconfig_is_enabled()) {
 4014               		.loc 1 197 38 view .LVU952
 198:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 4015               		.loc 1 198 5 view .LVU953
 198:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 4016               		.loc 1 198 10 is_stmt 0 view .LVU954
 4017 0008 0E94 0000 		call eeconfig_is_enabled
 4018               	.LVL285:
 198:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 4019               		.loc 1 198 8 view .LVU955
 4020 000c 8111      		cpse r24,__zero_reg__
 4021 000e 00C0      		rjmp .L201
 199:quantum/rgblight.c ****         eeconfig_init();
 4022               		.loc 1 199 60 is_stmt 1 view .LVU956
 200:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 4023               		.loc 1 200 9 view .LVU957
 4024 0010 0E94 0000 		call eeconfig_init
 4025               	.LVL286:
 201:quantum/rgblight.c ****     }
 4026               		.loc 1 201 9 view .LVU958
 4027 0014 0E94 0000 		call eeconfig_update_rgblight_default
 4028               	.LVL287:
 4029               	.L201:
 203:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 4030               		.loc 1 203 5 view .LVU959
 203:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 4031               		.loc 1 203 27 is_stmt 0 view .LVU960
 4032 0018 0E94 0000 		call eeconfig_read_rgblight
 4033               	.LVL288:
 203:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 4034               		.loc 1 203 25 view .LVU961
 4035 001c 6093 0000 		sts rgblight_config,r22
 4036 0020 7093 0000 		sts rgblight_config+1,r23
 4037 0024 8093 0000 		sts rgblight_config+2,r24
 4038 0028 9093 0000 		sts rgblight_config+3,r25
 204:quantum/rgblight.c ****     if (!rgblight_config.mode) {
 4039               		.loc 1 204 39 is_stmt 1 view .LVU962
 205:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 4040               		.loc 1 205 5 view .LVU963
 205:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 4041               		.loc 1 205 9 is_stmt 0 view .LVU964
 4042 002c 6E7F      		andi r22,lo8(-2)
 205:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 4043               		.loc 1 205 8 view .LVU965
 4044 002e 01F4      		brne .L202
 206:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 4045               		.loc 1 206 93 is_stmt 1 view .LVU966
 207:quantum/rgblight.c ****         rgblight_config.raw = eeconfig_read_rgblight();
 4046               		.loc 1 207 9 view .LVU967
 4047 0030 0E94 0000 		call eeconfig_update_rgblight_default
 4048               	.LVL289:
 208:quantum/rgblight.c ****     }
 4049               		.loc 1 208 9 view .LVU968
 208:quantum/rgblight.c ****     }
 4050               		.loc 1 208 31 is_stmt 0 view .LVU969
 4051 0034 0E94 0000 		call eeconfig_read_rgblight
 4052               	.LVL290:
 208:quantum/rgblight.c ****     }
 4053               		.loc 1 208 29 view .LVU970
 4054 0038 6093 0000 		sts rgblight_config,r22
 4055 003c 7093 0000 		sts rgblight_config+1,r23
 4056 0040 8093 0000 		sts rgblight_config+2,r24
 4057 0044 9093 0000 		sts rgblight_config+3,r25
 4058               	.L202:
 210:quantum/rgblight.c **** 
 4059               		.loc 1 210 5 is_stmt 1 view .LVU971
 4060 0048 0E94 0000 		call rgblight_check_config
 4061               	.LVL291:
 212:quantum/rgblight.c **** 
 4062               		.loc 1 212 5 view .LVU972
 215:quantum/rgblight.c **** #endif
 4063               		.loc 1 215 5 view .LVU973
 4064               	.LBB167:
 4065               	.LBI167:
 701:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 4066               		.loc 1 701 6 view .LVU974
 4067               	.LBB168:
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4068               		.loc 1 718 5 view .LVU975
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4069               		.loc 1 718 35 is_stmt 0 view .LVU976
 4070 004c 1092 0000 		sts rgblight_status+1,__zero_reg__
 719:quantum/rgblight.c **** }
 4071               		.loc 1 719 43 is_stmt 1 view .LVU977
 4072               	.LBE168:
 4073               	.LBE167:
 218:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 4074               		.loc 1 218 5 view .LVU978
 218:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 4075               		.loc 1 218 9 is_stmt 0 view .LVU979
 4076 0050 8091 0000 		lds r24,rgblight_config
 218:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 4077               		.loc 1 218 8 view .LVU980
 4078 0054 80FF      		sbrs r24,0
 4079 0056 00C0      		rjmp .L203
 219:quantum/rgblight.c ****     }
 4080               		.loc 1 219 9 is_stmt 1 view .LVU981
 4081 0058 8695      		lsr r24
 4082 005a 0E94 0000 		call rgblight_mode_noeeprom
 4083               	.LVL292:
 4084               	.L203:
 222:quantum/rgblight.c **** }
 4085               		.loc 1 222 5 view .LVU982
 222:quantum/rgblight.c **** }
 4086               		.loc 1 222 29 is_stmt 0 view .LVU983
 4087 005e 81E0      		ldi r24,lo8(1)
 4088 0060 8093 0000 		sts is_rgblight_initialized,r24
 4089               	.L199:
 4090               	/* epilogue start */
 223:quantum/rgblight.c **** 
 4091               		.loc 1 223 1 view .LVU984
 4092 0064 0895      		ret
 4093               		.cfi_endproc
 4094               	.LFE93:
 4096               		.section	.text.rgblight_enable_noeeprom,"ax",@progbits
 4097               	.global	rgblight_enable_noeeprom
 4099               	rgblight_enable_noeeprom:
 4100               	.LFB111:
 347:quantum/rgblight.c ****     rgblight_config.enable = 1;
 4101               		.loc 1 347 37 is_stmt 1 view -0
 4102               		.cfi_startproc
 4103               	/* prologue: function */
 4104               	/* frame size = 0 */
 4105               	/* stack size = 0 */
 4106               	.L__stack_usage = 0
 348:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4107               		.loc 1 348 5 view .LVU986
 348:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 4108               		.loc 1 348 28 is_stmt 0 view .LVU987
 4109 0000 E0E0      		ldi r30,lo8(rgblight_config)
 4110 0002 F0E0      		ldi r31,hi8(rgblight_config)
 4111 0004 8081      		ld r24,Z
 4112 0006 8160      		ori r24,lo8(1<<0)
 4113 0008 8083      		st Z,r24
 349:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 4114               		.loc 1 349 97 is_stmt 1 view .LVU988
 350:quantum/rgblight.c **** }
 4115               		.loc 1 350 5 view .LVU989
 4116 000a 8695      		lsr r24
 4117 000c 0C94 0000 		jmp rgblight_mode_noeeprom
 4118               	.LVL293:
 4119               		.cfi_endproc
 4120               	.LFE111:
 4122               		.section	.text.rgblight_toggle_noeeprom,"ax",@progbits
 4123               	.global	rgblight_toggle_noeeprom
 4125               	rgblight_toggle_noeeprom:
 4126               	.LFB109:
 330:quantum/rgblight.c ****     dprintf("rgblight toggle [NOEEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 4127               		.loc 1 330 37 view -0
 4128               		.cfi_startproc
 4129               	/* prologue: function */
 4130               	/* frame size = 0 */
 4131               	/* stack size = 0 */
 4132               	.L__stack_usage = 0
 331:quantum/rgblight.c ****     if (rgblight_config.enable) {
 4133               		.loc 1 331 98 view .LVU991
 332:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 4134               		.loc 1 332 5 view .LVU992
 332:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 4135               		.loc 1 332 9 is_stmt 0 view .LVU993
 4136 0000 8091 0000 		lds r24,rgblight_config
 332:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 4137               		.loc 1 332 8 view .LVU994
 4138 0004 80FD      		sbrc r24,0
 333:quantum/rgblight.c ****     } else {
 4139               		.loc 1 333 9 is_stmt 1 view .LVU995
 4140 0006 0C94 0000 		jmp rgblight_disable_noeeprom
 4141               	.LVL294:
 4142               	.L209:
 335:quantum/rgblight.c ****     }
 4143               		.loc 1 335 9 view .LVU996
 4144 000a 0C94 0000 		jmp rgblight_enable_noeeprom
 4145               	.LVL295:
 4146               		.cfi_endproc
 4147               	.LFE109:
 4149               		.section	.text.rgblight_update_dword,"ax",@progbits
 4150               	.global	rgblight_update_dword
 4152               	rgblight_update_dword:
 4153               	.LVL296:
 4154               	.LFB95:
 227:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 4155               		.loc 1 227 44 view -0
 4156               		.cfi_startproc
 4157               	/* prologue: function */
 4158               	/* frame size = 0 */
 4159               	/* stack size = 0 */
 4160               	.L__stack_usage = 0
 228:quantum/rgblight.c ****     rgblight_config.raw = dword;
 4161               		.loc 1 228 39 view .LVU998
 229:quantum/rgblight.c ****     if (rgblight_config.enable)
 4162               		.loc 1 229 5 view .LVU999
 229:quantum/rgblight.c ****     if (rgblight_config.enable)
 4163               		.loc 1 229 25 is_stmt 0 view .LVU1000
 4164 0000 6093 0000 		sts rgblight_config,r22
 4165 0004 7093 0000 		sts rgblight_config+1,r23
 4166 0008 8093 0000 		sts rgblight_config+2,r24
 4167 000c 9093 0000 		sts rgblight_config+3,r25
 230:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 4168               		.loc 1 230 5 is_stmt 1 view .LVU1001
 230:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 4169               		.loc 1 230 8 is_stmt 0 view .LVU1002
 4170 0010 60FF      		sbrs r22,0
 4171 0012 00C0      		rjmp .L211
 231:quantum/rgblight.c ****     else {
 4172               		.loc 1 231 9 is_stmt 1 view .LVU1003
 4173 0014 862F      		mov r24,r22
 4174 0016 8695      		lsr r24
 4175 0018 0C94 0000 		jmp rgblight_mode_noeeprom
 4176               	.LVL297:
 4177               	.L211:
 234:quantum/rgblight.c **** #endif
 4178               		.loc 1 234 9 view .LVU1004
 4179               	.LBB171:
 4180               	.LBI171:
 701:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 4181               		.loc 1 701 6 view .LVU1005
 4182               	.LBB172:
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4183               		.loc 1 718 5 view .LVU1006
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4184               		.loc 1 718 35 is_stmt 0 view .LVU1007
 4185 001c 1092 0000 		sts rgblight_status+1,__zero_reg__
 719:quantum/rgblight.c **** }
 4186               		.loc 1 719 43 is_stmt 1 view .LVU1008
 4187               	.LBE172:
 4188               	.LBE171:
 236:quantum/rgblight.c ****     }
 4189               		.loc 1 236 9 view .LVU1009
 4190 0020 0C94 0000 		jmp rgblight_set
 4191               	.LVL298:
 236:quantum/rgblight.c ****     }
 4192               		.loc 1 236 9 is_stmt 0 view .LVU1010
 4193               		.cfi_endproc
 4194               	.LFE95:
 4196               		.section	.text.rgblight_timer_disable,"ax",@progbits
 4197               	.global	rgblight_timer_disable
 4199               	rgblight_timer_disable:
 4200               	.LFB173:
 4201               		.cfi_startproc
 4202               	/* prologue: function */
 4203               	/* frame size = 0 */
 4204               	/* stack size = 0 */
 4205               	.L__stack_usage = 0
 4206 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 4207               	/* epilogue start */
 4208 0004 0895      		ret
 4209               		.cfi_endproc
 4210               	.LFE173:
 4212               		.section	.text.rgblight_timer_toggle,"ax",@progbits
 4213               	.global	rgblight_timer_toggle
 4215               	rgblight_timer_toggle:
 4216               	.LFB159:
 734:quantum/rgblight.c ****     dprintf("rgblight timer toggle.\n");
 4217               		.loc 1 734 34 is_stmt 1 view -0
 4218               		.cfi_startproc
 4219               	/* prologue: function */
 4220               	/* frame size = 0 */
 4221               	/* stack size = 0 */
 4222               	.L__stack_usage = 0
 735:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 4223               		.loc 1 735 40 view .LVU1012
 736:quantum/rgblight.c ****         rgblight_timer_disable();
 4224               		.loc 1 736 5 view .LVU1013
 736:quantum/rgblight.c ****         rgblight_timer_disable();
 4225               		.loc 1 736 8 is_stmt 0 view .LVU1014
 4226 0000 8091 0000 		lds r24,rgblight_status+1
 4227 0004 8823      		tst r24
 4228 0006 01F0      		breq .L214
 737:quantum/rgblight.c ****     } else {
 4229               		.loc 1 737 9 is_stmt 1 view .LVU1015
 4230               	.LBB175:
 4231               	.LBI175:
 701:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 4232               		.loc 1 701 6 view .LVU1016
 4233               	.LBB176:
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4234               		.loc 1 718 5 view .LVU1017
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 4235               		.loc 1 718 35 is_stmt 0 view .LVU1018
 4236 0008 1092 0000 		sts rgblight_status+1,__zero_reg__
 719:quantum/rgblight.c **** }
 4237               		.loc 1 719 43 is_stmt 1 view .LVU1019
 4238               	/* epilogue start */
 4239               	.LBE176:
 4240               	.LBE175:
 741:quantum/rgblight.c **** 
 4241               		.loc 1 741 1 is_stmt 0 view .LVU1020
 4242 000c 0895      		ret
 4243               	.L214:
 739:quantum/rgblight.c ****     }
 4244               		.loc 1 739 9 is_stmt 1 view .LVU1021
 4245 000e 0C94 0000 		jmp rgblight_timer_enable
 4246               	.LVL299:
 4247               		.cfi_endproc
 4248               	.LFE159:
 4250               		.section	.text.rgblight_show_solid_color,"ax",@progbits
 4251               	.global	rgblight_show_solid_color
 4253               	rgblight_show_solid_color:
 4254               	.LVL300:
 4255               	.LFB160:
 743:quantum/rgblight.c ****     rgblight_enable();
 4256               		.loc 1 743 65 view -0
 4257               		.cfi_startproc
 743:quantum/rgblight.c ****     rgblight_enable();
 4258               		.loc 1 743 65 is_stmt 0 view .LVU1023
 4259 0000 1F93      		push r17
 4260               	.LCFI70:
 4261               		.cfi_def_cfa_offset 3
 4262               		.cfi_offset 17, -2
 4263 0002 CF93      		push r28
 4264               	.LCFI71:
 4265               		.cfi_def_cfa_offset 4
 4266               		.cfi_offset 28, -3
 4267 0004 DF93      		push r29
 4268               	.LCFI72:
 4269               		.cfi_def_cfa_offset 5
 4270               		.cfi_offset 29, -4
 4271               	/* prologue: function */
 4272               	/* frame size = 0 */
 4273               	/* stack size = 3 */
 4274               	.L__stack_usage = 3
 4275 0006 C82F      		mov r28,r24
 4276 0008 D62F      		mov r29,r22
 4277 000a 142F      		mov r17,r20
 744:quantum/rgblight.c ****     rgblight_mode(RGBLIGHT_MODE_STATIC_LIGHT);
 4278               		.loc 1 744 5 is_stmt 1 view .LVU1024
 4279 000c 0E94 0000 		call rgblight_enable
 4280               	.LVL301:
 745:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 4281               		.loc 1 745 5 view .LVU1025
 4282 0010 81E0      		ldi r24,lo8(1)
 4283 0012 0E94 0000 		call rgblight_mode
 4284               	.LVL302:
 746:quantum/rgblight.c **** }
 4285               		.loc 1 746 5 view .LVU1026
 4286 0016 412F      		mov r20,r17
 4287 0018 6D2F      		mov r22,r29
 4288 001a 8C2F      		mov r24,r28
 4289               	/* epilogue start */
 747:quantum/rgblight.c **** 
 4290               		.loc 1 747 1 is_stmt 0 view .LVU1027
 4291 001c DF91      		pop r29
 4292               	.LVL303:
 747:quantum/rgblight.c **** 
 4293               		.loc 1 747 1 view .LVU1028
 4294 001e CF91      		pop r28
 4295               	.LVL304:
 747:quantum/rgblight.c **** 
 4296               		.loc 1 747 1 view .LVU1029
 4297 0020 1F91      		pop r17
 4298               	.LVL305:
 746:quantum/rgblight.c **** }
 4299               		.loc 1 746 5 view .LVU1030
 4300 0022 0C94 0000 		jmp rgblight_setrgb
 4301               	.LVL306:
 746:quantum/rgblight.c **** }
 4302               		.loc 1 746 5 view .LVU1031
 4303               		.cfi_endproc
 4304               	.LFE160:
 4306               		.section	.text.rgblight_task,"ax",@progbits
 4307               	.global	rgblight_task
 4309               	rgblight_task:
 4310               	.LFB162:
 761:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 4311               		.loc 1 761 26 is_stmt 1 view -0
 4312               		.cfi_startproc
 4313 0000 0F93      		push r16
 4314               	.LCFI73:
 4315               		.cfi_def_cfa_offset 3
 4316               		.cfi_offset 16, -2
 4317 0002 1F93      		push r17
 4318               	.LCFI74:
 4319               		.cfi_def_cfa_offset 4
 4320               		.cfi_offset 17, -3
 4321 0004 CF93      		push r28
 4322               	.LCFI75:
 4323               		.cfi_def_cfa_offset 5
 4324               		.cfi_offset 28, -4
 4325 0006 DF93      		push r29
 4326               	.LCFI76:
 4327               		.cfi_def_cfa_offset 6
 4328               		.cfi_offset 29, -5
 4329               	/* prologue: function */
 4330               	/* frame size = 0 */
 4331               	/* stack size = 4 */
 4332               	.L__stack_usage = 4
 762:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 4333               		.loc 1 762 5 view .LVU1033
 762:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 4334               		.loc 1 762 8 is_stmt 0 view .LVU1034
 4335 0008 8091 0000 		lds r24,rgblight_status+1
 4336 000c 8823      		tst r24
 4337 000e 01F4      		brne .+2
 4338 0010 00C0      		rjmp .L218
 4339               	.LBB194:
 763:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 4340               		.loc 1 763 9 is_stmt 1 view .LVU1035
 4341               	.LVL307:
 764:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 4342               		.loc 1 764 9 view .LVU1036
 765:quantum/rgblight.c ****         animation_status.delta      = delta;
 4343               		.loc 1 765 9 view .LVU1037
 765:quantum/rgblight.c ****         animation_status.delta      = delta;
 4344               		.loc 1 765 77 is_stmt 0 view .LVU1038
 4345 0012 8091 0000 		lds r24,rgblight_status
 765:quantum/rgblight.c ****         animation_status.delta      = delta;
 4346               		.loc 1 765 54 view .LVU1039
 4347 0016 E091 0000 		lds r30,rgblight_config
 4348 001a E695      		lsr r30
 765:quantum/rgblight.c ****         animation_status.delta      = delta;
 4349               		.loc 1 765 23 view .LVU1040
 4350 001c E81B      		sub r30,r24
 4351               	.LVL308:
 766:quantum/rgblight.c **** 
 4352               		.loc 1 766 9 is_stmt 1 view .LVU1041
 766:quantum/rgblight.c **** 
 4353               		.loc 1 766 37 is_stmt 0 view .LVU1042
 4354 001e E093 0000 		sts animation_status+2,r30
 769:quantum/rgblight.c ****         }
 4355               		.loc 1 769 9 is_stmt 1 view .LVU1043
 772:quantum/rgblight.c ****             // breathing mode
 4356               		.loc 1 772 14 view .LVU1044
 772:quantum/rgblight.c ****             // breathing mode
 4357               		.loc 1 772 17 is_stmt 0 view .LVU1045
 4358 0022 8230      		cpi r24,lo8(2)
 4359 0024 01F4      		brne .L221
 774:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 4360               		.loc 1 774 13 is_stmt 1 view .LVU1046
 4361               	.LVL309:
 4362               	.LBB195:
 4363               	.LBI195:
 572:quantum/rgblight.c ****     return
 4364               		.loc 1 572 16 view .LVU1047
 572:quantum/rgblight.c ****     return
 4365               		.loc 1 572 16 is_stmt 0 view .LVU1048
 4366               	.LBE195:
 4367               	.LBE194:
 573:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 4368               		.loc 1 573 5 is_stmt 1 view .LVU1049
 4369               	.LBB221:
 4370               	.LBB198:
 4371               	.LBB196:
 577:quantum/rgblight.c **** }
 4372               		.loc 1 577 29 view .LVU1050
 577:quantum/rgblight.c **** }
 4373               		.loc 1 577 29 view .LVU1051
 577:quantum/rgblight.c **** }
 4374               		.loc 1 577 29 view .LVU1052
 4375               	.LBE196:
 4376               	.LBE198:
 774:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 4377               		.loc 1 774 29 is_stmt 0 view .LVU1053
 4378 0026 F0E0      		ldi r31,0
 4379 0028 E050      		subi r30,lo8(-(RGBLED_BREATHING_INTERVALS))
 4380 002a F040      		sbci r31,hi8(-(RGBLED_BREATHING_INTERVALS))
 4381               	.LVL310:
 4382               	.LBB199:
 4383               	.LBB197:
 577:quantum/rgblight.c **** }
 4384               		.loc 1 577 29 view .LVU1054
 4385               	/* #APP */
 4386               	 ;  577 "quantum/rgblight.c" 1
 4387 002c E491      		lpm r30, Z
 4388               		
 4389               	 ;  0 "" 2
 4390               	.LVL311:
 577:quantum/rgblight.c **** }
 4391               		.loc 1 577 29 is_stmt 1 view .LVU1055
 577:quantum/rgblight.c **** }
 4392               		.loc 1 577 29 is_stmt 0 view .LVU1056
 4393               	/* #NOAPP */
 4394               	.LBE197:
 4395               	.LBE199:
 774:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 4396               		.loc 1 774 27 view .LVU1057
 4397 002e CE2F      		mov r28,r30
 4398 0030 D0E0      		ldi r29,0
 4399               	.LVL312:
 775:quantum/rgblight.c ****         }
 4400               		.loc 1 775 13 is_stmt 1 view .LVU1058
 775:quantum/rgblight.c ****         }
 4401               		.loc 1 775 27 is_stmt 0 view .LVU1059
 4402 0032 00E0      		ldi r16,lo8(gs(rgblight_effect_breathing))
 4403 0034 10E0      		ldi r17,hi8(gs(rgblight_effect_breathing))
 4404               	.LVL313:
 4405               	.L222:
 826:quantum/rgblight.c ****             animation_status.restart    = false;
 4406               		.loc 1 826 9 is_stmt 1 view .LVU1060
 826:quantum/rgblight.c ****             animation_status.restart    = false;
 4407               		.loc 1 826 12 is_stmt 0 view .LVU1061
 4408 0036 8091 0000 		lds r24,animation_status+3
 4409 003a 8823      		tst r24
 4410 003c 01F0      		breq .L228
 827:quantum/rgblight.c ****             animation_status.last_timer = timer_read() - interval_time - 1;
 4411               		.loc 1 827 13 is_stmt 1 view .LVU1062
 827:quantum/rgblight.c ****             animation_status.last_timer = timer_read() - interval_time - 1;
 4412               		.loc 1 827 41 is_stmt 0 view .LVU1063
 4413 003e 1092 0000 		sts animation_status+3,__zero_reg__
 828:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 4414               		.loc 1 828 13 is_stmt 1 view .LVU1064
 828:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 4415               		.loc 1 828 43 is_stmt 0 view .LVU1065
 4416 0042 0E94 0000 		call timer_read
 4417               	.LVL314:
 828:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 4418               		.loc 1 828 72 view .LVU1066
 4419 0046 9E01      		movw r18,r28
 4420 0048 2095      		com r18
 4421 004a 3095      		com r19
 4422 004c 820F      		add r24,r18
 4423 004e 931F      		adc r25,r19
 828:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 4424               		.loc 1 828 41 view .LVU1067
 4425 0050 9093 0000 		sts animation_status+1,r25
 4426 0054 8093 0000 		sts animation_status,r24
 829:quantum/rgblight.c ****         }
 4427               		.loc 1 829 13 is_stmt 1 view .LVU1068
 829:quantum/rgblight.c ****         }
 4428               		.loc 1 829 41 is_stmt 0 view .LVU1069
 4429 0058 1092 0000 		sts animation_status+4+1,__zero_reg__
 4430 005c 1092 0000 		sts animation_status+4,__zero_reg__
 4431               	.L228:
 831:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 4432               		.loc 1 831 9 is_stmt 1 view .LVU1070
 831:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 4433               		.loc 1 831 13 is_stmt 0 view .LVU1071
 4434 0060 8091 0000 		lds r24,animation_status
 4435 0064 9091 0000 		lds r25,animation_status+1
 4436 0068 0E94 0000 		call timer_elapsed
 4437               	.LVL315:
 831:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 4438               		.loc 1 831 12 view .LVU1072
 4439 006c 8C17      		cp r24,r28
 4440 006e 9D07      		cpc r25,r29
 4441 0070 00F4      		brsh .+2
 4442 0072 00C0      		rjmp .L218
 846:quantum/rgblight.c ****             effect_func(&animation_status);
 4443               		.loc 1 846 13 is_stmt 1 view .LVU1073
 846:quantum/rgblight.c ****             effect_func(&animation_status);
 4444               		.loc 1 846 41 is_stmt 0 view .LVU1074
 4445 0074 E091 0000 		lds r30,animation_status
 4446 0078 F091 0000 		lds r31,animation_status+1
 4447 007c CE0F      		add r28,r30
 4448 007e DF1F      		adc r29,r31
 4449               	.LVL316:
 846:quantum/rgblight.c ****             effect_func(&animation_status);
 4450               		.loc 1 846 41 view .LVU1075
 4451 0080 D093 0000 		sts animation_status+1,r29
 4452 0084 C093 0000 		sts animation_status,r28
 847:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 4453               		.loc 1 847 13 is_stmt 1 view .LVU1076
 4454 0088 80E0      		ldi r24,lo8(animation_status)
 4455 008a 90E0      		ldi r25,hi8(animation_status)
 4456 008c F801      		movw r30,r16
 4457               	/* epilogue start */
 4458               	.LBE221:
 855:quantum/rgblight.c **** 
 4459               		.loc 1 855 1 is_stmt 0 view .LVU1077
 4460 008e DF91      		pop r29
 4461 0090 CF91      		pop r28
 4462 0092 1F91      		pop r17
 4463 0094 0F91      		pop r16
 4464               	.LVL317:
 4465               	.LBB222:
 847:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 4466               		.loc 1 847 13 view .LVU1078
 4467 0096 0994      		ijmp
 4468               	.LVL318:
 4469               	.L221:
 779:quantum/rgblight.c ****             // rainbow mood mode
 4470               		.loc 1 779 14 is_stmt 1 view .LVU1079
 779:quantum/rgblight.c ****             // rainbow mood mode
 4471               		.loc 1 779 17 is_stmt 0 view .LVU1080
 4472 0098 8630      		cpi r24,lo8(6)
 4473 009a 01F4      		brne .L223
 781:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 4474               		.loc 1 781 13 is_stmt 1 view .LVU1081
 4475               	.LVL319:
 4476               	.LBB200:
 4477               	.LBI200:
 572:quantum/rgblight.c ****     return
 4478               		.loc 1 572 16 view .LVU1082
 572:quantum/rgblight.c ****     return
 4479               		.loc 1 572 16 is_stmt 0 view .LVU1083
 4480               	.LBE200:
 4481               	.LBE222:
 573:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 4482               		.loc 1 573 5 is_stmt 1 view .LVU1084
 4483               	.LBB223:
 4484               	.LBB203:
 4485               	.LBB201:
 577:quantum/rgblight.c **** }
 4486               		.loc 1 577 29 view .LVU1085
 577:quantum/rgblight.c **** }
 4487               		.loc 1 577 29 view .LVU1086
 577:quantum/rgblight.c **** }
 4488               		.loc 1 577 29 view .LVU1087
 4489               	.LBE201:
 4490               	.LBE203:
 781:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 4491               		.loc 1 781 29 is_stmt 0 view .LVU1088
 4492 009c F0E0      		ldi r31,0
 4493 009e E050      		subi r30,lo8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 4494 00a0 F040      		sbci r31,hi8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 4495               	.LVL320:
 4496               	.LBB204:
 4497               	.LBB202:
 577:quantum/rgblight.c **** }
 4498               		.loc 1 577 29 view .LVU1089
 4499               	/* #APP */
 4500               	 ;  577 "quantum/rgblight.c" 1
 4501 00a2 E491      		lpm r30, Z
 4502               		
 4503               	 ;  0 "" 2
 4504               	.LVL321:
 577:quantum/rgblight.c **** }
 4505               		.loc 1 577 29 is_stmt 1 view .LVU1090
 577:quantum/rgblight.c **** }
 4506               		.loc 1 577 29 is_stmt 0 view .LVU1091
 4507               	/* #NOAPP */
 4508               	.LBE202:
 4509               	.LBE204:
 781:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 4510               		.loc 1 781 27 view .LVU1092
 4511 00a4 CE2F      		mov r28,r30
 4512 00a6 D0E0      		ldi r29,0
 4513               	.LVL322:
 782:quantum/rgblight.c ****         }
 4514               		.loc 1 782 13 is_stmt 1 view .LVU1093
 782:quantum/rgblight.c ****         }
 4515               		.loc 1 782 27 is_stmt 0 view .LVU1094
 4516 00a8 00E0      		ldi r16,lo8(gs(rgblight_effect_rainbow_mood))
 4517 00aa 10E0      		ldi r17,hi8(gs(rgblight_effect_rainbow_mood))
 4518 00ac 00C0      		rjmp .L222
 4519               	.LVL323:
 4520               	.L223:
 786:quantum/rgblight.c ****             // rainbow swirl mode
 4521               		.loc 1 786 14 is_stmt 1 view .LVU1095
 786:quantum/rgblight.c ****             // rainbow swirl mode
 4522               		.loc 1 786 17 is_stmt 0 view .LVU1096
 4523 00ae 8930      		cpi r24,lo8(9)
 4524 00b0 01F4      		brne .L224
 788:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 4525               		.loc 1 788 13 is_stmt 1 view .LVU1097
 4526               	.LVL324:
 4527               	.LBB205:
 4528               	.LBI205:
 572:quantum/rgblight.c ****     return
 4529               		.loc 1 572 16 view .LVU1098
 572:quantum/rgblight.c ****     return
 4530               		.loc 1 572 16 is_stmt 0 view .LVU1099
 4531               	.LBE205:
 4532               	.LBE223:
 573:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 4533               		.loc 1 573 5 is_stmt 1 view .LVU1100
 4534               	.LBB224:
 4535               	.LBB208:
 4536               	.LBB206:
 577:quantum/rgblight.c **** }
 4537               		.loc 1 577 29 view .LVU1101
 577:quantum/rgblight.c **** }
 4538               		.loc 1 577 29 view .LVU1102
 577:quantum/rgblight.c **** }
 4539               		.loc 1 577 29 view .LVU1103
 4540               	.LBE206:
 4541               	.LBE208:
 788:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 4542               		.loc 1 788 85 is_stmt 0 view .LVU1104
 4543 00b2 E695      		lsr r30
 4544               	.LVL325:
 788:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 4545               		.loc 1 788 29 view .LVU1105
 4546 00b4 F0E0      		ldi r31,0
 4547 00b6 E050      		subi r30,lo8(-(RGBLED_RAINBOW_SWIRL_INTERVALS))
 4548 00b8 F040      		sbci r31,hi8(-(RGBLED_RAINBOW_SWIRL_INTERVALS))
 4549               	.LBB209:
 4550               	.LBB207:
 577:quantum/rgblight.c **** }
 4551               		.loc 1 577 29 view .LVU1106
 4552               	/* #APP */
 4553               	 ;  577 "quantum/rgblight.c" 1
 4554 00ba E491      		lpm r30, Z
 4555               		
 4556               	 ;  0 "" 2
 4557               	.LVL326:
 577:quantum/rgblight.c **** }
 4558               		.loc 1 577 29 is_stmt 1 view .LVU1107
 577:quantum/rgblight.c **** }
 4559               		.loc 1 577 29 is_stmt 0 view .LVU1108
 4560               	/* #NOAPP */
 4561               	.LBE207:
 4562               	.LBE209:
 788:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 4563               		.loc 1 788 27 view .LVU1109
 4564 00bc CE2F      		mov r28,r30
 4565 00be D0E0      		ldi r29,0
 4566               	.LVL327:
 789:quantum/rgblight.c ****         }
 4567               		.loc 1 789 13 is_stmt 1 view .LVU1110
 789:quantum/rgblight.c ****         }
 4568               		.loc 1 789 27 is_stmt 0 view .LVU1111
 4569 00c0 00E0      		ldi r16,lo8(gs(rgblight_effect_rainbow_swirl))
 4570 00c2 10E0      		ldi r17,hi8(gs(rgblight_effect_rainbow_swirl))
 4571 00c4 00C0      		rjmp .L222
 4572               	.LVL328:
 4573               	.L224:
 793:quantum/rgblight.c ****             // snake mode
 4574               		.loc 1 793 14 is_stmt 1 view .LVU1112
 793:quantum/rgblight.c ****             // snake mode
 4575               		.loc 1 793 17 is_stmt 0 view .LVU1113
 4576 00c6 8F30      		cpi r24,lo8(15)
 4577 00c8 01F4      		brne .L225
 795:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 4578               		.loc 1 795 13 is_stmt 1 view .LVU1114
 4579               	.LVL329:
 4580               	.LBB210:
 4581               	.LBI210:
 572:quantum/rgblight.c ****     return
 4582               		.loc 1 572 16 view .LVU1115
 572:quantum/rgblight.c ****     return
 4583               		.loc 1 572 16 is_stmt 0 view .LVU1116
 4584               	.LBE210:
 4585               	.LBE224:
 573:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 4586               		.loc 1 573 5 is_stmt 1 view .LVU1117
 4587               	.LBB225:
 4588               	.LBB213:
 4589               	.LBB211:
 577:quantum/rgblight.c **** }
 4590               		.loc 1 577 29 view .LVU1118
 577:quantum/rgblight.c **** }
 4591               		.loc 1 577 29 view .LVU1119
 577:quantum/rgblight.c **** }
 4592               		.loc 1 577 29 view .LVU1120
 4593               	.LBE211:
 4594               	.LBE213:
 795:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 4595               		.loc 1 795 77 is_stmt 0 view .LVU1121
 4596 00ca E695      		lsr r30
 4597               	.LVL330:
 795:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 4598               		.loc 1 795 29 view .LVU1122
 4599 00cc F0E0      		ldi r31,0
 4600 00ce E050      		subi r30,lo8(-(RGBLED_SNAKE_INTERVALS))
 4601 00d0 F040      		sbci r31,hi8(-(RGBLED_SNAKE_INTERVALS))
 4602               	.LBB214:
 4603               	.LBB212:
 577:quantum/rgblight.c **** }
 4604               		.loc 1 577 29 view .LVU1123
 4605               	/* #APP */
 4606               	 ;  577 "quantum/rgblight.c" 1
 4607 00d2 E491      		lpm r30, Z
 4608               		
 4609               	 ;  0 "" 2
 4610               	.LVL331:
 577:quantum/rgblight.c **** }
 4611               		.loc 1 577 29 is_stmt 1 view .LVU1124
 577:quantum/rgblight.c **** }
 4612               		.loc 1 577 29 is_stmt 0 view .LVU1125
 4613               	/* #NOAPP */
 4614               	.LBE212:
 4615               	.LBE214:
 795:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 4616               		.loc 1 795 27 view .LVU1126
 4617 00d4 CE2F      		mov r28,r30
 4618 00d6 D0E0      		ldi r29,0
 4619               	.LVL332:
 796:quantum/rgblight.c ****         }
 4620               		.loc 1 796 13 is_stmt 1 view .LVU1127
 796:quantum/rgblight.c ****         }
 4621               		.loc 1 796 27 is_stmt 0 view .LVU1128
 4622 00d8 00E0      		ldi r16,lo8(gs(rgblight_effect_snake))
 4623 00da 10E0      		ldi r17,hi8(gs(rgblight_effect_snake))
 4624 00dc 00C0      		rjmp .L222
 4625               	.LVL333:
 4626               	.L225:
 800:quantum/rgblight.c ****             // knight mode
 4627               		.loc 1 800 14 is_stmt 1 view .LVU1129
 800:quantum/rgblight.c ****             // knight mode
 4628               		.loc 1 800 17 is_stmt 0 view .LVU1130
 4629 00de 8531      		cpi r24,lo8(21)
 4630 00e0 01F4      		brne .L226
 802:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 4631               		.loc 1 802 13 is_stmt 1 view .LVU1131
 4632               	.LVL334:
 4633               	.LBB215:
 4634               	.LBI215:
 572:quantum/rgblight.c ****     return
 4635               		.loc 1 572 16 view .LVU1132
 572:quantum/rgblight.c ****     return
 4636               		.loc 1 572 16 is_stmt 0 view .LVU1133
 4637               	.LBE215:
 4638               	.LBE225:
 573:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 4639               		.loc 1 573 5 is_stmt 1 view .LVU1134
 4640               	.LBB226:
 4641               	.LBB218:
 4642               	.LBB216:
 577:quantum/rgblight.c **** }
 4643               		.loc 1 577 29 view .LVU1135
 577:quantum/rgblight.c **** }
 4644               		.loc 1 577 29 view .LVU1136
 577:quantum/rgblight.c **** }
 4645               		.loc 1 577 29 view .LVU1137
 4646               	.LBE216:
 4647               	.LBE218:
 802:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 4648               		.loc 1 802 29 is_stmt 0 view .LVU1138
 4649 00e2 F0E0      		ldi r31,0
 4650 00e4 E050      		subi r30,lo8(-(RGBLED_KNIGHT_INTERVALS))
 4651 00e6 F040      		sbci r31,hi8(-(RGBLED_KNIGHT_INTERVALS))
 4652               	.LVL335:
 4653               	.LBB219:
 4654               	.LBB217:
 577:quantum/rgblight.c **** }
 4655               		.loc 1 577 29 view .LVU1139
 4656               	/* #APP */
 4657               	 ;  577 "quantum/rgblight.c" 1
 4658 00e8 E491      		lpm r30, Z
 4659               		
 4660               	 ;  0 "" 2
 4661               	.LVL336:
 577:quantum/rgblight.c **** }
 4662               		.loc 1 577 29 is_stmt 1 view .LVU1140
 577:quantum/rgblight.c **** }
 4663               		.loc 1 577 29 is_stmt 0 view .LVU1141
 4664               	/* #NOAPP */
 4665               	.LBE217:
 4666               	.LBE219:
 802:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 4667               		.loc 1 802 27 view .LVU1142
 4668 00ea CE2F      		mov r28,r30
 4669 00ec D0E0      		ldi r29,0
 4670               	.LVL337:
 803:quantum/rgblight.c ****         }
 4671               		.loc 1 803 13 is_stmt 1 view .LVU1143
 803:quantum/rgblight.c ****         }
 4672               		.loc 1 803 27 is_stmt 0 view .LVU1144
 4673 00ee 00E0      		ldi r16,lo8(gs(rgblight_effect_knight))
 4674 00f0 10E0      		ldi r17,hi8(gs(rgblight_effect_knight))
 4675 00f2 00C0      		rjmp .L222
 4676               	.LVL338:
 4677               	.L226:
 807:quantum/rgblight.c ****             // christmas mode
 4678               		.loc 1 807 14 is_stmt 1 view .LVU1145
 809:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_christmas;
 4679               		.loc 1 809 27 is_stmt 0 view .LVU1146
 4680 00f4 C8EE      		ldi r28,lo8(-24)
 4681 00f6 D3E0      		ldi r29,lo8(3)
 810:quantum/rgblight.c ****         }
 4682               		.loc 1 810 27 view .LVU1147
 4683 00f8 00E0      		ldi r16,lo8(gs(rgblight_effect_christmas))
 4684 00fa 10E0      		ldi r17,hi8(gs(rgblight_effect_christmas))
 807:quantum/rgblight.c ****             // christmas mode
 4685               		.loc 1 807 17 view .LVU1148
 4686 00fc 8831      		cpi r24,lo8(24)
 4687 00fe 01F4      		brne .+2
 4688 0100 00C0      		rjmp .L222
 814:quantum/rgblight.c ****             // RGB test mode
 4689               		.loc 1 814 14 is_stmt 1 view .LVU1149
 814:quantum/rgblight.c ****             // RGB test mode
 4690               		.loc 1 814 17 is_stmt 0 view .LVU1150
 4691 0102 8332      		cpi r24,lo8(35)
 4692 0104 01F4      		brne .L227
 816:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 4693               		.loc 1 816 13 is_stmt 1 view .LVU1151
 4694               	.LBB220:
 816:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 4695               		.loc 1 816 29 view .LVU1152
 4696               	.LVL339:
 816:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 4697               		.loc 1 816 29 view .LVU1153
 816:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 4698               		.loc 1 816 29 view .LVU1154
 4699 0106 E0E0      		ldi r30,lo8(RGBLED_RGBTEST_INTERVALS)
 4700 0108 F0E0      		ldi r31,hi8(RGBLED_RGBTEST_INTERVALS)
 4701               	.LVL340:
 816:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 4702               		.loc 1 816 29 is_stmt 0 view .LVU1155
 4703               	/* #APP */
 4704               	 ;  816 "quantum/rgblight.c" 1
 4705 010a C591      		lpm r28, Z+
 4706 010c D491      		lpm r29, Z
 4707               		
 4708               	 ;  0 "" 2
 4709               	.LVL341:
 816:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 4710               		.loc 1 816 29 is_stmt 1 view .LVU1156
 816:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 4711               		.loc 1 816 29 is_stmt 0 view .LVU1157
 4712               	/* #NOAPP */
 4713               	.LBE220:
 817:quantum/rgblight.c ****         }
 4714               		.loc 1 817 13 is_stmt 1 view .LVU1158
 817:quantum/rgblight.c ****         }
 4715               		.loc 1 817 27 is_stmt 0 view .LVU1159
 4716 010e 00E0      		ldi r16,lo8(gs(rgblight_effect_rgbtest))
 4717 0110 10E0      		ldi r17,hi8(gs(rgblight_effect_rgbtest))
 4718 0112 00C0      		rjmp .L222
 4719               	.LVL342:
 4720               	.L227:
 821:quantum/rgblight.c ****             interval_time = 500;
 4721               		.loc 1 821 14 is_stmt 1 view .LVU1160
 822:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_alternating;
 4722               		.loc 1 822 27 is_stmt 0 view .LVU1161
 4723 0114 C4EF      		ldi r28,lo8(-12)
 4724 0116 D1E0      		ldi r29,lo8(1)
 823:quantum/rgblight.c ****         }
 4725               		.loc 1 823 27 view .LVU1162
 4726 0118 00E0      		ldi r16,lo8(gs(rgblight_effect_alternating))
 4727 011a 10E0      		ldi r17,hi8(gs(rgblight_effect_alternating))
 821:quantum/rgblight.c ****             interval_time = 500;
 4728               		.loc 1 821 17 view .LVU1163
 4729 011c 8432      		cpi r24,lo8(36)
 4730 011e 01F4      		brne .+2
 4731 0120 00C0      		rjmp .L222
 764:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 4732               		.loc 1 764 23 view .LVU1164
 4733 0122 C0ED      		ldi r28,lo8(-48)
 4734 0124 D7E0      		ldi r29,lo8(7)
 763:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 4735               		.loc 1 763 23 view .LVU1165
 4736 0126 00E0      		ldi r16,lo8(gs(rgblight_effect_dummy))
 4737 0128 10E0      		ldi r17,hi8(gs(rgblight_effect_dummy))
 4738 012a 00C0      		rjmp .L222
 4739               	.LVL343:
 4740               	.L218:
 4741               	/* epilogue start */
 763:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 4742               		.loc 1 763 23 view .LVU1166
 4743               	.LBE226:
 855:quantum/rgblight.c **** 
 4744               		.loc 1 855 1 view .LVU1167
 4745 012c DF91      		pop r29
 4746 012e CF91      		pop r28
 4747 0130 1F91      		pop r17
 4748 0132 0F91      		pop r16
 4749 0134 0895      		ret
 4750               		.cfi_endproc
 4751               	.LFE162:
 4753               		.section	.bss.maxval.3251,"aw",@nobits
 4756               	maxval.3251:
 4757 0000 00        		.zero	1
 4758               		.section	.data.increment.3230,"aw"
 4761               	increment.3230:
 4762 0000 01        		.byte	1
 4763               		.section	.data.high_bound.3229,"aw"
 4766               	high_bound.3229:
 4767 0000 02        		.byte	2
 4768               		.section	.bss.low_bound.3228,"aw",@nobits
 4771               	low_bound.3228:
 4772 0000 00        		.zero	1
 4773               		.section	.bss.pos.3212,"aw",@nobits
 4776               	pos.3212:
 4777 0000 00        		.zero	1
 4778               		.weak	RGBLED_RGBTEST_INTERVALS
 4779               		.section	.progmem.data.RGBLED_RGBTEST_INTERVALS,"a"
 4782               	RGBLED_RGBTEST_INTERVALS:
 4783 0000 0004      		.word	1024
 4784               		.weak	RGBLED_KNIGHT_INTERVALS
 4785               		.section	.progmem.data.RGBLED_KNIGHT_INTERVALS,"a"
 4788               	RGBLED_KNIGHT_INTERVALS:
 4789 0000 7F        		.byte	127
 4790 0001 3F        		.byte	63
 4791 0002 1F        		.byte	31
 4792               		.weak	RGBLED_SNAKE_INTERVALS
 4793               		.section	.progmem.data.RGBLED_SNAKE_INTERVALS,"a"
 4796               	RGBLED_SNAKE_INTERVALS:
 4797 0000 64        		.byte	100
 4798 0001 32        		.byte	50
 4799 0002 14        		.byte	20
 4800               		.weak	RGBLED_RAINBOW_SWIRL_INTERVALS
 4801               		.section	.progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS,"a"
 4804               	RGBLED_RAINBOW_SWIRL_INTERVALS:
 4805 0000 64        		.byte	100
 4806 0001 32        		.byte	50
 4807 0002 14        		.byte	20
 4808               		.weak	RGBLED_RAINBOW_MOOD_INTERVALS
 4809               		.section	.progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS,"a"
 4812               	RGBLED_RAINBOW_MOOD_INTERVALS:
 4813 0000 78        		.byte	120
 4814 0001 3C        		.byte	60
 4815 0002 1E        		.byte	30
 4816               		.weak	RGBLED_BREATHING_INTERVALS
 4817               		.section	.progmem.data.RGBLED_BREATHING_INTERVALS,"a"
 4820               	RGBLED_BREATHING_INTERVALS:
 4821 0000 1E        		.byte	30
 4822 0001 14        		.byte	20
 4823 0002 0A        		.byte	10
 4824 0003 05        		.byte	5
 4825               	.global	rgblight_effect_breathe_table
 4826               		.section	.progmem.data.rgblight_effect_breathe_table,"a"
 4829               	rgblight_effect_breathe_table:
 4830 0000 22        		.byte	34
 4831 0001 23        		.byte	35
 4832 0002 25        		.byte	37
 4833 0003 26        		.byte	38
 4834 0004 28        		.byte	40
 4835 0005 29        		.byte	41
 4836 0006 2A        		.byte	42
 4837 0007 2C        		.byte	44
 4838 0008 2D        		.byte	45
 4839 0009 2F        		.byte	47
 4840 000a 30        		.byte	48
 4841 000b 32        		.byte	50
 4842 000c 33        		.byte	51
 4843 000d 35        		.byte	53
 4844 000e 36        		.byte	54
 4845 000f 38        		.byte	56
 4846 0010 3A        		.byte	58
 4847 0011 3B        		.byte	59
 4848 0012 3D        		.byte	61
 4849 0013 3E        		.byte	62
 4850 0014 40        		.byte	64
 4851 0015 42        		.byte	66
 4852 0016 43        		.byte	67
 4853 0017 45        		.byte	69
 4854 0018 47        		.byte	71
 4855 0019 49        		.byte	73
 4856 001a 4A        		.byte	74
 4857 001b 4C        		.byte	76
 4858 001c 4E        		.byte	78
 4859 001d 50        		.byte	80
 4860 001e 51        		.byte	81
 4861 001f 53        		.byte	83
 4862 0020 55        		.byte	85
 4863 0021 57        		.byte	87
 4864 0022 59        		.byte	89
 4865 0023 5A        		.byte	90
 4866 0024 5C        		.byte	92
 4867 0025 5E        		.byte	94
 4868 0026 60        		.byte	96
 4869 0027 62        		.byte	98
 4870 0028 64        		.byte	100
 4871 0029 66        		.byte	102
 4872 002a 68        		.byte	104
 4873 002b 69        		.byte	105
 4874 002c 6B        		.byte	107
 4875 002d 6D        		.byte	109
 4876 002e 6F        		.byte	111
 4877 002f 71        		.byte	113
 4878 0030 73        		.byte	115
 4879 0031 75        		.byte	117
 4880 0032 77        		.byte	119
 4881 0033 79        		.byte	121
 4882 0034 7B        		.byte	123
 4883 0035 7D        		.byte	125
 4884 0036 7F        		.byte	127
 4885 0037 81        		.byte	-127
 4886 0038 83        		.byte	-125
 4887 0039 85        		.byte	-123
 4888 003a 87        		.byte	-121
 4889 003b 89        		.byte	-119
 4890 003c 8A        		.byte	-118
 4891 003d 8C        		.byte	-116
 4892 003e 8E        		.byte	-114
 4893 003f 90        		.byte	-112
 4894 0040 92        		.byte	-110
 4895 0041 94        		.byte	-108
 4896 0042 96        		.byte	-106
 4897 0043 98        		.byte	-104
 4898 0044 9A        		.byte	-102
 4899 0045 9C        		.byte	-100
 4900 0046 9E        		.byte	-98
 4901 0047 9F        		.byte	-97
 4902 0048 A1        		.byte	-95
 4903 0049 A3        		.byte	-93
 4904 004a A5        		.byte	-91
 4905 004b A7        		.byte	-89
 4906 004c A8        		.byte	-88
 4907 004d AA        		.byte	-86
 4908 004e AC        		.byte	-84
 4909 004f AE        		.byte	-82
 4910 0050 AF        		.byte	-81
 4911 0051 B1        		.byte	-79
 4912 0052 B3        		.byte	-77
 4913 0053 B4        		.byte	-76
 4914 0054 B6        		.byte	-74
 4915 0055 B8        		.byte	-72
 4916 0056 B9        		.byte	-71
 4917 0057 BB        		.byte	-69
 4918 0058 BC        		.byte	-68
 4919 0059 BE        		.byte	-66
 4920 005a BF        		.byte	-65
 4921 005b C1        		.byte	-63
 4922 005c C2        		.byte	-62
 4923 005d C3        		.byte	-61
 4924 005e C5        		.byte	-59
 4925 005f C6        		.byte	-58
 4926 0060 C7        		.byte	-57
 4927 0061 C9        		.byte	-55
 4928 0062 CA        		.byte	-54
 4929 0063 CB        		.byte	-53
 4930 0064 CC        		.byte	-52
 4931 0065 CD        		.byte	-51
 4932 0066 CE        		.byte	-50
 4933 0067 D0        		.byte	-48
 4934 0068 D1        		.byte	-47
 4935 0069 D2        		.byte	-46
 4936 006a D2        		.byte	-46
 4937 006b D3        		.byte	-45
 4938 006c D4        		.byte	-44
 4939 006d D5        		.byte	-43
 4940 006e D6        		.byte	-42
 4941 006f D7        		.byte	-41
 4942 0070 D7        		.byte	-41
 4943 0071 D8        		.byte	-40
 4944 0072 D9        		.byte	-39
 4945 0073 D9        		.byte	-39
 4946 0074 DA        		.byte	-38
 4947 0075 DA        		.byte	-38
 4948 0076 DB        		.byte	-37
 4949 0077 DB        		.byte	-37
 4950 0078 DB        		.byte	-37
 4951 0079 DC        		.byte	-36
 4952 007a DC        		.byte	-36
 4953 007b DC        		.byte	-36
 4954 007c DC        		.byte	-36
 4955 007d DC        		.byte	-36
 4956 007e DD        		.byte	-35
 4957 007f DD        		.byte	-35
 4958 0080 DD        		.byte	-35
 4959 0081 DD        		.byte	-35
 4960 0082 DC        		.byte	-36
 4961 0083 DC        		.byte	-36
 4962 0084 DC        		.byte	-36
 4963 0085 DC        		.byte	-36
 4964 0086 DC        		.byte	-36
 4965 0087 DB        		.byte	-37
 4966 0088 DB        		.byte	-37
 4967 0089 DB        		.byte	-37
 4968 008a DA        		.byte	-38
 4969 008b DA        		.byte	-38
 4970 008c D9        		.byte	-39
 4971 008d D9        		.byte	-39
 4972 008e D8        		.byte	-40
 4973 008f D7        		.byte	-41
 4974 0090 D7        		.byte	-41
 4975 0091 D6        		.byte	-42
 4976 0092 D5        		.byte	-43
 4977 0093 D4        		.byte	-44
 4978 0094 D3        		.byte	-45
 4979 0095 D2        		.byte	-46
 4980 0096 D2        		.byte	-46
 4981 0097 D1        		.byte	-47
 4982 0098 D0        		.byte	-48
 4983 0099 CE        		.byte	-50
 4984 009a CD        		.byte	-51
 4985 009b CC        		.byte	-52
 4986 009c CB        		.byte	-53
 4987 009d CA        		.byte	-54
 4988 009e C9        		.byte	-55
 4989 009f C7        		.byte	-57
 4990 00a0 C6        		.byte	-58
 4991 00a1 C5        		.byte	-59
 4992 00a2 C3        		.byte	-61
 4993 00a3 C2        		.byte	-62
 4994 00a4 C1        		.byte	-63
 4995 00a5 BF        		.byte	-65
 4996 00a6 BE        		.byte	-66
 4997 00a7 BC        		.byte	-68
 4998 00a8 BB        		.byte	-69
 4999 00a9 B9        		.byte	-71
 5000 00aa B8        		.byte	-72
 5001 00ab B6        		.byte	-74
 5002 00ac B4        		.byte	-76
 5003 00ad B3        		.byte	-77
 5004 00ae B1        		.byte	-79
 5005 00af AF        		.byte	-81
 5006 00b0 AE        		.byte	-82
 5007 00b1 AC        		.byte	-84
 5008 00b2 AA        		.byte	-86
 5009 00b3 A8        		.byte	-88
 5010 00b4 A7        		.byte	-89
 5011 00b5 A5        		.byte	-91
 5012 00b6 A3        		.byte	-93
 5013 00b7 A1        		.byte	-95
 5014 00b8 9F        		.byte	-97
 5015 00b9 9E        		.byte	-98
 5016 00ba 9C        		.byte	-100
 5017 00bb 9A        		.byte	-102
 5018 00bc 98        		.byte	-104
 5019 00bd 96        		.byte	-106
 5020 00be 94        		.byte	-108
 5021 00bf 92        		.byte	-110
 5022 00c0 90        		.byte	-112
 5023 00c1 8E        		.byte	-114
 5024 00c2 8C        		.byte	-116
 5025 00c3 8A        		.byte	-118
 5026 00c4 89        		.byte	-119
 5027 00c5 87        		.byte	-121
 5028 00c6 85        		.byte	-123
 5029 00c7 83        		.byte	-125
 5030 00c8 81        		.byte	-127
 5031 00c9 7F        		.byte	127
 5032 00ca 7D        		.byte	125
 5033 00cb 7B        		.byte	123
 5034 00cc 79        		.byte	121
 5035 00cd 77        		.byte	119
 5036 00ce 75        		.byte	117
 5037 00cf 73        		.byte	115
 5038 00d0 71        		.byte	113
 5039 00d1 6F        		.byte	111
 5040 00d2 6D        		.byte	109
 5041 00d3 6B        		.byte	107
 5042 00d4 69        		.byte	105
 5043 00d5 68        		.byte	104
 5044 00d6 66        		.byte	102
 5045 00d7 64        		.byte	100
 5046 00d8 62        		.byte	98
 5047 00d9 60        		.byte	96
 5048 00da 5E        		.byte	94
 5049 00db 5C        		.byte	92
 5050 00dc 5A        		.byte	90
 5051 00dd 59        		.byte	89
 5052 00de 57        		.byte	87
 5053 00df 55        		.byte	85
 5054 00e0 53        		.byte	83
 5055 00e1 51        		.byte	81
 5056 00e2 50        		.byte	80
 5057 00e3 4E        		.byte	78
 5058 00e4 4C        		.byte	76
 5059 00e5 4A        		.byte	74
 5060 00e6 49        		.byte	73
 5061 00e7 47        		.byte	71
 5062 00e8 45        		.byte	69
 5063 00e9 43        		.byte	67
 5064 00ea 42        		.byte	66
 5065 00eb 40        		.byte	64
 5066 00ec 3E        		.byte	62
 5067 00ed 3D        		.byte	61
 5068 00ee 3B        		.byte	59
 5069 00ef 3A        		.byte	58
 5070 00f0 38        		.byte	56
 5071 00f1 36        		.byte	54
 5072 00f2 35        		.byte	53
 5073 00f3 33        		.byte	51
 5074 00f4 32        		.byte	50
 5075 00f5 30        		.byte	48
 5076 00f6 2F        		.byte	47
 5077 00f7 2D        		.byte	45
 5078 00f8 2C        		.byte	44
 5079 00f9 2A        		.byte	42
 5080 00fa 29        		.byte	41
 5081 00fb 28        		.byte	40
 5082 00fc 26        		.byte	38
 5083 00fd 25        		.byte	37
 5084 00fe 23        		.byte	35
 5085 00ff 22        		.byte	34
 5086               		.section	.data.effect_num_leds,"aw"
 5089               	effect_num_leds:
 5090 0000 08        		.byte	8
 5091               		.section	.data.effect_end_pos,"aw"
 5094               	effect_end_pos:
 5095 0000 08        		.byte	8
 5096               		.section	.bss.effect_start_pos,"aw",@nobits
 5099               	effect_start_pos:
 5100 0000 00        		.zero	1
 5101               		.section	.data.clipping_num_leds,"aw"
 5104               	clipping_num_leds:
 5105 0000 08        		.byte	8
 5106               		.section	.bss.clipping_start_pos,"aw",@nobits
 5109               	clipping_start_pos:
 5110 0000 00        		.zero	1
 5111               		.comm	led,24,1
 5112               	.global	animation_status
 5113               		.section	.bss.animation_status,"aw",@nobits
 5116               	animation_status:
 5117 0000 0000 0000 		.zero	6
 5117      0000 
 5118               	.global	is_rgblight_initialized
 5119               		.section	.bss.is_rgblight_initialized,"aw",@nobits
 5122               	is_rgblight_initialized:
 5123 0000 00        		.zero	1
 5124               	.global	rgblight_status
 5125               		.section	.bss.rgblight_status,"aw",@nobits
 5128               	rgblight_status:
 5129 0000 0000      		.zero	2
 5130               		.comm	rgblight_config,5,1
 5131               		.weak	RGBLED_GRADIENT_RANGES
 5132               		.section	.progmem.data.RGBLED_GRADIENT_RANGES,"a"
 5135               	RGBLED_GRADIENT_RANGES:
 5136 0000 FF        		.byte	-1
 5137 0001 AA        		.byte	-86
 5138 0002 7F        		.byte	127
 5139 0003 55        		.byte	85
 5140 0004 40        		.byte	64
 5141               		.section	.rodata.mode_base_table,"a"
 5144               	mode_base_table:
 5145 0000 00        		.byte	0
 5146 0001 01        		.byte	1
 5147 0002 02        		.byte	2
 5148 0003 02        		.byte	2
 5149 0004 02        		.byte	2
 5150 0005 02        		.byte	2
 5151 0006 06        		.byte	6
 5152 0007 06        		.byte	6
 5153 0008 06        		.byte	6
 5154 0009 09        		.byte	9
 5155 000a 09        		.byte	9
 5156 000b 09        		.byte	9
 5157 000c 09        		.byte	9
 5158 000d 09        		.byte	9
 5159 000e 09        		.byte	9
 5160 000f 0F        		.byte	15
 5161 0010 0F        		.byte	15
 5162 0011 0F        		.byte	15
 5163 0012 0F        		.byte	15
 5164 0013 0F        		.byte	15
 5165 0014 0F        		.byte	15
 5166 0015 15        		.byte	21
 5167 0016 15        		.byte	21
 5168 0017 15        		.byte	21
 5169 0018 18        		.byte	24
 5170 0019 19        		.byte	25
 5171 001a 19        		.byte	25
 5172 001b 19        		.byte	25
 5173 001c 19        		.byte	25
 5174 001d 19        		.byte	25
 5175 001e 19        		.byte	25
 5176 001f 19        		.byte	25
 5177 0020 19        		.byte	25
 5178 0021 19        		.byte	25
 5179 0022 19        		.byte	25
 5180 0023 23        		.byte	35
 5181 0024 24        		.byte	36
 5182               		.section	.data.static_effect_table,"aw"
 5185               	static_effect_table:
 5186 0000 01        		.byte	1
 5187 0001 19        		.byte	25
 5188 0002 1A        		.byte	26
 5189 0003 1B        		.byte	27
 5190 0004 1C        		.byte	28
 5191 0005 1D        		.byte	29
 5192 0006 1E        		.byte	30
 5193 0007 1F        		.byte	31
 5194 0008 20        		.byte	32
 5195 0009 21        		.byte	33
 5196 000a 22        		.byte	34
 5197               		.text
 5198               	.Letext0:
 5199               		.file 4 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchain
 5200               		.file 5 "./quantum/color.h"
 5201               		.file 6 "tmk_core/common/timer.h"
 5202               		.file 7 "quantum/rgblight.h"
 5203               		.file 8 "tmk_core/common/debug.h"
 5204               		.file 9 "quantum/led_tables.h"
 5205               		.file 10 "./lib/lib8tion/random8.h"
 5206               		.file 11 "./lib/lib8tion/trig8.h"
 5207               		.file 12 "quantum/rgblight_breathe_table.h"
 5208               		.file 13 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchai
 5209               		.file 14 "drivers/avr/ws2812.h"
 5210               		.file 15 "tmk_core/common/eeconfig.h"
 5211               		.file 16 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchai
DEFINED SYMBOLS
                            *ABS*:00000000 rgblight.c
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:2      *ABS*:0000003e __SP_H__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:3      *ABS*:0000003d __SP_L__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:4      *ABS*:0000003f __SREG__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:6      *ABS*:00000001 __zero_reg__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:12     .text.rgblight_effect_dummy:00000000 rgblight_effect_dummy
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:31     .text.rgblight_set_clipping_range:00000000 rgblight_set_clipping_range
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:5109   .bss.clipping_start_pos:00000000 clipping_start_pos
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:5104   .data.clipping_num_leds:00000000 clipping_num_leds
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:55     .text.rgblight_set_effect_range:00000000 rgblight_set_effect_range
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:5099   .bss.effect_start_pos:00000000 effect_start_pos
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:5094   .data.effect_end_pos:00000000 effect_end_pos
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:5089   .data.effect_num_leds:00000000 effect_num_leds
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:101    .text.sethsv_raw:00000000 sethsv_raw
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:163    .text.sethsv:00000000 sethsv
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:182    .text.setrgb:00000000 setrgb
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:211    .text.rgblight_check_config:00000000 rgblight_check_config
                            *COM*:00000005 rgblight_config
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:254    .text.eeconfig_read_rgblight:00000000 eeconfig_read_rgblight
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:274    .text.eeconfig_update_rgblight:00000000 eeconfig_update_rgblight
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:325    .text.eeconfig_update_rgblight_current:00000000 eeconfig_update_rgblight_current
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:346    .text.eeconfig_update_rgblight_default:00000000 eeconfig_update_rgblight_default
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:388    .text.eeconfig_debug_rgblight:00000000 eeconfig_debug_rgblight
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:412    .text.rgblight_read_dword:00000000 rgblight_read_dword
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:435    .text.rgblight_get_mode:00000000 rgblight_get_mode
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:465    .text.rgblight_increase_speed:00000000 rgblight_increase_speed
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:497    .text.rgblight_decrease_speed:00000000 rgblight_decrease_speed
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:529    .text.rgblight_get_speed:00000000 rgblight_get_speed
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:548    .text.rgblight_set_speed_eeprom_helper:00000000 rgblight_set_speed_eeprom_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:583    .text.rgblight_set_speed:00000000 rgblight_set_speed
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:603    .text.rgblight_set_speed_noeeprom:00000000 rgblight_set_speed_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:623    .text.rgblight_get_hue:00000000 rgblight_get_hue
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:642    .text.rgblight_get_sat:00000000 rgblight_get_sat
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:661    .text.rgblight_get_val:00000000 rgblight_get_val
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:680    .text.rgblight_set:00000000 rgblight_set
                            *COM*:00000018 led
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:759    .text.rgblight_setrgb:00000000 rgblight_setrgb
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:835    .text.rgblight_sethsv_noeeprom_old:00000000 rgblight_sethsv_noeeprom_old
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:906    .text.rgblight_effect_breathing:00000000 rgblight_effect_breathing
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:4829   .progmem.data.rgblight_effect_breathe_table:00000000 rgblight_effect_breathe_table
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:974    .text.rgblight_effect_rainbow_mood:00000000 rgblight_effect_rainbow_mood
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1021   .text.rgblight_effect_rgbtest:00000000 rgblight_effect_rgbtest
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:4756   .bss.maxval.3251:00000000 maxval.3251
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1175   .text.rgblight_sethsv_eeprom_helper:00000000 rgblight_sethsv_eeprom_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:5144   .rodata.mode_base_table:00000000 mode_base_table
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:5128   .bss.rgblight_status:00000000 rgblight_status
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:5135   .progmem.data.RGBLED_GRADIENT_RANGES:00000000 RGBLED_GRADIENT_RANGES
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1511   .text.rgblight_increase_hue_helper:00000000 rgblight_increase_hue_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1545   .text.rgblight_increase_hue_noeeprom:00000000 rgblight_increase_hue_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1563   .text.rgblight_increase_hue:00000000 rgblight_increase_hue
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1581   .text.rgblight_decrease_hue_helper:00000000 rgblight_decrease_hue_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1615   .text.rgblight_decrease_hue_noeeprom:00000000 rgblight_decrease_hue_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1633   .text.rgblight_decrease_hue:00000000 rgblight_decrease_hue
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1651   .text.rgblight_increase_sat_helper:00000000 rgblight_increase_sat_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1682   .text.rgblight_increase_sat_helper:0000000e L_1343
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1705   .text.rgblight_increase_sat_noeeprom:00000000 rgblight_increase_sat_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1723   .text.rgblight_increase_sat:00000000 rgblight_increase_sat
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1741   .text.rgblight_decrease_sat_helper:00000000 rgblight_decrease_sat_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1771   .text.rgblight_decrease_sat_helper:0000000e L_1399
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1794   .text.rgblight_decrease_sat_noeeprom:00000000 rgblight_decrease_sat_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1812   .text.rgblight_decrease_sat:00000000 rgblight_decrease_sat
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1830   .text.rgblight_increase_val_helper:00000000 rgblight_increase_val_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1860   .text.rgblight_increase_val_helper:0000000e L_1455
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1883   .text.rgblight_increase_val_noeeprom:00000000 rgblight_increase_val_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1901   .text.rgblight_increase_val:00000000 rgblight_increase_val
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1919   .text.rgblight_decrease_val_helper:00000000 rgblight_decrease_val_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1949   .text.rgblight_decrease_val_helper:0000000e L_1511
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1972   .text.rgblight_decrease_val_noeeprom:00000000 rgblight_decrease_val_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:1990   .text.rgblight_decrease_val:00000000 rgblight_decrease_val
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:2008   .text.rgblight_sethsv:00000000 rgblight_sethsv
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:2028   .text.rgblight_sethsv_noeeprom:00000000 rgblight_sethsv_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:2048   .text.rgblight_setrgb_at:00000000 rgblight_setrgb_at
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:2102   .text.rgblight_sethsv_at:00000000 rgblight_sethsv_at
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:2182   .text.rgblight_setrgb_range:00000000 rgblight_setrgb_range
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:2281   .text.rgblight_sethsv_range:00000000 rgblight_sethsv_range
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:2368   .text.rgblight_sethsv_master:00000000 rgblight_sethsv_master
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:2397   .text.rgblight_sethsv_slave:00000000 rgblight_sethsv_slave
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:2426   .text.rgblight_setrgb_master:00000000 rgblight_setrgb_master
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:2455   .text.rgblight_setrgb_slave:00000000 rgblight_setrgb_slave
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:2484   .text.rgblight_effect_rainbow_swirl:00000000 rgblight_effect_rainbow_swirl
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:2621   .text.rgblight_effect_snake:00000000 rgblight_effect_snake
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:4776   .bss.pos.3212:00000000 pos.3212
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:2872   .text.rgblight_effect_knight:00000000 rgblight_effect_knight
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:4761   .data.increment.3230:00000000 increment.3230
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:4771   .bss.low_bound.3228:00000000 low_bound.3228
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:4766   .data.high_bound.3229:00000000 high_bound.3229
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:3067   .text.rgblight_effect_christmas:00000000 rgblight_effect_christmas
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:3185   .text.rgblight_effect_alternating:00000000 rgblight_effect_alternating
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:3346   .text.rgblight_disable:00000000 rgblight_disable
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:3415   .text.rgblight_disable_noeeprom:00000000 rgblight_disable_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:3477   .text.rgblight_timer_init:00000000 rgblight_timer_init
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:3498   .text.rgblight_timer_enable:00000000 rgblight_timer_enable
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:5185   .data.static_effect_table:00000000 static_effect_table
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:5116   .bss.animation_status:00000000 animation_status
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:3557   .text.rgblight_mode_eeprom_helper:00000000 rgblight_mode_eeprom_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:3684   .text.rgblight_step_helper:00000000 rgblight_step_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:3725   .text.rgblight_step_noeeprom:00000000 rgblight_step_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:3743   .text.rgblight_step:00000000 rgblight_step
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:3761   .text.rgblight_step_reverse_helper:00000000 rgblight_step_reverse_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:3801   .text.rgblight_step_reverse_noeeprom:00000000 rgblight_step_reverse_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:3819   .text.rgblight_step_reverse:00000000 rgblight_step_reverse
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:3837   .text.rgblight_mode:00000000 rgblight_mode
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:3857   .text.rgblight_increase:00000000 rgblight_increase
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:3892   .text.rgblight_decrease:00000000 rgblight_decrease
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:3927   .text.rgblight_enable:00000000 rgblight_enable
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:3953   .text.rgblight_toggle:00000000 rgblight_toggle
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:3980   .text.rgblight_mode_noeeprom:00000000 rgblight_mode_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:4000   .text.rgblight_init:00000000 rgblight_init
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:5122   .bss.is_rgblight_initialized:00000000 is_rgblight_initialized
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:4099   .text.rgblight_enable_noeeprom:00000000 rgblight_enable_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:4125   .text.rgblight_toggle_noeeprom:00000000 rgblight_toggle_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:4152   .text.rgblight_update_dword:00000000 rgblight_update_dword
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:4199   .text.rgblight_timer_disable:00000000 rgblight_timer_disable
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:4215   .text.rgblight_timer_toggle:00000000 rgblight_timer_toggle
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:4253   .text.rgblight_show_solid_color:00000000 rgblight_show_solid_color
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:4309   .text.rgblight_task:00000000 rgblight_task
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:4820   .progmem.data.RGBLED_BREATHING_INTERVALS:00000000 RGBLED_BREATHING_INTERVALS
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:4812   .progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS:00000000 RGBLED_RAINBOW_MOOD_INTERVALS
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:4804   .progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS:00000000 RGBLED_RAINBOW_SWIRL_INTERVALS
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:4796   .progmem.data.RGBLED_SNAKE_INTERVALS:00000000 RGBLED_SNAKE_INTERVALS
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:4788   .progmem.data.RGBLED_KNIGHT_INTERVALS:00000000 RGBLED_KNIGHT_INTERVALS
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccpDe1BT.s:4782   .progmem.data.RGBLED_RGBTEST_INTERVALS:00000000 RGBLED_RGBTEST_INTERVALS

UNDEFINED SYMBOLS
hsv_to_rgb
eeprom_read_dword
eeprom_update_dword
__mulhi3
ws2812_setleds
__divmodhi4
__udivmodhi4
__mulqi3
memchr
timer_read
eeconfig_is_enabled
eeconfig_init
timer_elapsed
__do_copy_data
__do_clear_bss
