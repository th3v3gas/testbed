   1               		.file	"keymap_common.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.action_get_macro,"ax",@progbits
  11               		.weak	action_get_macro
  13               	action_get_macro:
  14               	.LVL0:
  15               	.LFB110:
  16               		.file 1 "quantum/keymap_common.c"
   1:quantum/keymap_common.c **** /*
   2:quantum/keymap_common.c **** Copyright 2012-2017 Jun Wako <wakojun@gmail.com>
   3:quantum/keymap_common.c **** 
   4:quantum/keymap_common.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/keymap_common.c **** it under the terms of the GNU General Public License as published by
   6:quantum/keymap_common.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/keymap_common.c **** (at your option) any later version.
   8:quantum/keymap_common.c **** 
   9:quantum/keymap_common.c **** This program is distributed in the hope that it will be useful,
  10:quantum/keymap_common.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/keymap_common.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/keymap_common.c **** GNU General Public License for more details.
  13:quantum/keymap_common.c **** 
  14:quantum/keymap_common.c **** You should have received a copy of the GNU General Public License
  15:quantum/keymap_common.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/keymap_common.c **** */
  17:quantum/keymap_common.c **** 
  18:quantum/keymap_common.c **** #include "keymap.h"
  19:quantum/keymap_common.c **** #include "report.h"
  20:quantum/keymap_common.c **** #include "keycode.h"
  21:quantum/keymap_common.c **** #include "action_layer.h"
  22:quantum/keymap_common.c **** #if defined(__AVR__)
  23:quantum/keymap_common.c **** #    include <util/delay.h>
  24:quantum/keymap_common.c **** #    include <stdio.h>
  25:quantum/keymap_common.c **** #endif
  26:quantum/keymap_common.c **** #include "action.h"
  27:quantum/keymap_common.c **** #include "action_macro.h"
  28:quantum/keymap_common.c **** #include "debug.h"
  29:quantum/keymap_common.c **** #include "quantum.h"
  30:quantum/keymap_common.c **** 
  31:quantum/keymap_common.c **** #ifdef BACKLIGHT_ENABLE
  32:quantum/keymap_common.c **** #    include "backlight.h"
  33:quantum/keymap_common.c **** #endif
  34:quantum/keymap_common.c **** 
  35:quantum/keymap_common.c **** #ifdef MIDI_ENABLE
  36:quantum/keymap_common.c **** #    include "process_midi.h"
  37:quantum/keymap_common.c **** #endif
  38:quantum/keymap_common.c **** 
  39:quantum/keymap_common.c **** extern keymap_config_t keymap_config;
  40:quantum/keymap_common.c **** 
  41:quantum/keymap_common.c **** #include <inttypes.h>
  42:quantum/keymap_common.c **** 
  43:quantum/keymap_common.c **** /* converts key to action */
  44:quantum/keymap_common.c **** action_t action_for_key(uint8_t layer, keypos_t key) {
  45:quantum/keymap_common.c ****     // 16bit keycodes - important
  46:quantum/keymap_common.c ****     uint16_t keycode = keymap_key_to_keycode(layer, key);
  47:quantum/keymap_common.c **** 
  48:quantum/keymap_common.c ****     // keycode remapping
  49:quantum/keymap_common.c ****     keycode = keycode_config(keycode);
  50:quantum/keymap_common.c **** 
  51:quantum/keymap_common.c ****     action_t action = {};
  52:quantum/keymap_common.c ****     uint8_t  action_layer, when, mod;
  53:quantum/keymap_common.c **** 
  54:quantum/keymap_common.c ****     switch (keycode) {
  55:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
  56:quantum/keymap_common.c ****         case KC_LCTRL ... KC_RGUI:
  57:quantum/keymap_common.c ****             action.code = ACTION_KEY(keycode);
  58:quantum/keymap_common.c ****             break;
  59:quantum/keymap_common.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
  60:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
  61:quantum/keymap_common.c ****             break;
  62:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_BRIGHTNESS_DOWN:
  63:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
  64:quantum/keymap_common.c ****             break;
  65:quantum/keymap_common.c **** #ifdef MOUSEKEY_ENABLE
  66:quantum/keymap_common.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
  67:quantum/keymap_common.c ****             action.code = ACTION_MOUSEKEY(keycode);
  68:quantum/keymap_common.c ****             break;
  69:quantum/keymap_common.c **** #endif
  70:quantum/keymap_common.c ****         case KC_TRNS:
  71:quantum/keymap_common.c ****             action.code = ACTION_TRANSPARENT;
  72:quantum/keymap_common.c ****             break;
  73:quantum/keymap_common.c ****         case QK_MODS ... QK_MODS_MAX:;
  74:quantum/keymap_common.c ****             // Has a modifier
  75:quantum/keymap_common.c ****             // Split it up
  76:quantum/keymap_common.c ****             action.code = ACTION_MODS_KEY(keycode >> 8, keycode & 0xFF);  // adds modifier to key
  77:quantum/keymap_common.c ****             break;
  78:quantum/keymap_common.c **** #ifndef NO_ACTION_FUNCTION
  79:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
  80:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action(FN_INDEX(keycode));
  81:quantum/keymap_common.c ****             break;
  82:quantum/keymap_common.c ****         case QK_FUNCTION ... QK_FUNCTION_MAX:;
  83:quantum/keymap_common.c ****             // Is a shortcut for function action_layer, pull last 12bits
  84:quantum/keymap_common.c ****             // This means we have 4,096 FN macros at our disposal
  85:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action((int)keycode & 0xFFF);
  86:quantum/keymap_common.c ****             break;
  87:quantum/keymap_common.c **** #endif
  88:quantum/keymap_common.c **** #ifndef NO_ACTION_MACRO
  89:quantum/keymap_common.c ****         case QK_MACRO ... QK_MACRO_MAX:
  90:quantum/keymap_common.c ****             if (keycode & 0x800)  // tap macros have upper bit set
  91:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
  92:quantum/keymap_common.c ****             else
  93:quantum/keymap_common.c ****                 action.code = ACTION_MACRO(keycode & 0xFF);
  94:quantum/keymap_common.c ****             break;
  95:quantum/keymap_common.c **** #endif
  96:quantum/keymap_common.c ****         case QK_LAYER_TAP ... QK_LAYER_TAP_MAX:
  97:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_KEY((keycode >> 0x8) & 0xF, keycode & 0xFF);
  98:quantum/keymap_common.c ****             break;
  99:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX:;
 100:quantum/keymap_common.c ****             // Layer set "GOTO"
 101:quantum/keymap_common.c ****             when         = (keycode >> 0x4) & 0x3;
 102:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 103:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_SET(action_layer, when);
 104:quantum/keymap_common.c ****             break;
 105:quantum/keymap_common.c ****         case QK_MOMENTARY ... QK_MOMENTARY_MAX:;
 106:quantum/keymap_common.c ****             // Momentary action_layer
 107:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 108:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MOMENTARY(action_layer);
 109:quantum/keymap_common.c ****             break;
 110:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 111:quantum/keymap_common.c ****             // Set default action_layer
 112:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 113:quantum/keymap_common.c ****             action.code  = ACTION_DEFAULT_LAYER_SET(action_layer);
 114:quantum/keymap_common.c ****             break;
 115:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX:;
 116:quantum/keymap_common.c ****             // Set toggle
 117:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 118:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_TOGGLE(action_layer);
 119:quantum/keymap_common.c ****             break;
 120:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX:;
 121:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 122:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 123:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_ONESHOT(action_layer);
 124:quantum/keymap_common.c ****             break;
 125:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX:;
 126:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 127:quantum/keymap_common.c ****             mod         = mod_config(keycode & 0xFF);
 128:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 129:quantum/keymap_common.c ****             break;
 130:quantum/keymap_common.c ****         case QK_LAYER_TAP_TOGGLE ... QK_LAYER_TAP_TOGGLE_MAX:
 131:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_TOGGLE(keycode & 0xFF);
 132:quantum/keymap_common.c ****             break;
 133:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 134:quantum/keymap_common.c ****             mod          = mod_config(keycode & 0xF);
 135:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 136:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 137:quantum/keymap_common.c ****             break;
 138:quantum/keymap_common.c ****         case QK_MOD_TAP ... QK_MOD_TAP_MAX:
 139:quantum/keymap_common.c ****             mod         = mod_config((keycode >> 0x8) & 0x1F);
 140:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 141:quantum/keymap_common.c ****             break;
 142:quantum/keymap_common.c **** #ifdef BACKLIGHT_ENABLE
 143:quantum/keymap_common.c ****         case BL_ON:
 144:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_ON();
 145:quantum/keymap_common.c ****             break;
 146:quantum/keymap_common.c ****         case BL_OFF:
 147:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_OFF();
 148:quantum/keymap_common.c ****             break;
 149:quantum/keymap_common.c ****         case BL_DEC:
 150:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_DECREASE();
 151:quantum/keymap_common.c ****             break;
 152:quantum/keymap_common.c ****         case BL_INC:
 153:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_INCREASE();
 154:quantum/keymap_common.c ****             break;
 155:quantum/keymap_common.c ****         case BL_TOGG:
 156:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_TOGGLE();
 157:quantum/keymap_common.c ****             break;
 158:quantum/keymap_common.c ****         case BL_STEP:
 159:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_STEP();
 160:quantum/keymap_common.c ****             break;
 161:quantum/keymap_common.c **** #endif
 162:quantum/keymap_common.c **** #ifdef SWAP_HANDS_ENABLE
 163:quantum/keymap_common.c ****         case QK_SWAP_HANDS ... QK_SWAP_HANDS_MAX:
 164:quantum/keymap_common.c ****             action.code = ACTION(ACT_SWAP_HANDS, keycode & 0xff);
 165:quantum/keymap_common.c ****             break;
 166:quantum/keymap_common.c **** #endif
 167:quantum/keymap_common.c **** 
 168:quantum/keymap_common.c ****         default:
 169:quantum/keymap_common.c ****             action.code = ACTION_NO;
 170:quantum/keymap_common.c ****             break;
 171:quantum/keymap_common.c ****     }
 172:quantum/keymap_common.c ****     return action;
 173:quantum/keymap_common.c **** }
 174:quantum/keymap_common.c **** 
 175:quantum/keymap_common.c **** __attribute__((weak)) const uint16_t PROGMEM fn_actions[] = {
 176:quantum/keymap_common.c **** 
 177:quantum/keymap_common.c **** };
 178:quantum/keymap_common.c **** 
 179:quantum/keymap_common.c **** /* Macro */
 180:quantum/keymap_common.c **** __attribute__((weak)) const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
  17               		.loc 1 180 101 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               		.loc 1 180 103 view .LVU1
  24               		.loc 1 180 1 is_stmt 0 view .LVU2
  25 0000 90E0      		ldi r25,0
  26 0002 80E0      		ldi r24,0
  27               	.LVL1:
  28               	/* epilogue start */
  29               		.loc 1 180 1 view .LVU3
  30 0004 0895      		ret
  31               		.cfi_endproc
  32               	.LFE110:
  34               		.section	.text.action_function,"ax",@progbits
  35               		.weak	action_function
  37               	action_function:
  38               	.LVL2:
  39               	.LFB111:
 181:quantum/keymap_common.c **** 
 182:quantum/keymap_common.c **** /* Function */
 183:quantum/keymap_common.c **** __attribute__((weak)) void action_function(keyrecord_t *record, uint8_t id, uint8_t opt) {}
  40               		.loc 1 183 90 is_stmt 1 view -0
  41               		.cfi_startproc
  42               	/* prologue: function */
  43               	/* frame size = 0 */
  44               	/* stack size = 0 */
  45               	.L__stack_usage = 0
  46               		.loc 1 183 91 view .LVU5
  47               	/* epilogue start */
  48               		.loc 1 183 1 is_stmt 0 view .LVU6
  49 0000 0895      		ret
  50               		.cfi_endproc
  51               	.LFE111:
  53               		.section	.text.keymap_key_to_keycode,"ax",@progbits
  54               		.weak	keymap_key_to_keycode
  56               	keymap_key_to_keycode:
  57               	.LVL3:
  58               	.LFB112:
 184:quantum/keymap_common.c **** 
 185:quantum/keymap_common.c **** // translates key to keycode
 186:quantum/keymap_common.c **** __attribute__((weak)) uint16_t keymap_key_to_keycode(uint8_t layer, keypos_t key) {
  59               		.loc 1 186 83 is_stmt 1 view -0
  60               		.cfi_startproc
  61               	/* prologue: function */
  62               	/* frame size = 0 */
  63               	/* stack size = 0 */
  64               	.L__stack_usage = 0
  65               		.loc 1 186 83 is_stmt 0 view .LVU8
  66 0000 282F      		mov r18,r24
  67 0002 E62F      		mov r30,r22
 187:quantum/keymap_common.c ****     // Read entire word (16bits)
 188:quantum/keymap_common.c ****     return pgm_read_word(&keymaps[(layer)][(key.row)][(key.col)]);
  68               		.loc 1 188 5 is_stmt 1 view .LVU9
  69               	.LBB2:
  70               		.loc 1 188 12 view .LVU10
  71               		.loc 1 188 12 is_stmt 0 view .LVU11
  72 0004 872F      		mov r24,r23
  73               	.LVL4:
  74               		.loc 1 188 12 view .LVU12
  75 0006 90E0      		ldi r25,0
  76 0008 6CE0      		ldi r22,lo8(12)
  77 000a 70E0      		ldi r23,0
  78               	.LVL5:
  79               		.loc 1 188 12 view .LVU13
  80 000c 0E94 0000 		call __mulhi3
  81 0010 E80F      		add r30,r24
  82 0012 F92F      		mov r31,r25
  83 0014 F11D      		adc r31,__zero_reg__
  84               	.LVL6:
  85               		.loc 1 188 12 view .LVU14
  86 0016 822F      		mov r24,r18
  87 0018 90E0      		ldi r25,0
  88 001a 60E3      		ldi r22,lo8(48)
  89 001c 70E0      		ldi r23,0
  90 001e 0E94 0000 		call __mulhi3
  91 0022 E80F      		add r30,r24
  92 0024 F91F      		adc r31,r25
  93 0026 EE0F      		lsl r30
  94 0028 FF1F      		rol r31
  95 002a E050      		subi r30,lo8(-(keymaps))
  96 002c F040      		sbci r31,hi8(-(keymaps))
  97               	.LVL7:
  98               		.loc 1 188 12 is_stmt 1 view .LVU15
  99               		.loc 1 188 12 view .LVU16
 100               	/* #APP */
 101               	 ;  188 "quantum/keymap_common.c" 1
 102 002e 8591      		lpm r24, Z+
 103 0030 9491      		lpm r25, Z
 104               		
 105               	 ;  0 "" 2
 106               	.LVL8:
 107               		.loc 1 188 12 view .LVU17
 108               	/* #NOAPP */
 109               	/* epilogue start */
 110               	.LBE2:
 189:quantum/keymap_common.c **** }
 111               		.loc 1 189 1 is_stmt 0 view .LVU18
 112 0032 0895      		ret
 113               		.cfi_endproc
 114               	.LFE112:
 116               		.section	.text.keymap_function_id_to_action,"ax",@progbits
 117               		.weak	keymap_function_id_to_action
 119               	keymap_function_id_to_action:
 120               	.LVL9:
 121               	.LFB113:
 190:quantum/keymap_common.c **** 
 191:quantum/keymap_common.c **** // translates function id to action
 192:quantum/keymap_common.c **** __attribute__((weak)) uint16_t keymap_function_id_to_action(uint16_t function_id) {
 122               		.loc 1 192 83 is_stmt 1 view -0
 123               		.cfi_startproc
 124               	/* prologue: function */
 125               	/* frame size = 0 */
 126               	/* stack size = 0 */
 127               	.L__stack_usage = 0
 193:quantum/keymap_common.c **** // The compiler sees the empty (weak) fn_actions and generates a warning
 194:quantum/keymap_common.c **** // This function should not be called in that case, so the warning is too strict
 195:quantum/keymap_common.c **** // If this function is called however, the keymap should have overridden fn_actions, and then the c
 196:quantum/keymap_common.c **** // is comparing against the wrong array
 197:quantum/keymap_common.c **** #pragma GCC diagnostic push
 198:quantum/keymap_common.c **** #pragma GCC diagnostic ignored "-Warray-bounds"
 199:quantum/keymap_common.c ****     return pgm_read_word(&fn_actions[function_id]);
 128               		.loc 1 199 5 view .LVU20
 129               	.LBB3:
 130               		.loc 1 199 12 view .LVU21
 131 0000 FC01      		movw r30,r24
 132 0002 EE0F      		lsl r30
 133 0004 FF1F      		rol r31
 134               	.LVL10:
 135               		.loc 1 199 12 is_stmt 0 view .LVU22
 136 0006 E050      		subi r30,lo8(-(fn_actions))
 137 0008 F040      		sbci r31,hi8(-(fn_actions))
 138               	.LVL11:
 139               		.loc 1 199 12 is_stmt 1 view .LVU23
 140               		.loc 1 199 12 view .LVU24
 141               	/* #APP */
 142               	 ;  199 "quantum/keymap_common.c" 1
 143 000a 8591      		lpm r24, Z+
 144 000c 9491      		lpm r25, Z
 145               		
 146               	 ;  0 "" 2
 147               	.LVL12:
 148               		.loc 1 199 12 view .LVU25
 149               	/* #NOAPP */
 150               	/* epilogue start */
 151               	.LBE3:
 200:quantum/keymap_common.c **** #pragma GCC diagnostic pop
 201:quantum/keymap_common.c **** }
 152               		.loc 1 201 1 is_stmt 0 view .LVU26
 153 000e 0895      		ret
 154               		.cfi_endproc
 155               	.LFE113:
 157               		.section	.text.action_for_key,"ax",@progbits
 158               	.global	action_for_key
 160               	action_for_key:
 161               	.LVL13:
 162               	.LFB109:
  44:quantum/keymap_common.c ****     // 16bit keycodes - important
 163               		.loc 1 44 54 is_stmt 1 view -0
 164               		.cfi_startproc
  44:quantum/keymap_common.c ****     // 16bit keycodes - important
 165               		.loc 1 44 54 is_stmt 0 view .LVU28
 166 0000 CF93      		push r28
 167               	.LCFI0:
 168               		.cfi_def_cfa_offset 3
 169               		.cfi_offset 28, -2
 170 0002 DF93      		push r29
 171               	.LCFI1:
 172               		.cfi_def_cfa_offset 4
 173               		.cfi_offset 29, -3
 174               	/* prologue: function */
 175               	/* frame size = 0 */
 176               	/* stack size = 2 */
 177               	.L__stack_usage = 2
  46:quantum/keymap_common.c **** 
 178               		.loc 1 46 5 is_stmt 1 view .LVU29
  46:quantum/keymap_common.c **** 
 179               		.loc 1 46 24 is_stmt 0 view .LVU30
 180 0004 0E94 0000 		call keymap_key_to_keycode
 181               	.LVL14:
  49:quantum/keymap_common.c **** 
 182               		.loc 1 49 5 is_stmt 1 view .LVU31
  49:quantum/keymap_common.c **** 
 183               		.loc 1 49 15 is_stmt 0 view .LVU32
 184 0008 0E94 0000 		call keycode_config
 185               	.LVL15:
  49:quantum/keymap_common.c **** 
 186               		.loc 1 49 15 view .LVU33
 187 000c EC01      		movw r28,r24
 188               	.LVL16:
  51:quantum/keymap_common.c ****     uint8_t  action_layer, when, mod;
 189               		.loc 1 51 5 is_stmt 1 view .LVU34
  52:quantum/keymap_common.c **** 
 190               		.loc 1 52 5 view .LVU35
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 191               		.loc 1 54 5 view .LVU36
 192 000e 8115      		cp r24,__zero_reg__
 193 0010 20E5      		ldi r18,80
 194 0012 9207      		cpc r25,r18
 195 0014 00F0      		brlo .+2
 196 0016 00C0      		rjmp .L6
 197 0018 8115      		cp r24,__zero_reg__
 198 001a 30E4      		ldi r19,64
 199 001c 9307      		cpc r25,r19
 200 001e 00F0      		brlo .+2
 201 0020 00C0      		rjmp .L7
 202 0022 803E      		cpi r24,-32
 203 0024 9105      		cpc r25,__zero_reg__
 204 0026 00F4      		brsh .L8
 205 0028 803C      		cpi r24,-64
 206 002a 9105      		cpc r25,__zero_reg__
 207 002c 00F0      		brlo .+2
 208 002e 00C0      		rjmp .L9
 209 0030 883A      		cpi r24,-88
 210 0032 9105      		cpc r25,__zero_reg__
 211 0034 00F4      		brsh .L10
 212 0036 853A      		cpi r24,-91
 213 0038 9105      		cpc r25,__zero_reg__
 214 003a 00F0      		brlo .+2
 215 003c 00C0      		rjmp .L11
 216 003e 8130      		cpi r24,1
 217 0040 9105      		cpc r25,__zero_reg__
 218 0042 01F0      		breq .L12
 219 0044 0097      		sbiw r24,0
 220 0046 01F0      		breq .L12
 221 0048 0497      		sbiw r24,4
 222 004a 00F4      		brsh .L12
 223               	.LVL17:
 224               	.L35:
 169:quantum/keymap_common.c ****             break;
 225               		.loc 1 169 25 is_stmt 0 view .LVU37
 226 004c D0E0      		ldi r29,0
 227 004e C0E0      		ldi r28,0
 228 0050 00C0      		rjmp .L12
 229               	.LVL18:
 230               	.L10:
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 231               		.loc 1 54 5 view .LVU38
 232 0052 8F3B      		cpi r24,-65
 233 0054 9105      		cpc r25,__zero_reg__
 234 0056 00F4      		brsh .L35
  63:quantum/keymap_common.c ****             break;
 235               		.loc 1 63 13 is_stmt 1 view .LVU39
 236               	.LVL19:
 237               	.LBB8:
 238               	.LBI8:
 239               		.file 2 "tmk_core/common/report.h"
   1:tmk_core/common/report.h **** /*
   2:tmk_core/common/report.h **** Copyright 2011,2012 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/report.h **** 
   4:tmk_core/common/report.h **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/report.h **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/report.h **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/report.h **** (at your option) any later version.
   8:tmk_core/common/report.h **** 
   9:tmk_core/common/report.h **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/report.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/report.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/report.h **** GNU General Public License for more details.
  13:tmk_core/common/report.h **** 
  14:tmk_core/common/report.h **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/report.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/report.h **** */
  17:tmk_core/common/report.h **** 
  18:tmk_core/common/report.h **** #ifndef REPORT_H
  19:tmk_core/common/report.h **** #define REPORT_H
  20:tmk_core/common/report.h **** 
  21:tmk_core/common/report.h **** #include <stdint.h>
  22:tmk_core/common/report.h **** #include "keycode.h"
  23:tmk_core/common/report.h **** 
  24:tmk_core/common/report.h **** /* report id */
  25:tmk_core/common/report.h **** #define REPORT_ID_KEYBOARD 1
  26:tmk_core/common/report.h **** #define REPORT_ID_MOUSE 2
  27:tmk_core/common/report.h **** #define REPORT_ID_SYSTEM 3
  28:tmk_core/common/report.h **** #define REPORT_ID_CONSUMER 4
  29:tmk_core/common/report.h **** #define REPORT_ID_NKRO 5
  30:tmk_core/common/report.h **** 
  31:tmk_core/common/report.h **** /* mouse buttons */
  32:tmk_core/common/report.h **** #define MOUSE_BTN1 (1 << 0)
  33:tmk_core/common/report.h **** #define MOUSE_BTN2 (1 << 1)
  34:tmk_core/common/report.h **** #define MOUSE_BTN3 (1 << 2)
  35:tmk_core/common/report.h **** #define MOUSE_BTN4 (1 << 3)
  36:tmk_core/common/report.h **** #define MOUSE_BTN5 (1 << 4)
  37:tmk_core/common/report.h **** 
  38:tmk_core/common/report.h **** /* Consumer Page(0x0C)
  39:tmk_core/common/report.h ****  * following are supported by Windows: http://msdn.microsoft.com/en-us/windows/hardware/gg463372.as
  40:tmk_core/common/report.h ****  * see also https://docs.microsoft.com/en-us/windows-hardware/drivers/hid/display-brightness-contro
  41:tmk_core/common/report.h ****  */
  42:tmk_core/common/report.h **** #define AUDIO_MUTE 0x00E2
  43:tmk_core/common/report.h **** #define AUDIO_VOL_UP 0x00E9
  44:tmk_core/common/report.h **** #define AUDIO_VOL_DOWN 0x00EA
  45:tmk_core/common/report.h **** #define TRANSPORT_NEXT_TRACK 0x00B5
  46:tmk_core/common/report.h **** #define TRANSPORT_PREV_TRACK 0x00B6
  47:tmk_core/common/report.h **** #define TRANSPORT_STOP 0x00B7
  48:tmk_core/common/report.h **** #define TRANSPORT_STOP_EJECT 0x00CC
  49:tmk_core/common/report.h **** #define TRANSPORT_PLAY_PAUSE 0x00CD
  50:tmk_core/common/report.h **** #define BRIGHTNESS_UP 0x006F
  51:tmk_core/common/report.h **** #define BRIGHTNESS_DOWN 0x0070
  52:tmk_core/common/report.h **** /* application launch */
  53:tmk_core/common/report.h **** #define AL_CC_CONFIG 0x0183
  54:tmk_core/common/report.h **** #define AL_EMAIL 0x018A
  55:tmk_core/common/report.h **** #define AL_CALCULATOR 0x0192
  56:tmk_core/common/report.h **** #define AL_LOCAL_BROWSER 0x0194
  57:tmk_core/common/report.h **** /* application control */
  58:tmk_core/common/report.h **** #define AC_SEARCH 0x0221
  59:tmk_core/common/report.h **** #define AC_HOME 0x0223
  60:tmk_core/common/report.h **** #define AC_BACK 0x0224
  61:tmk_core/common/report.h **** #define AC_FORWARD 0x0225
  62:tmk_core/common/report.h **** #define AC_STOP 0x0226
  63:tmk_core/common/report.h **** #define AC_REFRESH 0x0227
  64:tmk_core/common/report.h **** #define AC_BOOKMARKS 0x022A
  65:tmk_core/common/report.h **** /* supplement for Bluegiga iWRAP HID(not supported by Windows?) */
  66:tmk_core/common/report.h **** #define AL_LOCK 0x019E
  67:tmk_core/common/report.h **** #define TRANSPORT_RECORD 0x00B2
  68:tmk_core/common/report.h **** #define TRANSPORT_FAST_FORWARD 0x00B3
  69:tmk_core/common/report.h **** #define TRANSPORT_REWIND 0x00B4
  70:tmk_core/common/report.h **** #define TRANSPORT_EJECT 0x00B8
  71:tmk_core/common/report.h **** #define AC_MINIMIZE 0x0206
  72:tmk_core/common/report.h **** 
  73:tmk_core/common/report.h **** /* Generic Desktop Page(0x01) - system power control */
  74:tmk_core/common/report.h **** #define SYSTEM_POWER_DOWN 0x0081
  75:tmk_core/common/report.h **** #define SYSTEM_SLEEP 0x0082
  76:tmk_core/common/report.h **** #define SYSTEM_WAKE_UP 0x0083
  77:tmk_core/common/report.h **** 
  78:tmk_core/common/report.h **** #define NKRO_SHARED_EP
  79:tmk_core/common/report.h **** /* key report size(NKRO or boot mode) */
  80:tmk_core/common/report.h **** #if defined(NKRO_ENABLE)
  81:tmk_core/common/report.h **** #    if defined(PROTOCOL_LUFA) || defined(PROTOCOL_CHIBIOS)
  82:tmk_core/common/report.h **** #        include "protocol/usb_descriptor.h"
  83:tmk_core/common/report.h **** #        define KEYBOARD_REPORT_BITS (SHARED_EPSIZE - 2)
  84:tmk_core/common/report.h **** #    elif defined(PROTOCOL_ARM_ATSAM)
  85:tmk_core/common/report.h **** #        include "protocol/arm_atsam/usb/udi_device_epsize.h"
  86:tmk_core/common/report.h **** #        define KEYBOARD_REPORT_BITS (NKRO_EPSIZE - 1)
  87:tmk_core/common/report.h **** #        undef NKRO_SHARED_EP
  88:tmk_core/common/report.h **** #        undef MOUSE_SHARED_EP
  89:tmk_core/common/report.h **** #    else
  90:tmk_core/common/report.h **** #        error "NKRO not supported with this protocol"
  91:tmk_core/common/report.h **** #    endif
  92:tmk_core/common/report.h **** #endif
  93:tmk_core/common/report.h **** 
  94:tmk_core/common/report.h **** #ifdef KEYBOARD_SHARED_EP
  95:tmk_core/common/report.h **** #    define KEYBOARD_REPORT_SIZE 9
  96:tmk_core/common/report.h **** #else
  97:tmk_core/common/report.h **** #    define KEYBOARD_REPORT_SIZE 8
  98:tmk_core/common/report.h **** #endif
  99:tmk_core/common/report.h **** 
 100:tmk_core/common/report.h **** #define KEYBOARD_REPORT_KEYS 6
 101:tmk_core/common/report.h **** 
 102:tmk_core/common/report.h **** /* VUSB hardcodes keyboard and mouse+extrakey only */
 103:tmk_core/common/report.h **** #if defined(PROTOCOL_VUSB)
 104:tmk_core/common/report.h **** #    undef KEYBOARD_SHARED_EP
 105:tmk_core/common/report.h **** #    undef MOUSE_SHARED_EP
 106:tmk_core/common/report.h **** #endif
 107:tmk_core/common/report.h **** 
 108:tmk_core/common/report.h **** #ifdef __cplusplus
 109:tmk_core/common/report.h **** extern "C" {
 110:tmk_core/common/report.h **** #endif
 111:tmk_core/common/report.h **** 
 112:tmk_core/common/report.h **** /*
 113:tmk_core/common/report.h ****  * keyboard report is 8-byte array retains state of 8 modifiers and 6 keys.
 114:tmk_core/common/report.h ****  *
 115:tmk_core/common/report.h ****  * byte |0       |1       |2       |3       |4       |5       |6       |7
 116:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------
 117:tmk_core/common/report.h ****  * desc |mods    |reserved|keys[0] |keys[1] |keys[2] |keys[3] |keys[4] |keys[5]
 118:tmk_core/common/report.h ****  *
 119:tmk_core/common/report.h ****  * It is exended to 16 bytes to retain 120keys+8mods when NKRO mode.
 120:tmk_core/common/report.h ****  *
 121:tmk_core/common/report.h ****  * byte |0       |1       |2       |3       |4       |5       |6       |7        ... |15
 122:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------     +--------
 123:tmk_core/common/report.h ****  * desc |mods    |bits[0] |bits[1] |bits[2] |bits[3] |bits[4] |bits[5] |bits[6]  ... |bit[14]
 124:tmk_core/common/report.h ****  *
 125:tmk_core/common/report.h ****  * mods retains state of 8 modifiers.
 126:tmk_core/common/report.h ****  *
 127:tmk_core/common/report.h ****  *  bit |0       |1       |2       |3       |4       |5       |6       |7
 128:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------
 129:tmk_core/common/report.h ****  * desc |Lcontrol|Lshift  |Lalt    |Lgui    |Rcontrol|Rshift  |Ralt    |Rgui
 130:tmk_core/common/report.h ****  *
 131:tmk_core/common/report.h ****  */
 132:tmk_core/common/report.h **** typedef union {
 133:tmk_core/common/report.h ****     uint8_t raw[KEYBOARD_REPORT_SIZE];
 134:tmk_core/common/report.h ****     struct {
 135:tmk_core/common/report.h **** #ifdef KEYBOARD_SHARED_EP
 136:tmk_core/common/report.h ****         uint8_t report_id;
 137:tmk_core/common/report.h **** #endif
 138:tmk_core/common/report.h ****         uint8_t mods;
 139:tmk_core/common/report.h ****         uint8_t reserved;
 140:tmk_core/common/report.h ****         uint8_t keys[KEYBOARD_REPORT_KEYS];
 141:tmk_core/common/report.h ****     };
 142:tmk_core/common/report.h **** #ifdef NKRO_ENABLE
 143:tmk_core/common/report.h ****     struct nkro_report {
 144:tmk_core/common/report.h **** #    ifdef NKRO_SHARED_EP
 145:tmk_core/common/report.h ****         uint8_t report_id;
 146:tmk_core/common/report.h **** #    endif
 147:tmk_core/common/report.h ****         uint8_t mods;
 148:tmk_core/common/report.h ****         uint8_t bits[KEYBOARD_REPORT_BITS];
 149:tmk_core/common/report.h ****     } nkro;
 150:tmk_core/common/report.h **** #endif
 151:tmk_core/common/report.h **** } __attribute__((packed)) report_keyboard_t;
 152:tmk_core/common/report.h **** 
 153:tmk_core/common/report.h **** typedef struct {
 154:tmk_core/common/report.h ****     uint8_t  report_id;
 155:tmk_core/common/report.h ****     uint16_t usage;
 156:tmk_core/common/report.h **** } __attribute__((packed)) report_extra_t;
 157:tmk_core/common/report.h **** 
 158:tmk_core/common/report.h **** typedef struct {
 159:tmk_core/common/report.h **** #ifdef MOUSE_SHARED_EP
 160:tmk_core/common/report.h ****     uint8_t report_id;
 161:tmk_core/common/report.h **** #endif
 162:tmk_core/common/report.h ****     uint8_t buttons;
 163:tmk_core/common/report.h ****     int8_t  x;
 164:tmk_core/common/report.h ****     int8_t  y;
 165:tmk_core/common/report.h ****     int8_t  v;
 166:tmk_core/common/report.h ****     int8_t  h;
 167:tmk_core/common/report.h **** } __attribute__((packed)) report_mouse_t;
 168:tmk_core/common/report.h **** 
 169:tmk_core/common/report.h **** /* keycode to system usage */
 170:tmk_core/common/report.h **** static inline uint16_t KEYCODE2SYSTEM(uint8_t key) {
 171:tmk_core/common/report.h ****     switch (key) {
 172:tmk_core/common/report.h ****         case KC_SYSTEM_POWER:
 173:tmk_core/common/report.h ****             return SYSTEM_POWER_DOWN;
 174:tmk_core/common/report.h ****         case KC_SYSTEM_SLEEP:
 175:tmk_core/common/report.h ****             return SYSTEM_SLEEP;
 176:tmk_core/common/report.h ****         case KC_SYSTEM_WAKE:
 177:tmk_core/common/report.h ****             return SYSTEM_WAKE_UP;
 178:tmk_core/common/report.h ****         default:
 179:tmk_core/common/report.h ****             return 0;
 180:tmk_core/common/report.h ****     }
 181:tmk_core/common/report.h **** }
 182:tmk_core/common/report.h **** 
 183:tmk_core/common/report.h **** /* keycode to consumer usage */
 184:tmk_core/common/report.h **** static inline uint16_t KEYCODE2CONSUMER(uint8_t key) {
 240               		.loc 2 184 24 view .LVU40
 241               	.LBE8:
 185:tmk_core/common/report.h ****     switch (key) {
 242               		.loc 2 185 5 view .LVU41
  63:quantum/keymap_common.c ****             break;
 243               		.loc 1 63 27 is_stmt 0 view .LVU42
 244 0058 C85A      		subi r28,lo8(-(88))
 245 005a D0E0      		ldi r29,0
 246 005c CC0F      		lsl r28
 247 005e DD1F      		rol r29
 248               	.LVL20:
  63:quantum/keymap_common.c ****             break;
 249               		.loc 1 63 27 view .LVU43
 250 0060 C050      		subi r28,lo8(-(CSWTCH.1))
 251 0062 D040      		sbci r29,hi8(-(CSWTCH.1))
 252 0064 0990      		ld __tmp_reg__,Y+
 253 0066 D881      		ld r29,Y
 254 0068 C02D      		mov r28,__tmp_reg__
 255               	.LVL21:
  63:quantum/keymap_common.c ****             break;
 256               		.loc 1 63 27 view .LVU44
 257 006a D464      		ori r29,68
 258               	.LVL22:
  64:quantum/keymap_common.c **** #ifdef MOUSEKEY_ENABLE
 259               		.loc 1 64 13 is_stmt 1 view .LVU45
 260 006c 00C0      		rjmp .L12
 261               	.LVL23:
 262               	.L8:
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 263               		.loc 1 54 5 is_stmt 0 view .LVU46
 264 006e 8115      		cp r24,__zero_reg__
 265 0070 40E2      		ldi r20,32
 266 0072 9407      		cpc r25,r20
 267 0074 00F4      		brsh .L14
 268 0076 C115      		cp r28,__zero_reg__
 269 0078 81E0      		ldi r24,1
 270 007a D807      		cpc r29,r24
 271               	.LVL24:
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 272               		.loc 1 54 5 view .LVU47
 273 007c 00F4      		brsh .L12
 274 007e C83E      		cpi r28,-24
 275 0080 D105      		cpc r29,__zero_reg__
 276 0082 00F4      		brsh .L35
 277               	.LVL25:
 278               	.L12:
 172:quantum/keymap_common.c **** }
 279               		.loc 1 172 5 is_stmt 1 view .LVU48
 173:quantum/keymap_common.c **** 
 280               		.loc 1 173 1 is_stmt 0 view .LVU49
 281 0084 CE01      		movw r24,r28
 282               	/* epilogue start */
 283 0086 DF91      		pop r29
 284 0088 CF91      		pop r28
 285 008a 0895      		ret
 286               	.LVL26:
 287               	.L14:
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 288               		.loc 1 54 5 view .LVU50
 289 008c 8115      		cp r24,__zero_reg__
 290 008e 20E3      		ldi r18,48
 291 0090 9207      		cpc r25,r18
 292 0092 00F0      		brlo .+2
 293 0094 00C0      		rjmp .L42
  82:quantum/keymap_common.c ****             // Is a shortcut for function action_layer, pull last 12bits
 294               		.loc 1 82 46 is_stmt 1 view .LVU51
  85:quantum/keymap_common.c ****             break;
 295               		.loc 1 85 13 view .LVU52
  85:quantum/keymap_common.c ****             break;
 296               		.loc 1 85 27 is_stmt 0 view .LVU53
 297 0096 9F70      		andi r25,15
 298               	.LVL27:
  85:quantum/keymap_common.c ****             break;
 299               		.loc 1 85 27 view .LVU54
 300 0098 00C0      		rjmp .L47
 301               	.LVL28:
 302               	.L6:
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 303               		.loc 1 54 5 view .LVU55
 304 009a 8115      		cp r24,__zero_reg__
 305 009c 35E5      		ldi r19,85
 306 009e 9307      		cpc r25,r19
 307 00a0 00F4      		brsh .L17
 308 00a2 8115      		cp r24,__zero_reg__
 309 00a4 44E5      		ldi r20,84
 310 00a6 9407      		cpc r25,r20
 311 00a8 00F0      		brlo .+2
 312 00aa 00C0      		rjmp .L18
 313 00ac C115      		cp r28,__zero_reg__
 314 00ae 82E5      		ldi r24,82
 315 00b0 D807      		cpc r29,r24
 316               	.LVL29:
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 317               		.loc 1 54 5 view .LVU56
 318 00b2 00F4      		brsh .L19
 319 00b4 C115      		cp r28,__zero_reg__
 320 00b6 21E5      		ldi r18,81
 321 00b8 D207      		cpc r29,r18
 322 00ba 00F4      		brsh .+2
 323 00bc 00C0      		rjmp .L43
 105:quantum/keymap_common.c ****             // Momentary action_layer
 324               		.loc 1 105 48 is_stmt 1 view .LVU57
 107:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MOMENTARY(action_layer);
 325               		.loc 1 107 13 view .LVU58
 326               	.LVL30:
 108:quantum/keymap_common.c ****             break;
 327               		.loc 1 108 13 view .LVU59
 108:quantum/keymap_common.c ****             break;
 328               		.loc 1 108 28 is_stmt 0 view .LVU60
 329 00be DC2F      		mov r29,r28
 330 00c0 CC27      		clr r28
 331               	.LVL31:
 108:quantum/keymap_common.c ****             break;
 332               		.loc 1 108 28 view .LVU61
 333 00c2 C16F      		ori r28,241
 334 00c4 D06A      		ori r29,160
 335               	.LVL32:
 109:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 336               		.loc 1 109 13 is_stmt 1 view .LVU62
 337 00c6 00C0      		rjmp .L12
 338               	.LVL33:
 339               	.L19:
 109:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 340               		.loc 1 109 13 is_stmt 0 view .LVU63
 341 00c8 9C2F      		mov r25,r28
 342 00ca 9695      		lsr r25
 343 00cc 9695      		lsr r25
 344 00ce 9E01      		movw r18,r28
 345 00d0 2370      		andi r18,3
 346 00d2 3327      		clr r19
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 347               		.loc 1 54 5 view .LVU64
 348 00d4 C115      		cp r28,__zero_reg__
 349 00d6 D345      		sbci r29,83
 350 00d8 00F0      		brlo .+2
 351 00da 00C0      		rjmp .L44
 110:quantum/keymap_common.c ****             // Set default action_layer
 352               		.loc 1 110 48 is_stmt 1 view .LVU65
 112:quantum/keymap_common.c ****             action.code  = ACTION_DEFAULT_LAYER_SET(action_layer);
 353               		.loc 1 112 13 view .LVU66
 354               	.LVL34:
 113:quantum/keymap_common.c ****             break;
 355               		.loc 1 113 13 view .LVU67
 113:quantum/keymap_common.c ****             break;
 356               		.loc 1 113 28 is_stmt 0 view .LVU68
 357 00dc C1E0      		ldi r28,lo8(1)
 358 00de D0E0      		ldi r29,0
 359               	.LVL35:
 113:quantum/keymap_common.c ****             break;
 360               		.loc 1 113 28 view .LVU69
 361 00e0 00C0      		rjmp 2f
 362               		1:
 363 00e2 CC0F      		lsl r28
 364 00e4 DD1F      		rol r29
 365               		2:
 366 00e6 2A95      		dec r18
 367 00e8 02F4      		brpl 1b
 368 00ea 892F      		mov r24,r25
 369 00ec 90E0      		ldi r25,0
 370 00ee E5E0      		ldi r30,5
 371               		1:
 372 00f0 880F      		lsl r24
 373 00f2 991F      		rol r25
 374 00f4 EA95      		dec r30
 375 00f6 01F4      		brne 1b
 376 00f8 C82B      		or r28,r24
 377 00fa D92B      		or r29,r25
 378 00fc 00C0      		rjmp .L48
 379               	.LVL36:
 380               	.L17:
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 381               		.loc 1 54 5 view .LVU70
 382 00fe C115      		cp r28,__zero_reg__
 383 0100 89E5      		ldi r24,89
 384 0102 D807      		cpc r29,r24
 385               	.LVL37:
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 386               		.loc 1 54 5 view .LVU71
 387 0104 00F4      		brsh .L24
 388 0106 C115      		cp r28,__zero_reg__
 389 0108 28E5      		ldi r18,88
 390 010a D207      		cpc r29,r18
 391 010c 00F0      		brlo .+2
 392 010e 00C0      		rjmp .L25
 393 0110 C115      		cp r28,__zero_reg__
 394 0112 36E5      		ldi r19,86
 395 0114 D307      		cpc r29,r19
 396 0116 00F0      		brlo .+2
 397 0118 00C0      		rjmp .L35
 125:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 398               		.loc 1 125 54 is_stmt 1 view .LVU72
 127:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 399               		.loc 1 127 13 view .LVU73
 127:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 400               		.loc 1 127 27 is_stmt 0 view .LVU74
 401 011a 8C2F      		mov r24,r28
 402 011c 0E94 0000 		call mod_config
 403               	.LVL38:
 128:quantum/keymap_common.c ****             break;
 404               		.loc 1 128 13 is_stmt 1 view .LVU75
 128:quantum/keymap_common.c ****             break;
 405               		.loc 1 128 27 is_stmt 0 view .LVU76
 406 0120 C82F      		mov r28,r24
 407               	.LVL39:
 128:quantum/keymap_common.c ****             break;
 408               		.loc 1 128 27 view .LVU77
 409 0122 D0E0      		ldi r29,0
 410 0124 DC2F      		mov r29,r28
 411 0126 CC27      		clr r28
 412 0128 CC27      		clr r28
 413 012a DF71      		andi r29,31
 414               	.LVL40:
 415               	.L49:
 140:quantum/keymap_common.c ****             break;
 416               		.loc 1 140 27 view .LVU78
 417 012c D062      		ori r29,32
 418               	.LVL41:
 141:quantum/keymap_common.c **** #ifdef BACKLIGHT_ENABLE
 419               		.loc 1 141 13 is_stmt 1 view .LVU79
 420 012e 00C0      		rjmp .L12
 421               	.LVL42:
 422               	.L24:
  54:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 423               		.loc 1 54 5 is_stmt 0 view .LVU80
 424 0130 C115      		cp r28,__zero_reg__
 425 0132 4AE5      		ldi r20,90
 426 0134 D407      		cpc r29,r20
 427 0136 00F4      		brsh .+2
 428 0138 00C0      		rjmp .L27
 429 013a CE01      		movw r24,r28
 430 013c 9056      		subi r25,96
 431 013e 8115      		cp r24,__zero_reg__
 432 0140 9042      		sbci r25,32
 433 0142 00F0      		brlo .+2
 434 0144 00C0      		rjmp .L35
 139:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 435               		.loc 1 139 13 is_stmt 1 view .LVU81
 139:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 436               		.loc 1 139 27 is_stmt 0 view .LVU82
 437 0146 8D2F      		mov r24,r29
 438 0148 8F71      		andi r24,lo8(31)
 439 014a 0E94 0000 		call mod_config
 440               	.LVL43:
 140:quantum/keymap_common.c ****             break;
 441               		.loc 1 140 13 is_stmt 1 view .LVU83
 140:quantum/keymap_common.c ****             break;
 442               		.loc 1 140 27 is_stmt 0 view .LVU84
 443 014e 90E0      		ldi r25,0
 444 0150 982F      		mov r25,r24
 445 0152 8827      		clr r24
 446               	.LVL44:
 140:quantum/keymap_common.c ****             break;
 447               		.loc 1 140 27 view .LVU85
 448 0154 8827      		clr r24
 449 0156 9F71      		andi r25,31
 450 0158 9C01      		movw r18,r24
 451 015a 2C2B      		or r18,r28
 452 015c E901      		movw r28,r18
 453               	.LVL45:
 140:quantum/keymap_common.c ****             break;
 454               		.loc 1 140 27 view .LVU86
 455 015e 00C0      		rjmp .L49
 456               	.LVL46:
 457               	.L11:
  60:quantum/keymap_common.c ****             break;
 458               		.loc 1 60 13 is_stmt 1 view .LVU87
 459               	.LBB9:
 460               	.LBI9:
 170:tmk_core/common/report.h ****     switch (key) {
 461               		.loc 2 170 24 view .LVU88
 462               	.LBE9:
 171:tmk_core/common/report.h ****         case KC_SYSTEM_POWER:
 463               		.loc 2 171 5 view .LVU89
  60:quantum/keymap_common.c ****             break;
 464               		.loc 1 60 27 is_stmt 0 view .LVU90
 465 0160 C55A      		subi r28,lo8(-(91))
 466 0162 D0E0      		ldi r29,0
 467 0164 C050      		subi r28,lo8(-(CSWTCH.0))
 468 0166 D040      		sbci r29,hi8(-(CSWTCH.0))
 469 0168 C881      		ld r28,Y
 470 016a D0E0      		ldi r29,0
 471               	.LVL47:
  60:quantum/keymap_common.c ****             break;
 472               		.loc 1 60 27 view .LVU91
 473 016c D064      		ori r29,64
 474               	.LVL48:
  61:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_BRIGHTNESS_DOWN:
 475               		.loc 1 61 13 is_stmt 1 view .LVU92
 476 016e 00C0      		rjmp .L12
 477               	.LVL49:
 478               	.L9:
  80:quantum/keymap_common.c ****             break;
 479               		.loc 1 80 13 view .LVU93
  80:quantum/keymap_common.c ****             break;
 480               		.loc 1 80 27 is_stmt 0 view .LVU94
 481 0170 805C      		subi r24,-64
 482 0172 9109      		sbc r25,__zero_reg__
 483               	.LVL50:
 484               	.L47:
  85:quantum/keymap_common.c ****             break;
 485               		.loc 1 85 27 view .LVU95
 486 0174 0E94 0000 		call keymap_function_id_to_action
 487               	.LVL51:
  85:quantum/keymap_common.c ****             break;
 488               		.loc 1 85 27 view .LVU96
 489 0178 EC01      		movw r28,r24
 490               	.LVL52:
  86:quantum/keymap_common.c **** #endif
 491               		.loc 1 86 13 is_stmt 1 view .LVU97
 492 017a 00C0      		rjmp .L12
 493               	.LVL53:
 494               	.L42:
  90:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
 495               		.loc 1 90 13 view .LVU98
 496 017c 9927      		clr r25
 497               	.LVL54:
  90:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
 498               		.loc 1 90 16 is_stmt 0 view .LVU99
 499 017e D3FF      		sbrs r29,3
 500 0180 00C0      		rjmp .L29
  91:quantum/keymap_common.c ****             else
 501               		.loc 1 91 17 is_stmt 1 view .LVU100
 502               	.LVL55:
  91:quantum/keymap_common.c ****             else
 503               		.loc 1 91 31 is_stmt 0 view .LVU101
 504 0182 EC01      		movw r28,r24
 505 0184 D86C      		ori r29,200
 506               	.LVL56:
  91:quantum/keymap_common.c ****             else
 507               		.loc 1 91 31 view .LVU102
 508 0186 00C0      		rjmp .L12
 509               	.LVL57:
 510               	.L29:
  93:quantum/keymap_common.c ****             break;
 511               		.loc 1 93 17 is_stmt 1 view .LVU103
  93:quantum/keymap_common.c ****             break;
 512               		.loc 1 93 31 is_stmt 0 view .LVU104
 513 0188 EC01      		movw r28,r24
 514 018a D06C      		ori r29,192
 515               	.LVL58:
  93:quantum/keymap_common.c ****             break;
 516               		.loc 1 93 31 view .LVU105
 517 018c 00C0      		rjmp .L12
 518               	.LVL59:
 519               	.L7:
  97:quantum/keymap_common.c ****             break;
 520               		.loc 1 97 13 is_stmt 1 view .LVU106
  97:quantum/keymap_common.c ****             break;
 521               		.loc 1 97 27 is_stmt 0 view .LVU107
 522 018e DF70      		andi r29,15
 523               	.LVL60:
  97:quantum/keymap_common.c ****             break;
 524               		.loc 1 97 27 view .LVU108
 525 0190 D06A      		ori r29,160
 526               	.LVL61:
  98:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX:;
 527               		.loc 1 98 13 is_stmt 1 view .LVU109
 528 0192 00C0      		rjmp .L12
 529               	.LVL62:
 530               	.L43:
  99:quantum/keymap_common.c ****             // Layer set "GOTO"
 531               		.loc 1 99 34 view .LVU110
 101:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 532               		.loc 1 101 13 view .LVU111
 102:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_SET(action_layer, when);
 533               		.loc 1 102 13 view .LVU112
 103:quantum/keymap_common.c ****             break;
 534               		.loc 1 103 13 view .LVU113
 101:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 535               		.loc 1 101 37 is_stmt 0 view .LVU114
 536 0194 CE01      		movw r24,r28
 537 0196 A4E0      		ldi r26,4
 538               		1:
 539 0198 9695      		lsr r25
 540 019a 8795      		ror r24
 541 019c AA95      		dec r26
 542 019e 01F4      		brne 1b
 101:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 543               		.loc 1 101 26 view .LVU115
 544 01a0 8370      		andi r24,lo8(3)
 103:quantum/keymap_common.c ****             break;
 545               		.loc 1 103 28 view .LVU116
 546 01a2 2C2F      		mov r18,r28
 547 01a4 2695      		lsr r18
 548 01a6 2695      		lsr r18
 549 01a8 2370      		andi r18,lo8(3)
 550 01aa 30E0      		ldi r19,0
 551 01ac B5E0      		ldi r27,5
 552               		1:
 553 01ae 220F      		lsl r18
 554 01b0 331F      		rol r19
 555 01b2 BA95      		dec r27
 556 01b4 01F4      		brne 1b
 557 01b6 382B      		or r19,r24
 558 01b8 8C2F      		mov r24,r28
 559 01ba 8370      		andi r24,lo8(3)
 560 01bc C1E0      		ldi r28,lo8(1)
 561 01be D0E0      		ldi r29,0
 562               	.LVL63:
 103:quantum/keymap_common.c ****             break;
 563               		.loc 1 103 28 view .LVU117
 564 01c0 00C0      		rjmp 2f
 565               		1:
 566 01c2 CC0F      		lsl r28
 567 01c4 DD1F      		rol r29
 568               		2:
 569 01c6 8A95      		dec r24
 570 01c8 02F4      		brpl 1b
 571 01ca C22B      		or r28,r18
 572 01cc D32B      		or r29,r19
 573               	.LVL64:
 574               	.L48:
 113:quantum/keymap_common.c ****             break;
 575               		.loc 1 113 28 view .LVU118
 576 01ce DC68      		ori r29,140
 577               	.LVL65:
 114:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX:;
 578               		.loc 1 114 13 is_stmt 1 view .LVU119
 579 01d0 00C0      		rjmp .L12
 580               	.LVL66:
 581               	.L44:
 115:quantum/keymap_common.c ****             // Set toggle
 582               		.loc 1 115 54 view .LVU120
 117:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_TOGGLE(action_layer);
 583               		.loc 1 117 13 view .LVU121
 118:quantum/keymap_common.c ****             break;
 584               		.loc 1 118 13 view .LVU122
 118:quantum/keymap_common.c ****             break;
 585               		.loc 1 118 28 is_stmt 0 view .LVU123
 586 01d2 C1E0      		ldi r28,lo8(1)
 587 01d4 D0E0      		ldi r29,0
 588               	.LVL67:
 118:quantum/keymap_common.c ****             break;
 589               		.loc 1 118 28 view .LVU124
 590 01d6 00C0      		rjmp 2f
 591               		1:
 592 01d8 CC0F      		lsl r28
 593 01da DD1F      		rol r29
 594               		2:
 595 01dc 2A95      		dec r18
 596 01de 02F4      		brpl 1b
 597 01e0 892F      		mov r24,r25
 598 01e2 90E0      		ldi r25,0
 599 01e4 75E0      		ldi r23,5
 600               		1:
 601 01e6 880F      		lsl r24
 602 01e8 991F      		rol r25
 603 01ea 7A95      		dec r23
 604 01ec 01F4      		brne 1b
 605 01ee C82B      		or r28,r24
 606 01f0 D92B      		or r29,r25
 607               	.LVL68:
 118:quantum/keymap_common.c ****             break;
 608               		.loc 1 118 28 view .LVU125
 609 01f2 DA68      		ori r29,138
 610               	.LVL69:
 119:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX:;
 611               		.loc 1 119 13 is_stmt 1 view .LVU126
 612 01f4 00C0      		rjmp .L12
 613               	.LVL70:
 614               	.L18:
 120:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 615               		.loc 1 120 58 view .LVU127
 122:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_ONESHOT(action_layer);
 616               		.loc 1 122 13 view .LVU128
 123:quantum/keymap_common.c ****             break;
 617               		.loc 1 123 13 view .LVU129
 123:quantum/keymap_common.c ****             break;
 618               		.loc 1 123 28 is_stmt 0 view .LVU130
 619 01f6 D82F      		mov r29,r24
 620 01f8 CC27      		clr r28
 621               	.LVL71:
 123:quantum/keymap_common.c ****             break;
 622               		.loc 1 123 28 view .LVU131
 623 01fa C46F      		ori r28,244
 624 01fc D06A      		ori r29,160
 625               	.LVL72:
 124:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX:;
 626               		.loc 1 124 13 is_stmt 1 view .LVU132
 627 01fe 00C0      		rjmp .L12
 628               	.LVL73:
 629               	.L25:
 131:quantum/keymap_common.c ****             break;
 630               		.loc 1 131 13 view .LVU133
 131:quantum/keymap_common.c ****             break;
 631               		.loc 1 131 27 is_stmt 0 view .LVU134
 632 0200 DC2F      		mov r29,r28
 633 0202 CC27      		clr r28
 634               	.LVL74:
 131:quantum/keymap_common.c ****             break;
 635               		.loc 1 131 27 view .LVU135
 636 0204 C06F      		ori r28,240
 637 0206 D06A      		ori r29,160
 638               	.LVL75:
 132:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 639               		.loc 1 132 13 is_stmt 1 view .LVU136
 640 0208 00C0      		rjmp .L12
 641               	.LVL76:
 642               	.L27:
 134:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 643               		.loc 1 134 13 view .LVU137
 134:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 644               		.loc 1 134 28 is_stmt 0 view .LVU138
 645 020a 8C2F      		mov r24,r28
 646 020c 8F70      		andi r24,lo8(15)
 647 020e 0E94 0000 		call mod_config
 648               	.LVL77:
 135:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 649               		.loc 1 135 13 is_stmt 1 view .LVU139
 136:quantum/keymap_common.c ****             break;
 650               		.loc 1 136 13 view .LVU140
 135:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 651               		.loc 1 135 37 is_stmt 0 view .LVU141
 652 0212 34E0      		ldi r19,4
 653               		1:
 654 0214 D695      		lsr r29
 655 0216 C795      		ror r28
 656 0218 3A95      		dec r19
 657 021a 01F4      		brne 1b
 658               	.LVL78:
 135:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 659               		.loc 1 135 26 view .LVU142
 660 021c CF70      		andi r28,lo8(15)
 136:quantum/keymap_common.c ****             break;
 661               		.loc 1 136 28 view .LVU143
 662 021e 9C2F      		mov r25,r28
 663               	.LVL79:
 136:quantum/keymap_common.c ****             break;
 664               		.loc 1 136 28 view .LVU144
 665 0220 EC01      		movw r28,r24
 666 0222 D069      		ori r29,144
 667               	.LVL80:
 137:quantum/keymap_common.c ****         case QK_MOD_TAP ... QK_MOD_TAP_MAX:
 668               		.loc 1 137 13 is_stmt 1 view .LVU145
 669 0224 00C0      		rjmp .L12
 670               		.cfi_endproc
 671               	.LFE109:
 673               		.section	.rodata.CSWTCH.1,"a"
 676               	CSWTCH.1:
 677 0000 E200      		.word	226
 678 0002 E900      		.word	233
 679 0004 EA00      		.word	234
 680 0006 B500      		.word	181
 681 0008 B600      		.word	182
 682 000a B700      		.word	183
 683 000c CD00      		.word	205
 684 000e 8301      		.word	387
 685 0010 CC00      		.word	204
 686 0012 8A01      		.word	394
 687 0014 9201      		.word	402
 688 0016 9401      		.word	404
 689 0018 2102      		.word	545
 690 001a 2302      		.word	547
 691 001c 2402      		.word	548
 692 001e 2502      		.word	549
 693 0020 2602      		.word	550
 694 0022 2702      		.word	551
 695 0024 2A02      		.word	554
 696 0026 B300      		.word	179
 697 0028 B400      		.word	180
 698 002a 6F00      		.word	111
 699 002c 7000      		.word	112
 700               		.section	.rodata.CSWTCH.0,"a"
 703               	CSWTCH.0:
 704 0000 81        		.byte	-127
 705 0001 82        		.byte	-126
 706 0002 83        		.byte	-125
 707               		.weak	fn_actions
 708               		.section	.progmem.data.fn_actions,"a"
 711               	fn_actions:
 712               		.text
 713               	.Letext0:
 714               		.file 3 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchain
 715               		.file 4 "tmk_core/common/keyboard.h"
 716               		.file 5 "tmk_core/common/keycode.h"
 717               		.file 6 "tmk_core/common/action_code.h"
 718               		.file 7 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchain
 719               		.file 8 "tmk_core/common/action_macro.h"
 720               		.file 9 "tmk_core/common/action.h"
 721               		.file 10 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 722               		.file 11 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 723               		.file 12 "lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 724               		.file 13 "lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
 725               		.file 14 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchai
 726               		.file 15 "tmk_core/common/host.h"
 727               		.file 16 "tmk_core/common/debug.h"
 728               		.file 17 "quantum/keycode_config.h"
 729               		.file 18 "quantum/quantum_keycodes.h"
 730               		.file 19 "quantum/keymap.h"
 731               		.file 20 "tmk_core/common/action_layer.h"
 732               		.file 21 "./quantum/color.h"
 733               		.file 22 "quantum/rgblight.h"
 734               		.file 23 "tmk_core/common/timer.h"
 735               		.file 24 "tmk_core/common/action_util.h"
 736               		.file 25 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchai
 737               		.file 26 "quantum/process_keycode/process_tap_dance.h"
 738               		.file 27 "quantum/quantum.h"
DEFINED SYMBOLS
                            *ABS*:00000000 keymap_common.c
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfuHKGa.s:2      *ABS*:0000003e __SP_H__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfuHKGa.s:3      *ABS*:0000003d __SP_L__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfuHKGa.s:4      *ABS*:0000003f __SREG__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfuHKGa.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfuHKGa.s:6      *ABS*:00000001 __zero_reg__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfuHKGa.s:13     .text.action_get_macro:00000000 action_get_macro
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfuHKGa.s:37     .text.action_function:00000000 action_function
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfuHKGa.s:56     .text.keymap_key_to_keycode:00000000 keymap_key_to_keycode
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfuHKGa.s:119    .text.keymap_function_id_to_action:00000000 keymap_function_id_to_action
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfuHKGa.s:711    .progmem.data.fn_actions:00000000 fn_actions
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfuHKGa.s:160    .text.action_for_key:00000000 action_for_key
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfuHKGa.s:676    .rodata.CSWTCH.1:00000000 CSWTCH.1
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfuHKGa.s:703    .rodata.CSWTCH.0:00000000 CSWTCH.0

UNDEFINED SYMBOLS
__mulhi3
keymaps
keycode_config
mod_config
__do_copy_data
