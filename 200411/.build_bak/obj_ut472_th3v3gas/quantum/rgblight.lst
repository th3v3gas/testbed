   1               		.file	"rgblight.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.rgblight_effect_dummy,"ax",@progbits
  12               	rgblight_effect_dummy:
  13               	.LVL0:
  14               	.LFB161:
  15               		.file 1 "quantum/rgblight.c"
   1:quantum/rgblight.c **** /* Copyright 2016-2017 Yang Liu
   2:quantum/rgblight.c ****  *
   3:quantum/rgblight.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/rgblight.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/rgblight.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/rgblight.c ****  * (at your option) any later version.
   7:quantum/rgblight.c ****  *
   8:quantum/rgblight.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/rgblight.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/rgblight.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/rgblight.c ****  * GNU General Public License for more details.
  12:quantum/rgblight.c ****  *
  13:quantum/rgblight.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/rgblight.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/rgblight.c ****  */
  16:quantum/rgblight.c **** #include <math.h>
  17:quantum/rgblight.c **** #include <string.h>
  18:quantum/rgblight.c **** #ifdef __AVR__
  19:quantum/rgblight.c **** #    include <avr/eeprom.h>
  20:quantum/rgblight.c **** #    include <avr/interrupt.h>
  21:quantum/rgblight.c **** #endif
  22:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
  23:quantum/rgblight.c **** #    include "eeprom.h"
  24:quantum/rgblight.c **** #endif
  25:quantum/rgblight.c **** #ifdef STM32_EEPROM_ENABLE
  26:quantum/rgblight.c **** #    include "hal.h"
  27:quantum/rgblight.c **** #    include "eeprom_stm32.h"
  28:quantum/rgblight.c **** #endif
  29:quantum/rgblight.c **** #include "wait.h"
  30:quantum/rgblight.c **** #include "progmem.h"
  31:quantum/rgblight.c **** #include "timer.h"
  32:quantum/rgblight.c **** #include "rgblight.h"
  33:quantum/rgblight.c **** #include "color.h"
  34:quantum/rgblight.c **** #include "debug.h"
  35:quantum/rgblight.c **** #include "led_tables.h"
  36:quantum/rgblight.c **** #include "lib/lib8tion/lib8tion.h"
  37:quantum/rgblight.c **** #ifdef VELOCIKEY_ENABLE
  38:quantum/rgblight.c **** #    include "velocikey.h"
  39:quantum/rgblight.c **** #endif
  40:quantum/rgblight.c **** 
  41:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
  42:quantum/rgblight.c **** /* for split keyboard */
  43:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODE rgblight_status.change_flags |= RGBLIGHT_STATUS_CHANGE_M
  44:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_HSVS rgblight_status.change_flags |= RGBLIGHT_STATUS_CHANGE_H
  45:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS rgblight_status.change_flags |= (RGBLIGHT_STATUS_CHA
  46:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE rgblight_status.change_flags |= RGBLIGHT_STATUS_
  47:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_ANIMATION_TICK rgblight_status.change_flags |= RGBLIGHT_STATUS_ANIMATION
  48:quantum/rgblight.c **** #else
  49:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODE
  50:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_HSVS
  51:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS
  52:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE
  53:quantum/rgblight.c **** #    define RGBLIGHT_SPLIT_ANIMATION_TICK
  54:quantum/rgblight.c **** #endif
  55:quantum/rgblight.c **** 
  56:quantum/rgblight.c **** #define _RGBM_SINGLE_STATIC(sym) RGBLIGHT_MODE_##sym,
  57:quantum/rgblight.c **** #define _RGBM_SINGLE_DYNAMIC(sym)
  58:quantum/rgblight.c **** #define _RGBM_MULTI_STATIC(sym) RGBLIGHT_MODE_##sym,
  59:quantum/rgblight.c **** #define _RGBM_MULTI_DYNAMIC(sym)
  60:quantum/rgblight.c **** #define _RGBM_TMP_STATIC(sym, msym) RGBLIGHT_MODE_##sym,
  61:quantum/rgblight.c **** #define _RGBM_TMP_DYNAMIC(sym, msym)
  62:quantum/rgblight.c **** static uint8_t static_effect_table[] = {
  63:quantum/rgblight.c **** #include "rgblight_modes.h"
  64:quantum/rgblight.c **** };
  65:quantum/rgblight.c **** 
  66:quantum/rgblight.c **** #define _RGBM_SINGLE_STATIC(sym) RGBLIGHT_MODE_##sym,
  67:quantum/rgblight.c **** #define _RGBM_SINGLE_DYNAMIC(sym) RGBLIGHT_MODE_##sym,
  68:quantum/rgblight.c **** #define _RGBM_MULTI_STATIC(sym) RGBLIGHT_MODE_##sym,
  69:quantum/rgblight.c **** #define _RGBM_MULTI_DYNAMIC(sym) RGBLIGHT_MODE_##sym,
  70:quantum/rgblight.c **** #define _RGBM_TMP_STATIC(sym, msym) RGBLIGHT_MODE_##msym,
  71:quantum/rgblight.c **** #define _RGBM_TMP_DYNAMIC(sym, msym) RGBLIGHT_MODE_##msym,
  72:quantum/rgblight.c **** static uint8_t mode_base_table[] = {
  73:quantum/rgblight.c ****     0,  // RGBLIGHT_MODE_zero
  74:quantum/rgblight.c **** #include "rgblight_modes.h"
  75:quantum/rgblight.c **** };
  76:quantum/rgblight.c **** 
  77:quantum/rgblight.c **** static inline int is_static_effect(uint8_t mode) { return memchr(static_effect_table, mode, sizeof(
  78:quantum/rgblight.c **** 
  79:quantum/rgblight.c **** #ifdef RGBLIGHT_LED_MAP
  80:quantum/rgblight.c **** const uint8_t led_map[] PROGMEM = RGBLIGHT_LED_MAP;
  81:quantum/rgblight.c **** #endif
  82:quantum/rgblight.c **** 
  83:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_STATIC_GRADIENT
  84:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_GRADIENT_RANGES[] PROGMEM = {255, 170, 127, 85, 64};
  85:quantum/rgblight.c **** #endif
  86:quantum/rgblight.c **** 
  87:quantum/rgblight.c **** rgblight_config_t rgblight_config;
  88:quantum/rgblight.c **** rgblight_status_t rgblight_status         = {.timer_enabled = false};
  89:quantum/rgblight.c **** bool              is_rgblight_initialized = false;
  90:quantum/rgblight.c **** 
  91:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
  92:quantum/rgblight.c **** animation_status_t animation_status = {};
  93:quantum/rgblight.c **** #endif
  94:quantum/rgblight.c **** 
  95:quantum/rgblight.c **** #ifndef LED_ARRAY
  96:quantum/rgblight.c **** LED_TYPE led[RGBLED_NUM];
  97:quantum/rgblight.c **** #    define LED_ARRAY led
  98:quantum/rgblight.c **** #endif
  99:quantum/rgblight.c **** 
 100:quantum/rgblight.c **** static uint8_t clipping_start_pos = 0;
 101:quantum/rgblight.c **** static uint8_t clipping_num_leds  = RGBLED_NUM;
 102:quantum/rgblight.c **** static uint8_t effect_start_pos   = 0;
 103:quantum/rgblight.c **** static uint8_t effect_end_pos     = RGBLED_NUM;
 104:quantum/rgblight.c **** static uint8_t effect_num_leds    = RGBLED_NUM;
 105:quantum/rgblight.c **** 
 106:quantum/rgblight.c **** void rgblight_set_clipping_range(uint8_t start_pos, uint8_t num_leds) {
 107:quantum/rgblight.c ****     clipping_start_pos = start_pos;
 108:quantum/rgblight.c ****     clipping_num_leds  = num_leds;
 109:quantum/rgblight.c **** }
 110:quantum/rgblight.c **** 
 111:quantum/rgblight.c **** void rgblight_set_effect_range(uint8_t start_pos, uint8_t num_leds) {
 112:quantum/rgblight.c ****     if (start_pos >= RGBLED_NUM) return;
 113:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
 114:quantum/rgblight.c ****     effect_start_pos = start_pos;
 115:quantum/rgblight.c ****     effect_end_pos   = start_pos + num_leds;
 116:quantum/rgblight.c ****     effect_num_leds  = num_leds;
 117:quantum/rgblight.c **** }
 118:quantum/rgblight.c **** 
 119:quantum/rgblight.c **** void sethsv_raw(uint8_t hue, uint8_t sat, uint8_t val, LED_TYPE *led1) {
 120:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 121:quantum/rgblight.c ****     RGB rgb = hsv_to_rgb(hsv);
 122:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 123:quantum/rgblight.c **** }
 124:quantum/rgblight.c **** 
 125:quantum/rgblight.c **** void sethsv(uint8_t hue, uint8_t sat, uint8_t val, LED_TYPE *led1) { sethsv_raw(hue, sat, val > RGB
 126:quantum/rgblight.c **** 
 127:quantum/rgblight.c **** void setrgb(uint8_t r, uint8_t g, uint8_t b, LED_TYPE *led1) {
 128:quantum/rgblight.c ****     (*led1).r = r;
 129:quantum/rgblight.c ****     (*led1).g = g;
 130:quantum/rgblight.c ****     (*led1).b = b;
 131:quantum/rgblight.c **** #ifdef RGBW
 132:quantum/rgblight.c ****     (*led1).w = 0;
 133:quantum/rgblight.c **** #endif
 134:quantum/rgblight.c **** }
 135:quantum/rgblight.c **** 
 136:quantum/rgblight.c **** void rgblight_check_config(void) {
 137:quantum/rgblight.c ****     /* Add some out of bound checks for RGB light config */
 138:quantum/rgblight.c **** 
 139:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODE_STATIC_LIGHT) {
 140:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 141:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 142:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 143:quantum/rgblight.c ****     }
 144:quantum/rgblight.c **** 
 145:quantum/rgblight.c ****     if (rgblight_config.val > RGBLIGHT_LIMIT_VAL) {
 146:quantum/rgblight.c ****         rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 147:quantum/rgblight.c ****     }
 148:quantum/rgblight.c **** }
 149:quantum/rgblight.c **** 
 150:quantum/rgblight.c **** uint32_t eeconfig_read_rgblight(void) {
 151:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 152:quantum/rgblight.c ****     return eeprom_read_dword(EECONFIG_RGBLIGHT);
 153:quantum/rgblight.c **** #else
 154:quantum/rgblight.c ****     return 0;
 155:quantum/rgblight.c **** #endif
 156:quantum/rgblight.c **** }
 157:quantum/rgblight.c **** 
 158:quantum/rgblight.c **** void eeconfig_update_rgblight(uint32_t val) {
 159:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 160:quantum/rgblight.c ****     rgblight_check_config();
 161:quantum/rgblight.c ****     eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 162:quantum/rgblight.c **** #endif
 163:quantum/rgblight.c **** }
 164:quantum/rgblight.c **** 
 165:quantum/rgblight.c **** void eeconfig_update_rgblight_current(void) { eeconfig_update_rgblight(rgblight_config.raw); }
 166:quantum/rgblight.c **** 
 167:quantum/rgblight.c **** void eeconfig_update_rgblight_default(void) {
 168:quantum/rgblight.c ****     rgblight_config.enable = 1;
 169:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_MODE_STATIC_LIGHT;
 170:quantum/rgblight.c ****     rgblight_config.hue    = 0;
 171:quantum/rgblight.c ****     rgblight_config.sat    = UINT8_MAX;
 172:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_LIMIT_VAL;
 173:quantum/rgblight.c ****     rgblight_config.speed  = 0;
 174:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 175:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 176:quantum/rgblight.c **** }
 177:quantum/rgblight.c **** 
 178:quantum/rgblight.c **** void eeconfig_debug_rgblight(void) {
 179:quantum/rgblight.c ****     dprintf("rgblight_config EEPROM:\n");
 180:quantum/rgblight.c ****     dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 181:quantum/rgblight.c ****     dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 182:quantum/rgblight.c ****     dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 183:quantum/rgblight.c ****     dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 184:quantum/rgblight.c ****     dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 185:quantum/rgblight.c ****     dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 186:quantum/rgblight.c **** }
 187:quantum/rgblight.c **** 
 188:quantum/rgblight.c **** void rgblight_init(void) {
 189:quantum/rgblight.c ****     /* if already initialized, don't do it again.
 190:quantum/rgblight.c ****        If you must do it again, extern this and set to false, first.
 191:quantum/rgblight.c ****        This is a dirty, dirty hack until proper hooks can be added for keyboard startup. */
 192:quantum/rgblight.c ****     if (is_rgblight_initialized) {
 193:quantum/rgblight.c ****         return;
 194:quantum/rgblight.c ****     }
 195:quantum/rgblight.c **** 
 196:quantum/rgblight.c ****     dprintf("rgblight_init called.\n");
 197:quantum/rgblight.c ****     dprintf("rgblight_init start!\n");
 198:quantum/rgblight.c ****     if (!eeconfig_is_enabled()) {
 199:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 200:quantum/rgblight.c ****         eeconfig_init();
 201:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 202:quantum/rgblight.c ****     }
 203:quantum/rgblight.c ****     rgblight_config.raw = eeconfig_read_rgblight();
 204:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 205:quantum/rgblight.c ****     if (!rgblight_config.mode) {
 206:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 207:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 208:quantum/rgblight.c ****         rgblight_config.raw = eeconfig_read_rgblight();
 209:quantum/rgblight.c ****     }
 210:quantum/rgblight.c ****     rgblight_check_config();
 211:quantum/rgblight.c **** 
 212:quantum/rgblight.c ****     eeconfig_debug_rgblight();  // display current eeprom values
 213:quantum/rgblight.c **** 
 214:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 215:quantum/rgblight.c ****     rgblight_timer_init();  // setup the timer
 216:quantum/rgblight.c **** #endif
 217:quantum/rgblight.c **** 
 218:quantum/rgblight.c ****     if (rgblight_config.enable) {
 219:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 220:quantum/rgblight.c ****     }
 221:quantum/rgblight.c **** 
 222:quantum/rgblight.c ****     is_rgblight_initialized = true;
 223:quantum/rgblight.c **** }
 224:quantum/rgblight.c **** 
 225:quantum/rgblight.c **** uint32_t rgblight_read_dword(void) { return rgblight_config.raw; }
 226:quantum/rgblight.c **** 
 227:quantum/rgblight.c **** void rgblight_update_dword(uint32_t dword) {
 228:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 229:quantum/rgblight.c ****     rgblight_config.raw = dword;
 230:quantum/rgblight.c ****     if (rgblight_config.enable)
 231:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 232:quantum/rgblight.c ****     else {
 233:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 234:quantum/rgblight.c ****         rgblight_timer_disable();
 235:quantum/rgblight.c **** #endif
 236:quantum/rgblight.c ****         rgblight_set();
 237:quantum/rgblight.c ****     }
 238:quantum/rgblight.c **** }
 239:quantum/rgblight.c **** 
 240:quantum/rgblight.c **** void rgblight_increase(void) {
 241:quantum/rgblight.c ****     uint8_t mode = 0;
 242:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 243:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 244:quantum/rgblight.c ****     }
 245:quantum/rgblight.c ****     rgblight_mode(mode);
 246:quantum/rgblight.c **** }
 247:quantum/rgblight.c **** void rgblight_decrease(void) {
 248:quantum/rgblight.c ****     uint8_t mode = 0;
 249:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 250:quantum/rgblight.c ****     if (rgblight_config.mode > RGBLIGHT_MODE_STATIC_LIGHT) {
 251:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 252:quantum/rgblight.c ****     }
 253:quantum/rgblight.c ****     rgblight_mode(mode);
 254:quantum/rgblight.c **** }
 255:quantum/rgblight.c **** void rgblight_step_helper(bool write_to_eeprom) {
 256:quantum/rgblight.c ****     uint8_t mode = 0;
 257:quantum/rgblight.c ****     mode         = rgblight_config.mode + 1;
 258:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 259:quantum/rgblight.c ****         mode = 1;
 260:quantum/rgblight.c ****     }
 261:quantum/rgblight.c ****     rgblight_mode_eeprom_helper(mode, write_to_eeprom);
 262:quantum/rgblight.c **** }
 263:quantum/rgblight.c **** void rgblight_step_noeeprom(void) { rgblight_step_helper(false); }
 264:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 265:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 266:quantum/rgblight.c ****     uint8_t mode = 0;
 267:quantum/rgblight.c ****     mode         = rgblight_config.mode - 1;
 268:quantum/rgblight.c ****     if (mode < 1) {
 269:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 270:quantum/rgblight.c ****     }
 271:quantum/rgblight.c ****     rgblight_mode_eeprom_helper(mode, write_to_eeprom);
 272:quantum/rgblight.c **** }
 273:quantum/rgblight.c **** void rgblight_step_reverse_noeeprom(void) { rgblight_step_reverse_helper(false); }
 274:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 275:quantum/rgblight.c **** 
 276:quantum/rgblight.c **** uint8_t rgblight_get_mode(void) {
 277:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 278:quantum/rgblight.c ****         return false;
 279:quantum/rgblight.c ****     }
 280:quantum/rgblight.c **** 
 281:quantum/rgblight.c ****     return rgblight_config.mode;
 282:quantum/rgblight.c **** }
 283:quantum/rgblight.c **** 
 284:quantum/rgblight.c **** void rgblight_mode_eeprom_helper(uint8_t mode, bool write_to_eeprom) {
 285:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 286:quantum/rgblight.c ****         return;
 287:quantum/rgblight.c ****     }
 288:quantum/rgblight.c ****     if (mode < RGBLIGHT_MODE_STATIC_LIGHT) {
 289:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 290:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 291:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 292:quantum/rgblight.c ****     } else {
 293:quantum/rgblight.c ****         rgblight_config.mode = mode;
 294:quantum/rgblight.c ****     }
 295:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 296:quantum/rgblight.c ****     if (write_to_eeprom) {
 297:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 298:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 299:quantum/rgblight.c ****     } else {
 300:quantum/rgblight.c ****         dprintf("rgblight mode [NOEEPROM]: %u\n", rgblight_config.mode);
 301:quantum/rgblight.c ****     }
 302:quantum/rgblight.c ****     if (is_static_effect(rgblight_config.mode)) {
 303:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 304:quantum/rgblight.c ****         rgblight_timer_disable();
 305:quantum/rgblight.c **** #endif
 306:quantum/rgblight.c ****     } else {
 307:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 308:quantum/rgblight.c ****         rgblight_timer_enable();
 309:quantum/rgblight.c **** #endif
 310:quantum/rgblight.c ****     }
 311:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 312:quantum/rgblight.c ****     animation_status.restart = true;
 313:quantum/rgblight.c **** #endif
 314:quantum/rgblight.c ****     rgblight_sethsv_noeeprom(rgblight_config.hue, rgblight_config.sat, rgblight_config.val);
 315:quantum/rgblight.c **** }
 316:quantum/rgblight.c **** 
 317:quantum/rgblight.c **** void rgblight_mode(uint8_t mode) { rgblight_mode_eeprom_helper(mode, true); }
 318:quantum/rgblight.c **** 
 319:quantum/rgblight.c **** void rgblight_mode_noeeprom(uint8_t mode) { rgblight_mode_eeprom_helper(mode, false); }
 320:quantum/rgblight.c **** 
 321:quantum/rgblight.c **** void rgblight_toggle(void) {
 322:quantum/rgblight.c ****     dprintf("rgblight toggle [EEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 323:quantum/rgblight.c ****     if (rgblight_config.enable) {
 324:quantum/rgblight.c ****         rgblight_disable();
 325:quantum/rgblight.c ****     } else {
 326:quantum/rgblight.c ****         rgblight_enable();
 327:quantum/rgblight.c ****     }
 328:quantum/rgblight.c **** }
 329:quantum/rgblight.c **** 
 330:quantum/rgblight.c **** void rgblight_toggle_noeeprom(void) {
 331:quantum/rgblight.c ****     dprintf("rgblight toggle [NOEEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 332:quantum/rgblight.c ****     if (rgblight_config.enable) {
 333:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 334:quantum/rgblight.c ****     } else {
 335:quantum/rgblight.c ****         rgblight_enable_noeeprom();
 336:quantum/rgblight.c ****     }
 337:quantum/rgblight.c **** }
 338:quantum/rgblight.c **** 
 339:quantum/rgblight.c **** void rgblight_enable(void) {
 340:quantum/rgblight.c ****     rgblight_config.enable = 1;
 341:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 342:quantum/rgblight.c ****     // eeconfig_update_rgblight(rgblight_config.raw);
 343:quantum/rgblight.c ****     dprintf("rgblight enable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 344:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 345:quantum/rgblight.c **** }
 346:quantum/rgblight.c **** 
 347:quantum/rgblight.c **** void rgblight_enable_noeeprom(void) {
 348:quantum/rgblight.c ****     rgblight_config.enable = 1;
 349:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 350:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 351:quantum/rgblight.c **** }
 352:quantum/rgblight.c **** 
 353:quantum/rgblight.c **** void rgblight_disable(void) {
 354:quantum/rgblight.c ****     rgblight_config.enable = 0;
 355:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 356:quantum/rgblight.c ****     dprintf("rgblight disable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 357:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 358:quantum/rgblight.c ****     rgblight_timer_disable();
 359:quantum/rgblight.c **** #endif
 360:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 361:quantum/rgblight.c ****     wait_ms(50);
 362:quantum/rgblight.c ****     rgblight_set();
 363:quantum/rgblight.c **** }
 364:quantum/rgblight.c **** 
 365:quantum/rgblight.c **** void rgblight_disable_noeeprom(void) {
 366:quantum/rgblight.c ****     rgblight_config.enable = 0;
 367:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 368:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 369:quantum/rgblight.c ****     rgblight_timer_disable();
 370:quantum/rgblight.c **** #endif
 371:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODE;
 372:quantum/rgblight.c ****     wait_ms(50);
 373:quantum/rgblight.c ****     rgblight_set();
 374:quantum/rgblight.c **** }
 375:quantum/rgblight.c **** 
 376:quantum/rgblight.c **** void rgblight_increase_hue_helper(bool write_to_eeprom) {
 377:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue + RGBLIGHT_HUE_STEP;
 378:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 379:quantum/rgblight.c **** }
 380:quantum/rgblight.c **** void rgblight_increase_hue_noeeprom(void) { rgblight_increase_hue_helper(false); }
 381:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 382:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 383:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue - RGBLIGHT_HUE_STEP;
 384:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 385:quantum/rgblight.c **** }
 386:quantum/rgblight.c **** void rgblight_decrease_hue_noeeprom(void) { rgblight_decrease_hue_helper(false); }
 387:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 388:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 389:quantum/rgblight.c ****     uint8_t sat = qadd8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 390:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 391:quantum/rgblight.c **** }
 392:quantum/rgblight.c **** void rgblight_increase_sat_noeeprom(void) { rgblight_increase_sat_helper(false); }
 393:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 394:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 395:quantum/rgblight.c ****     uint8_t sat = qsub8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 396:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 397:quantum/rgblight.c **** }
 398:quantum/rgblight.c **** void rgblight_decrease_sat_noeeprom(void) { rgblight_decrease_sat_helper(false); }
 399:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 400:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 401:quantum/rgblight.c ****     uint8_t val = qadd8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 402:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 403:quantum/rgblight.c **** }
 404:quantum/rgblight.c **** void rgblight_increase_val_noeeprom(void) { rgblight_increase_val_helper(false); }
 405:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 406:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 407:quantum/rgblight.c ****     uint8_t val = qsub8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 408:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 409:quantum/rgblight.c **** }
 410:quantum/rgblight.c **** void rgblight_decrease_val_noeeprom(void) { rgblight_decrease_val_helper(false); }
 411:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 412:quantum/rgblight.c **** void rgblight_increase_speed(void) {
 413:quantum/rgblight.c ****     if (rgblight_config.speed < 3) rgblight_config.speed++;
 414:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 415:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to support th
 416:quantum/rgblight.c **** }
 417:quantum/rgblight.c **** 
 418:quantum/rgblight.c **** void rgblight_decrease_speed(void) {
 419:quantum/rgblight.c ****     if (rgblight_config.speed > 0) rgblight_config.speed--;
 420:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 421:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to support th
 422:quantum/rgblight.c **** }
 423:quantum/rgblight.c **** 
 424:quantum/rgblight.c **** void rgblight_sethsv_noeeprom_old(uint8_t hue, uint8_t sat, uint8_t val) {
 425:quantum/rgblight.c ****     if (rgblight_config.enable) {
 426:quantum/rgblight.c ****         LED_TYPE tmp_led;
 427:quantum/rgblight.c ****         sethsv(hue, sat, val, &tmp_led);
 428:quantum/rgblight.c ****         rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 429:quantum/rgblight.c ****     }
 430:quantum/rgblight.c **** }
 431:quantum/rgblight.c **** 
 432:quantum/rgblight.c **** void rgblight_sethsv_eeprom_helper(uint8_t hue, uint8_t sat, uint8_t val, bool write_to_eeprom) {
 433:quantum/rgblight.c ****     if (rgblight_config.enable) {
 434:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 435:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 436:quantum/rgblight.c ****             // same static color
 437:quantum/rgblight.c ****             LED_TYPE tmp_led;
 438:quantum/rgblight.c ****             sethsv(hue, sat, val, &tmp_led);
 439:quantum/rgblight.c ****             rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 440:quantum/rgblight.c ****         } else {
 441:quantum/rgblight.c ****             // all LEDs in same color
 442:quantum/rgblight.c ****             if (1 == 0) {  // dummy
 443:quantum/rgblight.c ****             }
 444:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
 445:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_BREATHING) {
 446:quantum/rgblight.c ****                 // breathing mode, ignore the change of val, use in memory value instead
 447:quantum/rgblight.c ****                 val = rgblight_config.val;
 448:quantum/rgblight.c ****             }
 449:quantum/rgblight.c **** #endif
 450:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 451:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_MOOD) {
 452:quantum/rgblight.c ****                 // rainbow mood, ignore the change of hue
 453:quantum/rgblight.c ****                 hue = rgblight_config.hue;
 454:quantum/rgblight.c ****             }
 455:quantum/rgblight.c **** #endif
 456:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 457:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_SWIRL) {
 458:quantum/rgblight.c ****                 // rainbow swirl, ignore the change of hue
 459:quantum/rgblight.c ****                 hue = rgblight_config.hue;
 460:quantum/rgblight.c ****             }
 461:quantum/rgblight.c **** #endif
 462:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_STATIC_GRADIENT
 463:quantum/rgblight.c ****             else if (rgblight_status.base_mode == RGBLIGHT_MODE_STATIC_GRADIENT) {
 464:quantum/rgblight.c ****                 // static gradient
 465:quantum/rgblight.c ****                 uint8_t delta     = rgblight_config.mode - rgblight_status.base_mode;
 466:quantum/rgblight.c ****                 bool    direction = (delta % 2) == 0;
 467:quantum/rgblight.c **** #    ifdef __AVR__
 468:quantum/rgblight.c ****                 // probably due to how pgm_read_word is defined for ARM, but the ARM compiler reall
 469:quantum/rgblight.c ****                 uint8_t range = pgm_read_word(&RGBLED_GRADIENT_RANGES[delta / 2]);
 470:quantum/rgblight.c **** #    else
 471:quantum/rgblight.c ****                 uint8_t range = RGBLED_GRADIENT_RANGES[delta / 2];
 472:quantum/rgblight.c **** #    endif
 473:quantum/rgblight.c ****                 for (uint8_t i = 0; i < effect_num_leds; i++) {
 474:quantum/rgblight.c ****                     uint8_t _hue = ((uint16_t)i * (uint16_t)range) / effect_num_leds;
 475:quantum/rgblight.c ****                     if (direction) {
 476:quantum/rgblight.c ****                         _hue = hue + _hue;
 477:quantum/rgblight.c ****                     } else {
 478:quantum/rgblight.c ****                         _hue = hue - _hue;
 479:quantum/rgblight.c ****                     }
 480:quantum/rgblight.c ****                     dprintf("rgblight rainbow set hsv: %d,%d,%d,%u\n", i, _hue, direction, range);
 481:quantum/rgblight.c ****                     sethsv(_hue, sat, val, (LED_TYPE *)&led[i + effect_start_pos]);
 482:quantum/rgblight.c ****                 }
 483:quantum/rgblight.c ****                 rgblight_set();
 484:quantum/rgblight.c ****             }
 485:quantum/rgblight.c **** #endif
 486:quantum/rgblight.c ****         }
 487:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
 488:quantum/rgblight.c ****         if (rgblight_config.hue != hue || rgblight_config.sat != sat || rgblight_config.val != val)
 489:quantum/rgblight.c ****             RGBLIGHT_SPLIT_SET_CHANGE_HSVS;
 490:quantum/rgblight.c ****         }
 491:quantum/rgblight.c **** #endif
 492:quantum/rgblight.c ****         rgblight_config.hue = hue;
 493:quantum/rgblight.c ****         rgblight_config.sat = sat;
 494:quantum/rgblight.c ****         rgblight_config.val = val;
 495:quantum/rgblight.c ****         if (write_to_eeprom) {
 496:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 497:quantum/rgblight.c ****             dprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.s
 498:quantum/rgblight.c ****         } else {
 499:quantum/rgblight.c ****             dprintf("rgblight set hsv [NOEEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config
 500:quantum/rgblight.c ****         }
 501:quantum/rgblight.c ****     }
 502:quantum/rgblight.c **** }
 503:quantum/rgblight.c **** 
 504:quantum/rgblight.c **** void rgblight_sethsv(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_eeprom_helper(hue, sa
 505:quantum/rgblight.c **** 
 506:quantum/rgblight.c **** void rgblight_sethsv_noeeprom(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_eeprom_helpe
 507:quantum/rgblight.c **** 
 508:quantum/rgblight.c **** uint8_t rgblight_get_speed(void) { return rgblight_config.speed; }
 509:quantum/rgblight.c **** 
 510:quantum/rgblight.c **** void rgblight_set_speed_eeprom_helper(uint8_t speed, bool write_to_eeprom) {
 511:quantum/rgblight.c ****     rgblight_config.speed = speed;
 512:quantum/rgblight.c ****     if (write_to_eeprom) {
 513:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 514:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 515:quantum/rgblight.c ****     } else {
 516:quantum/rgblight.c ****         dprintf("rgblight set speed [NOEEPROM]: %u\n", rgblight_config.speed);
 517:quantum/rgblight.c ****     }
 518:quantum/rgblight.c **** }
 519:quantum/rgblight.c **** 
 520:quantum/rgblight.c **** void rgblight_set_speed(uint8_t speed) { rgblight_set_speed_eeprom_helper(speed, true); }
 521:quantum/rgblight.c **** 
 522:quantum/rgblight.c **** void rgblight_set_speed_noeeprom(uint8_t speed) { rgblight_set_speed_eeprom_helper(speed, false); }
 523:quantum/rgblight.c **** 
 524:quantum/rgblight.c **** uint8_t rgblight_get_hue(void) { return rgblight_config.hue; }
 525:quantum/rgblight.c **** 
 526:quantum/rgblight.c **** uint8_t rgblight_get_sat(void) { return rgblight_config.sat; }
 527:quantum/rgblight.c **** 
 528:quantum/rgblight.c **** uint8_t rgblight_get_val(void) { return rgblight_config.val; }
 529:quantum/rgblight.c **** 
 530:quantum/rgblight.c **** void rgblight_setrgb(uint8_t r, uint8_t g, uint8_t b) {
 531:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 532:quantum/rgblight.c ****         return;
 533:quantum/rgblight.c ****     }
 534:quantum/rgblight.c **** 
 535:quantum/rgblight.c ****     for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 536:quantum/rgblight.c ****         led[i].r = r;
 537:quantum/rgblight.c ****         led[i].g = g;
 538:quantum/rgblight.c ****         led[i].b = b;
 539:quantum/rgblight.c **** #ifdef RGBW
 540:quantum/rgblight.c ****         led[i].w = 0;
 541:quantum/rgblight.c **** #endif
 542:quantum/rgblight.c ****     }
 543:quantum/rgblight.c ****     rgblight_set();
 544:quantum/rgblight.c **** }
 545:quantum/rgblight.c **** 
 546:quantum/rgblight.c **** void rgblight_setrgb_at(uint8_t r, uint8_t g, uint8_t b, uint8_t index) {
 547:quantum/rgblight.c ****     if (!rgblight_config.enable || index >= RGBLED_NUM) {
 548:quantum/rgblight.c ****         return;
 549:quantum/rgblight.c ****     }
 550:quantum/rgblight.c **** 
 551:quantum/rgblight.c ****     led[index].r = r;
 552:quantum/rgblight.c ****     led[index].g = g;
 553:quantum/rgblight.c ****     led[index].b = b;
 554:quantum/rgblight.c **** #ifdef RGBW
 555:quantum/rgblight.c ****     led[index].w = 0;
 556:quantum/rgblight.c **** #endif
 557:quantum/rgblight.c ****     rgblight_set();
 558:quantum/rgblight.c **** }
 559:quantum/rgblight.c **** 
 560:quantum/rgblight.c **** void rgblight_sethsv_at(uint8_t hue, uint8_t sat, uint8_t val, uint8_t index) {
 561:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 562:quantum/rgblight.c ****         return;
 563:quantum/rgblight.c ****     }
 564:quantum/rgblight.c **** 
 565:quantum/rgblight.c ****     LED_TYPE tmp_led;
 566:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 567:quantum/rgblight.c ****     rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 568:quantum/rgblight.c **** }
 569:quantum/rgblight.c **** 
 570:quantum/rgblight.c **** #if defined(RGBLIGHT_EFFECT_BREATHING) || defined(RGBLIGHT_EFFECT_RAINBOW_MOOD) || defined(RGBLIGHT
 571:quantum/rgblight.c **** 
 572:quantum/rgblight.c **** static uint8_t get_interval_time(const uint8_t *default_interval_address, uint8_t velocikey_min, ui
 573:quantum/rgblight.c ****     return
 574:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 575:quantum/rgblight.c ****         velocikey_enabled() ? velocikey_match_speed(velocikey_min, velocikey_max) :
 576:quantum/rgblight.c **** #    endif
 577:quantum/rgblight.c ****                             pgm_read_byte(default_interval_address);
 578:quantum/rgblight.c **** }
 579:quantum/rgblight.c **** 
 580:quantum/rgblight.c **** #endif
 581:quantum/rgblight.c **** 
 582:quantum/rgblight.c **** void rgblight_setrgb_range(uint8_t r, uint8_t g, uint8_t b, uint8_t start, uint8_t end) {
 583:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 584:quantum/rgblight.c ****         return;
 585:quantum/rgblight.c ****     }
 586:quantum/rgblight.c **** 
 587:quantum/rgblight.c ****     for (uint8_t i = start; i < end; i++) {
 588:quantum/rgblight.c ****         led[i].r = r;
 589:quantum/rgblight.c ****         led[i].g = g;
 590:quantum/rgblight.c ****         led[i].b = b;
 591:quantum/rgblight.c **** #ifdef RGBW
 592:quantum/rgblight.c ****         led[i].w = 0;
 593:quantum/rgblight.c **** #endif
 594:quantum/rgblight.c ****     }
 595:quantum/rgblight.c ****     rgblight_set();
 596:quantum/rgblight.c ****     wait_ms(1);
 597:quantum/rgblight.c **** }
 598:quantum/rgblight.c **** 
 599:quantum/rgblight.c **** void rgblight_sethsv_range(uint8_t hue, uint8_t sat, uint8_t val, uint8_t start, uint8_t end) {
 600:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 601:quantum/rgblight.c ****         return;
 602:quantum/rgblight.c ****     }
 603:quantum/rgblight.c **** 
 604:quantum/rgblight.c ****     LED_TYPE tmp_led;
 605:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 606:quantum/rgblight.c ****     rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 607:quantum/rgblight.c **** }
 608:quantum/rgblight.c **** 
 609:quantum/rgblight.c **** #ifndef RGBLIGHT_SPLIT
 610:quantum/rgblight.c **** void rgblight_setrgb_master(uint8_t r, uint8_t g, uint8_t b) { rgblight_setrgb_range(r, g, b, 0, (u
 611:quantum/rgblight.c **** 
 612:quantum/rgblight.c **** void rgblight_setrgb_slave(uint8_t r, uint8_t g, uint8_t b) { rgblight_setrgb_range(r, g, b, (uint8
 613:quantum/rgblight.c **** 
 614:quantum/rgblight.c **** void rgblight_sethsv_master(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_range(hue, sat
 615:quantum/rgblight.c **** 
 616:quantum/rgblight.c **** void rgblight_sethsv_slave(uint8_t hue, uint8_t sat, uint8_t val) { rgblight_sethsv_range(hue, sat,
 617:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 618:quantum/rgblight.c **** 
 619:quantum/rgblight.c **** #ifndef RGBLIGHT_CUSTOM_DRIVER
 620:quantum/rgblight.c **** void rgblight_set(void) {
 621:quantum/rgblight.c ****     LED_TYPE *start_led;
 622:quantum/rgblight.c ****     uint16_t  num_leds = clipping_num_leds;
 623:quantum/rgblight.c **** 
 624:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 625:quantum/rgblight.c ****         for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 626:quantum/rgblight.c ****             led[i].r = 0;
 627:quantum/rgblight.c ****             led[i].g = 0;
 628:quantum/rgblight.c ****             led[i].b = 0;
 629:quantum/rgblight.c **** #    ifdef RGBW
 630:quantum/rgblight.c ****             led[i].w = 0;
 631:quantum/rgblight.c **** #    endif
 632:quantum/rgblight.c ****         }
 633:quantum/rgblight.c ****     }
 634:quantum/rgblight.c **** 
 635:quantum/rgblight.c **** #    ifdef RGBLIGHT_LED_MAP
 636:quantum/rgblight.c ****     LED_TYPE led0[RGBLED_NUM];
 637:quantum/rgblight.c ****     for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 638:quantum/rgblight.c ****         led0[i] = led[pgm_read_byte(&led_map[i])];
 639:quantum/rgblight.c ****     }
 640:quantum/rgblight.c ****     start_led = led0 + clipping_start_pos;
 641:quantum/rgblight.c **** #    else
 642:quantum/rgblight.c ****     start_led = led + clipping_start_pos;
 643:quantum/rgblight.c **** #    endif
 644:quantum/rgblight.c **** 
 645:quantum/rgblight.c **** #    ifdef RGBW
 646:quantum/rgblight.c ****     for (uint8_t i = 0; i < num_leds; i++) {
 647:quantum/rgblight.c ****         convert_rgb_to_rgbw(&start_led[i]);
 648:quantum/rgblight.c ****     }
 649:quantum/rgblight.c **** #    endif
 650:quantum/rgblight.c ****     ws2812_setleds(start_led, num_leds);
 651:quantum/rgblight.c **** }
 652:quantum/rgblight.c **** #endif
 653:quantum/rgblight.c **** 
 654:quantum/rgblight.c **** #ifdef RGBLIGHT_SPLIT
 655:quantum/rgblight.c **** /* for split keyboard master side */
 656:quantum/rgblight.c **** uint8_t rgblight_get_change_flags(void) { return rgblight_status.change_flags; }
 657:quantum/rgblight.c **** 
 658:quantum/rgblight.c **** void rgblight_clear_change_flags(void) { rgblight_status.change_flags = 0; }
 659:quantum/rgblight.c **** 
 660:quantum/rgblight.c **** void rgblight_get_syncinfo(rgblight_syncinfo_t *syncinfo) {
 661:quantum/rgblight.c ****     syncinfo->config = rgblight_config;
 662:quantum/rgblight.c ****     syncinfo->status = rgblight_status;
 663:quantum/rgblight.c **** }
 664:quantum/rgblight.c **** 
 665:quantum/rgblight.c **** /* for split keyboard slave side */
 666:quantum/rgblight.c **** void rgblight_update_sync(rgblight_syncinfo_t *syncinfo, bool write_to_eeprom) {
 667:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_MODE) {
 668:quantum/rgblight.c ****         if (syncinfo->config.enable) {
 669:quantum/rgblight.c ****             rgblight_config.enable = 1;  // == rgblight_enable_noeeprom();
 670:quantum/rgblight.c ****             rgblight_mode_eeprom_helper(syncinfo->config.mode, write_to_eeprom);
 671:quantum/rgblight.c ****         } else {
 672:quantum/rgblight.c ****             rgblight_disable_noeeprom();
 673:quantum/rgblight.c ****         }
 674:quantum/rgblight.c ****     }
 675:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_HSVS) {
 676:quantum/rgblight.c ****         rgblight_sethsv_eeprom_helper(syncinfo->config.hue, syncinfo->config.sat, syncinfo->config.
 677:quantum/rgblight.c ****         // rgblight_config.speed = config->speed; // NEED???
 678:quantum/rgblight.c ****     }
 679:quantum/rgblight.c **** #    ifdef RGBLIGHT_USE_TIMER
 680:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_CHANGE_TIMER) {
 681:quantum/rgblight.c ****         if (syncinfo->status.timer_enabled) {
 682:quantum/rgblight.c ****             rgblight_timer_enable();
 683:quantum/rgblight.c ****         } else {
 684:quantum/rgblight.c ****             rgblight_timer_disable();
 685:quantum/rgblight.c ****         }
 686:quantum/rgblight.c ****     }
 687:quantum/rgblight.c **** #        ifndef RGBLIGHT_SPLIT_NO_ANIMATION_SYNC
 688:quantum/rgblight.c ****     if (syncinfo->status.change_flags & RGBLIGHT_STATUS_ANIMATION_TICK) {
 689:quantum/rgblight.c ****         animation_status.restart = true;
 690:quantum/rgblight.c ****     }
 691:quantum/rgblight.c **** #        endif /* RGBLIGHT_SPLIT_NO_ANIMATION_SYNC */
 692:quantum/rgblight.c **** #    endif     /* RGBLIGHT_USE_TIMER */
 693:quantum/rgblight.c **** }
 694:quantum/rgblight.c **** #endif /* RGBLIGHT_SPLIT */
 695:quantum/rgblight.c **** 
 696:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 697:quantum/rgblight.c **** 
 698:quantum/rgblight.c **** typedef void (*effect_func_t)(animation_status_t *anim);
 699:quantum/rgblight.c **** 
 700:quantum/rgblight.c **** // Animation timer -- use system timer (AVR Timer0)
 701:quantum/rgblight.c **** void rgblight_timer_init(void) {
 702:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 703:quantum/rgblight.c ****     // static uint8_t rgblight_timer_is_init = 0;
 704:quantum/rgblight.c ****     // if (rgblight_timer_is_init) {
 705:quantum/rgblight.c ****     //   return;
 706:quantum/rgblight.c ****     // }
 707:quantum/rgblight.c ****     // rgblight_timer_is_init = 1;
 708:quantum/rgblight.c ****     // /* Timer 3 setup */
 709:quantum/rgblight.c ****     // TCCR3B = _BV(WGM32) // CTC mode OCR3A as TOP
 710:quantum/rgblight.c ****     //       | _BV(CS30); // Clock selelct: clk/1
 711:quantum/rgblight.c ****     // /* Set TOP value */
 712:quantum/rgblight.c ****     // uint8_t sreg = SREG;
 713:quantum/rgblight.c ****     // cli();
 714:quantum/rgblight.c ****     // OCR3AH = (RGBLED_TIMER_TOP >> 8) & 0xff;
 715:quantum/rgblight.c ****     // OCR3AL = RGBLED_TIMER_TOP & 0xff;
 716:quantum/rgblight.c ****     // SREG = sreg;
 717:quantum/rgblight.c **** 
 718:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 719:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 720:quantum/rgblight.c **** }
 721:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 722:quantum/rgblight.c ****     if (!is_static_effect(rgblight_config.mode)) {
 723:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 724:quantum/rgblight.c ****     }
 725:quantum/rgblight.c ****     animation_status.last_timer = timer_read();
 726:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 727:quantum/rgblight.c ****     dprintf("rgblight timer enabled.\n");
 728:quantum/rgblight.c **** }
 729:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 730:quantum/rgblight.c ****     rgblight_status.timer_enabled = false;
 731:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 732:quantum/rgblight.c ****     dprintf("rgblight timer disable.\n");
 733:quantum/rgblight.c **** }
 734:quantum/rgblight.c **** void rgblight_timer_toggle(void) {
 735:quantum/rgblight.c ****     dprintf("rgblight timer toggle.\n");
 736:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 737:quantum/rgblight.c ****         rgblight_timer_disable();
 738:quantum/rgblight.c ****     } else {
 739:quantum/rgblight.c ****         rgblight_timer_enable();
 740:quantum/rgblight.c ****     }
 741:quantum/rgblight.c **** }
 742:quantum/rgblight.c **** 
 743:quantum/rgblight.c **** void rgblight_show_solid_color(uint8_t r, uint8_t g, uint8_t b) {
 744:quantum/rgblight.c ****     rgblight_enable();
 745:quantum/rgblight.c ****     rgblight_mode(RGBLIGHT_MODE_STATIC_LIGHT);
 746:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 747:quantum/rgblight.c **** }
 748:quantum/rgblight.c **** 
 749:quantum/rgblight.c **** static void rgblight_effect_dummy(animation_status_t *anim) {
  16               		.loc 1 749 61 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 750:quantum/rgblight.c ****     // do nothing
 751:quantum/rgblight.c ****     /********
 752:quantum/rgblight.c ****     dprintf("rgblight_task() what happened?\n");
 753:quantum/rgblight.c ****     dprintf("is_static_effect %d\n", is_static_effect(rgblight_config.mode));
 754:quantum/rgblight.c ****     dprintf("mode = %d, base_mode = %d, timer_enabled %d, ",
 755:quantum/rgblight.c ****             rgblight_config.mode, rgblight_status.base_mode,
 756:quantum/rgblight.c ****             rgblight_status.timer_enabled);
 757:quantum/rgblight.c ****     dprintf("last_timer = %d\n",anim->last_timer);
 758:quantum/rgblight.c ****     **/
 759:quantum/rgblight.c **** }
  22               		.loc 1 759 1 view .LVU1
  23               	/* epilogue start */
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE161:
  28               		.section	.text.rgblight_set_clipping_range,"ax",@progbits
  29               	.global	rgblight_set_clipping_range
  31               	rgblight_set_clipping_range:
  32               	.LVL1:
  33               	.LFB82:
 106:quantum/rgblight.c ****     clipping_start_pos = start_pos;
  34               		.loc 1 106 71 view -0
  35               		.cfi_startproc
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 0 */
  39               	.L__stack_usage = 0
 107:quantum/rgblight.c ****     clipping_num_leds  = num_leds;
  40               		.loc 1 107 5 view .LVU3
 107:quantum/rgblight.c ****     clipping_num_leds  = num_leds;
  41               		.loc 1 107 24 is_stmt 0 view .LVU4
  42 0000 8093 0000 		sts clipping_start_pos,r24
 108:quantum/rgblight.c **** }
  43               		.loc 1 108 5 is_stmt 1 view .LVU5
 108:quantum/rgblight.c **** }
  44               		.loc 1 108 24 is_stmt 0 view .LVU6
  45 0004 6093 0000 		sts clipping_num_leds,r22
  46               	/* epilogue start */
 109:quantum/rgblight.c **** 
  47               		.loc 1 109 1 view .LVU7
  48 0008 0895      		ret
  49               		.cfi_endproc
  50               	.LFE82:
  52               		.section	.text.rgblight_set_effect_range,"ax",@progbits
  53               	.global	rgblight_set_effect_range
  55               	rgblight_set_effect_range:
  56               	.LVL2:
  57               	.LFB83:
 111:quantum/rgblight.c ****     if (start_pos >= RGBLED_NUM) return;
  58               		.loc 1 111 69 is_stmt 1 view -0
  59               		.cfi_startproc
  60               	/* prologue: function */
  61               	/* frame size = 0 */
  62               	/* stack size = 0 */
  63               	.L__stack_usage = 0
 112:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
  64               		.loc 1 112 5 view .LVU9
 112:quantum/rgblight.c ****     if (start_pos + num_leds > RGBLED_NUM) return;
  65               		.loc 1 112 8 is_stmt 0 view .LVU10
  66 0000 8830      		cpi r24,lo8(8)
  67 0002 00F4      		brsh .L3
 113:quantum/rgblight.c ****     effect_start_pos = start_pos;
  68               		.loc 1 113 5 is_stmt 1 view .LVU11
 113:quantum/rgblight.c ****     effect_start_pos = start_pos;
  69               		.loc 1 113 19 is_stmt 0 view .LVU12
  70 0004 482F      		mov r20,r24
  71 0006 460F      		add r20,r22
  72 0008 5527      		clr r21
  73 000a 551F      		rol r21
 113:quantum/rgblight.c ****     effect_start_pos = start_pos;
  74               		.loc 1 113 8 view .LVU13
  75 000c 4930      		cpi r20,9
  76 000e 5105      		cpc r21,__zero_reg__
  77 0010 04F4      		brge .L3
 114:quantum/rgblight.c ****     effect_end_pos   = start_pos + num_leds;
  78               		.loc 1 114 5 is_stmt 1 view .LVU14
 114:quantum/rgblight.c ****     effect_end_pos   = start_pos + num_leds;
  79               		.loc 1 114 22 is_stmt 0 view .LVU15
  80 0012 8093 0000 		sts effect_start_pos,r24
 115:quantum/rgblight.c ****     effect_num_leds  = num_leds;
  81               		.loc 1 115 5 is_stmt 1 view .LVU16
 115:quantum/rgblight.c ****     effect_num_leds  = num_leds;
  82               		.loc 1 115 34 is_stmt 0 view .LVU17
  83 0016 860F      		add r24,r22
  84               	.LVL3:
 115:quantum/rgblight.c ****     effect_num_leds  = num_leds;
  85               		.loc 1 115 22 view .LVU18
  86 0018 8093 0000 		sts effect_end_pos,r24
 116:quantum/rgblight.c **** }
  87               		.loc 1 116 5 is_stmt 1 view .LVU19
 116:quantum/rgblight.c **** }
  88               		.loc 1 116 22 is_stmt 0 view .LVU20
  89 001c 6093 0000 		sts effect_num_leds,r22
  90               	.LVL4:
  91               	.L3:
  92               	/* epilogue start */
 117:quantum/rgblight.c **** 
  93               		.loc 1 117 1 view .LVU21
  94 0020 0895      		ret
  95               		.cfi_endproc
  96               	.LFE83:
  98               		.section	.text.sethsv_raw,"ax",@progbits
  99               	.global	sethsv_raw
 101               	sethsv_raw:
 102               	.LVL5:
 103               	.LFB84:
 119:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 104               		.loc 1 119 72 is_stmt 1 view -0
 105               		.cfi_startproc
 119:quantum/rgblight.c ****     HSV hsv = {hue, sat, val};
 106               		.loc 1 119 72 is_stmt 0 view .LVU23
 107 0000 CF93      		push r28
 108               	.LCFI0:
 109               		.cfi_def_cfa_offset 3
 110               		.cfi_offset 28, -2
 111 0002 DF93      		push r29
 112               	.LCFI1:
 113               		.cfi_def_cfa_offset 4
 114               		.cfi_offset 29, -3
 115               	/* prologue: function */
 116               	/* frame size = 0 */
 117               	/* stack size = 2 */
 118               	.L__stack_usage = 2
 119 0004 762F      		mov r23,r22
 120 0006 E901      		movw r28,r18
 120:quantum/rgblight.c ****     RGB rgb = hsv_to_rgb(hsv);
 121               		.loc 1 120 5 is_stmt 1 view .LVU24
 121:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 122               		.loc 1 121 5 view .LVU25
 121:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 123               		.loc 1 121 15 is_stmt 0 view .LVU26
 124 0008 682F      		mov r22,r24
 125               	.LVL6:
 121:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 126               		.loc 1 121 15 view .LVU27
 127 000a 842F      		mov r24,r20
 128               	.LVL7:
 121:quantum/rgblight.c ****     setrgb(rgb.r, rgb.g, rgb.b, led1);
 129               		.loc 1 121 15 view .LVU28
 130 000c 0E94 0000 		call hsv_to_rgb
 131               	.LVL8:
 122:quantum/rgblight.c **** }
 132               		.loc 1 122 5 is_stmt 1 view .LVU29
 133               	.LBB20:
 134               	.LBI20:
 127:quantum/rgblight.c ****     (*led1).r = r;
 135               		.loc 1 127 6 view .LVU30
 136               	.LBB21:
 128:quantum/rgblight.c ****     (*led1).g = g;
 137               		.loc 1 128 5 view .LVU31
 128:quantum/rgblight.c ****     (*led1).g = g;
 138               		.loc 1 128 15 is_stmt 0 view .LVU32
 139 0010 7983      		std Y+1,r23
 129:quantum/rgblight.c ****     (*led1).b = b;
 140               		.loc 1 129 5 is_stmt 1 view .LVU33
 129:quantum/rgblight.c ****     (*led1).b = b;
 141               		.loc 1 129 15 is_stmt 0 view .LVU34
 142 0012 6883      		st Y,r22
 130:quantum/rgblight.c **** #ifdef RGBW
 143               		.loc 1 130 5 is_stmt 1 view .LVU35
 130:quantum/rgblight.c **** #ifdef RGBW
 144               		.loc 1 130 15 is_stmt 0 view .LVU36
 145 0014 8A83      		std Y+2,r24
 146               	.LVL9:
 147               	/* epilogue start */
 130:quantum/rgblight.c **** #ifdef RGBW
 148               		.loc 1 130 15 view .LVU37
 149               	.LBE21:
 150               	.LBE20:
 123:quantum/rgblight.c **** 
 151               		.loc 1 123 1 view .LVU38
 152 0016 DF91      		pop r29
 153 0018 CF91      		pop r28
 154               	.LVL10:
 123:quantum/rgblight.c **** 
 155               		.loc 1 123 1 view .LVU39
 156 001a 0895      		ret
 157               		.cfi_endproc
 158               	.LFE84:
 160               		.section	.text.sethsv,"ax",@progbits
 161               	.global	sethsv
 163               	sethsv:
 164               	.LVL11:
 165               	.LFB85:
 125:quantum/rgblight.c **** 
 166               		.loc 1 125 68 is_stmt 1 view -0
 167               		.cfi_startproc
 168               	/* prologue: function */
 169               	/* frame size = 0 */
 170               	/* stack size = 0 */
 171               	.L__stack_usage = 0
 125:quantum/rgblight.c **** 
 172               		.loc 1 125 70 view .LVU41
 173 0000 0C94 0000 		jmp sethsv_raw
 174               	.LVL12:
 125:quantum/rgblight.c **** 
 175               		.loc 1 125 70 is_stmt 0 view .LVU42
 176               		.cfi_endproc
 177               	.LFE85:
 179               		.section	.text.setrgb,"ax",@progbits
 180               	.global	setrgb
 182               	setrgb:
 183               	.LVL13:
 184               	.LFB86:
 127:quantum/rgblight.c ****     (*led1).r = r;
 185               		.loc 1 127 62 is_stmt 1 view -0
 186               		.cfi_startproc
 187               	/* prologue: function */
 188               	/* frame size = 0 */
 189               	/* stack size = 0 */
 190               	.L__stack_usage = 0
 127:quantum/rgblight.c ****     (*led1).r = r;
 191               		.loc 1 127 62 is_stmt 0 view .LVU44
 192 0000 F901      		movw r30,r18
 128:quantum/rgblight.c ****     (*led1).g = g;
 193               		.loc 1 128 5 is_stmt 1 view .LVU45
 128:quantum/rgblight.c ****     (*led1).g = g;
 194               		.loc 1 128 15 is_stmt 0 view .LVU46
 195 0002 8183      		std Z+1,r24
 129:quantum/rgblight.c ****     (*led1).b = b;
 196               		.loc 1 129 5 is_stmt 1 view .LVU47
 129:quantum/rgblight.c ****     (*led1).b = b;
 197               		.loc 1 129 15 is_stmt 0 view .LVU48
 198 0004 6083      		st Z,r22
 130:quantum/rgblight.c **** #ifdef RGBW
 199               		.loc 1 130 5 is_stmt 1 view .LVU49
 130:quantum/rgblight.c **** #ifdef RGBW
 200               		.loc 1 130 15 is_stmt 0 view .LVU50
 201 0006 4283      		std Z+2,r20
 202               	/* epilogue start */
 134:quantum/rgblight.c **** 
 203               		.loc 1 134 1 view .LVU51
 204 0008 0895      		ret
 205               		.cfi_endproc
 206               	.LFE86:
 208               		.section	.text.rgblight_check_config,"ax",@progbits
 209               	.global	rgblight_check_config
 211               	rgblight_check_config:
 212               	.LFB87:
 136:quantum/rgblight.c ****     /* Add some out of bound checks for RGB light config */
 213               		.loc 1 136 34 is_stmt 1 view -0
 214               		.cfi_startproc
 215               	/* prologue: function */
 216               	/* frame size = 0 */
 217               	/* stack size = 0 */
 218               	.L__stack_usage = 0
 139:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 219               		.loc 1 139 5 view .LVU53
 139:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 220               		.loc 1 139 30 is_stmt 0 view .LVU54
 221 0000 8091 0000 		lds r24,rgblight_config
 222 0004 982F      		mov r25,r24
 223 0006 9E7F      		andi r25,lo8(-2)
 139:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 224               		.loc 1 139 8 view .LVU55
 225 0008 01F4      		brne .L9
 140:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 226               		.loc 1 140 9 is_stmt 1 view .LVU56
 140:quantum/rgblight.c ****     } else if (rgblight_config.mode > RGBLIGHT_MODES) {
 227               		.loc 1 140 30 is_stmt 0 view .LVU57
 228 000a 8170      		andi r24,lo8(1)
 229 000c 8260      		ori r24,lo8(2)
 230               	.L11:
 142:quantum/rgblight.c ****     }
 231               		.loc 1 142 30 view .LVU58
 232 000e 8093 0000 		sts rgblight_config,r24
 145:quantum/rgblight.c ****         rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 233               		.loc 1 145 5 is_stmt 1 view .LVU59
 234               	.L8:
 235               	/* epilogue start */
 148:quantum/rgblight.c **** 
 236               		.loc 1 148 1 is_stmt 0 view .LVU60
 237 0012 0895      		ret
 238               	.L9:
 141:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 239               		.loc 1 141 12 is_stmt 1 view .LVU61
 141:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 240               		.loc 1 141 15 is_stmt 0 view .LVU62
 241 0014 8A30      		cpi r24,lo8(10)
 242 0016 00F0      		brlo .L8
 142:quantum/rgblight.c ****     }
 243               		.loc 1 142 9 is_stmt 1 view .LVU63
 142:quantum/rgblight.c ****     }
 244               		.loc 1 142 30 is_stmt 0 view .LVU64
 245 0018 8170      		andi r24,lo8(1)
 246 001a 8860      		ori r24,lo8(8)
 247 001c 00C0      		rjmp .L11
 248               		.cfi_endproc
 249               	.LFE87:
 251               		.section	.text.eeconfig_read_rgblight,"ax",@progbits
 252               	.global	eeconfig_read_rgblight
 254               	eeconfig_read_rgblight:
 255               	.LFB88:
 150:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 256               		.loc 1 150 39 is_stmt 1 view -0
 257               		.cfi_startproc
 258               	/* prologue: function */
 259               	/* frame size = 0 */
 260               	/* stack size = 0 */
 261               	.L__stack_usage = 0
 152:quantum/rgblight.c **** #else
 262               		.loc 1 152 5 view .LVU66
 152:quantum/rgblight.c **** #else
 263               		.loc 1 152 12 is_stmt 0 view .LVU67
 264 0000 88E0      		ldi r24,lo8(8)
 265 0002 90E0      		ldi r25,0
 266 0004 0C94 0000 		jmp eeprom_read_dword
 267               	.LVL14:
 268               		.cfi_endproc
 269               	.LFE88:
 271               		.section	.text.eeconfig_update_rgblight,"ax",@progbits
 272               	.global	eeconfig_update_rgblight
 274               	eeconfig_update_rgblight:
 275               	.LVL15:
 276               	.LFB89:
 158:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 277               		.loc 1 158 45 is_stmt 1 view -0
 278               		.cfi_startproc
 158:quantum/rgblight.c **** #ifdef EEPROM_ENABLE
 279               		.loc 1 158 45 is_stmt 0 view .LVU69
 280 0000 CF92      		push r12
 281               	.LCFI2:
 282               		.cfi_def_cfa_offset 3
 283               		.cfi_offset 12, -2
 284 0002 DF92      		push r13
 285               	.LCFI3:
 286               		.cfi_def_cfa_offset 4
 287               		.cfi_offset 13, -3
 288 0004 EF92      		push r14
 289               	.LCFI4:
 290               		.cfi_def_cfa_offset 5
 291               		.cfi_offset 14, -4
 292 0006 FF92      		push r15
 293               	.LCFI5:
 294               		.cfi_def_cfa_offset 6
 295               		.cfi_offset 15, -5
 296               	/* prologue: function */
 297               	/* frame size = 0 */
 298               	/* stack size = 4 */
 299               	.L__stack_usage = 4
 300 0008 6B01      		movw r12,r22
 301 000a 7C01      		movw r14,r24
 160:quantum/rgblight.c ****     eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 302               		.loc 1 160 5 is_stmt 1 view .LVU70
 303 000c 0E94 0000 		call rgblight_check_config
 304               	.LVL16:
 161:quantum/rgblight.c **** #endif
 305               		.loc 1 161 5 view .LVU71
 306 0010 B701      		movw r22,r14
 307 0012 A601      		movw r20,r12
 308 0014 88E0      		ldi r24,lo8(8)
 309 0016 90E0      		ldi r25,0
 310               	/* epilogue start */
 163:quantum/rgblight.c **** 
 311               		.loc 1 163 1 is_stmt 0 view .LVU72
 312 0018 FF90      		pop r15
 313 001a EF90      		pop r14
 314 001c DF90      		pop r13
 315 001e CF90      		pop r12
 161:quantum/rgblight.c **** #endif
 316               		.loc 1 161 5 view .LVU73
 317 0020 0C94 0000 		jmp eeprom_update_dword
 318               	.LVL17:
 319               		.cfi_endproc
 320               	.LFE89:
 322               		.section	.text.eeconfig_update_rgblight_current,"ax",@progbits
 323               	.global	eeconfig_update_rgblight_current
 325               	eeconfig_update_rgblight_current:
 326               	.LFB90:
 165:quantum/rgblight.c **** 
 327               		.loc 1 165 45 is_stmt 1 view -0
 328               		.cfi_startproc
 329               	/* prologue: function */
 330               	/* frame size = 0 */
 331               	/* stack size = 0 */
 332               	.L__stack_usage = 0
 165:quantum/rgblight.c **** 
 333               		.loc 1 165 47 view .LVU75
 334 0000 6091 0000 		lds r22,rgblight_config
 335 0004 7091 0000 		lds r23,rgblight_config+1
 336 0008 8091 0000 		lds r24,rgblight_config+2
 337 000c 9091 0000 		lds r25,rgblight_config+3
 338 0010 0C94 0000 		jmp eeconfig_update_rgblight
 339               	.LVL18:
 340               		.cfi_endproc
 341               	.LFE90:
 343               		.section	.text.eeconfig_update_rgblight_default,"ax",@progbits
 344               	.global	eeconfig_update_rgblight_default
 346               	eeconfig_update_rgblight_default:
 347               	.LFB91:
 167:quantum/rgblight.c ****     rgblight_config.enable = 1;
 348               		.loc 1 167 45 view -0
 349               		.cfi_startproc
 350               	/* prologue: function */
 351               	/* frame size = 0 */
 352               	/* stack size = 0 */
 353               	.L__stack_usage = 0
 168:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_MODE_STATIC_LIGHT;
 354               		.loc 1 168 5 view .LVU77
 169:quantum/rgblight.c ****     rgblight_config.hue    = 0;
 355               		.loc 1 169 5 view .LVU78
 170:quantum/rgblight.c ****     rgblight_config.sat    = UINT8_MAX;
 356               		.loc 1 170 5 view .LVU79
 171:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_LIMIT_VAL;
 357               		.loc 1 171 5 view .LVU80
 172:quantum/rgblight.c ****     rgblight_config.speed  = 0;
 358               		.loc 1 172 5 view .LVU81
 173:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 359               		.loc 1 173 5 view .LVU82
 168:quantum/rgblight.c ****     rgblight_config.mode   = RGBLIGHT_MODE_STATIC_LIGHT;
 360               		.loc 1 168 28 is_stmt 0 view .LVU83
 361 0000 E0E0      		ldi r30,lo8(rgblight_config)
 362 0002 F0E0      		ldi r31,hi8(rgblight_config)
 363 0004 83E0      		ldi r24,lo8(3)
 364 0006 8083      		st Z,r24
 170:quantum/rgblight.c ****     rgblight_config.sat    = UINT8_MAX;
 365               		.loc 1 170 28 view .LVU84
 366 0008 1182      		std Z+1,__zero_reg__
 171:quantum/rgblight.c ****     rgblight_config.val    = RGBLIGHT_LIMIT_VAL;
 367               		.loc 1 171 28 view .LVU85
 368 000a 8FEF      		ldi r24,lo8(-1)
 369 000c 8283      		std Z+2,r24
 172:quantum/rgblight.c ****     rgblight_config.speed  = 0;
 370               		.loc 1 172 28 view .LVU86
 371 000e 8383      		std Z+3,r24
 173:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 372               		.loc 1 173 28 view .LVU87
 373 0010 1482      		std Z+4,__zero_reg__
 174:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 374               		.loc 1 174 39 is_stmt 1 view .LVU88
 175:quantum/rgblight.c **** }
 375               		.loc 1 175 5 view .LVU89
 376 0012 6081      		ld r22,Z
 377 0014 7181      		ldd r23,Z+1
 378 0016 8281      		ldd r24,Z+2
 379 0018 9381      		ldd r25,Z+3
 380 001a 0C94 0000 		jmp eeconfig_update_rgblight
 381               	.LVL19:
 382               		.cfi_endproc
 383               	.LFE91:
 385               		.section	.text.eeconfig_debug_rgblight,"ax",@progbits
 386               	.global	eeconfig_debug_rgblight
 388               	eeconfig_debug_rgblight:
 389               	.LFB92:
 178:quantum/rgblight.c ****     dprintf("rgblight_config EEPROM:\n");
 390               		.loc 1 178 36 view -0
 391               		.cfi_startproc
 392               	/* prologue: function */
 393               	/* frame size = 0 */
 394               	/* stack size = 0 */
 395               	.L__stack_usage = 0
 179:quantum/rgblight.c ****     dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 396               		.loc 1 179 41 view .LVU91
 180:quantum/rgblight.c ****     dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 397               		.loc 1 180 69 view .LVU92
 181:quantum/rgblight.c ****     dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 398               		.loc 1 181 65 view .LVU93
 182:quantum/rgblight.c ****     dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 399               		.loc 1 182 63 view .LVU94
 183:quantum/rgblight.c ****     dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 400               		.loc 1 183 63 view .LVU95
 184:quantum/rgblight.c ****     dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 401               		.loc 1 184 63 view .LVU96
 185:quantum/rgblight.c **** }
 402               		.loc 1 185 67 view .LVU97
 403               	/* epilogue start */
 186:quantum/rgblight.c **** 
 404               		.loc 1 186 1 is_stmt 0 view .LVU98
 405 0000 0895      		ret
 406               		.cfi_endproc
 407               	.LFE92:
 409               		.section	.text.rgblight_read_dword,"ax",@progbits
 410               	.global	rgblight_read_dword
 412               	rgblight_read_dword:
 413               	.LFB94:
 225:quantum/rgblight.c **** 
 414               		.loc 1 225 36 is_stmt 1 view -0
 415               		.cfi_startproc
 416               	/* prologue: function */
 417               	/* frame size = 0 */
 418               	/* stack size = 0 */
 419               	.L__stack_usage = 0
 225:quantum/rgblight.c **** 
 420               		.loc 1 225 38 view .LVU100
 225:quantum/rgblight.c **** 
 421               		.loc 1 225 60 is_stmt 0 view .LVU101
 422 0000 6091 0000 		lds r22,rgblight_config
 423 0004 7091 0000 		lds r23,rgblight_config+1
 424 0008 8091 0000 		lds r24,rgblight_config+2
 425 000c 9091 0000 		lds r25,rgblight_config+3
 426               	/* epilogue start */
 225:quantum/rgblight.c **** 
 427               		.loc 1 225 1 view .LVU102
 428 0010 0895      		ret
 429               		.cfi_endproc
 430               	.LFE94:
 432               		.section	.text.rgblight_get_mode,"ax",@progbits
 433               	.global	rgblight_get_mode
 435               	rgblight_get_mode:
 436               	.LFB104:
 276:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 437               		.loc 1 276 33 is_stmt 1 view -0
 438               		.cfi_startproc
 439               	/* prologue: function */
 440               	/* frame size = 0 */
 441               	/* stack size = 0 */
 442               	.L__stack_usage = 0
 277:quantum/rgblight.c ****         return false;
 443               		.loc 1 277 5 view .LVU104
 277:quantum/rgblight.c ****         return false;
 444               		.loc 1 277 25 is_stmt 0 view .LVU105
 445 0000 8091 0000 		lds r24,rgblight_config
 277:quantum/rgblight.c ****         return false;
 446               		.loc 1 277 8 view .LVU106
 447 0004 80FF      		sbrs r24,0
 448 0006 00C0      		rjmp .L20
 281:quantum/rgblight.c **** }
 449               		.loc 1 281 5 is_stmt 1 view .LVU107
 281:quantum/rgblight.c **** }
 450               		.loc 1 281 27 is_stmt 0 view .LVU108
 451 0008 8695      		lsr r24
 452 000a 0895      		ret
 453               	.L20:
 278:quantum/rgblight.c ****     }
 454               		.loc 1 278 16 view .LVU109
 455 000c 80E0      		ldi r24,0
 456               	/* epilogue start */
 282:quantum/rgblight.c **** 
 457               		.loc 1 282 1 view .LVU110
 458 000e 0895      		ret
 459               		.cfi_endproc
 460               	.LFE104:
 462               		.section	.text.rgblight_increase_speed,"ax",@progbits
 463               	.global	rgblight_increase_speed
 465               	rgblight_increase_speed:
 466               	.LFB132:
 412:quantum/rgblight.c ****     if (rgblight_config.speed < 3) rgblight_config.speed++;
 467               		.loc 1 412 36 is_stmt 1 view -0
 468               		.cfi_startproc
 469               	/* prologue: function */
 470               	/* frame size = 0 */
 471               	/* stack size = 0 */
 472               	.L__stack_usage = 0
 413:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 473               		.loc 1 413 5 view .LVU112
 413:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 474               		.loc 1 413 24 is_stmt 0 view .LVU113
 475 0000 8091 0000 		lds r24,rgblight_config+4
 413:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 476               		.loc 1 413 8 view .LVU114
 477 0004 8330      		cpi r24,lo8(3)
 478 0006 00F4      		brsh .L22
 413:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 479               		.loc 1 413 36 is_stmt 1 discriminator 1 view .LVU115
 413:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED?
 480               		.loc 1 413 57 is_stmt 0 discriminator 1 view .LVU116
 481 0008 8F5F      		subi r24,lo8(-(1))
 482 000a 8093 0000 		sts rgblight_config+4,r24
 483               	.L22:
 415:quantum/rgblight.c **** }
 484               		.loc 1 415 5 is_stmt 1 view .LVU117
 485 000e 6091 0000 		lds r22,rgblight_config
 486 0012 7091 0000 		lds r23,rgblight_config+1
 487 0016 8091 0000 		lds r24,rgblight_config+2
 488 001a 9091 0000 		lds r25,rgblight_config+3
 489 001e 0C94 0000 		jmp eeconfig_update_rgblight
 490               	.LVL20:
 491               		.cfi_endproc
 492               	.LFE132:
 494               		.section	.text.rgblight_decrease_speed,"ax",@progbits
 495               	.global	rgblight_decrease_speed
 497               	rgblight_decrease_speed:
 498               	.LFB133:
 418:quantum/rgblight.c ****     if (rgblight_config.speed > 0) rgblight_config.speed--;
 499               		.loc 1 418 36 view -0
 500               		.cfi_startproc
 501               	/* prologue: function */
 502               	/* frame size = 0 */
 503               	/* stack size = 0 */
 504               	.L__stack_usage = 0
 419:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 505               		.loc 1 419 5 view .LVU119
 419:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 506               		.loc 1 419 24 is_stmt 0 view .LVU120
 507 0000 8091 0000 		lds r24,rgblight_config+4
 419:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 508               		.loc 1 419 8 view .LVU121
 509 0004 8823      		tst r24
 510 0006 01F0      		breq .L24
 419:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 511               		.loc 1 419 36 is_stmt 1 discriminator 1 view .LVU122
 419:quantum/rgblight.c ****     // RGBLIGHT_SPLIT_SET_CHANGE_HSVS; // NEED??
 512               		.loc 1 419 57 is_stmt 0 discriminator 1 view .LVU123
 513 0008 8150      		subi r24,lo8(-(-1))
 514 000a 8093 0000 		sts rgblight_config+4,r24
 515               	.L24:
 421:quantum/rgblight.c **** }
 516               		.loc 1 421 5 is_stmt 1 view .LVU124
 517 000e 6091 0000 		lds r22,rgblight_config
 518 0012 7091 0000 		lds r23,rgblight_config+1
 519 0016 8091 0000 		lds r24,rgblight_config+2
 520 001a 9091 0000 		lds r25,rgblight_config+3
 521 001e 0C94 0000 		jmp eeconfig_update_rgblight
 522               	.LVL21:
 523               		.cfi_endproc
 524               	.LFE133:
 526               		.section	.text.rgblight_get_speed,"ax",@progbits
 527               	.global	rgblight_get_speed
 529               	rgblight_get_speed:
 530               	.LFB138:
 508:quantum/rgblight.c **** 
 531               		.loc 1 508 34 view -0
 532               		.cfi_startproc
 533               	/* prologue: function */
 534               	/* frame size = 0 */
 535               	/* stack size = 0 */
 536               	.L__stack_usage = 0
 508:quantum/rgblight.c **** 
 537               		.loc 1 508 36 view .LVU126
 508:quantum/rgblight.c **** 
 538               		.loc 1 508 1 is_stmt 0 view .LVU127
 539 0000 8091 0000 		lds r24,rgblight_config+4
 540               	/* epilogue start */
 541 0004 0895      		ret
 542               		.cfi_endproc
 543               	.LFE138:
 545               		.section	.text.rgblight_set_speed_eeprom_helper,"ax",@progbits
 546               	.global	rgblight_set_speed_eeprom_helper
 548               	rgblight_set_speed_eeprom_helper:
 549               	.LVL22:
 550               	.LFB139:
 510:quantum/rgblight.c ****     rgblight_config.speed = speed;
 551               		.loc 1 510 76 is_stmt 1 view -0
 552               		.cfi_startproc
 553               	/* prologue: function */
 554               	/* frame size = 0 */
 555               	/* stack size = 0 */
 556               	.L__stack_usage = 0
 511:quantum/rgblight.c ****     if (write_to_eeprom) {
 557               		.loc 1 511 5 view .LVU129
 511:quantum/rgblight.c ****     if (write_to_eeprom) {
 558               		.loc 1 511 27 is_stmt 0 view .LVU130
 559 0000 8093 0000 		sts rgblight_config+4,r24
 512:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 560               		.loc 1 512 5 is_stmt 1 view .LVU131
 512:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);  // EECONFIG needs to be increased to suppor
 561               		.loc 1 512 8 is_stmt 0 view .LVU132
 562 0004 6623      		tst r22
 563 0006 01F0      		breq .L29
 513:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 564               		.loc 1 513 9 is_stmt 1 view .LVU133
 565 0008 6091 0000 		lds r22,rgblight_config
 566 000c 7091 0000 		lds r23,rgblight_config+1
 567 0010 8091 0000 		lds r24,rgblight_config+2
 568 0014 9091 0000 		lds r25,rgblight_config+3
 569               	.LVL23:
 513:quantum/rgblight.c ****         dprintf("rgblight set speed [EEPROM]: %u\n", rgblight_config.speed);
 570               		.loc 1 513 9 is_stmt 0 view .LVU134
 571 0018 0C94 0000 		jmp eeconfig_update_rgblight
 572               	.LVL24:
 573               	.L29:
 574               	/* epilogue start */
 518:quantum/rgblight.c **** 
 575               		.loc 1 518 1 view .LVU135
 576 001c 0895      		ret
 577               		.cfi_endproc
 578               	.LFE139:
 580               		.section	.text.rgblight_set_speed,"ax",@progbits
 581               	.global	rgblight_set_speed
 583               	rgblight_set_speed:
 584               	.LVL25:
 585               	.LFB140:
 520:quantum/rgblight.c **** 
 586               		.loc 1 520 40 is_stmt 1 view -0
 587               		.cfi_startproc
 588               	/* prologue: function */
 589               	/* frame size = 0 */
 590               	/* stack size = 0 */
 591               	.L__stack_usage = 0
 520:quantum/rgblight.c **** 
 592               		.loc 1 520 42 view .LVU137
 593 0000 61E0      		ldi r22,lo8(1)
 594 0002 0C94 0000 		jmp rgblight_set_speed_eeprom_helper
 595               	.LVL26:
 520:quantum/rgblight.c **** 
 596               		.loc 1 520 42 is_stmt 0 view .LVU138
 597               		.cfi_endproc
 598               	.LFE140:
 600               		.section	.text.rgblight_set_speed_noeeprom,"ax",@progbits
 601               	.global	rgblight_set_speed_noeeprom
 603               	rgblight_set_speed_noeeprom:
 604               	.LVL27:
 605               	.LFB141:
 522:quantum/rgblight.c **** 
 606               		.loc 1 522 49 is_stmt 1 view -0
 607               		.cfi_startproc
 608               	/* prologue: function */
 609               	/* frame size = 0 */
 610               	/* stack size = 0 */
 611               	.L__stack_usage = 0
 522:quantum/rgblight.c **** 
 612               		.loc 1 522 51 view .LVU140
 613 0000 60E0      		ldi r22,0
 614 0002 0C94 0000 		jmp rgblight_set_speed_eeprom_helper
 615               	.LVL28:
 522:quantum/rgblight.c **** 
 616               		.loc 1 522 51 is_stmt 0 view .LVU141
 617               		.cfi_endproc
 618               	.LFE141:
 620               		.section	.text.rgblight_get_hue,"ax",@progbits
 621               	.global	rgblight_get_hue
 623               	rgblight_get_hue:
 624               	.LFB142:
 524:quantum/rgblight.c **** 
 625               		.loc 1 524 32 is_stmt 1 view -0
 626               		.cfi_startproc
 627               	/* prologue: function */
 628               	/* frame size = 0 */
 629               	/* stack size = 0 */
 630               	.L__stack_usage = 0
 524:quantum/rgblight.c **** 
 631               		.loc 1 524 34 view .LVU143
 524:quantum/rgblight.c **** 
 632               		.loc 1 524 1 is_stmt 0 view .LVU144
 633 0000 8091 0000 		lds r24,rgblight_config+1
 634               	/* epilogue start */
 635 0004 0895      		ret
 636               		.cfi_endproc
 637               	.LFE142:
 639               		.section	.text.rgblight_get_sat,"ax",@progbits
 640               	.global	rgblight_get_sat
 642               	rgblight_get_sat:
 643               	.LFB143:
 526:quantum/rgblight.c **** 
 644               		.loc 1 526 32 is_stmt 1 view -0
 645               		.cfi_startproc
 646               	/* prologue: function */
 647               	/* frame size = 0 */
 648               	/* stack size = 0 */
 649               	.L__stack_usage = 0
 526:quantum/rgblight.c **** 
 650               		.loc 1 526 34 view .LVU146
 526:quantum/rgblight.c **** 
 651               		.loc 1 526 1 is_stmt 0 view .LVU147
 652 0000 8091 0000 		lds r24,rgblight_config+2
 653               	/* epilogue start */
 654 0004 0895      		ret
 655               		.cfi_endproc
 656               	.LFE143:
 658               		.section	.text.rgblight_get_val,"ax",@progbits
 659               	.global	rgblight_get_val
 661               	rgblight_get_val:
 662               	.LFB144:
 528:quantum/rgblight.c **** 
 663               		.loc 1 528 32 is_stmt 1 view -0
 664               		.cfi_startproc
 665               	/* prologue: function */
 666               	/* frame size = 0 */
 667               	/* stack size = 0 */
 668               	.L__stack_usage = 0
 528:quantum/rgblight.c **** 
 669               		.loc 1 528 34 view .LVU149
 528:quantum/rgblight.c **** 
 670               		.loc 1 528 1 is_stmt 0 view .LVU150
 671 0000 8091 0000 		lds r24,rgblight_config+3
 672               	/* epilogue start */
 673 0004 0895      		ret
 674               		.cfi_endproc
 675               	.LFE144:
 677               		.section	.text.rgblight_set,"ax",@progbits
 678               	.global	rgblight_set
 680               	rgblight_set:
 681               	.LFB155:
 620:quantum/rgblight.c ****     LED_TYPE *start_led;
 682               		.loc 1 620 25 is_stmt 1 view -0
 683               		.cfi_startproc
 684 0000 6F92      		push r6
 685               	.LCFI6:
 686               		.cfi_def_cfa_offset 3
 687               		.cfi_offset 6, -2
 688 0002 7F92      		push r7
 689               	.LCFI7:
 690               		.cfi_def_cfa_offset 4
 691               		.cfi_offset 7, -3
 692 0004 8F92      		push r8
 693               	.LCFI8:
 694               		.cfi_def_cfa_offset 5
 695               		.cfi_offset 8, -4
 696 0006 CF92      		push r12
 697               	.LCFI9:
 698               		.cfi_def_cfa_offset 6
 699               		.cfi_offset 12, -5
 700 0008 DF92      		push r13
 701               	.LCFI10:
 702               		.cfi_def_cfa_offset 7
 703               		.cfi_offset 13, -6
 704 000a EF92      		push r14
 705               	.LCFI11:
 706               		.cfi_def_cfa_offset 8
 707               		.cfi_offset 14, -7
 708 000c FF92      		push r15
 709               	.LCFI12:
 710               		.cfi_def_cfa_offset 9
 711               		.cfi_offset 15, -8
 712 000e 0F93      		push r16
 713               	.LCFI13:
 714               		.cfi_def_cfa_offset 10
 715               		.cfi_offset 16, -9
 716 0010 1F93      		push r17
 717               	.LCFI14:
 718               		.cfi_def_cfa_offset 11
 719               		.cfi_offset 17, -10
 720 0012 CF93      		push r28
 721               	.LCFI15:
 722               		.cfi_def_cfa_offset 12
 723               		.cfi_offset 28, -11
 724 0014 DF93      		push r29
 725               	.LCFI16:
 726               		.cfi_def_cfa_offset 13
 727               		.cfi_offset 29, -12
 728 0016 CDB7      		in r28,__SP_L__
 729 0018 DEB7      		in r29,__SP_H__
 730               	.LCFI17:
 731               		.cfi_def_cfa_register 28
 732 001a 6897      		sbiw r28,24
 733               	.LCFI18:
 734               		.cfi_def_cfa_offset 37
 735 001c 0FB6      		in __tmp_reg__,__SREG__
 736 001e F894      		cli
 737 0020 DEBF      		out __SP_H__,r29
 738 0022 0FBE      		out __SREG__,__tmp_reg__
 739 0024 CDBF      		out __SP_L__,r28
 740               	/* prologue: function */
 741               	/* frame size = 24 */
 742               	/* stack size = 35 */
 743               	.L__stack_usage = 35
 621:quantum/rgblight.c ****     uint16_t  num_leds = clipping_num_leds;
 744               		.loc 1 621 5 view .LVU152
 622:quantum/rgblight.c **** 
 745               		.loc 1 622 5 view .LVU153
 622:quantum/rgblight.c **** 
 746               		.loc 1 622 15 is_stmt 0 view .LVU154
 747 0026 0091 0000 		lds r16,clipping_num_leds
 748 002a 10E0      		ldi r17,0
 749               	.LVL29:
 624:quantum/rgblight.c ****         for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 750               		.loc 1 624 5 is_stmt 1 view .LVU155
 624:quantum/rgblight.c ****         for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 751               		.loc 1 624 25 is_stmt 0 view .LVU156
 752 002c 8091 0000 		lds r24,rgblight_config
 624:quantum/rgblight.c ****         for (uint8_t i = effect_start_pos; i < effect_end_pos; i++) {
 753               		.loc 1 624 8 view .LVU157
 754 0030 80FF      		sbrs r24,0
 755 0032 00C0      		rjmp .L37
 756               	.L41:
 757 0034 80E0      		ldi r24,lo8(led_map)
 758 0036 C82E      		mov r12,r24
 759 0038 80E0      		ldi r24,hi8(led_map)
 760 003a D82E      		mov r13,r24
 761 003c DE01      		movw r26,r28
 762 003e 1196      		adiw r26,1
 763 0040 7E01      		movw r14,r28
 764 0042 89E1      		ldi r24,25
 765 0044 E80E      		add r14,r24
 766 0046 F11C      		adc r15,__zero_reg__
 767 0048 9D01      		movw r18,r26
 768               	.L38:
 769               	.LVL30:
 770               	.LBB22:
 638:quantum/rgblight.c ****     }
 771               		.loc 1 638 9 is_stmt 1 discriminator 3 view .LVU158
 772               	.LBB23:
 638:quantum/rgblight.c ****     }
 773               		.loc 1 638 23 discriminator 3 view .LVU159
 638:quantum/rgblight.c ****     }
 774               		.loc 1 638 23 discriminator 3 view .LVU160
 638:quantum/rgblight.c ****     }
 775               		.loc 1 638 23 discriminator 3 view .LVU161
 776 004a F601      		movw r30,r12
 777               	/* #APP */
 778               	 ;  638 "quantum/rgblight.c" 1
 779 004c 8491      		lpm r24, Z
 780               		
 781               	 ;  0 "" 2
 782               	.LVL31:
 638:quantum/rgblight.c ****     }
 783               		.loc 1 638 23 discriminator 3 view .LVU162
 784               	/* #NOAPP */
 785               	.LBE23:
 638:quantum/rgblight.c ****     }
 786               		.loc 1 638 17 is_stmt 0 discriminator 3 view .LVU163
 787 004e 90E0      		ldi r25,0
 788 0050 63E0      		ldi r22,lo8(3)
 789 0052 70E0      		ldi r23,0
 790 0054 0E94 0000 		call __mulhi3
 791               	.LVL32:
 638:quantum/rgblight.c ****     }
 792               		.loc 1 638 17 discriminator 3 view .LVU164
 793 0058 8050      		subi r24,lo8(-(led))
 794 005a 9040      		sbci r25,hi8(-(led))
 795 005c FC01      		movw r30,r24
 796 005e 6080      		ld  r6,Z
 797 0060 7180      		ldd r7,Z+1
 798 0062 8280      		ldd r8,Z+2
 799 0064 6D92      		st X+,r6
 800 0066 7D92      		st X+,r7
 801 0068 8D92      		st X+,r8
 802               	.LVL33:
 638:quantum/rgblight.c ****     }
 803               		.loc 1 638 17 discriminator 3 view .LVU165
 804 006a FFEF      		ldi r31,-1
 805 006c CF1A      		sub r12,r31
 806 006e DF0A      		sbc r13,r31
 807               	.LVL34:
 637:quantum/rgblight.c ****         led0[i] = led[pgm_read_byte(&led_map[i])];
 808               		.loc 1 637 5 discriminator 3 view .LVU166
 809 0070 AE15      		cp r26,r14
 810 0072 BF05      		cpc r27,r15
 811 0074 01F4      		brne .L38
 812               	.LBE22:
 640:quantum/rgblight.c **** #    else
 813               		.loc 1 640 5 is_stmt 1 view .LVU167
 650:quantum/rgblight.c **** }
 814               		.loc 1 650 5 view .LVU168
 640:quantum/rgblight.c **** #    else
 815               		.loc 1 640 22 is_stmt 0 view .LVU169
 816 0076 8091 0000 		lds r24,clipping_start_pos
 817 007a 90E0      		ldi r25,0
 818 007c 63E0      		ldi r22,lo8(3)
 819 007e 70E0      		ldi r23,0
 820 0080 0E94 0000 		call __mulhi3
 650:quantum/rgblight.c **** }
 821               		.loc 1 650 5 view .LVU170
 822 0084 B801      		movw r22,r16
 823 0086 820F      		add r24,r18
 824 0088 931F      		adc r25,r19
 825 008a 0E94 0000 		call ws2812_setleds
 826               	.LVL35:
 827               	/* epilogue start */
 651:quantum/rgblight.c **** #endif
 828               		.loc 1 651 1 view .LVU171
 829 008e 6896      		adiw r28,24
 830 0090 0FB6      		in __tmp_reg__,__SREG__
 831 0092 F894      		cli
 832 0094 DEBF      		out __SP_H__,r29
 833 0096 0FBE      		out __SREG__,__tmp_reg__
 834 0098 CDBF      		out __SP_L__,r28
 835 009a DF91      		pop r29
 836 009c CF91      		pop r28
 837 009e 1F91      		pop r17
 838 00a0 0F91      		pop r16
 839               	.LVL36:
 651:quantum/rgblight.c **** #endif
 840               		.loc 1 651 1 view .LVU172
 841 00a2 FF90      		pop r15
 842 00a4 EF90      		pop r14
 843 00a6 DF90      		pop r13
 844 00a8 CF90      		pop r12
 845               	.LVL37:
 651:quantum/rgblight.c **** #endif
 846               		.loc 1 651 1 view .LVU173
 847 00aa 8F90      		pop r8
 848 00ac 7F90      		pop r7
 849 00ae 6F90      		pop r6
 850 00b0 0895      		ret
 851               	.LVL38:
 852               	.L37:
 625:quantum/rgblight.c ****             led[i].r = 0;
 853               		.loc 1 625 9 is_stmt 1 view .LVU174
 854               	.LBB24:
 625:quantum/rgblight.c ****             led[i].r = 0;
 855               		.loc 1 625 14 view .LVU175
 625:quantum/rgblight.c ****             led[i].r = 0;
 856               		.loc 1 625 22 is_stmt 0 view .LVU176
 857 00b2 2091 0000 		lds r18,effect_start_pos
 858               	.LVL39:
 625:quantum/rgblight.c ****             led[i].r = 0;
 859               		.loc 1 625 46 view .LVU177
 860 00b6 3091 0000 		lds r19,effect_end_pos
 861 00ba 822F      		mov r24,r18
 862 00bc 90E0      		ldi r25,0
 863 00be 63E0      		ldi r22,lo8(3)
 864 00c0 70E0      		ldi r23,0
 865 00c2 0E94 0000 		call __mulhi3
 866 00c6 FC01      		movw r30,r24
 867 00c8 E050      		subi r30,lo8(-(led))
 868 00ca F040      		sbci r31,hi8(-(led))
 869               	.L39:
 625:quantum/rgblight.c ****             led[i].r = 0;
 870               		.loc 1 625 9 discriminator 1 view .LVU178
 871 00cc 2317      		cp r18,r19
 872 00ce 00F0      		brlo .+2
 873 00d0 00C0      		rjmp .L41
 626:quantum/rgblight.c ****             led[i].g = 0;
 874               		.loc 1 626 13 is_stmt 1 discriminator 3 view .LVU179
 626:quantum/rgblight.c ****             led[i].g = 0;
 875               		.loc 1 626 22 is_stmt 0 discriminator 3 view .LVU180
 876 00d2 1182      		std Z+1,__zero_reg__
 627:quantum/rgblight.c ****             led[i].b = 0;
 877               		.loc 1 627 13 is_stmt 1 discriminator 3 view .LVU181
 627:quantum/rgblight.c ****             led[i].b = 0;
 878               		.loc 1 627 22 is_stmt 0 discriminator 3 view .LVU182
 879 00d4 1082      		st Z,__zero_reg__
 628:quantum/rgblight.c **** #    ifdef RGBW
 880               		.loc 1 628 13 is_stmt 1 discriminator 3 view .LVU183
 628:quantum/rgblight.c **** #    ifdef RGBW
 881               		.loc 1 628 22 is_stmt 0 discriminator 3 view .LVU184
 882 00d6 1282      		std Z+2,__zero_reg__
 625:quantum/rgblight.c ****             led[i].r = 0;
 883               		.loc 1 625 65 discriminator 3 view .LVU185
 884 00d8 2F5F      		subi r18,lo8(-(1))
 885               	.LVL40:
 625:quantum/rgblight.c ****             led[i].r = 0;
 886               		.loc 1 625 65 discriminator 3 view .LVU186
 887 00da 3396      		adiw r30,3
 888 00dc 00C0      		rjmp .L39
 889               	.LBE24:
 890               		.cfi_endproc
 891               	.LFE155:
 893               		.section	.text.rgblight_setrgb,"ax",@progbits
 894               	.global	rgblight_setrgb
 896               	rgblight_setrgb:
 897               	.LVL41:
 898               	.LFB145:
 530:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 899               		.loc 1 530 55 is_stmt 1 view -0
 900               		.cfi_startproc
 901               	/* prologue: function */
 902               	/* frame size = 0 */
 903               	/* stack size = 0 */
 904               	.L__stack_usage = 0
 530:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 905               		.loc 1 530 55 is_stmt 0 view .LVU188
 906 0000 A82F      		mov r26,r24
 907 0002 B62F      		mov r27,r22
 531:quantum/rgblight.c ****         return;
 908               		.loc 1 531 5 is_stmt 1 view .LVU189
 531:quantum/rgblight.c ****         return;
 909               		.loc 1 531 25 is_stmt 0 view .LVU190
 910 0004 8091 0000 		lds r24,rgblight_config
 911               	.LVL42:
 531:quantum/rgblight.c ****         return;
 912               		.loc 1 531 8 view .LVU191
 913 0008 80FF      		sbrs r24,0
 914 000a 00C0      		rjmp .L43
 535:quantum/rgblight.c ****         led[i].r = r;
 915               		.loc 1 535 5 is_stmt 1 view .LVU192
 916               	.LBB25:
 535:quantum/rgblight.c ****         led[i].r = r;
 917               		.loc 1 535 10 view .LVU193
 535:quantum/rgblight.c ****         led[i].r = r;
 918               		.loc 1 535 18 is_stmt 0 view .LVU194
 919 000c 2091 0000 		lds r18,effect_start_pos
 920               	.LVL43:
 535:quantum/rgblight.c ****         led[i].r = r;
 921               		.loc 1 535 42 view .LVU195
 922 0010 3091 0000 		lds r19,effect_end_pos
 923 0014 822F      		mov r24,r18
 924 0016 90E0      		ldi r25,0
 925 0018 63E0      		ldi r22,lo8(3)
 926 001a 70E0      		ldi r23,0
 927               	.LVL44:
 535:quantum/rgblight.c ****         led[i].r = r;
 928               		.loc 1 535 42 view .LVU196
 929 001c 0E94 0000 		call __mulhi3
 930 0020 FC01      		movw r30,r24
 931 0022 E050      		subi r30,lo8(-(led))
 932 0024 F040      		sbci r31,hi8(-(led))
 933               	.L45:
 535:quantum/rgblight.c ****         led[i].r = r;
 934               		.loc 1 535 5 discriminator 1 view .LVU197
 935 0026 2317      		cp r18,r19
 936 0028 00F0      		brlo .L46
 535:quantum/rgblight.c ****         led[i].r = r;
 937               		.loc 1 535 5 discriminator 1 view .LVU198
 938               	.LBE25:
 543:quantum/rgblight.c **** }
 939               		.loc 1 543 5 is_stmt 1 view .LVU199
 940 002a 0C94 0000 		jmp rgblight_set
 941               	.LVL45:
 942               	.L46:
 943               	.LBB26:
 536:quantum/rgblight.c ****         led[i].g = g;
 944               		.loc 1 536 9 discriminator 3 view .LVU200
 536:quantum/rgblight.c ****         led[i].g = g;
 945               		.loc 1 536 18 is_stmt 0 discriminator 3 view .LVU201
 946 002e A183      		std Z+1,r26
 537:quantum/rgblight.c ****         led[i].b = b;
 947               		.loc 1 537 9 is_stmt 1 discriminator 3 view .LVU202
 537:quantum/rgblight.c ****         led[i].b = b;
 948               		.loc 1 537 18 is_stmt 0 discriminator 3 view .LVU203
 949 0030 B083      		st Z,r27
 538:quantum/rgblight.c **** #ifdef RGBW
 950               		.loc 1 538 9 is_stmt 1 discriminator 3 view .LVU204
 538:quantum/rgblight.c **** #ifdef RGBW
 951               		.loc 1 538 18 is_stmt 0 discriminator 3 view .LVU205
 952 0032 4283      		std Z+2,r20
 535:quantum/rgblight.c ****         led[i].r = r;
 953               		.loc 1 535 61 discriminator 3 view .LVU206
 954 0034 2F5F      		subi r18,lo8(-(1))
 955               	.LVL46:
 535:quantum/rgblight.c ****         led[i].r = r;
 956               		.loc 1 535 61 discriminator 3 view .LVU207
 957 0036 3396      		adiw r30,3
 958 0038 00C0      		rjmp .L45
 959               	.LVL47:
 960               	.L43:
 961               	/* epilogue start */
 535:quantum/rgblight.c ****         led[i].r = r;
 962               		.loc 1 535 61 discriminator 3 view .LVU208
 963               	.LBE26:
 544:quantum/rgblight.c **** 
 964               		.loc 1 544 1 view .LVU209
 965 003a 0895      		ret
 966               		.cfi_endproc
 967               	.LFE145:
 969               		.section	.text.rgblight_sethsv_noeeprom_old,"ax",@progbits
 970               	.global	rgblight_sethsv_noeeprom_old
 972               	rgblight_sethsv_noeeprom_old:
 973               	.LVL48:
 974               	.LFB134:
 424:quantum/rgblight.c ****     if (rgblight_config.enable) {
 975               		.loc 1 424 74 is_stmt 1 view -0
 976               		.cfi_startproc
 424:quantum/rgblight.c ****     if (rgblight_config.enable) {
 977               		.loc 1 424 74 is_stmt 0 view .LVU211
 978 0000 CF93      		push r28
 979               	.LCFI19:
 980               		.cfi_def_cfa_offset 3
 981               		.cfi_offset 28, -2
 982 0002 DF93      		push r29
 983               	.LCFI20:
 984               		.cfi_def_cfa_offset 4
 985               		.cfi_offset 29, -3
 986 0004 00D0      		rcall .
 987 0006 0F92      		push __tmp_reg__
 988               	.LCFI21:
 989               		.cfi_def_cfa_offset 7
 990 0008 CDB7      		in r28,__SP_L__
 991 000a DEB7      		in r29,__SP_H__
 992               	.LCFI22:
 993               		.cfi_def_cfa_register 28
 994               	/* prologue: function */
 995               	/* frame size = 3 */
 996               	/* stack size = 5 */
 997               	.L__stack_usage = 5
 425:quantum/rgblight.c ****         LED_TYPE tmp_led;
 998               		.loc 1 425 5 is_stmt 1 view .LVU212
 425:quantum/rgblight.c ****         LED_TYPE tmp_led;
 999               		.loc 1 425 9 is_stmt 0 view .LVU213
 1000 000c 9091 0000 		lds r25,rgblight_config
 425:quantum/rgblight.c ****         LED_TYPE tmp_led;
 1001               		.loc 1 425 8 view .LVU214
 1002 0010 90FF      		sbrs r25,0
 1003 0012 00C0      		rjmp .L47
 1004               	.LBB30:
 426:quantum/rgblight.c ****         sethsv(hue, sat, val, &tmp_led);
 1005               		.loc 1 426 9 is_stmt 1 view .LVU215
 427:quantum/rgblight.c ****         rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 1006               		.loc 1 427 9 view .LVU216
 1007               	.LVL49:
 1008               	.LBB31:
 1009               	.LBI31:
 125:quantum/rgblight.c **** 
 1010               		.loc 1 125 6 view .LVU217
 1011               	.LBB32:
 125:quantum/rgblight.c **** 
 1012               		.loc 1 125 70 view .LVU218
 1013 0014 9E01      		movw r18,r28
 1014 0016 2F5F      		subi r18,-1
 1015 0018 3F4F      		sbci r19,-1
 1016 001a 0E94 0000 		call sethsv_raw
 1017               	.LVL50:
 125:quantum/rgblight.c **** 
 1018               		.loc 1 125 70 is_stmt 0 view .LVU219
 1019               	.LBE32:
 1020               	.LBE31:
 428:quantum/rgblight.c ****     }
 1021               		.loc 1 428 9 is_stmt 1 view .LVU220
 1022 001e 4B81      		ldd r20,Y+3
 1023 0020 6981      		ldd r22,Y+1
 1024 0022 8A81      		ldd r24,Y+2
 1025 0024 0E94 0000 		call rgblight_setrgb
 1026               	.LVL51:
 1027               	.L47:
 1028               	/* epilogue start */
 1029               	.LBE30:
 430:quantum/rgblight.c **** 
 1030               		.loc 1 430 1 is_stmt 0 view .LVU221
 1031 0028 0F90      		pop __tmp_reg__
 1032 002a 0F90      		pop __tmp_reg__
 1033 002c 0F90      		pop __tmp_reg__
 1034 002e DF91      		pop r29
 1035 0030 CF91      		pop r28
 1036 0032 0895      		ret
 1037               		.cfi_endproc
 1038               	.LFE134:
 1040               		.section	.text.rgblight_sethsv_eeprom_helper,"ax",@progbits
 1041               	.global	rgblight_sethsv_eeprom_helper
 1043               	rgblight_sethsv_eeprom_helper:
 1044               	.LVL52:
 1045               	.LFB135:
 432:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1046               		.loc 1 432 97 is_stmt 1 view -0
 1047               		.cfi_startproc
 432:quantum/rgblight.c ****     if (rgblight_config.enable) {
 1048               		.loc 1 432 97 is_stmt 0 view .LVU223
 1049 0000 EF92      		push r14
 1050               	.LCFI23:
 1051               		.cfi_def_cfa_offset 3
 1052               		.cfi_offset 14, -2
 1053 0002 FF92      		push r15
 1054               	.LCFI24:
 1055               		.cfi_def_cfa_offset 4
 1056               		.cfi_offset 15, -3
 1057 0004 0F93      		push r16
 1058               	.LCFI25:
 1059               		.cfi_def_cfa_offset 5
 1060               		.cfi_offset 16, -4
 1061 0006 1F93      		push r17
 1062               	.LCFI26:
 1063               		.cfi_def_cfa_offset 6
 1064               		.cfi_offset 17, -5
 1065 0008 CF93      		push r28
 1066               	.LCFI27:
 1067               		.cfi_def_cfa_offset 7
 1068               		.cfi_offset 28, -6
 1069 000a DF93      		push r29
 1070               	.LCFI28:
 1071               		.cfi_def_cfa_offset 8
 1072               		.cfi_offset 29, -7
 1073 000c 00D0      		rcall .
 1074 000e 0F92      		push __tmp_reg__
 1075               	.LCFI29:
 1076               		.cfi_def_cfa_offset 11
 1077 0010 CDB7      		in r28,__SP_L__
 1078 0012 DEB7      		in r29,__SP_H__
 1079               	.LCFI30:
 1080               		.cfi_def_cfa_register 28
 1081               	/* prologue: function */
 1082               	/* frame size = 3 */
 1083               	/* stack size = 9 */
 1084               	.L__stack_usage = 9
 1085 0014 F82E      		mov r15,r24
 1086 0016 062F      		mov r16,r22
 1087 0018 142F      		mov r17,r20
 1088 001a E22E      		mov r14,r18
 433:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1089               		.loc 1 433 5 is_stmt 1 view .LVU224
 433:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1090               		.loc 1 433 9 is_stmt 0 view .LVU225
 1091 001c 8091 0000 		lds r24,rgblight_config
 1092               	.LVL53:
 433:quantum/rgblight.c ****         rgblight_status.base_mode = mode_base_table[rgblight_config.mode];
 1093               		.loc 1 433 8 view .LVU226
 1094 0020 80FF      		sbrs r24,0
 1095 0022 00C0      		rjmp .L52
 434:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1096               		.loc 1 434 9 is_stmt 1 view .LVU227
 434:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1097               		.loc 1 434 68 is_stmt 0 view .LVU228
 1098 0024 E82F      		mov r30,r24
 1099 0026 E695      		lsr r30
 1100 0028 F0E0      		ldi r31,0
 434:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1101               		.loc 1 434 52 view .LVU229
 1102 002a E050      		subi r30,lo8(-(mode_base_table))
 1103 002c F040      		sbci r31,hi8(-(mode_base_table))
 434:quantum/rgblight.c ****         if (rgblight_config.mode == RGBLIGHT_MODE_STATIC_LIGHT) {
 1104               		.loc 1 434 35 view .LVU230
 1105 002e 9081      		ld r25,Z
 1106 0030 9093 0000 		sts rgblight_status,r25
 435:quantum/rgblight.c ****             // same static color
 1107               		.loc 1 435 9 is_stmt 1 view .LVU231
 435:quantum/rgblight.c ****             // same static color
 1108               		.loc 1 435 34 is_stmt 0 view .LVU232
 1109 0034 8E7F      		andi r24,lo8(-2)
 435:quantum/rgblight.c ****             // same static color
 1110               		.loc 1 435 12 view .LVU233
 1111 0036 8230      		cpi r24,lo8(2)
 1112 0038 01F4      		brne .L55
 1113               	.LBB36:
 437:quantum/rgblight.c ****             sethsv(hue, sat, val, &tmp_led);
 1114               		.loc 1 437 13 is_stmt 1 view .LVU234
 438:quantum/rgblight.c ****             rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 1115               		.loc 1 438 13 view .LVU235
 1116               	.LVL54:
 1117               	.LBB37:
 1118               	.LBI37:
 125:quantum/rgblight.c **** 
 1119               		.loc 1 125 6 view .LVU236
 1120               	.LBB38:
 125:quantum/rgblight.c **** 
 1121               		.loc 1 125 70 view .LVU237
 1122 003a 9E01      		movw r18,r28
 1123               	.LVL55:
 125:quantum/rgblight.c **** 
 1124               		.loc 1 125 70 is_stmt 0 view .LVU238
 1125 003c 2F5F      		subi r18,-1
 1126 003e 3F4F      		sbci r19,-1
 1127 0040 8F2D      		mov r24,r15
 1128 0042 0E94 0000 		call sethsv_raw
 1129               	.LVL56:
 125:quantum/rgblight.c **** 
 1130               		.loc 1 125 70 view .LVU239
 1131               	.LBE38:
 1132               	.LBE37:
 439:quantum/rgblight.c ****         } else {
 1133               		.loc 1 439 13 is_stmt 1 view .LVU240
 1134 0046 4B81      		ldd r20,Y+3
 1135 0048 6981      		ldd r22,Y+1
 1136 004a 8A81      		ldd r24,Y+2
 1137 004c 0E94 0000 		call rgblight_setrgb
 1138               	.LVL57:
 1139               	.L55:
 1140               	.LBE36:
 443:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
 1141               		.loc 1 443 13 view .LVU241
 492:quantum/rgblight.c ****         rgblight_config.sat = sat;
 1142               		.loc 1 492 9 view .LVU242
 492:quantum/rgblight.c ****         rgblight_config.sat = sat;
 1143               		.loc 1 492 29 is_stmt 0 view .LVU243
 1144 0050 F092 0000 		sts rgblight_config+1,r15
 493:quantum/rgblight.c ****         rgblight_config.val = val;
 1145               		.loc 1 493 9 is_stmt 1 view .LVU244
 493:quantum/rgblight.c ****         rgblight_config.val = val;
 1146               		.loc 1 493 29 is_stmt 0 view .LVU245
 1147 0054 0093 0000 		sts rgblight_config+2,r16
 494:quantum/rgblight.c ****         if (write_to_eeprom) {
 1148               		.loc 1 494 9 is_stmt 1 view .LVU246
 494:quantum/rgblight.c ****         if (write_to_eeprom) {
 1149               		.loc 1 494 29 is_stmt 0 view .LVU247
 1150 0058 1093 0000 		sts rgblight_config+3,r17
 495:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 1151               		.loc 1 495 9 is_stmt 1 view .LVU248
 495:quantum/rgblight.c ****             eeconfig_update_rgblight(rgblight_config.raw);
 1152               		.loc 1 495 12 is_stmt 0 view .LVU249
 1153 005c EE20      		tst r14
 1154 005e 01F0      		breq .L52
 496:quantum/rgblight.c ****             dprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.s
 1155               		.loc 1 496 13 is_stmt 1 view .LVU250
 1156 0060 6091 0000 		lds r22,rgblight_config
 1157 0064 7091 0000 		lds r23,rgblight_config+1
 1158 0068 8091 0000 		lds r24,rgblight_config+2
 1159 006c 9091 0000 		lds r25,rgblight_config+3
 1160 0070 0E94 0000 		call eeconfig_update_rgblight
 1161               	.LVL58:
 497:quantum/rgblight.c ****         } else {
 1162               		.loc 1 497 124 view .LVU251
 499:quantum/rgblight.c ****         }
 1163               		.loc 1 499 126 view .LVU252
 1164               	.L52:
 1165               	/* epilogue start */
 502:quantum/rgblight.c **** 
 1166               		.loc 1 502 1 is_stmt 0 view .LVU253
 1167 0074 0F90      		pop __tmp_reg__
 1168 0076 0F90      		pop __tmp_reg__
 1169 0078 0F90      		pop __tmp_reg__
 1170 007a DF91      		pop r29
 1171 007c CF91      		pop r28
 1172 007e 1F91      		pop r17
 1173               	.LVL59:
 502:quantum/rgblight.c **** 
 1174               		.loc 1 502 1 view .LVU254
 1175 0080 0F91      		pop r16
 1176               	.LVL60:
 502:quantum/rgblight.c **** 
 1177               		.loc 1 502 1 view .LVU255
 1178 0082 FF90      		pop r15
 1179               	.LVL61:
 502:quantum/rgblight.c **** 
 1180               		.loc 1 502 1 view .LVU256
 1181 0084 EF90      		pop r14
 1182               	.LVL62:
 502:quantum/rgblight.c **** 
 1183               		.loc 1 502 1 view .LVU257
 1184 0086 0895      		ret
 1185               		.cfi_endproc
 1186               	.LFE135:
 1188               		.section	.text.rgblight_increase_hue_helper,"ax",@progbits
 1189               	.global	rgblight_increase_hue_helper
 1191               	rgblight_increase_hue_helper:
 1192               	.LVL63:
 1193               	.LFB114:
 376:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue + RGBLIGHT_HUE_STEP;
 1194               		.loc 1 376 57 is_stmt 1 view -0
 1195               		.cfi_startproc
 1196               	/* prologue: function */
 1197               	/* frame size = 0 */
 1198               	/* stack size = 0 */
 1199               	.L__stack_usage = 0
 377:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1200               		.loc 1 377 5 view .LVU259
 378:quantum/rgblight.c **** }
 1201               		.loc 1 378 5 view .LVU260
 1202 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1203 0002 F0E0      		ldi r31,hi8(rgblight_config)
 377:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1204               		.loc 1 377 13 is_stmt 0 view .LVU261
 1205 0004 9181      		ldd r25,Z+1
 378:quantum/rgblight.c **** }
 1206               		.loc 1 378 5 view .LVU262
 1207 0006 282F      		mov r18,r24
 1208 0008 4381      		ldd r20,Z+3
 1209 000a 6281      		ldd r22,Z+2
 1210 000c 88E0      		ldi r24,lo8(8)
 1211               	.LVL64:
 378:quantum/rgblight.c **** }
 1212               		.loc 1 378 5 view .LVU263
 1213 000e 890F      		add r24,r25
 1214               	.LVL65:
 378:quantum/rgblight.c **** }
 1215               		.loc 1 378 5 view .LVU264
 1216 0010 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1217               	.LVL66:
 378:quantum/rgblight.c **** }
 1218               		.loc 1 378 5 view .LVU265
 1219               		.cfi_endproc
 1220               	.LFE114:
 1222               		.section	.text.rgblight_increase_hue_noeeprom,"ax",@progbits
 1223               	.global	rgblight_increase_hue_noeeprom
 1225               	rgblight_increase_hue_noeeprom:
 1226               	.LFB115:
 380:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 1227               		.loc 1 380 43 is_stmt 1 view -0
 1228               		.cfi_startproc
 1229               	/* prologue: function */
 1230               	/* frame size = 0 */
 1231               	/* stack size = 0 */
 1232               	.L__stack_usage = 0
 380:quantum/rgblight.c **** void rgblight_increase_hue(void) { rgblight_increase_hue_helper(true); }
 1233               		.loc 1 380 45 view .LVU267
 1234 0000 80E0      		ldi r24,0
 1235 0002 0C94 0000 		jmp rgblight_increase_hue_helper
 1236               	.LVL67:
 1237               		.cfi_endproc
 1238               	.LFE115:
 1240               		.section	.text.rgblight_increase_hue,"ax",@progbits
 1241               	.global	rgblight_increase_hue
 1243               	rgblight_increase_hue:
 1244               	.LFB116:
 381:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 1245               		.loc 1 381 34 view -0
 1246               		.cfi_startproc
 1247               	/* prologue: function */
 1248               	/* frame size = 0 */
 1249               	/* stack size = 0 */
 1250               	.L__stack_usage = 0
 381:quantum/rgblight.c **** void rgblight_decrease_hue_helper(bool write_to_eeprom) {
 1251               		.loc 1 381 36 view .LVU269
 1252 0000 81E0      		ldi r24,lo8(1)
 1253 0002 0C94 0000 		jmp rgblight_increase_hue_helper
 1254               	.LVL68:
 1255               		.cfi_endproc
 1256               	.LFE116:
 1258               		.section	.text.rgblight_decrease_hue_helper,"ax",@progbits
 1259               	.global	rgblight_decrease_hue_helper
 1261               	rgblight_decrease_hue_helper:
 1262               	.LVL69:
 1263               	.LFB117:
 382:quantum/rgblight.c ****     uint8_t hue = rgblight_config.hue - RGBLIGHT_HUE_STEP;
 1264               		.loc 1 382 57 view -0
 1265               		.cfi_startproc
 1266               	/* prologue: function */
 1267               	/* frame size = 0 */
 1268               	/* stack size = 0 */
 1269               	.L__stack_usage = 0
 383:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1270               		.loc 1 383 5 view .LVU271
 384:quantum/rgblight.c **** }
 1271               		.loc 1 384 5 view .LVU272
 1272 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1273 0002 F0E0      		ldi r31,hi8(rgblight_config)
 383:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(hue, rgblight_config.sat, rgblight_config.val, write_to_eeprom);
 1274               		.loc 1 383 13 is_stmt 0 view .LVU273
 1275 0004 9181      		ldd r25,Z+1
 384:quantum/rgblight.c **** }
 1276               		.loc 1 384 5 view .LVU274
 1277 0006 282F      		mov r18,r24
 1278 0008 4381      		ldd r20,Z+3
 1279 000a 6281      		ldd r22,Z+2
 1280 000c 88EF      		ldi r24,lo8(-8)
 1281               	.LVL70:
 384:quantum/rgblight.c **** }
 1282               		.loc 1 384 5 view .LVU275
 1283 000e 890F      		add r24,r25
 1284               	.LVL71:
 384:quantum/rgblight.c **** }
 1285               		.loc 1 384 5 view .LVU276
 1286 0010 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1287               	.LVL72:
 384:quantum/rgblight.c **** }
 1288               		.loc 1 384 5 view .LVU277
 1289               		.cfi_endproc
 1290               	.LFE117:
 1292               		.section	.text.rgblight_decrease_hue_noeeprom,"ax",@progbits
 1293               	.global	rgblight_decrease_hue_noeeprom
 1295               	rgblight_decrease_hue_noeeprom:
 1296               	.LFB118:
 386:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 1297               		.loc 1 386 43 is_stmt 1 view -0
 1298               		.cfi_startproc
 1299               	/* prologue: function */
 1300               	/* frame size = 0 */
 1301               	/* stack size = 0 */
 1302               	.L__stack_usage = 0
 386:quantum/rgblight.c **** void rgblight_decrease_hue(void) { rgblight_decrease_hue_helper(true); }
 1303               		.loc 1 386 45 view .LVU279
 1304 0000 80E0      		ldi r24,0
 1305 0002 0C94 0000 		jmp rgblight_decrease_hue_helper
 1306               	.LVL73:
 1307               		.cfi_endproc
 1308               	.LFE118:
 1310               		.section	.text.rgblight_decrease_hue,"ax",@progbits
 1311               	.global	rgblight_decrease_hue
 1313               	rgblight_decrease_hue:
 1314               	.LFB119:
 387:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 1315               		.loc 1 387 34 view -0
 1316               		.cfi_startproc
 1317               	/* prologue: function */
 1318               	/* frame size = 0 */
 1319               	/* stack size = 0 */
 1320               	.L__stack_usage = 0
 387:quantum/rgblight.c **** void rgblight_increase_sat_helper(bool write_to_eeprom) {
 1321               		.loc 1 387 36 view .LVU281
 1322 0000 81E0      		ldi r24,lo8(1)
 1323 0002 0C94 0000 		jmp rgblight_decrease_hue_helper
 1324               	.LVL74:
 1325               		.cfi_endproc
 1326               	.LFE119:
 1328               		.section	.text.rgblight_increase_sat_helper,"ax",@progbits
 1329               	.global	rgblight_increase_sat_helper
 1331               	rgblight_increase_sat_helper:
 1332               	.LVL75:
 1333               	.LFB120:
 388:quantum/rgblight.c ****     uint8_t sat = qadd8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 1334               		.loc 1 388 57 view -0
 1335               		.cfi_startproc
 1336               	/* prologue: function */
 1337               	/* frame size = 0 */
 1338               	/* stack size = 0 */
 1339               	.L__stack_usage = 0
 389:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1340               		.loc 1 389 5 view .LVU283
 1341               	.LBB39:
 1342               	.LBI39:
 1343               		.file 2 "./lib/lib8tion/math8.h"
   1:./lib/lib8tion/math8.h **** #ifndef __INC_LIB8TION_MATH_H
   2:./lib/lib8tion/math8.h **** #define __INC_LIB8TION_MATH_H
   3:./lib/lib8tion/math8.h **** 
   4:./lib/lib8tion/math8.h **** #include "scale8.h"
   5:./lib/lib8tion/math8.h **** 
   6:./lib/lib8tion/math8.h **** ///@ingroup lib8tion
   7:./lib/lib8tion/math8.h **** 
   8:./lib/lib8tion/math8.h **** ///@defgroup Math Basic math operations
   9:./lib/lib8tion/math8.h **** /// Fast, efficient 8-bit math functions specifically
  10:./lib/lib8tion/math8.h **** /// designed for high-performance LED programming.
  11:./lib/lib8tion/math8.h **** ///
  12:./lib/lib8tion/math8.h **** /// Because of the AVR(Arduino) and ARM assembly language
  13:./lib/lib8tion/math8.h **** /// implementations provided, using these functions often
  14:./lib/lib8tion/math8.h **** /// results in smaller and faster code than the equivalent
  15:./lib/lib8tion/math8.h **** /// program using plain "C" arithmetic and logic.
  16:./lib/lib8tion/math8.h **** ///@{
  17:./lib/lib8tion/math8.h **** 
  18:./lib/lib8tion/math8.h **** 
  19:./lib/lib8tion/math8.h **** /// add one byte to another, saturating at 0xFF
  20:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  21:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  22:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  23:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qadd8( uint8_t i, uint8_t j)
 1344               		.loc 2 23 34 view .LVU284
 1345               	.LBB40:
  24:./lib/lib8tion/math8.h **** {
  25:./lib/lib8tion/math8.h **** #if QADD8_C == 1
  26:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
  27:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
  28:./lib/lib8tion/math8.h ****     return t;
  29:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
  30:./lib/lib8tion/math8.h ****     asm volatile(
 1346               		.loc 2 30 5 view .LVU285
 1347               	.LBE40:
 1348               	.LBE39:
 389:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1349               		.loc 1 389 19 is_stmt 0 view .LVU286
 1350 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1351 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1352               	.LBB42:
 1353               	.LBB41:
 1354               		.loc 2 30 5 view .LVU287
 1355 0004 6281      		ldd r22,Z+2
 1356 0006 28E0      		ldi r18,lo8(8)
 1357               	/* #APP */
 1358               	 ;  30 "./lib/lib8tion/math8.h" 1
 1359 0008 620F      		add r22, r18    
 1360 000a 00F4      		brcc L_1023     
 1361 000c 6FEF      		ldi r22, 0xFF  
 1362               		L_1023: 
 1363               	 ;  0 "" 2
 1364               	.LVL76:
  31:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
  32:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  33:./lib/lib8tion/math8.h **** 
  34:./lib/lib8tion/math8.h ****          /* Now test the C flag.
  35:./lib/lib8tion/math8.h ****            If C is clear, we branch around a load of 0xFF into i.
  36:./lib/lib8tion/math8.h ****            If C is set, we go ahead and load 0xFF into i.
  37:./lib/lib8tion/math8.h ****          */
  38:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
  39:./lib/lib8tion/math8.h ****          "ldi %0, 0xFF  \n\t"
  40:./lib/lib8tion/math8.h ****          "L_%=: "
  41:./lib/lib8tion/math8.h ****          : "+a" (i)
  42:./lib/lib8tion/math8.h ****          : "a"  (j) );
  43:./lib/lib8tion/math8.h ****     return i;
 1365               		.loc 2 43 5 is_stmt 1 view .LVU288
 1366               		.loc 2 43 5 is_stmt 0 view .LVU289
 1367               	/* #NOAPP */
 1368               	.LBE41:
 1369               	.LBE42:
 390:quantum/rgblight.c **** }
 1370               		.loc 1 390 5 is_stmt 1 view .LVU290
 1371 000e 282F      		mov r18,r24
 1372 0010 4381      		ldd r20,Z+3
 1373 0012 8181      		ldd r24,Z+1
 1374               	.LVL77:
 390:quantum/rgblight.c **** }
 1375               		.loc 1 390 5 is_stmt 0 view .LVU291
 1376 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1377               	.LVL78:
 390:quantum/rgblight.c **** }
 1378               		.loc 1 390 5 view .LVU292
 1379               		.cfi_endproc
 1380               	.LFE120:
 1382               		.section	.text.rgblight_increase_sat_noeeprom,"ax",@progbits
 1383               	.global	rgblight_increase_sat_noeeprom
 1385               	rgblight_increase_sat_noeeprom:
 1386               	.LFB121:
 392:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 1387               		.loc 1 392 43 is_stmt 1 view -0
 1388               		.cfi_startproc
 1389               	/* prologue: function */
 1390               	/* frame size = 0 */
 1391               	/* stack size = 0 */
 1392               	.L__stack_usage = 0
 392:quantum/rgblight.c **** void rgblight_increase_sat(void) { rgblight_increase_sat_helper(true); }
 1393               		.loc 1 392 45 view .LVU294
 1394 0000 80E0      		ldi r24,0
 1395 0002 0C94 0000 		jmp rgblight_increase_sat_helper
 1396               	.LVL79:
 1397               		.cfi_endproc
 1398               	.LFE121:
 1400               		.section	.text.rgblight_increase_sat,"ax",@progbits
 1401               	.global	rgblight_increase_sat
 1403               	rgblight_increase_sat:
 1404               	.LFB122:
 393:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 1405               		.loc 1 393 34 view -0
 1406               		.cfi_startproc
 1407               	/* prologue: function */
 1408               	/* frame size = 0 */
 1409               	/* stack size = 0 */
 1410               	.L__stack_usage = 0
 393:quantum/rgblight.c **** void rgblight_decrease_sat_helper(bool write_to_eeprom) {
 1411               		.loc 1 393 36 view .LVU296
 1412 0000 81E0      		ldi r24,lo8(1)
 1413 0002 0C94 0000 		jmp rgblight_increase_sat_helper
 1414               	.LVL80:
 1415               		.cfi_endproc
 1416               	.LFE122:
 1418               		.section	.text.rgblight_decrease_sat_helper,"ax",@progbits
 1419               	.global	rgblight_decrease_sat_helper
 1421               	rgblight_decrease_sat_helper:
 1422               	.LVL81:
 1423               	.LFB123:
 394:quantum/rgblight.c ****     uint8_t sat = qsub8(rgblight_config.sat, RGBLIGHT_SAT_STEP);
 1424               		.loc 1 394 57 view -0
 1425               		.cfi_startproc
 1426               	/* prologue: function */
 1427               	/* frame size = 0 */
 1428               	/* stack size = 0 */
 1429               	.L__stack_usage = 0
 395:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1430               		.loc 1 395 5 view .LVU298
 1431               	.LBB43:
 1432               	.LBI43:
  44:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
  45:./lib/lib8tion/math8.h ****     asm volatile( "uqadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  46:./lib/lib8tion/math8.h ****     return i;
  47:./lib/lib8tion/math8.h **** #else
  48:./lib/lib8tion/math8.h **** #error "No implementation for qadd8 available."
  49:./lib/lib8tion/math8.h **** #endif
  50:./lib/lib8tion/math8.h **** }
  51:./lib/lib8tion/math8.h **** 
  52:./lib/lib8tion/math8.h **** /// Add one byte to another, saturating at 0x7F
  53:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  54:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  55:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  56:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t qadd7( int8_t i, int8_t j)
  57:./lib/lib8tion/math8.h **** {
  58:./lib/lib8tion/math8.h **** #if QADD7_C == 1
  59:./lib/lib8tion/math8.h ****     int16_t t = i + j;
  60:./lib/lib8tion/math8.h ****     if (t > 127) t = 127;
  61:./lib/lib8tion/math8.h ****     return t;
  62:./lib/lib8tion/math8.h **** #elif QADD7_AVRASM == 1
  63:./lib/lib8tion/math8.h ****     asm volatile(
  64:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the V flag */
  65:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  66:./lib/lib8tion/math8.h **** 
  67:./lib/lib8tion/math8.h ****          /* Now test the V flag.
  68:./lib/lib8tion/math8.h ****           If V is clear, we branch around a load of 0x7F into i.
  69:./lib/lib8tion/math8.h ****           If V is set, we go ahead and load 0x7F into i.
  70:./lib/lib8tion/math8.h ****           */
  71:./lib/lib8tion/math8.h ****          "brvc L_%=     \n\t"
  72:./lib/lib8tion/math8.h ****          "ldi %0, 0x7F  \n\t"
  73:./lib/lib8tion/math8.h ****          "L_%=: "
  74:./lib/lib8tion/math8.h ****          : "+a" (i)
  75:./lib/lib8tion/math8.h ****          : "a"  (j) );
  76:./lib/lib8tion/math8.h **** 
  77:./lib/lib8tion/math8.h ****     return i;
  78:./lib/lib8tion/math8.h **** #elif QADD7_ARM_DSP_ASM == 1
  79:./lib/lib8tion/math8.h ****     asm volatile( "qadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  80:./lib/lib8tion/math8.h ****     return i;
  81:./lib/lib8tion/math8.h **** #else
  82:./lib/lib8tion/math8.h **** #error "No implementation for qadd7 available."
  83:./lib/lib8tion/math8.h **** #endif
  84:./lib/lib8tion/math8.h **** }
  85:./lib/lib8tion/math8.h **** 
  86:./lib/lib8tion/math8.h **** /// subtract one byte from another, saturating at 0x00
  87:./lib/lib8tion/math8.h **** /// @returns i - j with a floor of 0
  88:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qsub8( uint8_t i, uint8_t j)
 1433               		.loc 2 88 34 view .LVU299
 1434               	.LBB44:
  89:./lib/lib8tion/math8.h **** {
  90:./lib/lib8tion/math8.h **** #if QSUB8_C == 1
  91:./lib/lib8tion/math8.h ****     int16_t t = i - j;
  92:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
  93:./lib/lib8tion/math8.h ****     return t;
  94:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
  95:./lib/lib8tion/math8.h **** 
  96:./lib/lib8tion/math8.h ****     asm volatile(
 1435               		.loc 2 96 5 view .LVU300
 1436               	.LBE44:
 1437               	.LBE43:
 395:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, sat, rgblight_config.val, write_to_eeprom);
 1438               		.loc 1 395 19 is_stmt 0 view .LVU301
 1439 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1440 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1441               	.LBB46:
 1442               	.LBB45:
 1443               		.loc 2 96 5 view .LVU302
 1444 0004 6281      		ldd r22,Z+2
 1445 0006 28E0      		ldi r18,lo8(8)
 1446               	/* #APP */
 1447               	 ;  96 "./lib/lib8tion/math8.h" 1
 1448 0008 621B      		sub r22, r18    
 1449 000a 00F4      		brcc L_1079     
 1450 000c 60E0      		ldi r22, 0x00  
 1451               		L_1079: 
 1452               	 ;  0 "" 2
 1453               	.LVL82:
  97:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
  98:./lib/lib8tion/math8.h ****          "sub %0, %1    \n\t"
  99:./lib/lib8tion/math8.h **** 
 100:./lib/lib8tion/math8.h ****          /* Now test the C flag.
 101:./lib/lib8tion/math8.h ****           If C is clear, we branch around a load of 0x00 into i.
 102:./lib/lib8tion/math8.h ****           If C is set, we go ahead and load 0x00 into i.
 103:./lib/lib8tion/math8.h ****           */
 104:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
 105:./lib/lib8tion/math8.h ****          "ldi %0, 0x00  \n\t"
 106:./lib/lib8tion/math8.h ****          "L_%=: "
 107:./lib/lib8tion/math8.h ****          : "+a" (i)
 108:./lib/lib8tion/math8.h ****          : "a"  (j) );
 109:./lib/lib8tion/math8.h **** 
 110:./lib/lib8tion/math8.h ****     return i;
 1454               		.loc 2 110 5 is_stmt 1 view .LVU303
 1455               		.loc 2 110 5 is_stmt 0 view .LVU304
 1456               	/* #NOAPP */
 1457               	.LBE45:
 1458               	.LBE46:
 396:quantum/rgblight.c **** }
 1459               		.loc 1 396 5 is_stmt 1 view .LVU305
 1460 000e 282F      		mov r18,r24
 1461 0010 4381      		ldd r20,Z+3
 1462 0012 8181      		ldd r24,Z+1
 1463               	.LVL83:
 396:quantum/rgblight.c **** }
 1464               		.loc 1 396 5 is_stmt 0 view .LVU306
 1465 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1466               	.LVL84:
 396:quantum/rgblight.c **** }
 1467               		.loc 1 396 5 view .LVU307
 1468               		.cfi_endproc
 1469               	.LFE123:
 1471               		.section	.text.rgblight_decrease_sat_noeeprom,"ax",@progbits
 1472               	.global	rgblight_decrease_sat_noeeprom
 1474               	rgblight_decrease_sat_noeeprom:
 1475               	.LFB124:
 398:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 1476               		.loc 1 398 43 is_stmt 1 view -0
 1477               		.cfi_startproc
 1478               	/* prologue: function */
 1479               	/* frame size = 0 */
 1480               	/* stack size = 0 */
 1481               	.L__stack_usage = 0
 398:quantum/rgblight.c **** void rgblight_decrease_sat(void) { rgblight_decrease_sat_helper(true); }
 1482               		.loc 1 398 45 view .LVU309
 1483 0000 80E0      		ldi r24,0
 1484 0002 0C94 0000 		jmp rgblight_decrease_sat_helper
 1485               	.LVL85:
 1486               		.cfi_endproc
 1487               	.LFE124:
 1489               		.section	.text.rgblight_decrease_sat,"ax",@progbits
 1490               	.global	rgblight_decrease_sat
 1492               	rgblight_decrease_sat:
 1493               	.LFB125:
 399:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 1494               		.loc 1 399 34 view -0
 1495               		.cfi_startproc
 1496               	/* prologue: function */
 1497               	/* frame size = 0 */
 1498               	/* stack size = 0 */
 1499               	.L__stack_usage = 0
 399:quantum/rgblight.c **** void rgblight_increase_val_helper(bool write_to_eeprom) {
 1500               		.loc 1 399 36 view .LVU311
 1501 0000 81E0      		ldi r24,lo8(1)
 1502 0002 0C94 0000 		jmp rgblight_decrease_sat_helper
 1503               	.LVL86:
 1504               		.cfi_endproc
 1505               	.LFE125:
 1507               		.section	.text.rgblight_increase_val_helper,"ax",@progbits
 1508               	.global	rgblight_increase_val_helper
 1510               	rgblight_increase_val_helper:
 1511               	.LVL87:
 1512               	.LFB126:
 400:quantum/rgblight.c ****     uint8_t val = qadd8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 1513               		.loc 1 400 57 view -0
 1514               		.cfi_startproc
 1515               	/* prologue: function */
 1516               	/* frame size = 0 */
 1517               	/* stack size = 0 */
 1518               	.L__stack_usage = 0
 401:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 1519               		.loc 1 401 5 view .LVU313
 1520               	.LBB47:
 1521               	.LBI47:
  23:./lib/lib8tion/math8.h **** {
 1522               		.loc 2 23 34 view .LVU314
 1523               	.LBB48:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 1524               		.loc 2 30 5 view .LVU315
 1525               	.LBE48:
 1526               	.LBE47:
 401:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 1527               		.loc 1 401 19 is_stmt 0 view .LVU316
 1528 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1529 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1530               	.LBB50:
 1531               	.LBB49:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 1532               		.loc 2 30 5 view .LVU317
 1533 0004 4381      		ldd r20,Z+3
 1534 0006 28E0      		ldi r18,lo8(8)
 1535               	/* #APP */
 1536               	 ;  30 "./lib/lib8tion/math8.h" 1
 1537 0008 420F      		add r20, r18    
 1538 000a 00F4      		brcc L_1135     
 1539 000c 4FEF      		ldi r20, 0xFF  
 1540               		L_1135: 
 1541               	 ;  0 "" 2
 1542               	.LVL88:
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 1543               		.loc 2 43 5 is_stmt 1 view .LVU318
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 1544               		.loc 2 43 5 is_stmt 0 view .LVU319
 1545               	/* #NOAPP */
 1546               	.LBE49:
 1547               	.LBE50:
 402:quantum/rgblight.c **** }
 1548               		.loc 1 402 5 is_stmt 1 view .LVU320
 1549 000e 282F      		mov r18,r24
 1550 0010 6281      		ldd r22,Z+2
 1551 0012 8181      		ldd r24,Z+1
 1552               	.LVL89:
 402:quantum/rgblight.c **** }
 1553               		.loc 1 402 5 is_stmt 0 view .LVU321
 1554 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1555               	.LVL90:
 402:quantum/rgblight.c **** }
 1556               		.loc 1 402 5 view .LVU322
 1557               		.cfi_endproc
 1558               	.LFE126:
 1560               		.section	.text.rgblight_increase_val_noeeprom,"ax",@progbits
 1561               	.global	rgblight_increase_val_noeeprom
 1563               	rgblight_increase_val_noeeprom:
 1564               	.LFB127:
 404:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 1565               		.loc 1 404 43 is_stmt 1 view -0
 1566               		.cfi_startproc
 1567               	/* prologue: function */
 1568               	/* frame size = 0 */
 1569               	/* stack size = 0 */
 1570               	.L__stack_usage = 0
 404:quantum/rgblight.c **** void rgblight_increase_val(void) { rgblight_increase_val_helper(true); }
 1571               		.loc 1 404 45 view .LVU324
 1572 0000 80E0      		ldi r24,0
 1573 0002 0C94 0000 		jmp rgblight_increase_val_helper
 1574               	.LVL91:
 1575               		.cfi_endproc
 1576               	.LFE127:
 1578               		.section	.text.rgblight_increase_val,"ax",@progbits
 1579               	.global	rgblight_increase_val
 1581               	rgblight_increase_val:
 1582               	.LFB128:
 405:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 1583               		.loc 1 405 34 view -0
 1584               		.cfi_startproc
 1585               	/* prologue: function */
 1586               	/* frame size = 0 */
 1587               	/* stack size = 0 */
 1588               	.L__stack_usage = 0
 405:quantum/rgblight.c **** void rgblight_decrease_val_helper(bool write_to_eeprom) {
 1589               		.loc 1 405 36 view .LVU326
 1590 0000 81E0      		ldi r24,lo8(1)
 1591 0002 0C94 0000 		jmp rgblight_increase_val_helper
 1592               	.LVL92:
 1593               		.cfi_endproc
 1594               	.LFE128:
 1596               		.section	.text.rgblight_decrease_val_helper,"ax",@progbits
 1597               	.global	rgblight_decrease_val_helper
 1599               	rgblight_decrease_val_helper:
 1600               	.LVL93:
 1601               	.LFB129:
 406:quantum/rgblight.c ****     uint8_t val = qsub8(rgblight_config.val, RGBLIGHT_VAL_STEP);
 1602               		.loc 1 406 57 view -0
 1603               		.cfi_startproc
 1604               	/* prologue: function */
 1605               	/* frame size = 0 */
 1606               	/* stack size = 0 */
 1607               	.L__stack_usage = 0
 407:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 1608               		.loc 1 407 5 view .LVU328
 1609               	.LBB51:
 1610               	.LBI51:
  88:./lib/lib8tion/math8.h **** {
 1611               		.loc 2 88 34 view .LVU329
 1612               	.LBB52:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 1613               		.loc 2 96 5 view .LVU330
 1614               	.LBE52:
 1615               	.LBE51:
 407:quantum/rgblight.c ****     rgblight_sethsv_eeprom_helper(rgblight_config.hue, rgblight_config.sat, val, write_to_eeprom);
 1616               		.loc 1 407 19 is_stmt 0 view .LVU331
 1617 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1618 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1619               	.LBB54:
 1620               	.LBB53:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 1621               		.loc 2 96 5 view .LVU332
 1622 0004 4381      		ldd r20,Z+3
 1623 0006 28E0      		ldi r18,lo8(8)
 1624               	/* #APP */
 1625               	 ;  96 "./lib/lib8tion/math8.h" 1
 1626 0008 421B      		sub r20, r18    
 1627 000a 00F4      		brcc L_1191     
 1628 000c 40E0      		ldi r20, 0x00  
 1629               		L_1191: 
 1630               	 ;  0 "" 2
 1631               	.LVL94:
 1632               		.loc 2 110 5 is_stmt 1 view .LVU333
 1633               		.loc 2 110 5 is_stmt 0 view .LVU334
 1634               	/* #NOAPP */
 1635               	.LBE53:
 1636               	.LBE54:
 408:quantum/rgblight.c **** }
 1637               		.loc 1 408 5 is_stmt 1 view .LVU335
 1638 000e 282F      		mov r18,r24
 1639 0010 6281      		ldd r22,Z+2
 1640 0012 8181      		ldd r24,Z+1
 1641               	.LVL95:
 408:quantum/rgblight.c **** }
 1642               		.loc 1 408 5 is_stmt 0 view .LVU336
 1643 0014 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1644               	.LVL96:
 408:quantum/rgblight.c **** }
 1645               		.loc 1 408 5 view .LVU337
 1646               		.cfi_endproc
 1647               	.LFE129:
 1649               		.section	.text.rgblight_decrease_val_noeeprom,"ax",@progbits
 1650               	.global	rgblight_decrease_val_noeeprom
 1652               	rgblight_decrease_val_noeeprom:
 1653               	.LFB130:
 410:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 1654               		.loc 1 410 43 is_stmt 1 view -0
 1655               		.cfi_startproc
 1656               	/* prologue: function */
 1657               	/* frame size = 0 */
 1658               	/* stack size = 0 */
 1659               	.L__stack_usage = 0
 410:quantum/rgblight.c **** void rgblight_decrease_val(void) { rgblight_decrease_val_helper(true); }
 1660               		.loc 1 410 45 view .LVU339
 1661 0000 80E0      		ldi r24,0
 1662 0002 0C94 0000 		jmp rgblight_decrease_val_helper
 1663               	.LVL97:
 1664               		.cfi_endproc
 1665               	.LFE130:
 1667               		.section	.text.rgblight_decrease_val,"ax",@progbits
 1668               	.global	rgblight_decrease_val
 1670               	rgblight_decrease_val:
 1671               	.LFB131:
 411:quantum/rgblight.c **** void rgblight_increase_speed(void) {
 1672               		.loc 1 411 34 view -0
 1673               		.cfi_startproc
 1674               	/* prologue: function */
 1675               	/* frame size = 0 */
 1676               	/* stack size = 0 */
 1677               	.L__stack_usage = 0
 411:quantum/rgblight.c **** void rgblight_increase_speed(void) {
 1678               		.loc 1 411 36 view .LVU341
 1679 0000 81E0      		ldi r24,lo8(1)
 1680 0002 0C94 0000 		jmp rgblight_decrease_val_helper
 1681               	.LVL98:
 1682               		.cfi_endproc
 1683               	.LFE131:
 1685               		.section	.text.rgblight_sethsv,"ax",@progbits
 1686               	.global	rgblight_sethsv
 1688               	rgblight_sethsv:
 1689               	.LVL99:
 1690               	.LFB136:
 504:quantum/rgblight.c **** 
 1691               		.loc 1 504 61 view -0
 1692               		.cfi_startproc
 1693               	/* prologue: function */
 1694               	/* frame size = 0 */
 1695               	/* stack size = 0 */
 1696               	.L__stack_usage = 0
 504:quantum/rgblight.c **** 
 1697               		.loc 1 504 63 view .LVU343
 1698 0000 21E0      		ldi r18,lo8(1)
 1699 0002 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1700               	.LVL100:
 504:quantum/rgblight.c **** 
 1701               		.loc 1 504 63 is_stmt 0 view .LVU344
 1702               		.cfi_endproc
 1703               	.LFE136:
 1705               		.section	.text.rgblight_sethsv_noeeprom,"ax",@progbits
 1706               	.global	rgblight_sethsv_noeeprom
 1708               	rgblight_sethsv_noeeprom:
 1709               	.LVL101:
 1710               	.LFB137:
 506:quantum/rgblight.c **** 
 1711               		.loc 1 506 70 is_stmt 1 view -0
 1712               		.cfi_startproc
 1713               	/* prologue: function */
 1714               	/* frame size = 0 */
 1715               	/* stack size = 0 */
 1716               	.L__stack_usage = 0
 506:quantum/rgblight.c **** 
 1717               		.loc 1 506 72 view .LVU346
 1718 0000 20E0      		ldi r18,0
 1719 0002 0C94 0000 		jmp rgblight_sethsv_eeprom_helper
 1720               	.LVL102:
 506:quantum/rgblight.c **** 
 1721               		.loc 1 506 72 is_stmt 0 view .LVU347
 1722               		.cfi_endproc
 1723               	.LFE137:
 1725               		.section	.text.rgblight_setrgb_at,"ax",@progbits
 1726               	.global	rgblight_setrgb_at
 1728               	rgblight_setrgb_at:
 1729               	.LVL103:
 1730               	.LFB146:
 546:quantum/rgblight.c ****     if (!rgblight_config.enable || index >= RGBLED_NUM) {
 1731               		.loc 1 546 73 is_stmt 1 view -0
 1732               		.cfi_startproc
 1733               	/* prologue: function */
 1734               	/* frame size = 0 */
 1735               	/* stack size = 0 */
 1736               	.L__stack_usage = 0
 546:quantum/rgblight.c ****     if (!rgblight_config.enable || index >= RGBLED_NUM) {
 1737               		.loc 1 546 73 is_stmt 0 view .LVU349
 1738 0000 A82F      		mov r26,r24
 1739 0002 362F      		mov r19,r22
 547:quantum/rgblight.c ****         return;
 1740               		.loc 1 547 5 is_stmt 1 view .LVU350
 547:quantum/rgblight.c ****         return;
 1741               		.loc 1 547 25 is_stmt 0 view .LVU351
 1742 0004 8091 0000 		lds r24,rgblight_config
 1743               	.LVL104:
 547:quantum/rgblight.c ****         return;
 1744               		.loc 1 547 8 view .LVU352
 1745 0008 80FF      		sbrs r24,0
 1746 000a 00C0      		rjmp .L80
 547:quantum/rgblight.c ****         return;
 1747               		.loc 1 547 33 discriminator 1 view .LVU353
 1748 000c 2830      		cpi r18,lo8(8)
 1749 000e 00F4      		brsh .L80
 551:quantum/rgblight.c ****     led[index].g = g;
 1750               		.loc 1 551 5 is_stmt 1 view .LVU354
 551:quantum/rgblight.c ****     led[index].g = g;
 1751               		.loc 1 551 18 is_stmt 0 view .LVU355
 1752 0010 822F      		mov r24,r18
 1753 0012 90E0      		ldi r25,0
 1754 0014 63E0      		ldi r22,lo8(3)
 1755 0016 70E0      		ldi r23,0
 1756               	.LVL105:
 551:quantum/rgblight.c ****     led[index].g = g;
 1757               		.loc 1 551 18 view .LVU356
 1758 0018 0E94 0000 		call __mulhi3
 1759 001c FC01      		movw r30,r24
 1760 001e E050      		subi r30,lo8(-(led))
 1761 0020 F040      		sbci r31,hi8(-(led))
 1762 0022 A183      		std Z+1,r26
 552:quantum/rgblight.c ****     led[index].b = b;
 1763               		.loc 1 552 5 is_stmt 1 view .LVU357
 552:quantum/rgblight.c ****     led[index].b = b;
 1764               		.loc 1 552 18 is_stmt 0 view .LVU358
 1765 0024 3083      		st Z,r19
 553:quantum/rgblight.c **** #ifdef RGBW
 1766               		.loc 1 553 5 is_stmt 1 view .LVU359
 553:quantum/rgblight.c **** #ifdef RGBW
 1767               		.loc 1 553 18 is_stmt 0 view .LVU360
 1768 0026 4283      		std Z+2,r20
 557:quantum/rgblight.c **** }
 1769               		.loc 1 557 5 is_stmt 1 view .LVU361
 1770 0028 0C94 0000 		jmp rgblight_set
 1771               	.LVL106:
 1772               	.L80:
 1773               	/* epilogue start */
 558:quantum/rgblight.c **** 
 1774               		.loc 1 558 1 is_stmt 0 view .LVU362
 1775 002c 0895      		ret
 1776               		.cfi_endproc
 1777               	.LFE146:
 1779               		.section	.text.rgblight_sethsv_at,"ax",@progbits
 1780               	.global	rgblight_sethsv_at
 1782               	rgblight_sethsv_at:
 1783               	.LVL107:
 1784               	.LFB147:
 560:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 1785               		.loc 1 560 79 is_stmt 1 view -0
 1786               		.cfi_startproc
 560:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 1787               		.loc 1 560 79 is_stmt 0 view .LVU364
 1788 0000 1F93      		push r17
 1789               	.LCFI31:
 1790               		.cfi_def_cfa_offset 3
 1791               		.cfi_offset 17, -2
 1792 0002 CF93      		push r28
 1793               	.LCFI32:
 1794               		.cfi_def_cfa_offset 4
 1795               		.cfi_offset 28, -3
 1796 0004 DF93      		push r29
 1797               	.LCFI33:
 1798               		.cfi_def_cfa_offset 5
 1799               		.cfi_offset 29, -4
 1800 0006 00D0      		rcall .
 1801 0008 0F92      		push __tmp_reg__
 1802               	.LCFI34:
 1803               		.cfi_def_cfa_offset 8
 1804 000a CDB7      		in r28,__SP_L__
 1805 000c DEB7      		in r29,__SP_H__
 1806               	.LCFI35:
 1807               		.cfi_def_cfa_register 28
 1808               	/* prologue: function */
 1809               	/* frame size = 3 */
 1810               	/* stack size = 6 */
 1811               	.L__stack_usage = 6
 1812 000e 122F      		mov r17,r18
 561:quantum/rgblight.c ****         return;
 1813               		.loc 1 561 5 is_stmt 1 view .LVU365
 561:quantum/rgblight.c ****         return;
 1814               		.loc 1 561 25 is_stmt 0 view .LVU366
 1815 0010 9091 0000 		lds r25,rgblight_config
 561:quantum/rgblight.c ****         return;
 1816               		.loc 1 561 8 view .LVU367
 1817 0014 90FF      		sbrs r25,0
 1818 0016 00C0      		rjmp .L85
 565:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 1819               		.loc 1 565 5 is_stmt 1 view .LVU368
 566:quantum/rgblight.c ****     rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 1820               		.loc 1 566 5 view .LVU369
 1821               	.LVL108:
 1822               	.LBB57:
 1823               	.LBI57:
 125:quantum/rgblight.c **** 
 1824               		.loc 1 125 6 view .LVU370
 1825               	.LBB58:
 125:quantum/rgblight.c **** 
 1826               		.loc 1 125 70 view .LVU371
 1827 0018 9E01      		movw r18,r28
 1828               	.LVL109:
 125:quantum/rgblight.c **** 
 1829               		.loc 1 125 70 is_stmt 0 view .LVU372
 1830 001a 2F5F      		subi r18,-1
 1831 001c 3F4F      		sbci r19,-1
 1832 001e 0E94 0000 		call sethsv_raw
 1833               	.LVL110:
 125:quantum/rgblight.c **** 
 1834               		.loc 1 125 70 view .LVU373
 1835               	.LBE58:
 1836               	.LBE57:
 567:quantum/rgblight.c **** }
 1837               		.loc 1 567 5 is_stmt 1 view .LVU374
 1838 0022 212F      		mov r18,r17
 1839 0024 4B81      		ldd r20,Y+3
 1840 0026 6981      		ldd r22,Y+1
 1841 0028 8A81      		ldd r24,Y+2
 1842 002a 0E94 0000 		call rgblight_setrgb_at
 1843               	.LVL111:
 1844               	.L85:
 1845               	/* epilogue start */
 568:quantum/rgblight.c **** 
 1846               		.loc 1 568 1 is_stmt 0 view .LVU375
 1847 002e 0F90      		pop __tmp_reg__
 1848 0030 0F90      		pop __tmp_reg__
 1849 0032 0F90      		pop __tmp_reg__
 1850 0034 DF91      		pop r29
 1851 0036 CF91      		pop r28
 1852 0038 1F91      		pop r17
 1853               	.LVL112:
 568:quantum/rgblight.c **** 
 1854               		.loc 1 568 1 view .LVU376
 1855 003a 0895      		ret
 1856               		.cfi_endproc
 1857               	.LFE147:
 1859               		.section	.text.rgblight_setrgb_range,"ax",@progbits
 1860               	.global	rgblight_setrgb_range
 1862               	rgblight_setrgb_range:
 1863               	.LVL113:
 1864               	.LFB149:
 582:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 1865               		.loc 1 582 89 is_stmt 1 view -0
 1866               		.cfi_startproc
 582:quantum/rgblight.c ****     if (!rgblight_config.enable || start < 0 || start >= end || end > RGBLED_NUM) {
 1867               		.loc 1 582 89 is_stmt 0 view .LVU378
 1868 0000 0F93      		push r16
 1869               	.LCFI36:
 1870               		.cfi_def_cfa_offset 3
 1871               		.cfi_offset 16, -2
 1872               	/* prologue: function */
 1873               	/* frame size = 0 */
 1874               	/* stack size = 1 */
 1875               	.L__stack_usage = 1
 1876 0002 A82F      		mov r26,r24
 1877 0004 362F      		mov r19,r22
 583:quantum/rgblight.c ****         return;
 1878               		.loc 1 583 5 is_stmt 1 view .LVU379
 583:quantum/rgblight.c ****         return;
 1879               		.loc 1 583 25 is_stmt 0 view .LVU380
 1880 0006 8091 0000 		lds r24,rgblight_config
 1881               	.LVL114:
 583:quantum/rgblight.c ****         return;
 1882               		.loc 1 583 8 view .LVU381
 1883 000a 80FF      		sbrs r24,0
 1884 000c 00C0      		rjmp .L88
 583:quantum/rgblight.c ****         return;
 1885               		.loc 1 583 46 discriminator 1 view .LVU382
 1886 000e 2017      		cp r18,r16
 1887 0010 00F4      		brsh .L88
 583:quantum/rgblight.c ****         return;
 1888               		.loc 1 583 62 discriminator 2 view .LVU383
 1889 0012 0930      		cpi r16,lo8(9)
 1890 0014 00F4      		brsh .L88
 1891 0016 822F      		mov r24,r18
 1892 0018 90E0      		ldi r25,0
 1893 001a 63E0      		ldi r22,lo8(3)
 1894 001c 70E0      		ldi r23,0
 1895               	.LVL115:
 583:quantum/rgblight.c ****         return;
 1896               		.loc 1 583 62 discriminator 2 view .LVU384
 1897 001e 0E94 0000 		call __mulhi3
 1898 0022 FC01      		movw r30,r24
 1899 0024 E050      		subi r30,lo8(-(led))
 1900 0026 F040      		sbci r31,hi8(-(led))
 1901               	.LVL116:
 1902               	.L90:
 1903               	.LBB59:
 588:quantum/rgblight.c ****         led[i].g = g;
 1904               		.loc 1 588 9 is_stmt 1 discriminator 3 view .LVU385
 588:quantum/rgblight.c ****         led[i].g = g;
 1905               		.loc 1 588 18 is_stmt 0 discriminator 3 view .LVU386
 1906 0028 A183      		std Z+1,r26
 589:quantum/rgblight.c ****         led[i].b = b;
 1907               		.loc 1 589 9 is_stmt 1 discriminator 3 view .LVU387
 589:quantum/rgblight.c ****         led[i].b = b;
 1908               		.loc 1 589 18 is_stmt 0 discriminator 3 view .LVU388
 1909 002a 3083      		st Z,r19
 590:quantum/rgblight.c **** #ifdef RGBW
 1910               		.loc 1 590 9 is_stmt 1 discriminator 3 view .LVU389
 590:quantum/rgblight.c **** #ifdef RGBW
 1911               		.loc 1 590 18 is_stmt 0 discriminator 3 view .LVU390
 1912 002c 4283      		std Z+2,r20
 587:quantum/rgblight.c ****         led[i].r = r;
 1913               		.loc 1 587 39 discriminator 3 view .LVU391
 1914 002e 2F5F      		subi r18,lo8(-(1))
 1915               	.LVL117:
 587:quantum/rgblight.c ****         led[i].r = r;
 1916               		.loc 1 587 39 discriminator 3 view .LVU392
 1917 0030 3396      		adiw r30,3
 587:quantum/rgblight.c ****         led[i].r = r;
 1918               		.loc 1 587 5 discriminator 3 view .LVU393
 1919 0032 0213      		cpse r16,r18
 1920 0034 00C0      		rjmp .L90
 587:quantum/rgblight.c ****         led[i].r = r;
 1921               		.loc 1 587 5 discriminator 3 view .LVU394
 1922               	.LBE59:
 595:quantum/rgblight.c ****     wait_ms(1);
 1923               		.loc 1 595 5 is_stmt 1 view .LVU395
 1924 0036 0E94 0000 		call rgblight_set
 1925               	.LVL118:
 596:quantum/rgblight.c **** }
 1926               		.loc 1 596 5 view .LVU396
 1927               	.LBB60:
 1928               	.LBI60:
 1929               		.file 3 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchain
   1:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    All rights reserved.
   5:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
   6:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Redistribution and use in source and binary forms, with or without
   7:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    modification, are permitted provided that the following conditions are met:
   8:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
   9:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    * Redistributions of source code must retain the above copyright
  10:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer.
  11:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  12:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer in
  14:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      the documentation and/or other materials provided with the
  15:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      distribution.
  16:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  17:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    * Neither the name of the copyright holders nor the names of
  18:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      contributors may be used to endorse or promote products derived
  19:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      from this software without specific prior written permission.
  20:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  21:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  33:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  35:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #ifndef _UTIL_DELAY_H_
  36:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #define _UTIL_DELAY_H_ 1
  37:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  38:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #ifndef __DOXYGEN__
  39:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #  endif
  42:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif  /* __DOXYGEN__ */
  43:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  44:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #include <inttypes.h>
  45:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #include <util/delay_basic.h>
  46:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #include <math.h>
  47:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  48:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /** \file */
  49:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \code
  51:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     //#define F_CPU 14.7456E6
  53:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     #include <util/delay.h>
  54:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \endcode
  55:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  56:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \note As an alternative method, it is possible to pass the
  57:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     used.
  60:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  61:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     The functions in this header file are wrappers around the basic
  62:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     convenience functions where actual time values can be specified
  64:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     that compile-time constant expressions will be eliminated by
  66:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     compiler optimization so floating-point expressions can be used
  67:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     frequency passed by the macro F_CPU.
  69:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  70:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \note In order for these functions to work as intended, compiler
  71:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     <em>must</em> be an expression that is a known constant at
  73:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     delay will be much longer (and basically unpredictable), and
  75:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     applications that otherwise do not use floating-point calculations
  76:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     will experience severe code bloat by the floating-point library
  77:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     routines linked into the application.
  78:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  79:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     The functions available allow the specification of microsecond, and
  80:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     millisecond delays directly, using the application-supplied macro
  81:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  83:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** */
  84:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  85:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #if !defined(__DOXYGEN__)
  86:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif
  89:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  90:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #ifndef F_CPU
  91:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /* prevent compiler error by supplying a default */
  92:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /** \ingroup util_delay
  94:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \def F_CPU
  95:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \brief CPU frequency in Hz
  96:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  97:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     the delay macros.  This macro is normally supplied by the
  99:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     environment (e.g. from within a project header, or the project's
 100:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     fallback if no such user-provided definition could be found.
 102:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 103:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     integer value.
 107:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****  */
 108:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** # define F_CPU 1000000UL
 109:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif
 110:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 111:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #ifndef __OPTIMIZE__
 112:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif
 114:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 115:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   __STDC_HOSTED__
 118:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #  include <math.h>
 119:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif
 120:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 121:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /**
 122:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    \ingroup util_delay
 123:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 124:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 126:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    The macro F_CPU is supposed to be defined to a
 127:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 129:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 131:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    When the user request delay which exceed the maximum possible one,
 132:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    user will not be informed about decreased resolution.
 136:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 137:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    values greater than the maximal possible delay, overflows results in
 140:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    no delay i.e., 0ms.
 141:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 142:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    microseconds of delay.
 146:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 147:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    respectively.
 151:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 152:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    \note
 153:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 154:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    The implementation of _delay_ms() based on
 155:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    implementations.  In order to get functionality backward compatible
 157:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    must be defined before including this header file. Also, the
 159:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    backward compatible algorithm will be chosen if the code is
 160:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    not available to the compiler then.
 163:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 164:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****  */
 165:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** void
 166:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** _delay_ms(double __ms)
 1930               		.loc 3 166 1 view .LVU397
 1931               	.LBB61:
 167:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** {
 168:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	double __tmp ;
 1932               		.loc 3 168 2 view .LVU398
 169:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   __STDC_HOSTED__
 172:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	uint32_t __ticks_dc;
 1933               		.loc 3 172 2 view .LVU399
 173:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 1934               		.loc 3 173 2 view .LVU400
 174:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 1935               		.loc 3 174 2 view .LVU401
 175:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 176:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 179:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 182:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#else
 183:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 		//round up by default
 184:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 1936               		.loc 3 184 3 view .LVU402
 185:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#endif
 186:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 187:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 1937               		.loc 3 187 2 view .LVU403
 1938 003a 8FE9      		ldi r24,lo8(3999)
 1939 003c 9FE0      		ldi r25,hi8(3999)
 1940 003e 0197      	1:	sbiw r24,1
 1941 0040 01F4      		brne 1b
 1942 0042 00C0      		rjmp .
 1943 0044 0000      		nop
 1944               	.LVL119:
 1945               	.L88:
 1946               	/* epilogue start */
 1947               		.loc 3 187 2 is_stmt 0 view .LVU404
 1948               	.LBE61:
 1949               	.LBE60:
 597:quantum/rgblight.c **** 
 1950               		.loc 1 597 1 view .LVU405
 1951 0046 0F91      		pop r16
 1952               	.LVL120:
 597:quantum/rgblight.c **** 
 1953               		.loc 1 597 1 view .LVU406
 1954 0048 0895      		ret
 1955               		.cfi_endproc
 1956               	.LFE149:
 1958               		.section	.text.rgblight_sethsv_range,"ax",@progbits
 1959               	.global	rgblight_sethsv_range
 1961               	rgblight_sethsv_range:
 1962               	.LVL121:
 1963               	.LFB150:
 599:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 1964               		.loc 1 599 95 is_stmt 1 view -0
 1965               		.cfi_startproc
 599:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 1966               		.loc 1 599 95 is_stmt 0 view .LVU408
 1967 0000 0F93      		push r16
 1968               	.LCFI37:
 1969               		.cfi_def_cfa_offset 3
 1970               		.cfi_offset 16, -2
 1971 0002 1F93      		push r17
 1972               	.LCFI38:
 1973               		.cfi_def_cfa_offset 4
 1974               		.cfi_offset 17, -3
 1975 0004 CF93      		push r28
 1976               	.LCFI39:
 1977               		.cfi_def_cfa_offset 5
 1978               		.cfi_offset 28, -4
 1979 0006 DF93      		push r29
 1980               	.LCFI40:
 1981               		.cfi_def_cfa_offset 6
 1982               		.cfi_offset 29, -5
 1983 0008 00D0      		rcall .
 1984 000a 0F92      		push __tmp_reg__
 1985               	.LCFI41:
 1986               		.cfi_def_cfa_offset 9
 1987 000c CDB7      		in r28,__SP_L__
 1988 000e DEB7      		in r29,__SP_H__
 1989               	.LCFI42:
 1990               		.cfi_def_cfa_register 28
 1991               	/* prologue: function */
 1992               	/* frame size = 3 */
 1993               	/* stack size = 7 */
 1994               	.L__stack_usage = 7
 1995 0010 122F      		mov r17,r18
 600:quantum/rgblight.c ****         return;
 1996               		.loc 1 600 5 is_stmt 1 view .LVU409
 600:quantum/rgblight.c ****         return;
 1997               		.loc 1 600 25 is_stmt 0 view .LVU410
 1998 0012 9091 0000 		lds r25,rgblight_config
 600:quantum/rgblight.c ****         return;
 1999               		.loc 1 600 8 view .LVU411
 2000 0016 90FF      		sbrs r25,0
 2001 0018 00C0      		rjmp .L95
 604:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 2002               		.loc 1 604 5 is_stmt 1 view .LVU412
 605:quantum/rgblight.c ****     rgblight_setrgb_range(tmp_led.r, tmp_led.g, tmp_led.b, start, end);
 2003               		.loc 1 605 5 view .LVU413
 2004               	.LVL122:
 2005               	.LBB64:
 2006               	.LBI64:
 125:quantum/rgblight.c **** 
 2007               		.loc 1 125 6 view .LVU414
 2008               	.LBB65:
 125:quantum/rgblight.c **** 
 2009               		.loc 1 125 70 view .LVU415
 2010 001a 9E01      		movw r18,r28
 2011               	.LVL123:
 125:quantum/rgblight.c **** 
 2012               		.loc 1 125 70 is_stmt 0 view .LVU416
 2013 001c 2F5F      		subi r18,-1
 2014 001e 3F4F      		sbci r19,-1
 2015 0020 0E94 0000 		call sethsv_raw
 2016               	.LVL124:
 125:quantum/rgblight.c **** 
 2017               		.loc 1 125 70 view .LVU417
 2018               	.LBE65:
 2019               	.LBE64:
 606:quantum/rgblight.c **** }
 2020               		.loc 1 606 5 is_stmt 1 view .LVU418
 2021 0024 212F      		mov r18,r17
 2022 0026 4B81      		ldd r20,Y+3
 2023 0028 6981      		ldd r22,Y+1
 2024 002a 8A81      		ldd r24,Y+2
 2025 002c 0E94 0000 		call rgblight_setrgb_range
 2026               	.LVL125:
 2027               	.L95:
 2028               	/* epilogue start */
 607:quantum/rgblight.c **** 
 2029               		.loc 1 607 1 is_stmt 0 view .LVU419
 2030 0030 0F90      		pop __tmp_reg__
 2031 0032 0F90      		pop __tmp_reg__
 2032 0034 0F90      		pop __tmp_reg__
 2033 0036 DF91      		pop r29
 2034 0038 CF91      		pop r28
 2035 003a 1F91      		pop r17
 2036               	.LVL126:
 607:quantum/rgblight.c **** 
 2037               		.loc 1 607 1 view .LVU420
 2038 003c 0F91      		pop r16
 2039               	.LVL127:
 607:quantum/rgblight.c **** 
 2040               		.loc 1 607 1 view .LVU421
 2041 003e 0895      		ret
 2042               		.cfi_endproc
 2043               	.LFE150:
 2045               		.section	.text.rgblight_sethsv_master,"ax",@progbits
 2046               	.global	rgblight_sethsv_master
 2048               	rgblight_sethsv_master:
 2049               	.LVL128:
 2050               	.LFB153:
 614:quantum/rgblight.c **** 
 2051               		.loc 1 614 68 is_stmt 1 view -0
 2052               		.cfi_startproc
 614:quantum/rgblight.c **** 
 2053               		.loc 1 614 68 is_stmt 0 view .LVU423
 2054 0000 0F93      		push r16
 2055               	.LCFI43:
 2056               		.cfi_def_cfa_offset 3
 2057               		.cfi_offset 16, -2
 2058               	/* prologue: function */
 2059               	/* frame size = 0 */
 2060               	/* stack size = 1 */
 2061               	.L__stack_usage = 1
 614:quantum/rgblight.c **** 
 2062               		.loc 1 614 70 is_stmt 1 view .LVU424
 2063 0002 04E0      		ldi r16,lo8(4)
 2064 0004 20E0      		ldi r18,0
 2065 0006 0E94 0000 		call rgblight_sethsv_range
 2066               	.LVL129:
 2067               	/* epilogue start */
 614:quantum/rgblight.c **** 
 2068               		.loc 1 614 1 is_stmt 0 view .LVU425
 2069 000a 0F91      		pop r16
 2070 000c 0895      		ret
 2071               		.cfi_endproc
 2072               	.LFE153:
 2074               		.section	.text.rgblight_sethsv_slave,"ax",@progbits
 2075               	.global	rgblight_sethsv_slave
 2077               	rgblight_sethsv_slave:
 2078               	.LVL130:
 2079               	.LFB154:
 616:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2080               		.loc 1 616 67 is_stmt 1 view -0
 2081               		.cfi_startproc
 616:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2082               		.loc 1 616 67 is_stmt 0 view .LVU427
 2083 0000 0F93      		push r16
 2084               	.LCFI44:
 2085               		.cfi_def_cfa_offset 3
 2086               		.cfi_offset 16, -2
 2087               	/* prologue: function */
 2088               	/* frame size = 0 */
 2089               	/* stack size = 1 */
 2090               	.L__stack_usage = 1
 616:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2091               		.loc 1 616 69 is_stmt 1 view .LVU428
 2092 0002 08E0      		ldi r16,lo8(8)
 2093 0004 24E0      		ldi r18,lo8(4)
 2094 0006 0E94 0000 		call rgblight_sethsv_range
 2095               	.LVL131:
 2096               	/* epilogue start */
 616:quantum/rgblight.c **** #endif  // ifndef RGBLIGHT_SPLIT
 2097               		.loc 1 616 1 is_stmt 0 view .LVU429
 2098 000a 0F91      		pop r16
 2099 000c 0895      		ret
 2100               		.cfi_endproc
 2101               	.LFE154:
 2103               		.section	.text.rgblight_setrgb_master,"ax",@progbits
 2104               	.global	rgblight_setrgb_master
 2106               	rgblight_setrgb_master:
 2107               	.LVL132:
 2108               	.LFB151:
 610:quantum/rgblight.c **** 
 2109               		.loc 1 610 62 is_stmt 1 view -0
 2110               		.cfi_startproc
 610:quantum/rgblight.c **** 
 2111               		.loc 1 610 62 is_stmt 0 view .LVU431
 2112 0000 0F93      		push r16
 2113               	.LCFI45:
 2114               		.cfi_def_cfa_offset 3
 2115               		.cfi_offset 16, -2
 2116               	/* prologue: function */
 2117               	/* frame size = 0 */
 2118               	/* stack size = 1 */
 2119               	.L__stack_usage = 1
 610:quantum/rgblight.c **** 
 2120               		.loc 1 610 64 is_stmt 1 view .LVU432
 2121 0002 04E0      		ldi r16,lo8(4)
 2122 0004 20E0      		ldi r18,0
 2123 0006 0E94 0000 		call rgblight_setrgb_range
 2124               	.LVL133:
 2125               	/* epilogue start */
 610:quantum/rgblight.c **** 
 2126               		.loc 1 610 1 is_stmt 0 view .LVU433
 2127 000a 0F91      		pop r16
 2128 000c 0895      		ret
 2129               		.cfi_endproc
 2130               	.LFE151:
 2132               		.section	.text.rgblight_setrgb_slave,"ax",@progbits
 2133               	.global	rgblight_setrgb_slave
 2135               	rgblight_setrgb_slave:
 2136               	.LVL134:
 2137               	.LFB152:
 612:quantum/rgblight.c **** 
 2138               		.loc 1 612 61 is_stmt 1 view -0
 2139               		.cfi_startproc
 612:quantum/rgblight.c **** 
 2140               		.loc 1 612 61 is_stmt 0 view .LVU435
 2141 0000 0F93      		push r16
 2142               	.LCFI46:
 2143               		.cfi_def_cfa_offset 3
 2144               		.cfi_offset 16, -2
 2145               	/* prologue: function */
 2146               	/* frame size = 0 */
 2147               	/* stack size = 1 */
 2148               	.L__stack_usage = 1
 612:quantum/rgblight.c **** 
 2149               		.loc 1 612 63 is_stmt 1 view .LVU436
 2150 0002 08E0      		ldi r16,lo8(8)
 2151 0004 24E0      		ldi r18,lo8(4)
 2152 0006 0E94 0000 		call rgblight_setrgb_range
 2153               	.LVL135:
 2154               	/* epilogue start */
 612:quantum/rgblight.c **** 
 2155               		.loc 1 612 1 is_stmt 0 view .LVU437
 2156 000a 0F91      		pop r16
 2157 000c 0895      		ret
 2158               		.cfi_endproc
 2159               	.LFE152:
 2161               		.section	.text.rgblight_effect_knight,"ax",@progbits
 2162               	.global	rgblight_effect_knight
 2164               	rgblight_effect_knight:
 2165               	.LVL136:
 2166               	.LFB163:
 760:quantum/rgblight.c **** 
 761:quantum/rgblight.c **** void rgblight_task(void) {
 762:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 763:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 764:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 765:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 766:quantum/rgblight.c ****         animation_status.delta      = delta;
 767:quantum/rgblight.c **** 
 768:quantum/rgblight.c ****         // static light mode, do nothing here
 769:quantum/rgblight.c ****         if (1 == 0) {  // dummy
 770:quantum/rgblight.c ****         }
 771:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_BREATHING
 772:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_BREATHING) {
 773:quantum/rgblight.c ****             // breathing mode
 774:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_BREATHING_INTERVALS[delta], 1, 100);
 775:quantum/rgblight.c ****             effect_func   = rgblight_effect_breathing;
 776:quantum/rgblight.c ****         }
 777:quantum/rgblight.c **** #    endif
 778:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 779:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_MOOD) {
 780:quantum/rgblight.c ****             // rainbow mood mode
 781:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_RAINBOW_MOOD_INTERVALS[delta], 5, 100);
 782:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_mood;
 783:quantum/rgblight.c ****         }
 784:quantum/rgblight.c **** #    endif
 785:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 786:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RAINBOW_SWIRL) {
 787:quantum/rgblight.c ****             // rainbow swirl mode
 788:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_RAINBOW_SWIRL_INTERVALS[delta / 2], 1, 100);
 789:quantum/rgblight.c ****             effect_func   = rgblight_effect_rainbow_swirl;
 790:quantum/rgblight.c ****         }
 791:quantum/rgblight.c **** #    endif
 792:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_SNAKE
 793:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_SNAKE) {
 794:quantum/rgblight.c ****             // snake mode
 795:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_SNAKE_INTERVALS[delta / 2], 1, 200);
 796:quantum/rgblight.c ****             effect_func   = rgblight_effect_snake;
 797:quantum/rgblight.c ****         }
 798:quantum/rgblight.c **** #    endif
 799:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_KNIGHT
 800:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_KNIGHT) {
 801:quantum/rgblight.c ****             // knight mode
 802:quantum/rgblight.c ****             interval_time = get_interval_time(&RGBLED_KNIGHT_INTERVALS[delta], 5, 100);
 803:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 804:quantum/rgblight.c ****         }
 805:quantum/rgblight.c **** #    endif
 806:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_CHRISTMAS
 807:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_CHRISTMAS) {
 808:quantum/rgblight.c ****             // christmas mode
 809:quantum/rgblight.c ****             interval_time = RGBLIGHT_EFFECT_CHRISTMAS_INTERVAL;
 810:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_christmas;
 811:quantum/rgblight.c ****         }
 812:quantum/rgblight.c **** #    endif
 813:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_RGB_TEST
 814:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_RGB_TEST) {
 815:quantum/rgblight.c ****             // RGB test mode
 816:quantum/rgblight.c ****             interval_time = pgm_read_word(&RGBLED_RGBTEST_INTERVALS[0]);
 817:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_rgbtest;
 818:quantum/rgblight.c ****         }
 819:quantum/rgblight.c **** #    endif
 820:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_ALTERNATING
 821:quantum/rgblight.c ****         else if (rgblight_status.base_mode == RGBLIGHT_MODE_ALTERNATING) {
 822:quantum/rgblight.c ****             interval_time = 500;
 823:quantum/rgblight.c ****             effect_func   = (effect_func_t)rgblight_effect_alternating;
 824:quantum/rgblight.c ****         }
 825:quantum/rgblight.c **** #    endif
 826:quantum/rgblight.c ****         if (animation_status.restart) {
 827:quantum/rgblight.c ****             animation_status.restart    = false;
 828:quantum/rgblight.c ****             animation_status.last_timer = timer_read() - interval_time - 1;
 829:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 830:quantum/rgblight.c ****         }
 831:quantum/rgblight.c ****         if (timer_elapsed(animation_status.last_timer) >= interval_time) {
 832:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 833:quantum/rgblight.c ****             static uint16_t report_last_timer = 0;
 834:quantum/rgblight.c ****             static bool     tick_flag         = false;
 835:quantum/rgblight.c ****             uint16_t        oldpos16;
 836:quantum/rgblight.c ****             if (tick_flag) {
 837:quantum/rgblight.c ****                 tick_flag = false;
 838:quantum/rgblight.c ****                 if (timer_elapsed(report_last_timer) >= 30000) {
 839:quantum/rgblight.c ****                     report_last_timer = timer_read();
 840:quantum/rgblight.c ****                     dprintf("rgblight animation tick report to slave\n");
 841:quantum/rgblight.c ****                     RGBLIGHT_SPLIT_ANIMATION_TICK;
 842:quantum/rgblight.c ****                 }
 843:quantum/rgblight.c ****             }
 844:quantum/rgblight.c ****             oldpos16 = animation_status.pos16;
 845:quantum/rgblight.c **** #    endif
 846:quantum/rgblight.c ****             animation_status.last_timer += interval_time;
 847:quantum/rgblight.c ****             effect_func(&animation_status);
 848:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 849:quantum/rgblight.c ****             if (animation_status.pos16 == 0 && oldpos16 != 0) {
 850:quantum/rgblight.c ****                 tick_flag = true;
 851:quantum/rgblight.c ****             }
 852:quantum/rgblight.c **** #    endif
 853:quantum/rgblight.c ****         }
 854:quantum/rgblight.c ****     }
 855:quantum/rgblight.c **** }
 856:quantum/rgblight.c **** 
 857:quantum/rgblight.c **** #endif /* RGBLIGHT_USE_TIMER */
 858:quantum/rgblight.c **** 
 859:quantum/rgblight.c **** // Effects
 860:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_BREATHING
 861:quantum/rgblight.c **** 
 862:quantum/rgblight.c **** #    ifndef RGBLIGHT_EFFECT_BREATHE_CENTER
 863:quantum/rgblight.c **** #        ifndef RGBLIGHT_BREATHE_TABLE_SIZE
 864:quantum/rgblight.c **** #            define RGBLIGHT_BREATHE_TABLE_SIZE 256  // 256 or 128 or 64
 865:quantum/rgblight.c **** #        endif
 866:quantum/rgblight.c **** #        include <rgblight_breathe_table.h>
 867:quantum/rgblight.c **** #    endif
 868:quantum/rgblight.c **** 
 869:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_BREATHING_INTERVALS[] PROGMEM = {30, 20, 10, 5};
 870:quantum/rgblight.c **** 
 871:quantum/rgblight.c **** void rgblight_effect_breathing(animation_status_t *anim) {
 872:quantum/rgblight.c ****     float val;
 873:quantum/rgblight.c **** 
 874:quantum/rgblight.c ****     // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
 875:quantum/rgblight.c **** #    ifdef RGBLIGHT_EFFECT_BREATHE_TABLE
 876:quantum/rgblight.c ****     val = pgm_read_byte(&rgblight_effect_breathe_table[anim->pos / table_scale]);
 877:quantum/rgblight.c **** #    else
 878:quantum/rgblight.c ****     val = (exp(sin((anim->pos / 255.0) * M_PI)) - RGBLIGHT_EFFECT_BREATHE_CENTER / M_E) * (RGBLIGHT
 879:quantum/rgblight.c **** #    endif
 880:quantum/rgblight.c ****     rgblight_sethsv_noeeprom_old(rgblight_config.hue, rgblight_config.sat, val);
 881:quantum/rgblight.c ****     anim->pos = (anim->pos + 1);
 882:quantum/rgblight.c **** }
 883:quantum/rgblight.c **** #endif
 884:quantum/rgblight.c **** 
 885:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_MOOD
 886:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_RAINBOW_MOOD_INTERVALS[] PROGMEM = {120, 60, 30};
 887:quantum/rgblight.c **** 
 888:quantum/rgblight.c **** void rgblight_effect_rainbow_mood(animation_status_t *anim) {
 889:quantum/rgblight.c ****     rgblight_sethsv_noeeprom_old(anim->current_hue, rgblight_config.sat, rgblight_config.val);
 890:quantum/rgblight.c ****     anim->current_hue++;
 891:quantum/rgblight.c **** }
 892:quantum/rgblight.c **** #endif
 893:quantum/rgblight.c **** 
 894:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_RAINBOW_SWIRL
 895:quantum/rgblight.c **** #    ifndef RGBLIGHT_RAINBOW_SWIRL_RANGE
 896:quantum/rgblight.c **** #        define RGBLIGHT_RAINBOW_SWIRL_RANGE 255
 897:quantum/rgblight.c **** #    endif
 898:quantum/rgblight.c **** 
 899:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_RAINBOW_SWIRL_INTERVALS[] PROGMEM = {100, 50, 20};
 900:quantum/rgblight.c **** 
 901:quantum/rgblight.c **** void rgblight_effect_rainbow_swirl(animation_status_t *anim) {
 902:quantum/rgblight.c ****     uint8_t hue;
 903:quantum/rgblight.c ****     uint8_t i;
 904:quantum/rgblight.c **** 
 905:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
 906:quantum/rgblight.c ****         hue = (RGBLIGHT_RAINBOW_SWIRL_RANGE / effect_num_leds * i + anim->current_hue);
 907:quantum/rgblight.c ****         sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i + effect_start_pos
 908:quantum/rgblight.c ****     }
 909:quantum/rgblight.c ****     rgblight_set();
 910:quantum/rgblight.c **** 
 911:quantum/rgblight.c ****     if (anim->delta % 2) {
 912:quantum/rgblight.c ****         anim->current_hue++;
 913:quantum/rgblight.c ****     } else {
 914:quantum/rgblight.c ****         anim->current_hue--;
 915:quantum/rgblight.c ****     }
 916:quantum/rgblight.c **** }
 917:quantum/rgblight.c **** #endif
 918:quantum/rgblight.c **** 
 919:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_SNAKE
 920:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_SNAKE_INTERVALS[] PROGMEM = {100, 50, 20};
 921:quantum/rgblight.c **** 
 922:quantum/rgblight.c **** void rgblight_effect_snake(animation_status_t *anim) {
 923:quantum/rgblight.c ****     static uint8_t pos = 0;
 924:quantum/rgblight.c ****     uint8_t        i, j;
 925:quantum/rgblight.c ****     int8_t         k;
 926:quantum/rgblight.c ****     int8_t         increment = 1;
 927:quantum/rgblight.c **** 
 928:quantum/rgblight.c ****     if (anim->delta % 2) {
 929:quantum/rgblight.c ****         increment = -1;
 930:quantum/rgblight.c ****     }
 931:quantum/rgblight.c **** 
 932:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 933:quantum/rgblight.c ****     if (anim->pos == 0) {  // restart signal
 934:quantum/rgblight.c ****         if (increment == 1) {
 935:quantum/rgblight.c ****             pos = effect_num_leds - 1;
 936:quantum/rgblight.c ****         } else {
 937:quantum/rgblight.c ****             pos = 0;
 938:quantum/rgblight.c ****         }
 939:quantum/rgblight.c ****         anim->pos = 1;
 940:quantum/rgblight.c ****     }
 941:quantum/rgblight.c **** #    endif
 942:quantum/rgblight.c **** 
 943:quantum/rgblight.c ****     for (i = 0; i < effect_num_leds; i++) {
 944:quantum/rgblight.c ****         LED_TYPE *ledp = led + i + effect_start_pos;
 945:quantum/rgblight.c ****         ledp->r        = 0;
 946:quantum/rgblight.c ****         ledp->g        = 0;
 947:quantum/rgblight.c ****         ledp->b        = 0;
 948:quantum/rgblight.c **** #    ifdef RGBW
 949:quantum/rgblight.c ****         ledp->w = 0;
 950:quantum/rgblight.c **** #    endif
 951:quantum/rgblight.c ****         for (j = 0; j < RGBLIGHT_EFFECT_SNAKE_LENGTH; j++) {
 952:quantum/rgblight.c ****             k = pos + j * increment;
 953:quantum/rgblight.c ****             if (k > RGBLED_NUM) {
 954:quantum/rgblight.c ****                 k = k % RGBLED_NUM;
 955:quantum/rgblight.c ****             }
 956:quantum/rgblight.c ****             if (k < 0) {
 957:quantum/rgblight.c ****                 k = k + effect_num_leds;
 958:quantum/rgblight.c ****             }
 959:quantum/rgblight.c ****             if (i == k) {
 960:quantum/rgblight.c ****                 sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val * (R
 961:quantum/rgblight.c ****             }
 962:quantum/rgblight.c ****         }
 963:quantum/rgblight.c ****     }
 964:quantum/rgblight.c ****     rgblight_set();
 965:quantum/rgblight.c ****     if (increment == 1) {
 966:quantum/rgblight.c ****         if (pos - 1 < 0) {
 967:quantum/rgblight.c ****             pos = effect_num_leds - 1;
 968:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 969:quantum/rgblight.c ****             anim->pos = 0;
 970:quantum/rgblight.c **** #    endif
 971:quantum/rgblight.c ****         } else {
 972:quantum/rgblight.c ****             pos -= 1;
 973:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 974:quantum/rgblight.c ****             anim->pos = 1;
 975:quantum/rgblight.c **** #    endif
 976:quantum/rgblight.c ****         }
 977:quantum/rgblight.c ****     } else {
 978:quantum/rgblight.c ****         pos = (pos + 1) % effect_num_leds;
 979:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 980:quantum/rgblight.c ****         anim->pos = pos;
 981:quantum/rgblight.c **** #    endif
 982:quantum/rgblight.c ****     }
 983:quantum/rgblight.c **** }
 984:quantum/rgblight.c **** #endif
 985:quantum/rgblight.c **** 
 986:quantum/rgblight.c **** #ifdef RGBLIGHT_EFFECT_KNIGHT
 987:quantum/rgblight.c **** __attribute__((weak)) const uint8_t RGBLED_KNIGHT_INTERVALS[] PROGMEM = {127, 63, 31};
 988:quantum/rgblight.c **** 
 989:quantum/rgblight.c **** void rgblight_effect_knight(animation_status_t *anim) {
 2167               		.loc 1 989 55 is_stmt 1 view -0
 2168               		.cfi_startproc
 2169               		.loc 1 989 55 is_stmt 0 view .LVU439
 2170 0000 CF93      		push r28
 2171               	.LCFI47:
 2172               		.cfi_def_cfa_offset 3
 2173               		.cfi_offset 28, -2
 2174               	/* prologue: function */
 2175               	/* frame size = 0 */
 2176               	/* stack size = 1 */
 2177               	.L__stack_usage = 1
 990:quantum/rgblight.c ****     static int8_t low_bound  = 0;
 2178               		.loc 1 990 5 is_stmt 1 view .LVU440
 991:quantum/rgblight.c ****     static int8_t high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
 2179               		.loc 1 991 5 view .LVU441
 992:quantum/rgblight.c ****     static int8_t increment  = 1;
 2180               		.loc 1 992 5 view .LVU442
 993:quantum/rgblight.c ****     uint8_t       i, cur;
 2181               		.loc 1 993 5 view .LVU443
 994:quantum/rgblight.c **** 
 995:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 996:quantum/rgblight.c ****     if (anim->pos == 0) {  // restart signal
 997:quantum/rgblight.c ****         anim->pos  = 1;
 998:quantum/rgblight.c ****         low_bound  = 0;
 999:quantum/rgblight.c ****         high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
1000:quantum/rgblight.c ****         increment  = 1;
1001:quantum/rgblight.c ****     }
1002:quantum/rgblight.c **** #    endif
1003:quantum/rgblight.c ****     // Set all the LEDs to 0
1004:quantum/rgblight.c ****     for (i = effect_start_pos; i < effect_end_pos; i++) {
 2182               		.loc 1 1004 5 view .LVU444
 2183               		.loc 1 1004 12 is_stmt 0 view .LVU445
 2184 0002 2091 0000 		lds r18,effect_start_pos
 2185               	.LVL137:
 2186               		.loc 1 1004 34 view .LVU446
 2187 0006 3091 0000 		lds r19,effect_end_pos
 2188 000a 822F      		mov r24,r18
 2189               	.LVL138:
 2190               		.loc 1 1004 34 view .LVU447
 2191 000c 90E0      		ldi r25,0
 2192 000e 63E0      		ldi r22,lo8(3)
 2193 0010 70E0      		ldi r23,0
 2194 0012 0E94 0000 		call __mulhi3
 2195 0016 FC01      		movw r30,r24
 2196 0018 E050      		subi r30,lo8(-(led))
 2197 001a F040      		sbci r31,hi8(-(led))
 2198               	.L103:
 2199               		.loc 1 1004 5 discriminator 1 view .LVU448
 2200 001c 2317      		cp r18,r19
 2201 001e 00F0      		brlo .L104
1005:quantum/rgblight.c ****         led[i].r = 0;
1006:quantum/rgblight.c ****         led[i].g = 0;
1007:quantum/rgblight.c ****         led[i].b = 0;
1008:quantum/rgblight.c **** #    ifdef RGBW
1009:quantum/rgblight.c ****         led[i].w = 0;
1010:quantum/rgblight.c **** #    endif
1011:quantum/rgblight.c ****     }
1012:quantum/rgblight.c ****     // Determine which LEDs should be lit up
1013:quantum/rgblight.c ****     for (i = 0; i < RGBLIGHT_EFFECT_KNIGHT_LED_NUM; i++) {
 2202               		.loc 1 1013 12 view .LVU449
 2203 0020 C0E0      		ldi r28,0
 2204               	.LVL139:
 2205               	.L105:
 2206               		.loc 1 1013 19 discriminator 1 view .LVU450
 2207 0022 6091 0000 		lds r22,effect_num_leds
 2208               		.loc 1 1013 5 discriminator 1 view .LVU451
 2209 0026 C617      		cp r28,r22
 2210 0028 00F0      		brlo .L108
1014:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
1015:quantum/rgblight.c **** 
1016:quantum/rgblight.c ****         if (i >= low_bound && i <= high_bound) {
1017:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
1018:quantum/rgblight.c ****         } else {
1019:quantum/rgblight.c ****             led[cur].r = 0;
1020:quantum/rgblight.c ****             led[cur].g = 0;
1021:quantum/rgblight.c ****             led[cur].b = 0;
1022:quantum/rgblight.c **** #    ifdef RGBW
1023:quantum/rgblight.c ****             led[cur].w = 0;
1024:quantum/rgblight.c **** #    endif
1025:quantum/rgblight.c ****         }
1026:quantum/rgblight.c ****     }
1027:quantum/rgblight.c ****     rgblight_set();
 2211               		.loc 1 1027 5 is_stmt 1 view .LVU452
 2212 002a 0E94 0000 		call rgblight_set
 2213               	.LVL140:
1028:quantum/rgblight.c **** 
1029:quantum/rgblight.c ****     // Move from low_bound to high_bound changing the direction we increment each
1030:quantum/rgblight.c ****     // time a boundary is hit.
1031:quantum/rgblight.c ****     low_bound += increment;
 2214               		.loc 1 1031 5 view .LVU453
 2215               		.loc 1 1031 15 is_stmt 0 view .LVU454
 2216 002e 2091 0000 		lds r18,increment.3153
 2217 0032 8091 0000 		lds r24,low_bound.3151
 2218 0036 820F      		add r24,r18
 2219 0038 8093 0000 		sts low_bound.3151,r24
1032:quantum/rgblight.c ****     high_bound += increment;
 2220               		.loc 1 1032 5 is_stmt 1 view .LVU455
 2221               		.loc 1 1032 16 is_stmt 0 view .LVU456
 2222 003c 9091 0000 		lds r25,high_bound.3152
 2223 0040 920F      		add r25,r18
 2224 0042 9093 0000 		sts high_bound.3152,r25
1033:quantum/rgblight.c **** 
1034:quantum/rgblight.c ****     if (high_bound <= 0 || low_bound >= RGBLIGHT_EFFECT_KNIGHT_LED_NUM - 1) {
 2225               		.loc 1 1034 5 is_stmt 1 view .LVU457
 2226               		.loc 1 1034 8 is_stmt 0 view .LVU458
 2227 0046 1916      		cp __zero_reg__,r25
 2228 0048 04F4      		brge .L109
 2229               		.loc 1 1034 38 discriminator 1 view .LVU459
 2230 004a 082E      		mov __tmp_reg__,r24
 2231 004c 000C      		lsl r0
 2232 004e 990B      		sbc r25,r25
 2233               		.loc 1 1034 72 discriminator 1 view .LVU460
 2234 0050 4091 0000 		lds r20,effect_num_leds
 2235 0054 4150      		subi r20,1
 2236 0056 550B      		sbc r21,r21
 2237               		.loc 1 1034 25 discriminator 1 view .LVU461
 2238 0058 8417      		cp r24,r20
 2239 005a 9507      		cpc r25,r21
 2240 005c 04F0      		brlt .L102
 2241               	.L109:
1035:quantum/rgblight.c ****         increment = -increment;
 2242               		.loc 1 1035 9 is_stmt 1 view .LVU462
 2243               		.loc 1 1035 19 is_stmt 0 view .LVU463
 2244 005e 2195      		neg r18
 2245 0060 2093 0000 		sts increment.3153,r18
 2246               	.L102:
 2247               	/* epilogue start */
1036:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
1037:quantum/rgblight.c ****         if (increment == 1) {
1038:quantum/rgblight.c ****             anim->pos = 0;
1039:quantum/rgblight.c ****         }
1040:quantum/rgblight.c **** #    endif
1041:quantum/rgblight.c ****     }
1042:quantum/rgblight.c **** }
 2248               		.loc 1 1042 1 view .LVU464
 2249 0064 CF91      		pop r28
 2250               	.LVL141:
 2251               		.loc 1 1042 1 view .LVU465
 2252 0066 0895      		ret
 2253               	.LVL142:
 2254               	.L104:
1005:quantum/rgblight.c ****         led[i].g = 0;
 2255               		.loc 1 1005 9 is_stmt 1 discriminator 3 view .LVU466
1005:quantum/rgblight.c ****         led[i].g = 0;
 2256               		.loc 1 1005 18 is_stmt 0 discriminator 3 view .LVU467
 2257 0068 1182      		std Z+1,__zero_reg__
1006:quantum/rgblight.c ****         led[i].b = 0;
 2258               		.loc 1 1006 9 is_stmt 1 discriminator 3 view .LVU468
1006:quantum/rgblight.c ****         led[i].b = 0;
 2259               		.loc 1 1006 18 is_stmt 0 discriminator 3 view .LVU469
 2260 006a 1082      		st Z,__zero_reg__
1007:quantum/rgblight.c **** #    ifdef RGBW
 2261               		.loc 1 1007 9 is_stmt 1 discriminator 3 view .LVU470
1007:quantum/rgblight.c **** #    ifdef RGBW
 2262               		.loc 1 1007 18 is_stmt 0 discriminator 3 view .LVU471
 2263 006c 1282      		std Z+2,__zero_reg__
1004:quantum/rgblight.c ****         led[i].r = 0;
 2264               		.loc 1 1004 53 discriminator 3 view .LVU472
 2265 006e 2F5F      		subi r18,lo8(-(1))
 2266               	.LVL143:
1004:quantum/rgblight.c ****         led[i].r = 0;
 2267               		.loc 1 1004 53 discriminator 3 view .LVU473
 2268 0070 3396      		adiw r30,3
 2269 0072 00C0      		rjmp .L103
 2270               	.LVL144:
 2271               	.L108:
1014:quantum/rgblight.c **** 
 2272               		.loc 1 1014 9 is_stmt 1 view .LVU474
1014:quantum/rgblight.c **** 
 2273               		.loc 1 1014 18 is_stmt 0 view .LVU475
 2274 0074 EC2F      		mov r30,r28
 2275 0076 F0E0      		ldi r31,0
1014:quantum/rgblight.c **** 
 2276               		.loc 1 1014 51 view .LVU476
 2277 0078 70E0      		ldi r23,0
 2278 007a CF01      		movw r24,r30
 2279 007c 0E94 0000 		call __divmodhi4
1014:quantum/rgblight.c **** 
 2280               		.loc 1 1014 13 view .LVU477
 2281 0080 9091 0000 		lds r25,effect_start_pos
 2282 0084 890F      		add r24,r25
 2283               	.LVL145:
1016:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 2284               		.loc 1 1016 9 is_stmt 1 view .LVU478
 2285 0086 90E0      		ldi r25,0
1016:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 2286               		.loc 1 1016 15 is_stmt 0 view .LVU479
 2287 0088 2091 0000 		lds r18,low_bound.3151
 2288 008c 022E      		mov __tmp_reg__,r18
 2289 008e 000C      		lsl r0
 2290 0090 330B      		sbc r19,r19
1017:quantum/rgblight.c ****         } else {
 2291               		.loc 1 1017 13 view .LVU480
 2292 0092 63E0      		ldi r22,lo8(3)
 2293 0094 70E0      		ldi r23,0
 2294 0096 0E94 0000 		call __mulhi3
 2295               	.LVL146:
1016:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 2296               		.loc 1 1016 12 view .LVU481
 2297 009a E217      		cp r30,r18
 2298 009c F307      		cpc r31,r19
 2299 009e 04F0      		brlt .L106
1016:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 2300               		.loc 1 1016 33 discriminator 1 view .LVU482
 2301 00a0 2091 0000 		lds r18,high_bound.3152
 2302 00a4 022E      		mov __tmp_reg__,r18
 2303 00a6 000C      		lsl r0
 2304 00a8 330B      		sbc r19,r19
1016:quantum/rgblight.c ****             sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[
 2305               		.loc 1 1016 28 discriminator 1 view .LVU483
 2306 00aa 2E17      		cp r18,r30
 2307 00ac 3F07      		cpc r19,r31
 2308 00ae 04F0      		brlt .L106
1017:quantum/rgblight.c ****         } else {
 2309               		.loc 1 1017 13 is_stmt 1 view .LVU484
 2310               	.LVL147:
 2311               	.LBB68:
 2312               	.LBI68:
 125:quantum/rgblight.c **** 
 2313               		.loc 1 125 6 view .LVU485
 2314               	.LBB69:
 125:quantum/rgblight.c **** 
 2315               		.loc 1 125 70 view .LVU486
 2316               	.LBE69:
 2317               	.LBE68:
1017:quantum/rgblight.c ****         } else {
 2318               		.loc 1 1017 13 is_stmt 0 view .LVU487
 2319 00b0 9C01      		movw r18,r24
 2320 00b2 2050      		subi r18,lo8(-(led))
 2321 00b4 3040      		sbci r19,hi8(-(led))
 2322               	.LBB71:
 2323               	.LBB70:
 125:quantum/rgblight.c **** 
 2324               		.loc 1 125 70 view .LVU488
 2325 00b6 4091 0000 		lds r20,rgblight_config+3
 2326 00ba 6091 0000 		lds r22,rgblight_config+2
 2327 00be 8091 0000 		lds r24,rgblight_config+1
 2328 00c2 0E94 0000 		call sethsv_raw
 2329               	.LVL148:
 2330               	.L107:
 125:quantum/rgblight.c **** 
 2331               		.loc 1 125 70 view .LVU489
 2332               	.LBE70:
 2333               	.LBE71:
1013:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
 2334               		.loc 1 1013 54 discriminator 2 view .LVU490
 2335 00c6 CF5F      		subi r28,lo8(-(1))
 2336               	.LVL149:
1013:quantum/rgblight.c ****         cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % effect_num_leds + effect_start_pos;
 2337               		.loc 1 1013 54 discriminator 2 view .LVU491
 2338 00c8 00C0      		rjmp .L105
 2339               	.L106:
1019:quantum/rgblight.c ****             led[cur].g = 0;
 2340               		.loc 1 1019 13 is_stmt 1 view .LVU492
1019:quantum/rgblight.c ****             led[cur].g = 0;
 2341               		.loc 1 1019 24 is_stmt 0 view .LVU493
 2342 00ca FC01      		movw r30,r24
 2343 00cc E050      		subi r30,lo8(-(led))
 2344 00ce F040      		sbci r31,hi8(-(led))
 2345 00d0 1182      		std Z+1,__zero_reg__
1020:quantum/rgblight.c ****             led[cur].b = 0;
 2346               		.loc 1 1020 13 is_stmt 1 view .LVU494
1020:quantum/rgblight.c ****             led[cur].b = 0;
 2347               		.loc 1 1020 24 is_stmt 0 view .LVU495
 2348 00d2 1082      		st Z,__zero_reg__
1021:quantum/rgblight.c **** #    ifdef RGBW
 2349               		.loc 1 1021 13 is_stmt 1 view .LVU496
1021:quantum/rgblight.c **** #    ifdef RGBW
 2350               		.loc 1 1021 24 is_stmt 0 view .LVU497
 2351 00d4 1282      		std Z+2,__zero_reg__
 2352 00d6 00C0      		rjmp .L107
 2353               		.cfi_endproc
 2354               	.LFE163:
 2356               		.section	.text.rgblight_disable,"ax",@progbits
 2357               	.global	rgblight_disable
 2359               	rgblight_disable:
 2360               	.LFB112:
 353:quantum/rgblight.c ****     rgblight_config.enable = 0;
 2361               		.loc 1 353 29 is_stmt 1 view -0
 2362               		.cfi_startproc
 2363               	/* prologue: function */
 2364               	/* frame size = 0 */
 2365               	/* stack size = 0 */
 2366               	.L__stack_usage = 0
 354:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 2367               		.loc 1 354 5 view .LVU499
 354:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 2368               		.loc 1 354 28 is_stmt 0 view .LVU500
 2369 0000 E0E0      		ldi r30,lo8(rgblight_config)
 2370 0002 F0E0      		ldi r31,hi8(rgblight_config)
 2371 0004 8081      		ld r24,Z
 2372 0006 8E7F      		andi r24,lo8(~(1<<0))
 2373 0008 8083      		st Z,r24
 355:quantum/rgblight.c ****     dprintf("rgblight disable [EEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 2374               		.loc 1 355 5 is_stmt 1 view .LVU501
 2375 000a 6081      		ld r22,Z
 2376 000c 7181      		ldd r23,Z+1
 2377 000e 8281      		ldd r24,Z+2
 2378 0010 9381      		ldd r25,Z+3
 2379 0012 0E94 0000 		call eeconfig_update_rgblight
 2380               	.LVL150:
 356:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 2381               		.loc 1 356 96 view .LVU502
 358:quantum/rgblight.c **** #endif
 2382               		.loc 1 358 5 view .LVU503
 2383               	.LBB76:
 2384               	.LBI76:
 701:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 2385               		.loc 1 701 6 view .LVU504
 2386               	.LBB77:
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2387               		.loc 1 718 5 view .LVU505
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2388               		.loc 1 718 35 is_stmt 0 view .LVU506
 2389 0016 1092 0000 		sts rgblight_status+1,__zero_reg__
 719:quantum/rgblight.c **** }
 2390               		.loc 1 719 43 is_stmt 1 view .LVU507
 2391               	.LBE77:
 2392               	.LBE76:
 360:quantum/rgblight.c ****     wait_ms(50);
 2393               		.loc 1 360 35 view .LVU508
 361:quantum/rgblight.c ****     rgblight_set();
 2394               		.loc 1 361 5 view .LVU509
 2395               	.LVL151:
 2396               	.LBB78:
 2397               	.LBI78:
 166:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** {
 2398               		.loc 3 166 1 view .LVU510
 2399               	.LBB79:
 168:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 2400               		.loc 3 168 2 view .LVU511
 172:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 2401               		.loc 3 172 2 view .LVU512
 173:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 2402               		.loc 3 173 2 view .LVU513
 174:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 2403               		.loc 3 174 2 view .LVU514
 184:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#endif
 2404               		.loc 3 184 3 view .LVU515
 2405               		.loc 3 187 2 view .LVU516
 2406 001a 2FEF      		ldi r18,lo8(159999)
 2407 001c 80E7      		ldi r24,hi8(159999)
 2408 001e 92E0      		ldi r25,hlo8(159999)
 2409 0020 2150      	1:	subi r18,1
 2410 0022 8040      		sbci r24,0
 2411 0024 9040      		sbci r25,0
 2412 0026 01F4      		brne 1b
 2413 0028 00C0      		rjmp .
 2414 002a 0000      		nop
 2415               	.LVL152:
 2416               		.loc 3 187 2 is_stmt 0 view .LVU517
 2417               	.LBE79:
 2418               	.LBE78:
 362:quantum/rgblight.c **** }
 2419               		.loc 1 362 5 is_stmt 1 view .LVU518
 2420 002c 0C94 0000 		jmp rgblight_set
 2421               	.LVL153:
 2422               		.cfi_endproc
 2423               	.LFE112:
 2425               		.section	.text.rgblight_disable_noeeprom,"ax",@progbits
 2426               	.global	rgblight_disable_noeeprom
 2428               	rgblight_disable_noeeprom:
 2429               	.LFB113:
 365:quantum/rgblight.c ****     rgblight_config.enable = 0;
 2430               		.loc 1 365 38 view -0
 2431               		.cfi_startproc
 2432               	/* prologue: function */
 2433               	/* frame size = 0 */
 2434               	/* stack size = 0 */
 2435               	.L__stack_usage = 0
 366:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 2436               		.loc 1 366 5 view .LVU520
 366:quantum/rgblight.c ****     dprintf("rgblight disable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 2437               		.loc 1 366 28 is_stmt 0 view .LVU521
 2438 0000 E0E0      		ldi r30,lo8(rgblight_config)
 2439 0002 F0E0      		ldi r31,hi8(rgblight_config)
 2440 0004 8081      		ld r24,Z
 2441 0006 8E7F      		andi r24,lo8(~(1<<0))
 2442 0008 8083      		st Z,r24
 367:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 2443               		.loc 1 367 98 is_stmt 1 view .LVU522
 369:quantum/rgblight.c **** #endif
 2444               		.loc 1 369 5 view .LVU523
 2445               	.LBB84:
 2446               	.LBI84:
 701:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 2447               		.loc 1 701 6 view .LVU524
 2448               	.LBB85:
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2449               		.loc 1 718 5 view .LVU525
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2450               		.loc 1 718 35 is_stmt 0 view .LVU526
 2451 000a 1092 0000 		sts rgblight_status+1,__zero_reg__
 719:quantum/rgblight.c **** }
 2452               		.loc 1 719 43 is_stmt 1 view .LVU527
 2453               	.LBE85:
 2454               	.LBE84:
 371:quantum/rgblight.c ****     wait_ms(50);
 2455               		.loc 1 371 35 view .LVU528
 372:quantum/rgblight.c ****     rgblight_set();
 2456               		.loc 1 372 5 view .LVU529
 2457               	.LVL154:
 2458               	.LBB86:
 2459               	.LBI86:
 166:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** {
 2460               		.loc 3 166 1 view .LVU530
 2461               	.LBB87:
 168:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 2462               		.loc 3 168 2 view .LVU531
 172:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 2463               		.loc 3 172 2 view .LVU532
 173:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 2464               		.loc 3 173 2 view .LVU533
 174:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 2465               		.loc 3 174 2 view .LVU534
 184:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#endif
 2466               		.loc 3 184 3 view .LVU535
 2467               		.loc 3 187 2 view .LVU536
 2468 000e 2FEF      		ldi r18,lo8(159999)
 2469 0010 80E7      		ldi r24,hi8(159999)
 2470 0012 92E0      		ldi r25,hlo8(159999)
 2471 0014 2150      	1:	subi r18,1
 2472 0016 8040      		sbci r24,0
 2473 0018 9040      		sbci r25,0
 2474 001a 01F4      		brne 1b
 2475 001c 00C0      		rjmp .
 2476 001e 0000      		nop
 2477               	.LVL155:
 2478               		.loc 3 187 2 is_stmt 0 view .LVU537
 2479               	.LBE87:
 2480               	.LBE86:
 373:quantum/rgblight.c **** }
 2481               		.loc 1 373 5 is_stmt 1 view .LVU538
 2482 0020 0C94 0000 		jmp rgblight_set
 2483               	.LVL156:
 2484               		.cfi_endproc
 2485               	.LFE113:
 2487               		.section	.text.rgblight_timer_init,"ax",@progbits
 2488               	.global	rgblight_timer_init
 2490               	rgblight_timer_init:
 2491               	.LFB156:
 701:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 2492               		.loc 1 701 32 view -0
 2493               		.cfi_startproc
 2494               	/* prologue: function */
 2495               	/* frame size = 0 */
 2496               	/* stack size = 0 */
 2497               	.L__stack_usage = 0
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2498               		.loc 1 718 5 view .LVU540
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2499               		.loc 1 718 35 is_stmt 0 view .LVU541
 2500 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 719:quantum/rgblight.c **** }
 2501               		.loc 1 719 43 is_stmt 1 view .LVU542
 2502               	/* epilogue start */
 720:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 2503               		.loc 1 720 1 is_stmt 0 view .LVU543
 2504 0004 0895      		ret
 2505               		.cfi_endproc
 2506               	.LFE156:
 2508               		.section	.text.rgblight_timer_enable,"ax",@progbits
 2509               	.global	rgblight_timer_enable
 2511               	rgblight_timer_enable:
 2512               	.LFB157:
 721:quantum/rgblight.c ****     if (!is_static_effect(rgblight_config.mode)) {
 2513               		.loc 1 721 34 is_stmt 1 view -0
 2514               		.cfi_startproc
 2515               	/* prologue: function */
 2516               	/* frame size = 0 */
 2517               	/* stack size = 0 */
 2518               	.L__stack_usage = 0
 722:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 2519               		.loc 1 722 5 view .LVU545
 2520               	.LVL157:
 2521               	.LBB90:
 2522               	.LBI90:
  77:quantum/rgblight.c **** 
 2523               		.loc 1 77 19 view .LVU546
 2524               	.LBB91:
  77:quantum/rgblight.c **** 
 2525               		.loc 1 77 52 view .LVU547
 2526               	.LBE91:
 2527               	.LBE90:
 722:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 2528               		.loc 1 722 42 is_stmt 0 view .LVU548
 2529 0000 6091 0000 		lds r22,rgblight_config
 2530 0004 6695      		lsr r22
 2531               	.LBB93:
 2532               	.LBB92:
  77:quantum/rgblight.c **** 
 2533               		.loc 1 77 59 view .LVU549
 2534 0006 70E0      		ldi r23,0
 2535 0008 41E0      		ldi r20,lo8(1)
 2536 000a 50E0      		ldi r21,0
 2537 000c 80E0      		ldi r24,lo8(static_effect_table)
 2538 000e 90E0      		ldi r25,hi8(static_effect_table)
 2539 0010 0E94 0000 		call memchr
 2540               	.LVL158:
  77:quantum/rgblight.c **** 
 2541               		.loc 1 77 59 view .LVU550
 2542               	.LBE92:
 2543               	.LBE93:
 722:quantum/rgblight.c ****         rgblight_status.timer_enabled = true;
 2544               		.loc 1 722 8 view .LVU551
 2545 0014 892B      		or r24,r25
 2546 0016 01F4      		brne .L115
 723:quantum/rgblight.c ****     }
 2547               		.loc 1 723 9 is_stmt 1 view .LVU552
 723:quantum/rgblight.c ****     }
 2548               		.loc 1 723 39 is_stmt 0 view .LVU553
 2549 0018 81E0      		ldi r24,lo8(1)
 2550 001a 8093 0000 		sts rgblight_status+1,r24
 2551               	.L115:
 725:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2552               		.loc 1 725 5 is_stmt 1 view .LVU554
 725:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2553               		.loc 1 725 35 is_stmt 0 view .LVU555
 2554 001e 0E94 0000 		call timer_read
 2555               	.LVL159:
 725:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2556               		.loc 1 725 33 view .LVU556
 2557 0022 9093 0000 		sts animation_status+1,r25
 2558 0026 8093 0000 		sts animation_status,r24
 726:quantum/rgblight.c ****     dprintf("rgblight timer enabled.\n");
 2559               		.loc 1 726 43 is_stmt 1 view .LVU557
 727:quantum/rgblight.c **** }
 2560               		.loc 1 727 41 view .LVU558
 2561               	/* epilogue start */
 728:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 2562               		.loc 1 728 1 is_stmt 0 view .LVU559
 2563 002a 0895      		ret
 2564               		.cfi_endproc
 2565               	.LFE157:
 2567               		.section	.text.rgblight_mode_eeprom_helper,"ax",@progbits
 2568               	.global	rgblight_mode_eeprom_helper
 2570               	rgblight_mode_eeprom_helper:
 2571               	.LVL160:
 2572               	.LFB105:
 284:quantum/rgblight.c ****     if (!rgblight_config.enable) {
 2573               		.loc 1 284 70 is_stmt 1 view -0
 2574               		.cfi_startproc
 2575               	/* prologue: function */
 2576               	/* frame size = 0 */
 2577               	/* stack size = 0 */
 2578               	.L__stack_usage = 0
 285:quantum/rgblight.c ****         return;
 2579               		.loc 1 285 5 view .LVU561
 285:quantum/rgblight.c ****         return;
 2580               		.loc 1 285 25 is_stmt 0 view .LVU562
 2581 0000 9091 0000 		lds r25,rgblight_config
 285:quantum/rgblight.c ****         return;
 2582               		.loc 1 285 8 view .LVU563
 2583 0004 90FF      		sbrs r25,0
 2584 0006 00C0      		rjmp .L116
 288:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 2585               		.loc 1 288 5 is_stmt 1 view .LVU564
 2586 0008 9170      		andi r25,lo8(1)
 288:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODE_STATIC_LIGHT;
 2587               		.loc 1 288 8 is_stmt 0 view .LVU565
 2588 000a 8111      		cpse r24,__zero_reg__
 2589 000c 00C0      		rjmp .L118
 289:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 2590               		.loc 1 289 9 is_stmt 1 view .LVU566
 289:quantum/rgblight.c ****     } else if (mode > RGBLIGHT_MODES) {
 2591               		.loc 1 289 30 is_stmt 0 view .LVU567
 2592 000e 9260      		ori r25,lo8(2)
 2593               	.LVL161:
 2594               	.L127:
 293:quantum/rgblight.c ****     }
 2595               		.loc 1 293 30 view .LVU568
 2596 0010 9093 0000 		sts rgblight_config,r25
 295:quantum/rgblight.c ****     if (write_to_eeprom) {
 2597               		.loc 1 295 35 is_stmt 1 view .LVU569
 296:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 2598               		.loc 1 296 5 view .LVU570
 296:quantum/rgblight.c ****         eeconfig_update_rgblight(rgblight_config.raw);
 2599               		.loc 1 296 8 is_stmt 0 view .LVU571
 2600 0014 6623      		tst r22
 2601 0016 01F0      		breq .L121
 297:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 2602               		.loc 1 297 9 is_stmt 1 view .LVU572
 2603 0018 6091 0000 		lds r22,rgblight_config
 2604 001c 7091 0000 		lds r23,rgblight_config+1
 2605 0020 8091 0000 		lds r24,rgblight_config+2
 2606 0024 9091 0000 		lds r25,rgblight_config+3
 2607               	.LVL162:
 297:quantum/rgblight.c ****         dprintf("rgblight mode [EEPROM]: %u\n", rgblight_config.mode);
 2608               		.loc 1 297 9 is_stmt 0 view .LVU573
 2609 0028 0E94 0000 		call eeconfig_update_rgblight
 2610               	.LVL163:
 298:quantum/rgblight.c ****     } else {
 2611               		.loc 1 298 70 is_stmt 1 view .LVU574
 2612               	.L121:
 300:quantum/rgblight.c ****     }
 2613               		.loc 1 300 72 view .LVU575
 302:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 2614               		.loc 1 302 5 view .LVU576
 2615               	.LBB98:
 2616               	.LBI98:
  77:quantum/rgblight.c **** 
 2617               		.loc 1 77 19 view .LVU577
 2618               	.LBB99:
  77:quantum/rgblight.c **** 
 2619               		.loc 1 77 52 view .LVU578
 2620               	.LBE99:
 2621               	.LBE98:
 302:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 2622               		.loc 1 302 41 is_stmt 0 view .LVU579
 2623 002c 6091 0000 		lds r22,rgblight_config
 2624 0030 6695      		lsr r22
 2625               	.LBB101:
 2626               	.LBB100:
  77:quantum/rgblight.c **** 
 2627               		.loc 1 77 59 view .LVU580
 2628 0032 70E0      		ldi r23,0
 2629 0034 41E0      		ldi r20,lo8(1)
 2630 0036 50E0      		ldi r21,0
 2631 0038 80E0      		ldi r24,lo8(static_effect_table)
 2632 003a 90E0      		ldi r25,hi8(static_effect_table)
 2633 003c 0E94 0000 		call memchr
 2634               	.LVL164:
  77:quantum/rgblight.c **** 
 2635               		.loc 1 77 59 view .LVU581
 2636               	.LBE100:
 2637               	.LBE101:
 302:quantum/rgblight.c **** #ifdef RGBLIGHT_USE_TIMER
 2638               		.loc 1 302 8 view .LVU582
 2639 0040 892B      		or r24,r25
 2640 0042 01F0      		breq .L122
 304:quantum/rgblight.c **** #endif
 2641               		.loc 1 304 9 is_stmt 1 view .LVU583
 2642               	.LBB102:
 2643               	.LBI102:
 701:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 2644               		.loc 1 701 6 view .LVU584
 2645               	.LBB103:
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2646               		.loc 1 718 5 view .LVU585
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 2647               		.loc 1 718 35 is_stmt 0 view .LVU586
 2648 0044 1092 0000 		sts rgblight_status+1,__zero_reg__
 719:quantum/rgblight.c **** }
 2649               		.loc 1 719 43 is_stmt 1 view .LVU587
 2650               	.L123:
 2651               	.LBE103:
 2652               	.LBE102:
 312:quantum/rgblight.c **** #endif
 2653               		.loc 1 312 5 view .LVU588
 312:quantum/rgblight.c **** #endif
 2654               		.loc 1 312 30 is_stmt 0 view .LVU589
 2655 0048 81E0      		ldi r24,lo8(1)
 2656 004a 8093 0000 		sts animation_status+3,r24
 314:quantum/rgblight.c **** }
 2657               		.loc 1 314 5 is_stmt 1 view .LVU590
 2658 004e 4091 0000 		lds r20,rgblight_config+3
 2659 0052 6091 0000 		lds r22,rgblight_config+2
 2660 0056 8091 0000 		lds r24,rgblight_config+1
 2661 005a 0C94 0000 		jmp rgblight_sethsv_noeeprom
 2662               	.LVL165:
 2663               	.L118:
 290:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 2664               		.loc 1 290 12 view .LVU591
 290:quantum/rgblight.c ****         rgblight_config.mode = RGBLIGHT_MODES;
 2665               		.loc 1 290 15 is_stmt 0 view .LVU592
 2666 005e 8530      		cpi r24,lo8(5)
 2667 0060 00F0      		brlo .L120
 291:quantum/rgblight.c ****     } else {
 2668               		.loc 1 291 9 is_stmt 1 view .LVU593
 291:quantum/rgblight.c ****     } else {
 2669               		.loc 1 291 30 is_stmt 0 view .LVU594
 2670 0062 9860      		ori r25,lo8(8)
 2671 0064 00C0      		rjmp .L127
 2672               	.L120:
 293:quantum/rgblight.c ****     }
 2673               		.loc 1 293 9 is_stmt 1 view .LVU595
 293:quantum/rgblight.c ****     }
 2674               		.loc 1 293 30 is_stmt 0 view .LVU596
 2675 0066 880F      		lsl r24
 2676               	.LVL166:
 293:quantum/rgblight.c ****     }
 2677               		.loc 1 293 30 view .LVU597
 2678 0068 982B      		or r25,r24
 2679 006a 00C0      		rjmp .L127
 2680               	.LVL167:
 2681               	.L122:
 308:quantum/rgblight.c **** #endif
 2682               		.loc 1 308 9 is_stmt 1 view .LVU598
 2683 006c 0E94 0000 		call rgblight_timer_enable
 2684               	.LVL168:
 2685 0070 00C0      		rjmp .L123
 2686               	.LVL169:
 2687               	.L116:
 2688               	/* epilogue start */
 315:quantum/rgblight.c **** 
 2689               		.loc 1 315 1 is_stmt 0 view .LVU599
 2690 0072 0895      		ret
 2691               		.cfi_endproc
 2692               	.LFE105:
 2694               		.section	.text.rgblight_step_helper,"ax",@progbits
 2695               	.global	rgblight_step_helper
 2697               	rgblight_step_helper:
 2698               	.LVL170:
 2699               	.LFB98:
 255:quantum/rgblight.c ****     uint8_t mode = 0;
 2700               		.loc 1 255 49 is_stmt 1 view -0
 2701               		.cfi_startproc
 2702               	/* prologue: function */
 2703               	/* frame size = 0 */
 2704               	/* stack size = 0 */
 2705               	.L__stack_usage = 0
 255:quantum/rgblight.c ****     uint8_t mode = 0;
 2706               		.loc 1 255 49 is_stmt 0 view .LVU601
 2707 0000 682F      		mov r22,r24
 256:quantum/rgblight.c ****     mode         = rgblight_config.mode + 1;
 2708               		.loc 1 256 5 is_stmt 1 view .LVU602
 2709               	.LVL171:
 257:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 2710               		.loc 1 257 5 view .LVU603
 257:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 2711               		.loc 1 257 35 is_stmt 0 view .LVU604
 2712 0002 9091 0000 		lds r25,rgblight_config
 2713 0006 9695      		lsr r25
 257:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 2714               		.loc 1 257 18 view .LVU605
 2715 0008 81E0      		ldi r24,lo8(1)
 2716               	.LVL172:
 257:quantum/rgblight.c ****     if (mode > RGBLIGHT_MODES) {
 2717               		.loc 1 257 18 view .LVU606
 2718 000a 890F      		add r24,r25
 2719               	.LVL173:
 258:quantum/rgblight.c ****         mode = 1;
 2720               		.loc 1 258 5 is_stmt 1 view .LVU607
 258:quantum/rgblight.c ****         mode = 1;
 2721               		.loc 1 258 8 is_stmt 0 view .LVU608
 2722 000c 8530      		cpi r24,lo8(5)
 2723 000e 00F0      		brlo .L129
 259:quantum/rgblight.c ****     }
 2724               		.loc 1 259 14 view .LVU609
 2725 0010 81E0      		ldi r24,lo8(1)
 2726               	.LVL174:
 2727               	.L129:
 261:quantum/rgblight.c **** }
 2728               		.loc 1 261 5 is_stmt 1 view .LVU610
 2729 0012 0C94 0000 		jmp rgblight_mode_eeprom_helper
 2730               	.LVL175:
 261:quantum/rgblight.c **** }
 2731               		.loc 1 261 5 is_stmt 0 view .LVU611
 2732               		.cfi_endproc
 2733               	.LFE98:
 2735               		.section	.text.rgblight_step_noeeprom,"ax",@progbits
 2736               	.global	rgblight_step_noeeprom
 2738               	rgblight_step_noeeprom:
 2739               	.LFB99:
 263:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 2740               		.loc 1 263 35 is_stmt 1 view -0
 2741               		.cfi_startproc
 2742               	/* prologue: function */
 2743               	/* frame size = 0 */
 2744               	/* stack size = 0 */
 2745               	.L__stack_usage = 0
 263:quantum/rgblight.c **** void rgblight_step(void) { rgblight_step_helper(true); }
 2746               		.loc 1 263 37 view .LVU613
 2747 0000 80E0      		ldi r24,0
 2748 0002 0C94 0000 		jmp rgblight_step_helper
 2749               	.LVL176:
 2750               		.cfi_endproc
 2751               	.LFE99:
 2753               		.section	.text.rgblight_step,"ax",@progbits
 2754               	.global	rgblight_step
 2756               	rgblight_step:
 2757               	.LFB100:
 264:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 2758               		.loc 1 264 26 view -0
 2759               		.cfi_startproc
 2760               	/* prologue: function */
 2761               	/* frame size = 0 */
 2762               	/* stack size = 0 */
 2763               	.L__stack_usage = 0
 264:quantum/rgblight.c **** void rgblight_step_reverse_helper(bool write_to_eeprom) {
 2764               		.loc 1 264 28 view .LVU615
 2765 0000 81E0      		ldi r24,lo8(1)
 2766 0002 0C94 0000 		jmp rgblight_step_helper
 2767               	.LVL177:
 2768               		.cfi_endproc
 2769               	.LFE100:
 2771               		.section	.text.rgblight_step_reverse_helper,"ax",@progbits
 2772               	.global	rgblight_step_reverse_helper
 2774               	rgblight_step_reverse_helper:
 2775               	.LVL178:
 2776               	.LFB101:
 265:quantum/rgblight.c ****     uint8_t mode = 0;
 2777               		.loc 1 265 57 view -0
 2778               		.cfi_startproc
 2779               	/* prologue: function */
 2780               	/* frame size = 0 */
 2781               	/* stack size = 0 */
 2782               	.L__stack_usage = 0
 265:quantum/rgblight.c ****     uint8_t mode = 0;
 2783               		.loc 1 265 57 is_stmt 0 view .LVU617
 2784 0000 682F      		mov r22,r24
 266:quantum/rgblight.c ****     mode         = rgblight_config.mode - 1;
 2785               		.loc 1 266 5 is_stmt 1 view .LVU618
 2786               	.LVL179:
 267:quantum/rgblight.c ****     if (mode < 1) {
 2787               		.loc 1 267 5 view .LVU619
 267:quantum/rgblight.c ****     if (mode < 1) {
 2788               		.loc 1 267 35 is_stmt 0 view .LVU620
 2789 0002 9091 0000 		lds r25,rgblight_config
 2790 0006 9695      		lsr r25
 267:quantum/rgblight.c ****     if (mode < 1) {
 2791               		.loc 1 267 18 view .LVU621
 2792 0008 8FEF      		ldi r24,lo8(-1)
 2793               	.LVL180:
 267:quantum/rgblight.c ****     if (mode < 1) {
 2794               		.loc 1 267 18 view .LVU622
 2795 000a 890F      		add r24,r25
 2796               	.LVL181:
 268:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 2797               		.loc 1 268 5 is_stmt 1 view .LVU623
 268:quantum/rgblight.c ****         mode = RGBLIGHT_MODES;
 2798               		.loc 1 268 8 is_stmt 0 view .LVU624
 2799 000c 01F4      		brne .L133
 269:quantum/rgblight.c ****     }
 2800               		.loc 1 269 14 view .LVU625
 2801 000e 84E0      		ldi r24,lo8(4)
 2802               	.LVL182:
 2803               	.L133:
 271:quantum/rgblight.c **** }
 2804               		.loc 1 271 5 is_stmt 1 view .LVU626
 2805 0010 0C94 0000 		jmp rgblight_mode_eeprom_helper
 2806               	.LVL183:
 271:quantum/rgblight.c **** }
 2807               		.loc 1 271 5 is_stmt 0 view .LVU627
 2808               		.cfi_endproc
 2809               	.LFE101:
 2811               		.section	.text.rgblight_step_reverse_noeeprom,"ax",@progbits
 2812               	.global	rgblight_step_reverse_noeeprom
 2814               	rgblight_step_reverse_noeeprom:
 2815               	.LFB102:
 273:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 2816               		.loc 1 273 43 is_stmt 1 view -0
 2817               		.cfi_startproc
 2818               	/* prologue: function */
 2819               	/* frame size = 0 */
 2820               	/* stack size = 0 */
 2821               	.L__stack_usage = 0
 273:quantum/rgblight.c **** void rgblight_step_reverse(void) { rgblight_step_reverse_helper(true); }
 2822               		.loc 1 273 45 view .LVU629
 2823 0000 80E0      		ldi r24,0
 2824 0002 0C94 0000 		jmp rgblight_step_reverse_helper
 2825               	.LVL184:
 2826               		.cfi_endproc
 2827               	.LFE102:
 2829               		.section	.text.rgblight_step_reverse,"ax",@progbits
 2830               	.global	rgblight_step_reverse
 2832               	rgblight_step_reverse:
 2833               	.LFB103:
 274:quantum/rgblight.c **** 
 2834               		.loc 1 274 34 view -0
 2835               		.cfi_startproc
 2836               	/* prologue: function */
 2837               	/* frame size = 0 */
 2838               	/* stack size = 0 */
 2839               	.L__stack_usage = 0
 274:quantum/rgblight.c **** 
 2840               		.loc 1 274 36 view .LVU631
 2841 0000 81E0      		ldi r24,lo8(1)
 2842 0002 0C94 0000 		jmp rgblight_step_reverse_helper
 2843               	.LVL185:
 2844               		.cfi_endproc
 2845               	.LFE103:
 2847               		.section	.text.rgblight_mode,"ax",@progbits
 2848               	.global	rgblight_mode
 2850               	rgblight_mode:
 2851               	.LVL186:
 2852               	.LFB106:
 317:quantum/rgblight.c **** 
 2853               		.loc 1 317 34 view -0
 2854               		.cfi_startproc
 2855               	/* prologue: function */
 2856               	/* frame size = 0 */
 2857               	/* stack size = 0 */
 2858               	.L__stack_usage = 0
 317:quantum/rgblight.c **** 
 2859               		.loc 1 317 36 view .LVU633
 2860 0000 61E0      		ldi r22,lo8(1)
 2861 0002 0C94 0000 		jmp rgblight_mode_eeprom_helper
 2862               	.LVL187:
 317:quantum/rgblight.c **** 
 2863               		.loc 1 317 36 is_stmt 0 view .LVU634
 2864               		.cfi_endproc
 2865               	.LFE106:
 2867               		.section	.text.rgblight_increase,"ax",@progbits
 2868               	.global	rgblight_increase
 2870               	rgblight_increase:
 2871               	.LFB96:
 240:quantum/rgblight.c ****     uint8_t mode = 0;
 2872               		.loc 1 240 30 is_stmt 1 view -0
 2873               		.cfi_startproc
 2874               	/* prologue: function */
 2875               	/* frame size = 0 */
 2876               	/* stack size = 0 */
 2877               	.L__stack_usage = 0
 241:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 2878               		.loc 1 241 5 view .LVU636
 2879               	.LVL188:
 242:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 2880               		.loc 1 242 5 view .LVU637
 242:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 2881               		.loc 1 242 24 is_stmt 0 view .LVU638
 2882 0000 8091 0000 		lds r24,rgblight_config
 2883 0004 8695      		lsr r24
 242:quantum/rgblight.c ****         mode = rgblight_config.mode + 1;
 2884               		.loc 1 242 8 view .LVU639
 2885 0006 8430      		cpi r24,lo8(4)
 2886 0008 00F4      		brsh .L139
 243:quantum/rgblight.c ****     }
 2887               		.loc 1 243 9 is_stmt 1 view .LVU640
 243:quantum/rgblight.c ****     }
 2888               		.loc 1 243 14 is_stmt 0 view .LVU641
 2889 000a 8F5F      		subi r24,lo8(-(1))
 2890               	.LVL189:
 2891               	.L138:
 245:quantum/rgblight.c **** }
 2892               		.loc 1 245 5 is_stmt 1 view .LVU642
 2893 000c 0C94 0000 		jmp rgblight_mode
 2894               	.LVL190:
 2895               	.L139:
 241:quantum/rgblight.c ****     if (rgblight_config.mode < RGBLIGHT_MODES) {
 2896               		.loc 1 241 13 is_stmt 0 view .LVU643
 2897 0010 80E0      		ldi r24,0
 2898 0012 00C0      		rjmp .L138
 2899               		.cfi_endproc
 2900               	.LFE96:
 2902               		.section	.text.rgblight_decrease,"ax",@progbits
 2903               	.global	rgblight_decrease
 2905               	rgblight_decrease:
 2906               	.LFB97:
 247:quantum/rgblight.c ****     uint8_t mode = 0;
 2907               		.loc 1 247 30 is_stmt 1 view -0
 2908               		.cfi_startproc
 2909               	/* prologue: function */
 2910               	/* frame size = 0 */
 2911               	/* stack size = 0 */
 2912               	.L__stack_usage = 0
 248:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 2913               		.loc 1 248 5 view .LVU645
 2914               	.LVL191:
 250:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 2915               		.loc 1 250 5 view .LVU646
 250:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 2916               		.loc 1 250 24 is_stmt 0 view .LVU647
 2917 0000 8091 0000 		lds r24,rgblight_config
 2918 0004 8695      		lsr r24
 250:quantum/rgblight.c ****         mode = rgblight_config.mode - 1;
 2919               		.loc 1 250 8 view .LVU648
 2920 0006 8230      		cpi r24,lo8(2)
 2921 0008 00F0      		brlo .L142
 251:quantum/rgblight.c ****     }
 2922               		.loc 1 251 9 is_stmt 1 view .LVU649
 251:quantum/rgblight.c ****     }
 2923               		.loc 1 251 14 is_stmt 0 view .LVU650
 2924 000a 8150      		subi r24,lo8(-(-1))
 2925               	.LVL192:
 2926               	.L141:
 253:quantum/rgblight.c **** }
 2927               		.loc 1 253 5 is_stmt 1 view .LVU651
 2928 000c 0C94 0000 		jmp rgblight_mode
 2929               	.LVL193:
 2930               	.L142:
 248:quantum/rgblight.c ****     // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 2931               		.loc 1 248 13 is_stmt 0 view .LVU652
 2932 0010 80E0      		ldi r24,0
 2933 0012 00C0      		rjmp .L141
 2934               		.cfi_endproc
 2935               	.LFE97:
 2937               		.section	.text.rgblight_enable,"ax",@progbits
 2938               	.global	rgblight_enable
 2940               	rgblight_enable:
 2941               	.LFB110:
 339:quantum/rgblight.c ****     rgblight_config.enable = 1;
 2942               		.loc 1 339 28 is_stmt 1 view -0
 2943               		.cfi_startproc
 2944               	/* prologue: function */
 2945               	/* frame size = 0 */
 2946               	/* stack size = 0 */
 2947               	.L__stack_usage = 0
 340:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 2948               		.loc 1 340 5 view .LVU654
 340:quantum/rgblight.c ****     // No need to update EEPROM here. rgblight_mode() will do that, actually
 2949               		.loc 1 340 28 is_stmt 0 view .LVU655
 2950 0000 E0E0      		ldi r30,lo8(rgblight_config)
 2951 0002 F0E0      		ldi r31,hi8(rgblight_config)
 2952 0004 8081      		ld r24,Z
 2953 0006 8160      		ori r24,lo8(1<<0)
 2954 0008 8083      		st Z,r24
 343:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 2955               		.loc 1 343 95 is_stmt 1 view .LVU656
 344:quantum/rgblight.c **** }
 2956               		.loc 1 344 5 view .LVU657
 2957 000a 8695      		lsr r24
 2958 000c 0C94 0000 		jmp rgblight_mode
 2959               	.LVL194:
 2960               		.cfi_endproc
 2961               	.LFE110:
 2963               		.section	.text.rgblight_toggle,"ax",@progbits
 2964               	.global	rgblight_toggle
 2966               	rgblight_toggle:
 2967               	.LFB108:
 321:quantum/rgblight.c ****     dprintf("rgblight toggle [EEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 2968               		.loc 1 321 28 view -0
 2969               		.cfi_startproc
 2970               	/* prologue: function */
 2971               	/* frame size = 0 */
 2972               	/* stack size = 0 */
 2973               	.L__stack_usage = 0
 322:quantum/rgblight.c ****     if (rgblight_config.enable) {
 2974               		.loc 1 322 96 view .LVU659
 323:quantum/rgblight.c ****         rgblight_disable();
 2975               		.loc 1 323 5 view .LVU660
 323:quantum/rgblight.c ****         rgblight_disable();
 2976               		.loc 1 323 9 is_stmt 0 view .LVU661
 2977 0000 8091 0000 		lds r24,rgblight_config
 323:quantum/rgblight.c ****         rgblight_disable();
 2978               		.loc 1 323 8 view .LVU662
 2979 0004 80FD      		sbrc r24,0
 324:quantum/rgblight.c ****     } else {
 2980               		.loc 1 324 9 is_stmt 1 view .LVU663
 2981 0006 0C94 0000 		jmp rgblight_disable
 2982               	.LVL195:
 2983               	.L145:
 326:quantum/rgblight.c ****     }
 2984               		.loc 1 326 9 view .LVU664
 2985 000a 0C94 0000 		jmp rgblight_enable
 2986               	.LVL196:
 2987               		.cfi_endproc
 2988               	.LFE108:
 2990               		.section	.text.rgblight_mode_noeeprom,"ax",@progbits
 2991               	.global	rgblight_mode_noeeprom
 2993               	rgblight_mode_noeeprom:
 2994               	.LVL197:
 2995               	.LFB107:
 319:quantum/rgblight.c **** 
 2996               		.loc 1 319 43 view -0
 2997               		.cfi_startproc
 2998               	/* prologue: function */
 2999               	/* frame size = 0 */
 3000               	/* stack size = 0 */
 3001               	.L__stack_usage = 0
 319:quantum/rgblight.c **** 
 3002               		.loc 1 319 45 view .LVU666
 3003 0000 60E0      		ldi r22,0
 3004 0002 0C94 0000 		jmp rgblight_mode_eeprom_helper
 3005               	.LVL198:
 319:quantum/rgblight.c **** 
 3006               		.loc 1 319 45 is_stmt 0 view .LVU667
 3007               		.cfi_endproc
 3008               	.LFE107:
 3010               		.section	.text.rgblight_init,"ax",@progbits
 3011               	.global	rgblight_init
 3013               	rgblight_init:
 3014               	.LFB93:
 188:quantum/rgblight.c ****     /* if already initialized, don't do it again.
 3015               		.loc 1 188 26 is_stmt 1 view -0
 3016               		.cfi_startproc
 3017               	/* prologue: function */
 3018               	/* frame size = 0 */
 3019               	/* stack size = 0 */
 3020               	.L__stack_usage = 0
 192:quantum/rgblight.c ****         return;
 3021               		.loc 1 192 5 view .LVU669
 192:quantum/rgblight.c ****         return;
 3022               		.loc 1 192 8 is_stmt 0 view .LVU670
 3023 0000 8091 0000 		lds r24,is_rgblight_initialized
 3024 0004 8111      		cpse r24,__zero_reg__
 3025 0006 00C0      		rjmp .L147
 196:quantum/rgblight.c ****     dprintf("rgblight_init start!\n");
 3026               		.loc 1 196 39 is_stmt 1 view .LVU671
 197:quantum/rgblight.c ****     if (!eeconfig_is_enabled()) {
 3027               		.loc 1 197 38 view .LVU672
 198:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 3028               		.loc 1 198 5 view .LVU673
 198:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 3029               		.loc 1 198 10 is_stmt 0 view .LVU674
 3030 0008 0E94 0000 		call eeconfig_is_enabled
 3031               	.LVL199:
 198:quantum/rgblight.c ****         dprintf("rgblight_init eeconfig is not enabled.\n");
 3032               		.loc 1 198 8 view .LVU675
 3033 000c 8111      		cpse r24,__zero_reg__
 3034 000e 00C0      		rjmp .L149
 199:quantum/rgblight.c ****         eeconfig_init();
 3035               		.loc 1 199 60 is_stmt 1 view .LVU676
 200:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 3036               		.loc 1 200 9 view .LVU677
 3037 0010 0E94 0000 		call eeconfig_init
 3038               	.LVL200:
 201:quantum/rgblight.c ****     }
 3039               		.loc 1 201 9 view .LVU678
 3040 0014 0E94 0000 		call eeconfig_update_rgblight_default
 3041               	.LVL201:
 3042               	.L149:
 203:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 3043               		.loc 1 203 5 view .LVU679
 203:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 3044               		.loc 1 203 27 is_stmt 0 view .LVU680
 3045 0018 0E94 0000 		call eeconfig_read_rgblight
 3046               	.LVL202:
 203:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 3047               		.loc 1 203 25 view .LVU681
 3048 001c 6093 0000 		sts rgblight_config,r22
 3049 0020 7093 0000 		sts rgblight_config+1,r23
 3050 0024 8093 0000 		sts rgblight_config+2,r24
 3051 0028 9093 0000 		sts rgblight_config+3,r25
 204:quantum/rgblight.c ****     if (!rgblight_config.mode) {
 3052               		.loc 1 204 39 is_stmt 1 view .LVU682
 205:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 3053               		.loc 1 205 5 view .LVU683
 205:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 3054               		.loc 1 205 9 is_stmt 0 view .LVU684
 3055 002c 6E7F      		andi r22,lo8(-2)
 205:quantum/rgblight.c ****         dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 3056               		.loc 1 205 8 view .LVU685
 3057 002e 01F4      		brne .L150
 206:quantum/rgblight.c ****         eeconfig_update_rgblight_default();
 3058               		.loc 1 206 93 is_stmt 1 view .LVU686
 207:quantum/rgblight.c ****         rgblight_config.raw = eeconfig_read_rgblight();
 3059               		.loc 1 207 9 view .LVU687
 3060 0030 0E94 0000 		call eeconfig_update_rgblight_default
 3061               	.LVL203:
 208:quantum/rgblight.c ****     }
 3062               		.loc 1 208 9 view .LVU688
 208:quantum/rgblight.c ****     }
 3063               		.loc 1 208 31 is_stmt 0 view .LVU689
 3064 0034 0E94 0000 		call eeconfig_read_rgblight
 3065               	.LVL204:
 208:quantum/rgblight.c ****     }
 3066               		.loc 1 208 29 view .LVU690
 3067 0038 6093 0000 		sts rgblight_config,r22
 3068 003c 7093 0000 		sts rgblight_config+1,r23
 3069 0040 8093 0000 		sts rgblight_config+2,r24
 3070 0044 9093 0000 		sts rgblight_config+3,r25
 3071               	.L150:
 210:quantum/rgblight.c **** 
 3072               		.loc 1 210 5 is_stmt 1 view .LVU691
 3073 0048 0E94 0000 		call rgblight_check_config
 3074               	.LVL205:
 212:quantum/rgblight.c **** 
 3075               		.loc 1 212 5 view .LVU692
 215:quantum/rgblight.c **** #endif
 3076               		.loc 1 215 5 view .LVU693
 3077               	.LBB106:
 3078               	.LBI106:
 701:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 3079               		.loc 1 701 6 view .LVU694
 3080               	.LBB107:
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3081               		.loc 1 718 5 view .LVU695
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3082               		.loc 1 718 35 is_stmt 0 view .LVU696
 3083 004c 1092 0000 		sts rgblight_status+1,__zero_reg__
 719:quantum/rgblight.c **** }
 3084               		.loc 1 719 43 is_stmt 1 view .LVU697
 3085               	.LBE107:
 3086               	.LBE106:
 218:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 3087               		.loc 1 218 5 view .LVU698
 218:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 3088               		.loc 1 218 9 is_stmt 0 view .LVU699
 3089 0050 8091 0000 		lds r24,rgblight_config
 218:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 3090               		.loc 1 218 8 view .LVU700
 3091 0054 80FF      		sbrs r24,0
 3092 0056 00C0      		rjmp .L151
 219:quantum/rgblight.c ****     }
 3093               		.loc 1 219 9 is_stmt 1 view .LVU701
 3094 0058 8695      		lsr r24
 3095 005a 0E94 0000 		call rgblight_mode_noeeprom
 3096               	.LVL206:
 3097               	.L151:
 222:quantum/rgblight.c **** }
 3098               		.loc 1 222 5 view .LVU702
 222:quantum/rgblight.c **** }
 3099               		.loc 1 222 29 is_stmt 0 view .LVU703
 3100 005e 81E0      		ldi r24,lo8(1)
 3101 0060 8093 0000 		sts is_rgblight_initialized,r24
 3102               	.L147:
 3103               	/* epilogue start */
 223:quantum/rgblight.c **** 
 3104               		.loc 1 223 1 view .LVU704
 3105 0064 0895      		ret
 3106               		.cfi_endproc
 3107               	.LFE93:
 3109               		.section	.text.rgblight_enable_noeeprom,"ax",@progbits
 3110               	.global	rgblight_enable_noeeprom
 3112               	rgblight_enable_noeeprom:
 3113               	.LFB111:
 347:quantum/rgblight.c ****     rgblight_config.enable = 1;
 3114               		.loc 1 347 37 is_stmt 1 view -0
 3115               		.cfi_startproc
 3116               	/* prologue: function */
 3117               	/* frame size = 0 */
 3118               	/* stack size = 0 */
 3119               	.L__stack_usage = 0
 348:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 3120               		.loc 1 348 5 view .LVU706
 348:quantum/rgblight.c ****     dprintf("rgblight enable [NOEEPROM]: rgblight_config.enable = %u\n", rgblight_config.enable);
 3121               		.loc 1 348 28 is_stmt 0 view .LVU707
 3122 0000 E0E0      		ldi r30,lo8(rgblight_config)
 3123 0002 F0E0      		ldi r31,hi8(rgblight_config)
 3124 0004 8081      		ld r24,Z
 3125 0006 8160      		ori r24,lo8(1<<0)
 3126 0008 8083      		st Z,r24
 349:quantum/rgblight.c ****     rgblight_mode_noeeprom(rgblight_config.mode);
 3127               		.loc 1 349 97 is_stmt 1 view .LVU708
 350:quantum/rgblight.c **** }
 3128               		.loc 1 350 5 view .LVU709
 3129 000a 8695      		lsr r24
 3130 000c 0C94 0000 		jmp rgblight_mode_noeeprom
 3131               	.LVL207:
 3132               		.cfi_endproc
 3133               	.LFE111:
 3135               		.section	.text.rgblight_toggle_noeeprom,"ax",@progbits
 3136               	.global	rgblight_toggle_noeeprom
 3138               	rgblight_toggle_noeeprom:
 3139               	.LFB109:
 330:quantum/rgblight.c ****     dprintf("rgblight toggle [NOEEPROM]: rgblight_config.enable = %u\n", !rgblight_config.enable);
 3140               		.loc 1 330 37 view -0
 3141               		.cfi_startproc
 3142               	/* prologue: function */
 3143               	/* frame size = 0 */
 3144               	/* stack size = 0 */
 3145               	.L__stack_usage = 0
 331:quantum/rgblight.c ****     if (rgblight_config.enable) {
 3146               		.loc 1 331 98 view .LVU711
 332:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 3147               		.loc 1 332 5 view .LVU712
 332:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 3148               		.loc 1 332 9 is_stmt 0 view .LVU713
 3149 0000 8091 0000 		lds r24,rgblight_config
 332:quantum/rgblight.c ****         rgblight_disable_noeeprom();
 3150               		.loc 1 332 8 view .LVU714
 3151 0004 80FD      		sbrc r24,0
 333:quantum/rgblight.c ****     } else {
 3152               		.loc 1 333 9 is_stmt 1 view .LVU715
 3153 0006 0C94 0000 		jmp rgblight_disable_noeeprom
 3154               	.LVL208:
 3155               	.L157:
 335:quantum/rgblight.c ****     }
 3156               		.loc 1 335 9 view .LVU716
 3157 000a 0C94 0000 		jmp rgblight_enable_noeeprom
 3158               	.LVL209:
 3159               		.cfi_endproc
 3160               	.LFE109:
 3162               		.section	.text.rgblight_update_dword,"ax",@progbits
 3163               	.global	rgblight_update_dword
 3165               	rgblight_update_dword:
 3166               	.LVL210:
 3167               	.LFB95:
 227:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_MODEHSVS;
 3168               		.loc 1 227 44 view -0
 3169               		.cfi_startproc
 3170               	/* prologue: function */
 3171               	/* frame size = 0 */
 3172               	/* stack size = 0 */
 3173               	.L__stack_usage = 0
 228:quantum/rgblight.c ****     rgblight_config.raw = dword;
 3174               		.loc 1 228 39 view .LVU718
 229:quantum/rgblight.c ****     if (rgblight_config.enable)
 3175               		.loc 1 229 5 view .LVU719
 229:quantum/rgblight.c ****     if (rgblight_config.enable)
 3176               		.loc 1 229 25 is_stmt 0 view .LVU720
 3177 0000 6093 0000 		sts rgblight_config,r22
 3178 0004 7093 0000 		sts rgblight_config+1,r23
 3179 0008 8093 0000 		sts rgblight_config+2,r24
 3180 000c 9093 0000 		sts rgblight_config+3,r25
 230:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 3181               		.loc 1 230 5 is_stmt 1 view .LVU721
 230:quantum/rgblight.c ****         rgblight_mode_noeeprom(rgblight_config.mode);
 3182               		.loc 1 230 8 is_stmt 0 view .LVU722
 3183 0010 60FF      		sbrs r22,0
 3184 0012 00C0      		rjmp .L159
 231:quantum/rgblight.c ****     else {
 3185               		.loc 1 231 9 is_stmt 1 view .LVU723
 3186 0014 862F      		mov r24,r22
 3187 0016 8695      		lsr r24
 3188 0018 0C94 0000 		jmp rgblight_mode_noeeprom
 3189               	.LVL211:
 3190               	.L159:
 234:quantum/rgblight.c **** #endif
 3191               		.loc 1 234 9 view .LVU724
 3192               	.LBB110:
 3193               	.LBI110:
 701:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 3194               		.loc 1 701 6 view .LVU725
 3195               	.LBB111:
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3196               		.loc 1 718 5 view .LVU726
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3197               		.loc 1 718 35 is_stmt 0 view .LVU727
 3198 001c 1092 0000 		sts rgblight_status+1,__zero_reg__
 719:quantum/rgblight.c **** }
 3199               		.loc 1 719 43 is_stmt 1 view .LVU728
 3200               	.LBE111:
 3201               	.LBE110:
 236:quantum/rgblight.c ****     }
 3202               		.loc 1 236 9 view .LVU729
 3203 0020 0C94 0000 		jmp rgblight_set
 3204               	.LVL212:
 236:quantum/rgblight.c ****     }
 3205               		.loc 1 236 9 is_stmt 0 view .LVU730
 3206               		.cfi_endproc
 3207               	.LFE95:
 3209               		.section	.text.rgblight_timer_disable,"ax",@progbits
 3210               	.global	rgblight_timer_disable
 3212               	rgblight_timer_disable:
 3213               	.LFB166:
 3214               		.cfi_startproc
 3215               	/* prologue: function */
 3216               	/* frame size = 0 */
 3217               	/* stack size = 0 */
 3218               	.L__stack_usage = 0
 3219 0000 1092 0000 		sts rgblight_status+1,__zero_reg__
 3220               	/* epilogue start */
 3221 0004 0895      		ret
 3222               		.cfi_endproc
 3223               	.LFE166:
 3225               		.section	.text.rgblight_timer_toggle,"ax",@progbits
 3226               	.global	rgblight_timer_toggle
 3228               	rgblight_timer_toggle:
 3229               	.LFB159:
 734:quantum/rgblight.c ****     dprintf("rgblight timer toggle.\n");
 3230               		.loc 1 734 34 is_stmt 1 view -0
 3231               		.cfi_startproc
 3232               	/* prologue: function */
 3233               	/* frame size = 0 */
 3234               	/* stack size = 0 */
 3235               	.L__stack_usage = 0
 735:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 3236               		.loc 1 735 40 view .LVU732
 736:quantum/rgblight.c ****         rgblight_timer_disable();
 3237               		.loc 1 736 5 view .LVU733
 736:quantum/rgblight.c ****         rgblight_timer_disable();
 3238               		.loc 1 736 8 is_stmt 0 view .LVU734
 3239 0000 8091 0000 		lds r24,rgblight_status+1
 3240 0004 8823      		tst r24
 3241 0006 01F0      		breq .L162
 737:quantum/rgblight.c ****     } else {
 3242               		.loc 1 737 9 is_stmt 1 view .LVU735
 3243               	.LBB114:
 3244               	.LBI114:
 701:quantum/rgblight.c ****     // OLD!!!! Animation timer -- AVR Timer3
 3245               		.loc 1 701 6 view .LVU736
 3246               	.LBB115:
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3247               		.loc 1 718 5 view .LVU737
 718:quantum/rgblight.c ****     RGBLIGHT_SPLIT_SET_CHANGE_TIMER_ENABLE;
 3248               		.loc 1 718 35 is_stmt 0 view .LVU738
 3249 0008 1092 0000 		sts rgblight_status+1,__zero_reg__
 719:quantum/rgblight.c **** }
 3250               		.loc 1 719 43 is_stmt 1 view .LVU739
 3251               	/* epilogue start */
 3252               	.LBE115:
 3253               	.LBE114:
 741:quantum/rgblight.c **** 
 3254               		.loc 1 741 1 is_stmt 0 view .LVU740
 3255 000c 0895      		ret
 3256               	.L162:
 739:quantum/rgblight.c ****     }
 3257               		.loc 1 739 9 is_stmt 1 view .LVU741
 3258 000e 0C94 0000 		jmp rgblight_timer_enable
 3259               	.LVL213:
 3260               		.cfi_endproc
 3261               	.LFE159:
 3263               		.section	.text.rgblight_show_solid_color,"ax",@progbits
 3264               	.global	rgblight_show_solid_color
 3266               	rgblight_show_solid_color:
 3267               	.LVL214:
 3268               	.LFB160:
 743:quantum/rgblight.c ****     rgblight_enable();
 3269               		.loc 1 743 65 view -0
 3270               		.cfi_startproc
 743:quantum/rgblight.c ****     rgblight_enable();
 3271               		.loc 1 743 65 is_stmt 0 view .LVU743
 3272 0000 1F93      		push r17
 3273               	.LCFI48:
 3274               		.cfi_def_cfa_offset 3
 3275               		.cfi_offset 17, -2
 3276 0002 CF93      		push r28
 3277               	.LCFI49:
 3278               		.cfi_def_cfa_offset 4
 3279               		.cfi_offset 28, -3
 3280 0004 DF93      		push r29
 3281               	.LCFI50:
 3282               		.cfi_def_cfa_offset 5
 3283               		.cfi_offset 29, -4
 3284               	/* prologue: function */
 3285               	/* frame size = 0 */
 3286               	/* stack size = 3 */
 3287               	.L__stack_usage = 3
 3288 0006 C82F      		mov r28,r24
 3289 0008 D62F      		mov r29,r22
 3290 000a 142F      		mov r17,r20
 744:quantum/rgblight.c ****     rgblight_mode(RGBLIGHT_MODE_STATIC_LIGHT);
 3291               		.loc 1 744 5 is_stmt 1 view .LVU744
 3292 000c 0E94 0000 		call rgblight_enable
 3293               	.LVL215:
 745:quantum/rgblight.c ****     rgblight_setrgb(r, g, b);
 3294               		.loc 1 745 5 view .LVU745
 3295 0010 81E0      		ldi r24,lo8(1)
 3296 0012 0E94 0000 		call rgblight_mode
 3297               	.LVL216:
 746:quantum/rgblight.c **** }
 3298               		.loc 1 746 5 view .LVU746
 3299 0016 412F      		mov r20,r17
 3300 0018 6D2F      		mov r22,r29
 3301 001a 8C2F      		mov r24,r28
 3302               	/* epilogue start */
 747:quantum/rgblight.c **** 
 3303               		.loc 1 747 1 is_stmt 0 view .LVU747
 3304 001c DF91      		pop r29
 3305               	.LVL217:
 747:quantum/rgblight.c **** 
 3306               		.loc 1 747 1 view .LVU748
 3307 001e CF91      		pop r28
 3308               	.LVL218:
 747:quantum/rgblight.c **** 
 3309               		.loc 1 747 1 view .LVU749
 3310 0020 1F91      		pop r17
 3311               	.LVL219:
 746:quantum/rgblight.c **** }
 3312               		.loc 1 746 5 view .LVU750
 3313 0022 0C94 0000 		jmp rgblight_setrgb
 3314               	.LVL220:
 746:quantum/rgblight.c **** }
 3315               		.loc 1 746 5 view .LVU751
 3316               		.cfi_endproc
 3317               	.LFE160:
 3319               		.section	.text.rgblight_task,"ax",@progbits
 3320               	.global	rgblight_task
 3322               	rgblight_task:
 3323               	.LFB162:
 761:quantum/rgblight.c ****     if (rgblight_status.timer_enabled) {
 3324               		.loc 1 761 26 is_stmt 1 view -0
 3325               		.cfi_startproc
 3326 0000 0F93      		push r16
 3327               	.LCFI51:
 3328               		.cfi_def_cfa_offset 3
 3329               		.cfi_offset 16, -2
 3330 0002 1F93      		push r17
 3331               	.LCFI52:
 3332               		.cfi_def_cfa_offset 4
 3333               		.cfi_offset 17, -3
 3334 0004 CF93      		push r28
 3335               	.LCFI53:
 3336               		.cfi_def_cfa_offset 5
 3337               		.cfi_offset 28, -4
 3338 0006 DF93      		push r29
 3339               	.LCFI54:
 3340               		.cfi_def_cfa_offset 6
 3341               		.cfi_offset 29, -5
 3342               	/* prologue: function */
 3343               	/* frame size = 0 */
 3344               	/* stack size = 4 */
 3345               	.L__stack_usage = 4
 762:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 3346               		.loc 1 762 5 view .LVU753
 762:quantum/rgblight.c ****         effect_func_t effect_func   = rgblight_effect_dummy;
 3347               		.loc 1 762 8 is_stmt 0 view .LVU754
 3348 0008 8091 0000 		lds r24,rgblight_status+1
 3349 000c 8823      		tst r24
 3350 000e 01F4      		brne .+2
 3351 0010 00C0      		rjmp .L166
 3352               	.LBB120:
 763:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 3353               		.loc 1 763 9 is_stmt 1 view .LVU755
 3354               	.LVL221:
 764:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 3355               		.loc 1 764 9 view .LVU756
 765:quantum/rgblight.c ****         animation_status.delta      = delta;
 3356               		.loc 1 765 9 view .LVU757
 765:quantum/rgblight.c ****         animation_status.delta      = delta;
 3357               		.loc 1 765 77 is_stmt 0 view .LVU758
 3358 0012 8091 0000 		lds r24,rgblight_status
 765:quantum/rgblight.c ****         animation_status.delta      = delta;
 3359               		.loc 1 765 54 view .LVU759
 3360 0016 E091 0000 		lds r30,rgblight_config
 3361 001a E695      		lsr r30
 765:quantum/rgblight.c ****         animation_status.delta      = delta;
 3362               		.loc 1 765 23 view .LVU760
 3363 001c E81B      		sub r30,r24
 3364               	.LVL222:
 766:quantum/rgblight.c **** 
 3365               		.loc 1 766 9 is_stmt 1 view .LVU761
 766:quantum/rgblight.c **** 
 3366               		.loc 1 766 37 is_stmt 0 view .LVU762
 3367 001e E093 0000 		sts animation_status+2,r30
 769:quantum/rgblight.c ****         }
 3368               		.loc 1 769 9 is_stmt 1 view .LVU763
 800:quantum/rgblight.c ****             // knight mode
 3369               		.loc 1 800 14 view .LVU764
 764:quantum/rgblight.c ****         uint8_t       delta         = rgblight_config.mode - rgblight_status.base_mode;
 3370               		.loc 1 764 23 is_stmt 0 view .LVU765
 3371 0022 C0ED      		ldi r28,lo8(-48)
 3372 0024 D7E0      		ldi r29,lo8(7)
 763:quantum/rgblight.c ****         uint16_t      interval_time = 2000;  // dummy interval
 3373               		.loc 1 763 23 view .LVU766
 3374 0026 00E0      		ldi r16,lo8(gs(rgblight_effect_dummy))
 3375 0028 10E0      		ldi r17,hi8(gs(rgblight_effect_dummy))
 800:quantum/rgblight.c ****             // knight mode
 3376               		.loc 1 800 17 view .LVU767
 3377 002a 8230      		cpi r24,lo8(2)
 3378 002c 01F4      		brne .L169
 802:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 3379               		.loc 1 802 13 is_stmt 1 view .LVU768
 3380               	.LVL223:
 3381               	.LBB121:
 3382               	.LBI121:
 572:quantum/rgblight.c ****     return
 3383               		.loc 1 572 16 view .LVU769
 572:quantum/rgblight.c ****     return
 3384               		.loc 1 572 16 is_stmt 0 view .LVU770
 3385               	.LBE121:
 3386               	.LBE120:
 573:quantum/rgblight.c **** #    ifdef VELOCIKEY_ENABLE
 3387               		.loc 1 573 5 is_stmt 1 view .LVU771
 3388               	.LBB126:
 3389               	.LBB124:
 3390               	.LBB122:
 577:quantum/rgblight.c **** }
 3391               		.loc 1 577 29 view .LVU772
 577:quantum/rgblight.c **** }
 3392               		.loc 1 577 29 view .LVU773
 577:quantum/rgblight.c **** }
 3393               		.loc 1 577 29 view .LVU774
 3394               	.LBE122:
 3395               	.LBE124:
 802:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 3396               		.loc 1 802 29 is_stmt 0 view .LVU775
 3397 002e F0E0      		ldi r31,0
 3398 0030 E050      		subi r30,lo8(-(RGBLED_KNIGHT_INTERVALS))
 3399 0032 F040      		sbci r31,hi8(-(RGBLED_KNIGHT_INTERVALS))
 3400               	.LVL224:
 3401               	.LBB125:
 3402               	.LBB123:
 577:quantum/rgblight.c **** }
 3403               		.loc 1 577 29 view .LVU776
 3404               	/* #APP */
 3405               	 ;  577 "quantum/rgblight.c" 1
 3406 0034 E491      		lpm r30, Z
 3407               		
 3408               	 ;  0 "" 2
 3409               	.LVL225:
 577:quantum/rgblight.c **** }
 3410               		.loc 1 577 29 is_stmt 1 view .LVU777
 577:quantum/rgblight.c **** }
 3411               		.loc 1 577 29 is_stmt 0 view .LVU778
 3412               	/* #NOAPP */
 3413               	.LBE123:
 3414               	.LBE125:
 802:quantum/rgblight.c ****             effect_func   = rgblight_effect_knight;
 3415               		.loc 1 802 27 view .LVU779
 3416 0036 CE2F      		mov r28,r30
 3417 0038 D0E0      		ldi r29,0
 3418               	.LVL226:
 803:quantum/rgblight.c ****         }
 3419               		.loc 1 803 13 is_stmt 1 view .LVU780
 803:quantum/rgblight.c ****         }
 3420               		.loc 1 803 27 is_stmt 0 view .LVU781
 3421 003a 00E0      		ldi r16,lo8(gs(rgblight_effect_knight))
 3422 003c 10E0      		ldi r17,hi8(gs(rgblight_effect_knight))
 3423               	.LVL227:
 3424               	.L169:
 826:quantum/rgblight.c ****             animation_status.restart    = false;
 3425               		.loc 1 826 9 is_stmt 1 view .LVU782
 826:quantum/rgblight.c ****             animation_status.restart    = false;
 3426               		.loc 1 826 12 is_stmt 0 view .LVU783
 3427 003e 8091 0000 		lds r24,animation_status+3
 3428 0042 8823      		tst r24
 3429 0044 01F0      		breq .L170
 827:quantum/rgblight.c ****             animation_status.last_timer = timer_read() - interval_time - 1;
 3430               		.loc 1 827 13 is_stmt 1 view .LVU784
 827:quantum/rgblight.c ****             animation_status.last_timer = timer_read() - interval_time - 1;
 3431               		.loc 1 827 41 is_stmt 0 view .LVU785
 3432 0046 1092 0000 		sts animation_status+3,__zero_reg__
 828:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 3433               		.loc 1 828 13 is_stmt 1 view .LVU786
 828:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 3434               		.loc 1 828 43 is_stmt 0 view .LVU787
 3435 004a 0E94 0000 		call timer_read
 3436               	.LVL228:
 828:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 3437               		.loc 1 828 72 view .LVU788
 3438 004e 9E01      		movw r18,r28
 3439 0050 2095      		com r18
 3440 0052 3095      		com r19
 3441 0054 820F      		add r24,r18
 3442 0056 931F      		adc r25,r19
 828:quantum/rgblight.c ****             animation_status.pos16      = 0;  // restart signal to local each effect
 3443               		.loc 1 828 41 view .LVU789
 3444 0058 9093 0000 		sts animation_status+1,r25
 3445 005c 8093 0000 		sts animation_status,r24
 829:quantum/rgblight.c ****         }
 3446               		.loc 1 829 13 is_stmt 1 view .LVU790
 829:quantum/rgblight.c ****         }
 3447               		.loc 1 829 41 is_stmt 0 view .LVU791
 3448 0060 1092 0000 		sts animation_status+4+1,__zero_reg__
 3449 0064 1092 0000 		sts animation_status+4,__zero_reg__
 3450               	.L170:
 831:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3451               		.loc 1 831 9 is_stmt 1 view .LVU792
 831:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3452               		.loc 1 831 13 is_stmt 0 view .LVU793
 3453 0068 8091 0000 		lds r24,animation_status
 3454 006c 9091 0000 		lds r25,animation_status+1
 3455 0070 0E94 0000 		call timer_elapsed
 3456               	.LVL229:
 831:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3457               		.loc 1 831 12 view .LVU794
 3458 0074 8C17      		cp r24,r28
 3459 0076 9D07      		cpc r25,r29
 3460 0078 00F0      		brlo .L166
 846:quantum/rgblight.c ****             effect_func(&animation_status);
 3461               		.loc 1 846 13 is_stmt 1 view .LVU795
 846:quantum/rgblight.c ****             effect_func(&animation_status);
 3462               		.loc 1 846 41 is_stmt 0 view .LVU796
 3463 007a E091 0000 		lds r30,animation_status
 3464 007e F091 0000 		lds r31,animation_status+1
 3465 0082 CE0F      		add r28,r30
 3466 0084 DF1F      		adc r29,r31
 3467               	.LVL230:
 846:quantum/rgblight.c ****             effect_func(&animation_status);
 3468               		.loc 1 846 41 view .LVU797
 3469 0086 D093 0000 		sts animation_status+1,r29
 3470 008a C093 0000 		sts animation_status,r28
 847:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3471               		.loc 1 847 13 is_stmt 1 view .LVU798
 3472 008e 80E0      		ldi r24,lo8(animation_status)
 3473 0090 90E0      		ldi r25,hi8(animation_status)
 3474 0092 F801      		movw r30,r16
 3475               	/* epilogue start */
 3476               	.LBE126:
 855:quantum/rgblight.c **** 
 3477               		.loc 1 855 1 is_stmt 0 view .LVU799
 3478 0094 DF91      		pop r29
 3479 0096 CF91      		pop r28
 3480 0098 1F91      		pop r17
 3481 009a 0F91      		pop r16
 3482               	.LVL231:
 3483               	.LBB127:
 847:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3484               		.loc 1 847 13 view .LVU800
 3485 009c 0994      		ijmp
 3486               	.LVL232:
 3487               	.L166:
 3488               	/* epilogue start */
 847:quantum/rgblight.c **** #    if defined(RGBLIGHT_SPLIT) && !defined(RGBLIGHT_SPLIT_NO_ANIMATION_SYNC)
 3489               		.loc 1 847 13 view .LVU801
 3490               	.LBE127:
 855:quantum/rgblight.c **** 
 3491               		.loc 1 855 1 view .LVU802
 3492 009e DF91      		pop r29
 3493 00a0 CF91      		pop r28
 3494 00a2 1F91      		pop r17
 3495 00a4 0F91      		pop r16
 3496 00a6 0895      		ret
 3497               		.cfi_endproc
 3498               	.LFE162:
 3500               		.section	.data.increment.3153,"aw"
 3503               	increment.3153:
 3504 0000 01        		.byte	1
 3505               		.section	.data.high_bound.3152,"aw"
 3508               	high_bound.3152:
 3509 0000 02        		.byte	2
 3510               		.section	.bss.low_bound.3151,"aw",@nobits
 3513               	low_bound.3151:
 3514 0000 00        		.zero	1
 3515               		.weak	RGBLED_KNIGHT_INTERVALS
 3516               		.section	.progmem.data.RGBLED_KNIGHT_INTERVALS,"a"
 3519               	RGBLED_KNIGHT_INTERVALS:
 3520 0000 7F        		.byte	127
 3521 0001 3F        		.byte	63
 3522 0002 1F        		.byte	31
 3523               		.section	.data.effect_num_leds,"aw"
 3526               	effect_num_leds:
 3527 0000 08        		.byte	8
 3528               		.section	.data.effect_end_pos,"aw"
 3531               	effect_end_pos:
 3532 0000 08        		.byte	8
 3533               		.section	.bss.effect_start_pos,"aw",@nobits
 3536               	effect_start_pos:
 3537 0000 00        		.zero	1
 3538               		.section	.data.clipping_num_leds,"aw"
 3541               	clipping_num_leds:
 3542 0000 08        		.byte	8
 3543               		.section	.bss.clipping_start_pos,"aw",@nobits
 3546               	clipping_start_pos:
 3547 0000 00        		.zero	1
 3548               		.comm	led,24,1
 3549               	.global	animation_status
 3550               		.section	.bss.animation_status,"aw",@nobits
 3553               	animation_status:
 3554 0000 0000 0000 		.zero	6
 3554      0000 
 3555               	.global	is_rgblight_initialized
 3556               		.section	.bss.is_rgblight_initialized,"aw",@nobits
 3559               	is_rgblight_initialized:
 3560 0000 00        		.zero	1
 3561               	.global	rgblight_status
 3562               		.section	.bss.rgblight_status,"aw",@nobits
 3565               	rgblight_status:
 3566 0000 0000      		.zero	2
 3567               		.comm	rgblight_config,5,1
 3568               	.global	led_map
 3569               		.section	.progmem.data.led_map,"a"
 3572               	led_map:
 3573 0000 06        		.byte	6
 3574 0001 07        		.byte	7
 3575 0002 00        		.byte	0
 3576 0003 01        		.byte	1
 3577 0004 02        		.byte	2
 3578 0005 03        		.byte	3
 3579 0006 04        		.byte	4
 3580 0007 05        		.byte	5
 3581               		.section	.rodata.mode_base_table,"a"
 3584               	mode_base_table:
 3585 0000 00        		.byte	0
 3586 0001 01        		.byte	1
 3587 0002 02        		.byte	2
 3588 0003 02        		.byte	2
 3589 0004 02        		.byte	2
 3590               		.section	.data.static_effect_table,"aw"
 3593               	static_effect_table:
 3594 0000 01        		.byte	1
 3595               		.text
 3596               	.Letext0:
 3597               		.file 4 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchain
 3598               		.file 5 "./quantum/color.h"
 3599               		.file 6 "tmk_core/common/timer.h"
 3600               		.file 7 "quantum/rgblight.h"
 3601               		.file 8 "tmk_core/common/debug.h"
 3602               		.file 9 "quantum/led_tables.h"
 3603               		.file 10 "./lib/lib8tion/random8.h"
 3604               		.file 11 "./lib/lib8tion/trig8.h"
 3605               		.file 12 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchai
 3606               		.file 13 "drivers/avr/ws2812.h"
 3607               		.file 14 "tmk_core/common/eeconfig.h"
 3608               		.file 15 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchai
DEFINED SYMBOLS
                            *ABS*:00000000 rgblight.c
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2      *ABS*:0000003e __SP_H__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3      *ABS*:0000003d __SP_L__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:4      *ABS*:0000003f __SREG__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:6      *ABS*:00000001 __zero_reg__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:12     .text.rgblight_effect_dummy:00000000 rgblight_effect_dummy
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:31     .text.rgblight_set_clipping_range:00000000 rgblight_set_clipping_range
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3546   .bss.clipping_start_pos:00000000 clipping_start_pos
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3541   .data.clipping_num_leds:00000000 clipping_num_leds
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:55     .text.rgblight_set_effect_range:00000000 rgblight_set_effect_range
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3536   .bss.effect_start_pos:00000000 effect_start_pos
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3531   .data.effect_end_pos:00000000 effect_end_pos
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3526   .data.effect_num_leds:00000000 effect_num_leds
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:101    .text.sethsv_raw:00000000 sethsv_raw
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:163    .text.sethsv:00000000 sethsv
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:182    .text.setrgb:00000000 setrgb
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:211    .text.rgblight_check_config:00000000 rgblight_check_config
                            *COM*:00000005 rgblight_config
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:254    .text.eeconfig_read_rgblight:00000000 eeconfig_read_rgblight
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:274    .text.eeconfig_update_rgblight:00000000 eeconfig_update_rgblight
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:325    .text.eeconfig_update_rgblight_current:00000000 eeconfig_update_rgblight_current
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:346    .text.eeconfig_update_rgblight_default:00000000 eeconfig_update_rgblight_default
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:388    .text.eeconfig_debug_rgblight:00000000 eeconfig_debug_rgblight
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:412    .text.rgblight_read_dword:00000000 rgblight_read_dword
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:435    .text.rgblight_get_mode:00000000 rgblight_get_mode
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:465    .text.rgblight_increase_speed:00000000 rgblight_increase_speed
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:497    .text.rgblight_decrease_speed:00000000 rgblight_decrease_speed
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:529    .text.rgblight_get_speed:00000000 rgblight_get_speed
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:548    .text.rgblight_set_speed_eeprom_helper:00000000 rgblight_set_speed_eeprom_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:583    .text.rgblight_set_speed:00000000 rgblight_set_speed
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:603    .text.rgblight_set_speed_noeeprom:00000000 rgblight_set_speed_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:623    .text.rgblight_get_hue:00000000 rgblight_get_hue
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:642    .text.rgblight_get_sat:00000000 rgblight_get_sat
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:661    .text.rgblight_get_val:00000000 rgblight_get_val
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:680    .text.rgblight_set:00000000 rgblight_set
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3572   .progmem.data.led_map:00000000 led_map
                            *COM*:00000018 led
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:896    .text.rgblight_setrgb:00000000 rgblight_setrgb
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:972    .text.rgblight_sethsv_noeeprom_old:00000000 rgblight_sethsv_noeeprom_old
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1043   .text.rgblight_sethsv_eeprom_helper:00000000 rgblight_sethsv_eeprom_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3584   .rodata.mode_base_table:00000000 mode_base_table
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3565   .bss.rgblight_status:00000000 rgblight_status
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1191   .text.rgblight_increase_hue_helper:00000000 rgblight_increase_hue_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1225   .text.rgblight_increase_hue_noeeprom:00000000 rgblight_increase_hue_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1243   .text.rgblight_increase_hue:00000000 rgblight_increase_hue
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1261   .text.rgblight_decrease_hue_helper:00000000 rgblight_decrease_hue_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1295   .text.rgblight_decrease_hue_noeeprom:00000000 rgblight_decrease_hue_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1313   .text.rgblight_decrease_hue:00000000 rgblight_decrease_hue
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1331   .text.rgblight_increase_sat_helper:00000000 rgblight_increase_sat_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1362   .text.rgblight_increase_sat_helper:0000000e L_1023
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1385   .text.rgblight_increase_sat_noeeprom:00000000 rgblight_increase_sat_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1403   .text.rgblight_increase_sat:00000000 rgblight_increase_sat
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1421   .text.rgblight_decrease_sat_helper:00000000 rgblight_decrease_sat_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1451   .text.rgblight_decrease_sat_helper:0000000e L_1079
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1474   .text.rgblight_decrease_sat_noeeprom:00000000 rgblight_decrease_sat_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1492   .text.rgblight_decrease_sat:00000000 rgblight_decrease_sat
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1510   .text.rgblight_increase_val_helper:00000000 rgblight_increase_val_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1540   .text.rgblight_increase_val_helper:0000000e L_1135
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1563   .text.rgblight_increase_val_noeeprom:00000000 rgblight_increase_val_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1581   .text.rgblight_increase_val:00000000 rgblight_increase_val
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1599   .text.rgblight_decrease_val_helper:00000000 rgblight_decrease_val_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1629   .text.rgblight_decrease_val_helper:0000000e L_1191
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1652   .text.rgblight_decrease_val_noeeprom:00000000 rgblight_decrease_val_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1670   .text.rgblight_decrease_val:00000000 rgblight_decrease_val
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1688   .text.rgblight_sethsv:00000000 rgblight_sethsv
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1708   .text.rgblight_sethsv_noeeprom:00000000 rgblight_sethsv_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1728   .text.rgblight_setrgb_at:00000000 rgblight_setrgb_at
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1782   .text.rgblight_sethsv_at:00000000 rgblight_sethsv_at
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1862   .text.rgblight_setrgb_range:00000000 rgblight_setrgb_range
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:1961   .text.rgblight_sethsv_range:00000000 rgblight_sethsv_range
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2048   .text.rgblight_sethsv_master:00000000 rgblight_sethsv_master
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2077   .text.rgblight_sethsv_slave:00000000 rgblight_sethsv_slave
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2106   .text.rgblight_setrgb_master:00000000 rgblight_setrgb_master
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2135   .text.rgblight_setrgb_slave:00000000 rgblight_setrgb_slave
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2164   .text.rgblight_effect_knight:00000000 rgblight_effect_knight
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3503   .data.increment.3153:00000000 increment.3153
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3513   .bss.low_bound.3151:00000000 low_bound.3151
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3508   .data.high_bound.3152:00000000 high_bound.3152
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2359   .text.rgblight_disable:00000000 rgblight_disable
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2428   .text.rgblight_disable_noeeprom:00000000 rgblight_disable_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2490   .text.rgblight_timer_init:00000000 rgblight_timer_init
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2511   .text.rgblight_timer_enable:00000000 rgblight_timer_enable
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3593   .data.static_effect_table:00000000 static_effect_table
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3553   .bss.animation_status:00000000 animation_status
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2570   .text.rgblight_mode_eeprom_helper:00000000 rgblight_mode_eeprom_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2697   .text.rgblight_step_helper:00000000 rgblight_step_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2738   .text.rgblight_step_noeeprom:00000000 rgblight_step_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2756   .text.rgblight_step:00000000 rgblight_step
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2774   .text.rgblight_step_reverse_helper:00000000 rgblight_step_reverse_helper
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2814   .text.rgblight_step_reverse_noeeprom:00000000 rgblight_step_reverse_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2832   .text.rgblight_step_reverse:00000000 rgblight_step_reverse
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2850   .text.rgblight_mode:00000000 rgblight_mode
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2870   .text.rgblight_increase:00000000 rgblight_increase
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2905   .text.rgblight_decrease:00000000 rgblight_decrease
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2940   .text.rgblight_enable:00000000 rgblight_enable
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2966   .text.rgblight_toggle:00000000 rgblight_toggle
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:2993   .text.rgblight_mode_noeeprom:00000000 rgblight_mode_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3013   .text.rgblight_init:00000000 rgblight_init
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3559   .bss.is_rgblight_initialized:00000000 is_rgblight_initialized
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3112   .text.rgblight_enable_noeeprom:00000000 rgblight_enable_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3138   .text.rgblight_toggle_noeeprom:00000000 rgblight_toggle_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3165   .text.rgblight_update_dword:00000000 rgblight_update_dword
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3212   .text.rgblight_timer_disable:00000000 rgblight_timer_disable
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3228   .text.rgblight_timer_toggle:00000000 rgblight_timer_toggle
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3266   .text.rgblight_show_solid_color:00000000 rgblight_show_solid_color
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3322   .text.rgblight_task:00000000 rgblight_task
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccRSx3xJ.s:3519   .progmem.data.RGBLED_KNIGHT_INTERVALS:00000000 RGBLED_KNIGHT_INTERVALS

UNDEFINED SYMBOLS
hsv_to_rgb
eeprom_read_dword
eeprom_update_dword
__mulhi3
ws2812_setleds
__divmodhi4
memchr
timer_read
eeconfig_is_enabled
eeconfig_init
timer_elapsed
__do_copy_data
__do_clear_bss
