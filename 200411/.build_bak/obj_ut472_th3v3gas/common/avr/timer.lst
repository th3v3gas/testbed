   1               		.file	"timer.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.timer_init,"ax",@progbits
  11               	.global	timer_init
  13               	timer_init:
  14               	.LFB7:
  15               		.file 1 "tmk_core/common/avr/timer.c"
   1:tmk_core/common/avr/timer.c **** /*
   2:tmk_core/common/avr/timer.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/avr/timer.c **** 
   4:tmk_core/common/avr/timer.c **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/avr/timer.c **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/avr/timer.c **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/avr/timer.c **** (at your option) any later version.
   8:tmk_core/common/avr/timer.c **** 
   9:tmk_core/common/avr/timer.c **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/avr/timer.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/avr/timer.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/avr/timer.c **** GNU General Public License for more details.
  13:tmk_core/common/avr/timer.c **** 
  14:tmk_core/common/avr/timer.c **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/avr/timer.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/avr/timer.c **** */
  17:tmk_core/common/avr/timer.c **** 
  18:tmk_core/common/avr/timer.c **** #include <avr/io.h>
  19:tmk_core/common/avr/timer.c **** #include <avr/interrupt.h>
  20:tmk_core/common/avr/timer.c **** #include <util/atomic.h>
  21:tmk_core/common/avr/timer.c **** #include <stdint.h>
  22:tmk_core/common/avr/timer.c **** #include "timer_avr.h"
  23:tmk_core/common/avr/timer.c **** #include "timer.h"
  24:tmk_core/common/avr/timer.c **** 
  25:tmk_core/common/avr/timer.c **** // counter resolution 1ms
  26:tmk_core/common/avr/timer.c **** // NOTE: union { uint32_t timer32; struct { uint16_t dummy; uint16_t timer16; }}
  27:tmk_core/common/avr/timer.c **** volatile uint32_t timer_count;
  28:tmk_core/common/avr/timer.c **** 
  29:tmk_core/common/avr/timer.c **** /** \brief timer initialization
  30:tmk_core/common/avr/timer.c ****  *
  31:tmk_core/common/avr/timer.c ****  * FIXME: needs doc
  32:tmk_core/common/avr/timer.c ****  */
  33:tmk_core/common/avr/timer.c **** void timer_init(void) {
  16               		.loc 1 33 23 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  34:tmk_core/common/avr/timer.c **** #if TIMER_PRESCALER == 1
  35:tmk_core/common/avr/timer.c ****     uint8_t prescaler = _BV(CS00);
  36:tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 8
  37:tmk_core/common/avr/timer.c ****     uint8_t prescaler = _BV(CS01);
  38:tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 64
  39:tmk_core/common/avr/timer.c ****     uint8_t prescaler = _BV(CS00) | _BV(CS01);
  22               		.loc 1 39 5 view .LVU1
  23               	.LVL0:
  40:tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 256
  41:tmk_core/common/avr/timer.c ****     uint8_t prescaler = _BV(CS02);
  42:tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 1024
  43:tmk_core/common/avr/timer.c ****     uint8_t prescaler = _BV(CS00) | _BV(CS02);
  44:tmk_core/common/avr/timer.c **** #else
  45:tmk_core/common/avr/timer.c **** #    error "Timer prescaler value is not valid"
  46:tmk_core/common/avr/timer.c **** #endif
  47:tmk_core/common/avr/timer.c **** 
  48:tmk_core/common/avr/timer.c **** #ifndef __AVR_ATmega32A__
  49:tmk_core/common/avr/timer.c ****     // Timer0 CTC mode
  50:tmk_core/common/avr/timer.c ****     TCCR0A = _BV(WGM01);
  24               		.loc 1 50 5 view .LVU2
  25               		.loc 1 50 12 is_stmt 0 view .LVU3
  26 0000 82E0      		ldi r24,lo8(2)
  27 0002 84BD      		out 0x24,r24
  51:tmk_core/common/avr/timer.c ****     TCCR0B = prescaler;
  28               		.loc 1 51 5 is_stmt 1 view .LVU4
  29               		.loc 1 51 12 is_stmt 0 view .LVU5
  30 0004 93E0      		ldi r25,lo8(3)
  31 0006 95BD      		out 0x25,r25
  52:tmk_core/common/avr/timer.c **** 
  53:tmk_core/common/avr/timer.c ****     OCR0A  = TIMER_RAW_TOP;
  32               		.loc 1 53 5 is_stmt 1 view .LVU6
  33               		.loc 1 53 12 is_stmt 0 view .LVU7
  34 0008 9AEF      		ldi r25,lo8(-6)
  35 000a 97BD      		out 0x27,r25
  54:tmk_core/common/avr/timer.c ****     TIMSK0 = _BV(OCIE0A);
  36               		.loc 1 54 5 is_stmt 1 view .LVU8
  37               		.loc 1 54 12 is_stmt 0 view .LVU9
  38 000c 8093 6E00 		sts 110,r24
  39               	/* epilogue start */
  55:tmk_core/common/avr/timer.c **** #else
  56:tmk_core/common/avr/timer.c ****     // Timer0 CTC mode
  57:tmk_core/common/avr/timer.c ****     TCCR0 = _BV(WGM01) | prescaler;
  58:tmk_core/common/avr/timer.c **** 
  59:tmk_core/common/avr/timer.c ****     OCR0  = TIMER_RAW_TOP;
  60:tmk_core/common/avr/timer.c ****     TIMSK = _BV(OCIE0);
  61:tmk_core/common/avr/timer.c **** #endif
  62:tmk_core/common/avr/timer.c **** }
  40               		.loc 1 62 1 view .LVU10
  41 0010 0895      		ret
  42               		.cfi_endproc
  43               	.LFE7:
  45               		.section	.text.timer_clear,"ax",@progbits
  46               	.global	timer_clear
  48               	timer_clear:
  49               	.LFB8:
  63:tmk_core/common/avr/timer.c **** 
  64:tmk_core/common/avr/timer.c **** /** \brief timer clear
  65:tmk_core/common/avr/timer.c ****  *
  66:tmk_core/common/avr/timer.c ****  * FIXME: needs doc
  67:tmk_core/common/avr/timer.c ****  */
  68:tmk_core/common/avr/timer.c **** inline void timer_clear(void) {
  50               		.loc 1 68 31 is_stmt 1 view -0
  51               		.cfi_startproc
  52               	/* prologue: function */
  53               	/* frame size = 0 */
  54               	/* stack size = 0 */
  55               	.L__stack_usage = 0
  69:tmk_core/common/avr/timer.c ****     ATOMIC_BLOCK(ATOMIC_RESTORESTATE) { timer_count = 0; }
  56               		.loc 1 69 5 view .LVU12
  57               	.LBB27:
  58               		.loc 1 69 5 view .LVU13
  59 0000 8FB7      		in r24,__SREG__
  60               	.LVL1:
  61               	.LBB28:
  62               	.LBI28:
  63               		.file 2 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchain
   1:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** /* Copyright (c) 2007 Dean Camera
   2:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****    All rights reserved.
   3:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** 
   4:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****    Redistribution and use in source and binary forms, with or without
   5:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****    modification, are permitted provided that the following conditions are met:
   6:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** 
   7:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****    * Redistributions of source code must retain the above copyright
   8:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****      notice, this list of conditions and the following disclaimer.
   9:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** 
  10:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****    * Redistributions in binary form must reproduce the above copyright
  11:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****      notice, this list of conditions and the following disclaimer in
  12:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****      the documentation and/or other materials provided with the
  13:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****      distribution.
  14:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** 
  15:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****    * Neither the name of the copyright holders nor the names of
  16:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****      contributors may be used to endorse or promote products derived
  17:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****      from this software without specific prior written permission.
  18:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** 
  19:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  20:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  21:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  22:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  23:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  24:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  25:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  26:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  27:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  29:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****   POSSIBILITY OF SUCH DAMAGE.
  30:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** */
  31:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** 
  32:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** /* $Id: atomic.h 2158 2010-06-10 15:48:28Z joerg_wunsch $ */
  33:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** 
  34:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** #ifndef _UTIL_ATOMIC_H_
  35:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** #define _UTIL_ATOMIC_H_ 1
  36:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** 
  37:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** #include <avr/io.h>
  38:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** #include <avr/interrupt.h>
  39:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** 
  40:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** #if !defined(__DOXYGEN__)
  41:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** /* Internal helper functions. */
  42:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** static __inline__ uint8_t __iSeiRetVal(void)
  43:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** {
  44:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     sei();
  45:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     return 1;
  46:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** }
  47:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** 
  48:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** static __inline__ uint8_t __iCliRetVal(void)
  64               		.loc 2 48 27 view .LVU14
  65               	.LBB29:
  49:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** {
  50:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     cli();
  66               		.loc 2 50 5 view .LVU15
  67               	/* #APP */
  68               	 ;  50 "c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\includ
  69 0002 F894      		cli
  70               	 ;  0 "" 2
  51:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     return 1;
  71               		.loc 2 51 5 view .LVU16
  72               	.LVL2:
  73               		.loc 2 51 5 is_stmt 0 view .LVU17
  74               	/* #NOAPP */
  75               	.LBE29:
  76               	.LBE28:
  77               		.loc 1 69 41 is_stmt 1 view .LVU18
  78               		.loc 1 69 53 is_stmt 0 view .LVU19
  79 0004 1092 0000 		sts timer_count,__zero_reg__
  80 0008 1092 0000 		sts timer_count+1,__zero_reg__
  81 000c 1092 0000 		sts timer_count+2,__zero_reg__
  82 0010 1092 0000 		sts timer_count+3,__zero_reg__
  83               	.LVL3:
  84               	.LBB30:
  85               	.LBI30:
  52:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** }
  53:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** 
  54:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** static __inline__ void __iSeiParam(const uint8_t *__s)
  55:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** {
  56:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     sei();
  57:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     __asm__ volatile ("" ::: "memory");
  58:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     (void)__s;
  59:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** }
  60:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** 
  61:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** static __inline__ void __iCliParam(const uint8_t *__s)
  62:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** {
  63:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     cli();
  64:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     __asm__ volatile ("" ::: "memory");
  65:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     (void)__s;
  66:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** }
  67:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** 
  68:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** static __inline__ void __iRestore(const  uint8_t *__s)
  86               		.loc 2 68 24 is_stmt 1 view .LVU20
  87               	.LBB31:
  69:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** {
  70:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     SREG = *__s;
  88               		.loc 2 70 5 view .LVU21
  89               		.loc 2 70 10 is_stmt 0 view .LVU22
  90 0014 8FBF      		out __SREG__,r24
  71:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     __asm__ volatile ("" ::: "memory");
  91               		.loc 2 71 5 is_stmt 1 view .LVU23
  92               	.LVL4:
  93               	/* epilogue start */
  94               		.loc 2 71 5 is_stmt 0 view .LVU24
  95               	.LBE31:
  96               	.LBE30:
  97               	.LBE27:
  70:tmk_core/common/avr/timer.c **** }
  98               		.loc 1 70 1 view .LVU25
  99 0016 0895      		ret
 100               		.cfi_endproc
 101               	.LFE8:
 103               		.section	.text.timer_read,"ax",@progbits
 104               	.global	timer_read
 106               	timer_read:
 107               	.LFB9:
  71:tmk_core/common/avr/timer.c **** 
  72:tmk_core/common/avr/timer.c **** /** \brief timer read
  73:tmk_core/common/avr/timer.c ****  *
  74:tmk_core/common/avr/timer.c ****  * FIXME: needs doc
  75:tmk_core/common/avr/timer.c ****  */
  76:tmk_core/common/avr/timer.c **** inline uint16_t timer_read(void) {
 108               		.loc 1 76 34 is_stmt 1 view -0
 109               		.cfi_startproc
 110               	/* prologue: function */
 111               	/* frame size = 0 */
 112               	/* stack size = 0 */
 113               	.L__stack_usage = 0
  77:tmk_core/common/avr/timer.c ****     uint32_t t;
 114               		.loc 1 77 5 view .LVU27
  78:tmk_core/common/avr/timer.c **** 
  79:tmk_core/common/avr/timer.c ****     ATOMIC_BLOCK(ATOMIC_RESTORESTATE) { t = timer_count; }
 115               		.loc 1 79 5 view .LVU28
 116               	.LBB32:
 117               		.loc 1 79 5 view .LVU29
 118 0000 2FB7      		in r18,__SREG__
 119               	.LVL5:
 120               	.LBB33:
 121               	.LBI33:
  48:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** {
 122               		.loc 2 48 27 view .LVU30
 123               	.LBB34:
  50:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     return 1;
 124               		.loc 2 50 5 view .LVU31
 125               	/* #APP */
 126               	 ;  50 "c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\includ
 127 0002 F894      		cli
 128               	 ;  0 "" 2
  51:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** }
 129               		.loc 2 51 5 view .LVU32
 130               	.LVL6:
  51:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** }
 131               		.loc 2 51 5 is_stmt 0 view .LVU33
 132               	/* #NOAPP */
 133               	.LBE34:
 134               	.LBE33:
 135               		.loc 1 79 41 is_stmt 1 view .LVU34
 136               		.loc 1 79 43 is_stmt 0 view .LVU35
 137 0004 8091 0000 		lds r24,timer_count
 138 0008 9091 0000 		lds r25,timer_count+1
 139 000c A091 0000 		lds r26,timer_count+2
 140 0010 B091 0000 		lds r27,timer_count+3
 141               	.LVL7:
 142               	.LBB35:
 143               	.LBI35:
  68:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** {
 144               		.loc 2 68 24 is_stmt 1 view .LVU36
 145               	.LBB36:
  70:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     __asm__ volatile ("" ::: "memory");
 146               		.loc 2 70 5 view .LVU37
  70:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     __asm__ volatile ("" ::: "memory");
 147               		.loc 2 70 10 is_stmt 0 view .LVU38
 148 0014 2FBF      		out __SREG__,r18
 149               		.loc 2 71 5 is_stmt 1 view .LVU39
 150               	.LVL8:
 151               		.loc 2 71 5 is_stmt 0 view .LVU40
 152               	.LBE36:
 153               	.LBE35:
 154               	.LBE32:
  80:tmk_core/common/avr/timer.c **** 
  81:tmk_core/common/avr/timer.c ****     return (t & 0xFFFF);
 155               		.loc 1 81 5 is_stmt 1 view .LVU41
 156               	/* epilogue start */
  82:tmk_core/common/avr/timer.c **** }
 157               		.loc 1 82 1 is_stmt 0 view .LVU42
 158 0016 0895      		ret
 159               		.cfi_endproc
 160               	.LFE9:
 162               		.section	.text.timer_read32,"ax",@progbits
 163               	.global	timer_read32
 165               	timer_read32:
 166               	.LFB10:
  83:tmk_core/common/avr/timer.c **** 
  84:tmk_core/common/avr/timer.c **** /** \brief timer read32
  85:tmk_core/common/avr/timer.c ****  *
  86:tmk_core/common/avr/timer.c ****  * FIXME: needs doc
  87:tmk_core/common/avr/timer.c ****  */
  88:tmk_core/common/avr/timer.c **** inline uint32_t timer_read32(void) {
 167               		.loc 1 88 36 is_stmt 1 view -0
 168               		.cfi_startproc
 169               	/* prologue: function */
 170               	/* frame size = 0 */
 171               	/* stack size = 0 */
 172               	.L__stack_usage = 0
  89:tmk_core/common/avr/timer.c ****     uint32_t t;
 173               		.loc 1 89 5 view .LVU44
  90:tmk_core/common/avr/timer.c **** 
  91:tmk_core/common/avr/timer.c ****     ATOMIC_BLOCK(ATOMIC_RESTORESTATE) { t = timer_count; }
 174               		.loc 1 91 5 view .LVU45
 175               	.LBB37:
 176               		.loc 1 91 5 view .LVU46
 177 0000 2FB7      		in r18,__SREG__
 178               	.LVL9:
 179               	.LBB38:
 180               	.LBI38:
  48:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** {
 181               		.loc 2 48 27 view .LVU47
 182               	.LBB39:
  50:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     return 1;
 183               		.loc 2 50 5 view .LVU48
 184               	/* #APP */
 185               	 ;  50 "c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\includ
 186 0002 F894      		cli
 187               	 ;  0 "" 2
  51:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** }
 188               		.loc 2 51 5 view .LVU49
 189               	.LVL10:
  51:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** }
 190               		.loc 2 51 5 is_stmt 0 view .LVU50
 191               	/* #NOAPP */
 192               	.LBE39:
 193               	.LBE38:
 194               		.loc 1 91 41 is_stmt 1 view .LVU51
 195               		.loc 1 91 43 is_stmt 0 view .LVU52
 196 0004 6091 0000 		lds r22,timer_count
 197 0008 7091 0000 		lds r23,timer_count+1
 198 000c 8091 0000 		lds r24,timer_count+2
 199 0010 9091 0000 		lds r25,timer_count+3
 200               	.LVL11:
 201               	.LBB40:
 202               	.LBI40:
  68:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** {
 203               		.loc 2 68 24 is_stmt 1 view .LVU53
 204               	.LBB41:
  70:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     __asm__ volatile ("" ::: "memory");
 205               		.loc 2 70 5 view .LVU54
  70:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     __asm__ volatile ("" ::: "memory");
 206               		.loc 2 70 10 is_stmt 0 view .LVU55
 207 0014 2FBF      		out __SREG__,r18
 208               		.loc 2 71 5 is_stmt 1 view .LVU56
 209               	.LVL12:
 210               		.loc 2 71 5 is_stmt 0 view .LVU57
 211               	.LBE41:
 212               	.LBE40:
 213               	.LBE37:
  92:tmk_core/common/avr/timer.c **** 
  93:tmk_core/common/avr/timer.c ****     return t;
 214               		.loc 1 93 5 is_stmt 1 view .LVU58
 215               	/* epilogue start */
  94:tmk_core/common/avr/timer.c **** }
 216               		.loc 1 94 1 is_stmt 0 view .LVU59
 217 0016 0895      		ret
 218               		.cfi_endproc
 219               	.LFE10:
 221               		.section	.text.timer_elapsed,"ax",@progbits
 222               	.global	timer_elapsed
 224               	timer_elapsed:
 225               	.LVL13:
 226               	.LFB11:
  95:tmk_core/common/avr/timer.c **** 
  96:tmk_core/common/avr/timer.c **** /** \brief timer elapsed
  97:tmk_core/common/avr/timer.c ****  *
  98:tmk_core/common/avr/timer.c ****  * FIXME: needs doc
  99:tmk_core/common/avr/timer.c ****  */
 100:tmk_core/common/avr/timer.c **** inline uint16_t timer_elapsed(uint16_t last) {
 227               		.loc 1 100 46 is_stmt 1 view -0
 228               		.cfi_startproc
 229               		.loc 1 100 46 is_stmt 0 view .LVU61
 230 0000 CF92      		push r12
 231               	.LCFI0:
 232               		.cfi_def_cfa_offset 3
 233               		.cfi_offset 12, -2
 234 0002 DF92      		push r13
 235               	.LCFI1:
 236               		.cfi_def_cfa_offset 4
 237               		.cfi_offset 13, -3
 238 0004 EF92      		push r14
 239               	.LCFI2:
 240               		.cfi_def_cfa_offset 5
 241               		.cfi_offset 14, -4
 242 0006 FF92      		push r15
 243               	.LCFI3:
 244               		.cfi_def_cfa_offset 6
 245               		.cfi_offset 15, -5
 246 0008 0F93      		push r16
 247               	.LCFI4:
 248               		.cfi_def_cfa_offset 7
 249               		.cfi_offset 16, -6
 250 000a 1F93      		push r17
 251               	.LCFI5:
 252               		.cfi_def_cfa_offset 8
 253               		.cfi_offset 17, -7
 254               	/* prologue: function */
 255               	/* frame size = 0 */
 256               	/* stack size = 6 */
 257               	.L__stack_usage = 6
 101:tmk_core/common/avr/timer.c ****     uint32_t t;
 258               		.loc 1 101 5 is_stmt 1 view .LVU62
 102:tmk_core/common/avr/timer.c **** 
 103:tmk_core/common/avr/timer.c ****     ATOMIC_BLOCK(ATOMIC_RESTORESTATE) { t = timer_count; }
 259               		.loc 1 103 5 view .LVU63
 260               	.LBB42:
 261               		.loc 1 103 5 view .LVU64
 262 000c 2FB7      		in r18,__SREG__
 263               	.LVL14:
 264               	.LBB43:
 265               	.LBI43:
  48:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** {
 266               		.loc 2 48 27 view .LVU65
 267               	.LBB44:
  50:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     return 1;
 268               		.loc 2 50 5 view .LVU66
 269               	/* #APP */
 270               	 ;  50 "c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\includ
 271 000e F894      		cli
 272               	 ;  0 "" 2
  51:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** }
 273               		.loc 2 51 5 view .LVU67
 274               	.LVL15:
  51:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** }
 275               		.loc 2 51 5 is_stmt 0 view .LVU68
 276               	/* #NOAPP */
 277               	.LBE44:
 278               	.LBE43:
 279               		.loc 1 103 41 is_stmt 1 view .LVU69
 280               		.loc 1 103 43 is_stmt 0 view .LVU70
 281 0010 4091 0000 		lds r20,timer_count
 282 0014 5091 0000 		lds r21,timer_count+1
 283 0018 6091 0000 		lds r22,timer_count+2
 284 001c 7091 0000 		lds r23,timer_count+3
 285               	.LVL16:
 286               	.LBB45:
 287               	.LBI45:
  68:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** {
 288               		.loc 2 68 24 is_stmt 1 view .LVU71
 289               	.LBB46:
  70:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     __asm__ volatile ("" ::: "memory");
 290               		.loc 2 70 5 view .LVU72
  70:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     __asm__ volatile ("" ::: "memory");
 291               		.loc 2 70 10 is_stmt 0 view .LVU73
 292 0020 2FBF      		out __SREG__,r18
 293               		.loc 2 71 5 is_stmt 1 view .LVU74
 294               	.LVL17:
 295               		.loc 2 71 5 is_stmt 0 view .LVU75
 296               	.LBE46:
 297               	.LBE45:
 298               	.LBE42:
 104:tmk_core/common/avr/timer.c **** 
 105:tmk_core/common/avr/timer.c ****     return TIMER_DIFF_16((t & 0xFFFF), last);
 299               		.loc 1 105 5 is_stmt 1 view .LVU76
 300               		.loc 1 105 12 is_stmt 0 view .LVU77
 301 0022 6A01      		movw r12,r20
 302 0024 7B01      		movw r14,r22
 303 0026 EE24      		clr r14
 304 0028 FF24      		clr r15
 305 002a 8C01      		movw r16,r24
 306 002c 30E0      		ldi r19,0
 307 002e 20E0      		ldi r18,0
 308 0030 C016      		cp r12,r16
 309 0032 D106      		cpc r13,r17
 310 0034 E206      		cpc r14,r18
 311 0036 F306      		cpc r15,r19
 312 0038 00F0      		brlo .L6
 313               	.LVL18:
 314               	.L8:
 315               		.loc 1 105 12 discriminator 2 view .LVU78
 316 003a 481B      		sub r20,r24
 317 003c 590B      		sbc r21,r25
 106:tmk_core/common/avr/timer.c **** }
 318               		.loc 1 106 1 discriminator 2 view .LVU79
 319 003e CA01      		movw r24,r20
 320               	.LVL19:
 321               	/* epilogue start */
 322               		.loc 1 106 1 discriminator 2 view .LVU80
 323 0040 1F91      		pop r17
 324 0042 0F91      		pop r16
 325               	.LVL20:
 326               		.loc 1 106 1 discriminator 2 view .LVU81
 327 0044 FF90      		pop r15
 328 0046 EF90      		pop r14
 329 0048 DF90      		pop r13
 330 004a CF90      		pop r12
 331 004c 0895      		ret
 332               	.LVL21:
 333               	.L6:
 105:tmk_core/common/avr/timer.c **** }
 334               		.loc 1 105 12 discriminator 2 view .LVU82
 335 004e 4150      		subi r20,1
 336 0050 5109      		sbc r21,__zero_reg__
 337               	.LVL22:
 105:tmk_core/common/avr/timer.c **** }
 338               		.loc 1 105 12 discriminator 2 view .LVU83
 339 0052 00C0      		rjmp .L8
 340               		.cfi_endproc
 341               	.LFE11:
 343               		.section	.text.timer_elapsed32,"ax",@progbits
 344               	.global	timer_elapsed32
 346               	timer_elapsed32:
 347               	.LVL23:
 348               	.LFB12:
 107:tmk_core/common/avr/timer.c **** 
 108:tmk_core/common/avr/timer.c **** /** \brief timer elapsed32
 109:tmk_core/common/avr/timer.c ****  *
 110:tmk_core/common/avr/timer.c ****  * FIXME: needs doc
 111:tmk_core/common/avr/timer.c ****  */
 112:tmk_core/common/avr/timer.c **** inline uint32_t timer_elapsed32(uint32_t last) {
 349               		.loc 1 112 48 is_stmt 1 view -0
 350               		.cfi_startproc
 351               	/* prologue: function */
 352               	/* frame size = 0 */
 353               	/* stack size = 0 */
 354               	.L__stack_usage = 0
 355               		.loc 1 112 48 is_stmt 0 view .LVU85
 356 0000 AB01      		movw r20,r22
 357 0002 BC01      		movw r22,r24
 358               	.LVL24:
 113:tmk_core/common/avr/timer.c ****     uint32_t t;
 359               		.loc 1 113 5 is_stmt 1 view .LVU86
 114:tmk_core/common/avr/timer.c **** 
 115:tmk_core/common/avr/timer.c ****     ATOMIC_BLOCK(ATOMIC_RESTORESTATE) { t = timer_count; }
 360               		.loc 1 115 5 view .LVU87
 361               	.LBB47:
 362               		.loc 1 115 5 view .LVU88
 363 0004 2FB7      		in r18,__SREG__
 364               	.LVL25:
 365               	.LBB48:
 366               	.LBI48:
  48:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** {
 367               		.loc 2 48 27 view .LVU89
 368               	.LBB49:
  50:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     return 1;
 369               		.loc 2 50 5 view .LVU90
 370               	/* #APP */
 371               	 ;  50 "c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\includ
 372 0006 F894      		cli
 373               	 ;  0 "" 2
  51:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** }
 374               		.loc 2 51 5 view .LVU91
 375               	.LVL26:
  51:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** }
 376               		.loc 2 51 5 is_stmt 0 view .LVU92
 377               	/* #NOAPP */
 378               	.LBE49:
 379               	.LBE48:
 380               		.loc 1 115 41 is_stmt 1 view .LVU93
 381               		.loc 1 115 43 is_stmt 0 view .LVU94
 382 0008 8091 0000 		lds r24,timer_count
 383 000c 9091 0000 		lds r25,timer_count+1
 384 0010 A091 0000 		lds r26,timer_count+2
 385 0014 B091 0000 		lds r27,timer_count+3
 386               	.LVL27:
 387               	.LBB50:
 388               	.LBI50:
  68:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h **** {
 389               		.loc 2 68 24 is_stmt 1 view .LVU95
 390               	.LBB51:
  70:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     __asm__ volatile ("" ::: "memory");
 391               		.loc 2 70 5 view .LVU96
  70:c:\users\nonej\documents\keyboard\msys64\home\nonej\qmk_utils\avr8-gnu-toolchain\avr\include\util\atomic.h ****     __asm__ volatile ("" ::: "memory");
 392               		.loc 2 70 10 is_stmt 0 view .LVU97
 393 0018 2FBF      		out __SREG__,r18
 394               		.loc 2 71 5 is_stmt 1 view .LVU98
 395               	.LVL28:
 396               		.loc 2 71 5 is_stmt 0 view .LVU99
 397               	.LBE51:
 398               	.LBE50:
 399               	.LBE47:
 116:tmk_core/common/avr/timer.c **** 
 117:tmk_core/common/avr/timer.c ****     return TIMER_DIFF_32(t, last);
 400               		.loc 1 117 5 is_stmt 1 view .LVU100
 401               		.loc 1 117 12 is_stmt 0 view .LVU101
 402 001a 8417      		cp r24,r20
 403 001c 9507      		cpc r25,r21
 404 001e A607      		cpc r26,r22
 405 0020 B707      		cpc r27,r23
 406 0022 00F0      		brlo .L10
 407               	.LVL29:
 408               	.L12:
 409               		.loc 1 117 12 discriminator 2 view .LVU102
 410 0024 841B      		sub r24,r20
 411 0026 950B      		sbc r25,r21
 412 0028 A60B      		sbc r26,r22
 413 002a B70B      		sbc r27,r23
 118:tmk_core/common/avr/timer.c **** }
 414               		.loc 1 118 1 discriminator 2 view .LVU103
 415 002c BC01      		movw r22,r24
 416 002e CD01      		movw r24,r26
 417               	/* epilogue start */
 418 0030 0895      		ret
 419               	.LVL30:
 420               	.L10:
 117:tmk_core/common/avr/timer.c **** }
 421               		.loc 1 117 12 discriminator 2 view .LVU104
 422 0032 0197      		sbiw r24,1
 423 0034 A109      		sbc r26,__zero_reg__
 424 0036 B109      		sbc r27,__zero_reg__
 425               	.LVL31:
 117:tmk_core/common/avr/timer.c **** }
 426               		.loc 1 117 12 discriminator 2 view .LVU105
 427 0038 00C0      		rjmp .L12
 428               		.cfi_endproc
 429               	.LFE12:
 431               		.section	.text.__vector_19,"ax",@progbits
 432               	.global	__vector_19
 434               	__vector_19:
 435               	.LFB13:
 119:tmk_core/common/avr/timer.c **** 
 120:tmk_core/common/avr/timer.c **** // excecuted once per 1ms.(excess for just timer count?)
 121:tmk_core/common/avr/timer.c **** #ifndef __AVR_ATmega32A__
 122:tmk_core/common/avr/timer.c **** #    define TIMER_INTERRUPT_VECTOR TIMER0_COMPA_vect
 123:tmk_core/common/avr/timer.c **** #else
 124:tmk_core/common/avr/timer.c **** #    define TIMER_INTERRUPT_VECTOR TIMER0_COMP_vect
 125:tmk_core/common/avr/timer.c **** #endif
 126:tmk_core/common/avr/timer.c **** ISR(TIMER_INTERRUPT_VECTOR, ISR_NOBLOCK) { timer_count++; }
 436               		.loc 1 126 42 is_stmt 1 view -0
 437               		.cfi_startproc
 438 0000 7894      		sei
 439 0002 1F92 1FB6 		__gcc_isr 1
 439      1F92 1124 
 439      8F93 
 440 000c 9F93      		push r25
 441               	.LCFI6:
 442               		.cfi_def_cfa_offset 3
 443               		.cfi_offset 25, -2
 444 000e AF93      		push r26
 445               	.LCFI7:
 446               		.cfi_def_cfa_offset 4
 447               		.cfi_offset 26, -3
 448 0010 BF93      		push r27
 449               	.LCFI8:
 450               		.cfi_def_cfa_offset 5
 451               		.cfi_offset 27, -4
 452               	/* prologue: Interrupt */
 453               	/* frame size = 0 */
 454               	/* stack size = 3...7 */
 455               	.L__stack_usage = 3 + __gcc_isr.n_pushed
 456               		.loc 1 126 44 view .LVU107
 457               		.loc 1 126 55 is_stmt 0 view .LVU108
 458 0012 8091 0000 		lds r24,timer_count
 459 0016 9091 0000 		lds r25,timer_count+1
 460 001a A091 0000 		lds r26,timer_count+2
 461 001e B091 0000 		lds r27,timer_count+3
 462 0022 0196      		adiw r24,1
 463 0024 A11D      		adc r26,__zero_reg__
 464 0026 B11D      		adc r27,__zero_reg__
 465 0028 8093 0000 		sts timer_count,r24
 466 002c 9093 0000 		sts timer_count+1,r25
 467 0030 A093 0000 		sts timer_count+2,r26
 468 0034 B093 0000 		sts timer_count+3,r27
 469               	/* epilogue start */
 470               		.loc 1 126 1 view .LVU109
 471 0038 BF91      		pop r27
 472 003a AF91      		pop r26
 473 003c 9F91      		pop r25
 474 003e 8F91 1F90 		__gcc_isr 2
 474      1FBE 1F90 
 475 0046 1895      		reti
 476               		__gcc_isr 0,r24
 477               		.cfi_endproc
 478               	.LFE13:
 480               		.comm	timer_count,4,1
 481               		.text
 482               	.Letext0:
 483               		.file 3 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchain
 484               		.file 4 "tmk_core/common/timer.h"
DEFINED SYMBOLS
                            *ABS*:00000000 timer.c
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccR4FBof.s:2      *ABS*:0000003e __SP_H__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccR4FBof.s:3      *ABS*:0000003d __SP_L__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccR4FBof.s:4      *ABS*:0000003f __SREG__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccR4FBof.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccR4FBof.s:6      *ABS*:00000001 __zero_reg__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccR4FBof.s:13     .text.timer_init:00000000 timer_init
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccR4FBof.s:48     .text.timer_clear:00000000 timer_clear
                            *COM*:00000004 timer_count
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccR4FBof.s:106    .text.timer_read:00000000 timer_read
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccR4FBof.s:165    .text.timer_read32:00000000 timer_read32
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccR4FBof.s:224    .text.timer_elapsed:00000000 timer_elapsed
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccR4FBof.s:346    .text.timer_elapsed32:00000000 timer_elapsed32
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccR4FBof.s:434    .text.__vector_19:00000000 __vector_19
                            *ABS*:00000003 __gcc_isr.n_pushed.001

UNDEFINED SYMBOLS
__do_clear_bss
