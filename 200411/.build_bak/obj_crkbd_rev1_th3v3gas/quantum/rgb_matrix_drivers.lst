   1               		.file	"rgb_matrix_drivers.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.init,"ax",@progbits
  12               	init:
  13               	.LFB114:
  14               		.file 1 "quantum/rgb_matrix_drivers.c"
   1:quantum/rgb_matrix_drivers.c **** /* Copyright 2018 James Laird-Wah
   2:quantum/rgb_matrix_drivers.c ****  *
   3:quantum/rgb_matrix_drivers.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/rgb_matrix_drivers.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/rgb_matrix_drivers.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/rgb_matrix_drivers.c ****  * (at your option) any later version.
   7:quantum/rgb_matrix_drivers.c ****  *
   8:quantum/rgb_matrix_drivers.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/rgb_matrix_drivers.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/rgb_matrix_drivers.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/rgb_matrix_drivers.c ****  * GNU General Public License for more details.
  12:quantum/rgb_matrix_drivers.c ****  *
  13:quantum/rgb_matrix_drivers.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/rgb_matrix_drivers.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/rgb_matrix_drivers.c ****  */
  16:quantum/rgb_matrix_drivers.c **** 
  17:quantum/rgb_matrix_drivers.c **** #include "rgb_matrix.h"
  18:quantum/rgb_matrix_drivers.c **** 
  19:quantum/rgb_matrix_drivers.c **** /* Each driver needs to define the struct
  20:quantum/rgb_matrix_drivers.c ****  *    const rgb_matrix_driver_t rgb_matrix_driver;
  21:quantum/rgb_matrix_drivers.c ****  * All members must be provided.
  22:quantum/rgb_matrix_drivers.c ****  * Keyboard custom drivers can define this in their own files, it should only
  23:quantum/rgb_matrix_drivers.c ****  * be here if shared between boards.
  24:quantum/rgb_matrix_drivers.c ****  */
  25:quantum/rgb_matrix_drivers.c **** 
  26:quantum/rgb_matrix_drivers.c **** #if defined(IS31FL3731) || defined(IS31FL3733) || defined(IS31FL3737)
  27:quantum/rgb_matrix_drivers.c **** 
  28:quantum/rgb_matrix_drivers.c **** #    include "i2c_master.h"
  29:quantum/rgb_matrix_drivers.c **** 
  30:quantum/rgb_matrix_drivers.c **** static void init(void) {
  31:quantum/rgb_matrix_drivers.c ****     i2c_init();
  32:quantum/rgb_matrix_drivers.c **** #    ifdef IS31FL3731
  33:quantum/rgb_matrix_drivers.c ****     IS31FL3731_init(DRIVER_ADDR_1);
  34:quantum/rgb_matrix_drivers.c ****     IS31FL3731_init(DRIVER_ADDR_2);
  35:quantum/rgb_matrix_drivers.c **** #    elif defined(IS31FL3733)
  36:quantum/rgb_matrix_drivers.c ****     IS31FL3733_init(DRIVER_ADDR_1, 0);
  37:quantum/rgb_matrix_drivers.c **** #    else
  38:quantum/rgb_matrix_drivers.c ****     IS31FL3737_init(DRIVER_ADDR_1);
  39:quantum/rgb_matrix_drivers.c **** #    endif
  40:quantum/rgb_matrix_drivers.c ****     for (int index = 0; index < DRIVER_LED_TOTAL; index++) {
  41:quantum/rgb_matrix_drivers.c ****         bool enabled = true;
  42:quantum/rgb_matrix_drivers.c ****         // This only caches it for later
  43:quantum/rgb_matrix_drivers.c **** #    ifdef IS31FL3731
  44:quantum/rgb_matrix_drivers.c ****         IS31FL3731_set_led_control_register(index, enabled, enabled, enabled);
  45:quantum/rgb_matrix_drivers.c **** #    elif defined(IS31FL3733)
  46:quantum/rgb_matrix_drivers.c ****         IS31FL3733_set_led_control_register(index, enabled, enabled, enabled);
  47:quantum/rgb_matrix_drivers.c **** #    else
  48:quantum/rgb_matrix_drivers.c ****         IS31FL3737_set_led_control_register(index, enabled, enabled, enabled);
  49:quantum/rgb_matrix_drivers.c **** #    endif
  50:quantum/rgb_matrix_drivers.c ****     }
  51:quantum/rgb_matrix_drivers.c ****     // This actually updates the LED drivers
  52:quantum/rgb_matrix_drivers.c **** #    ifdef IS31FL3731
  53:quantum/rgb_matrix_drivers.c ****     IS31FL3731_update_led_control_registers(DRIVER_ADDR_1, 0);
  54:quantum/rgb_matrix_drivers.c ****     IS31FL3731_update_led_control_registers(DRIVER_ADDR_2, 1);
  55:quantum/rgb_matrix_drivers.c **** #    elif defined(IS31FL3733)
  56:quantum/rgb_matrix_drivers.c ****     IS31FL3733_update_led_control_registers(DRIVER_ADDR_1, 0);
  57:quantum/rgb_matrix_drivers.c ****     IS31FL3733_update_led_control_registers(DRIVER_ADDR_2, 1);
  58:quantum/rgb_matrix_drivers.c **** #    else
  59:quantum/rgb_matrix_drivers.c ****     IS31FL3737_update_led_control_registers(DRIVER_ADDR_1, DRIVER_ADDR_2);
  60:quantum/rgb_matrix_drivers.c **** #    endif
  61:quantum/rgb_matrix_drivers.c **** }
  62:quantum/rgb_matrix_drivers.c **** 
  63:quantum/rgb_matrix_drivers.c **** #    ifdef IS31FL3731
  64:quantum/rgb_matrix_drivers.c **** static void flush(void) {
  65:quantum/rgb_matrix_drivers.c ****     IS31FL3731_update_pwm_buffers(DRIVER_ADDR_1, 0);
  66:quantum/rgb_matrix_drivers.c ****     IS31FL3731_update_pwm_buffers(DRIVER_ADDR_2, 1);
  67:quantum/rgb_matrix_drivers.c **** }
  68:quantum/rgb_matrix_drivers.c **** 
  69:quantum/rgb_matrix_drivers.c **** const rgb_matrix_driver_t rgb_matrix_driver = {
  70:quantum/rgb_matrix_drivers.c ****     .init          = init,
  71:quantum/rgb_matrix_drivers.c ****     .flush         = flush,
  72:quantum/rgb_matrix_drivers.c ****     .set_color     = IS31FL3731_set_color,
  73:quantum/rgb_matrix_drivers.c ****     .set_color_all = IS31FL3731_set_color_all,
  74:quantum/rgb_matrix_drivers.c **** };
  75:quantum/rgb_matrix_drivers.c **** #    elif defined(IS31FL3733)
  76:quantum/rgb_matrix_drivers.c **** static void flush(void) {
  77:quantum/rgb_matrix_drivers.c ****     IS31FL3733_update_pwm_buffers(DRIVER_ADDR_1, 0);
  78:quantum/rgb_matrix_drivers.c ****     IS31FL3733_update_pwm_buffers(DRIVER_ADDR_2, 1);
  79:quantum/rgb_matrix_drivers.c **** }
  80:quantum/rgb_matrix_drivers.c **** 
  81:quantum/rgb_matrix_drivers.c **** const rgb_matrix_driver_t rgb_matrix_driver = {
  82:quantum/rgb_matrix_drivers.c ****     .init = init,
  83:quantum/rgb_matrix_drivers.c ****     .flush = flush,
  84:quantum/rgb_matrix_drivers.c ****     .set_color = IS31FL3733_set_color,
  85:quantum/rgb_matrix_drivers.c ****     .set_color_all = IS31FL3733_set_color_all,
  86:quantum/rgb_matrix_drivers.c **** };
  87:quantum/rgb_matrix_drivers.c **** #    else
  88:quantum/rgb_matrix_drivers.c **** static void flush(void) { IS31FL3737_update_pwm_buffers(DRIVER_ADDR_1, DRIVER_ADDR_2); }
  89:quantum/rgb_matrix_drivers.c **** 
  90:quantum/rgb_matrix_drivers.c **** const rgb_matrix_driver_t rgb_matrix_driver = {
  91:quantum/rgb_matrix_drivers.c ****     .init = init,
  92:quantum/rgb_matrix_drivers.c ****     .flush = flush,
  93:quantum/rgb_matrix_drivers.c ****     .set_color = IS31FL3737_set_color,
  94:quantum/rgb_matrix_drivers.c ****     .set_color_all = IS31FL3737_set_color_all,
  95:quantum/rgb_matrix_drivers.c **** };
  96:quantum/rgb_matrix_drivers.c **** #    endif
  97:quantum/rgb_matrix_drivers.c **** 
  98:quantum/rgb_matrix_drivers.c **** #elif defined(WS2812)
  99:quantum/rgb_matrix_drivers.c **** 
 100:quantum/rgb_matrix_drivers.c **** // LED color buffer
 101:quantum/rgb_matrix_drivers.c **** LED_TYPE led[DRIVER_LED_TOTAL];
 102:quantum/rgb_matrix_drivers.c **** 
 103:quantum/rgb_matrix_drivers.c **** static void init(void) {}
  15               		.loc 1 103 24 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  21               		.loc 1 103 25 view .LVU1
  22               	/* epilogue start */
  23               		.loc 1 103 1 is_stmt 0 view .LVU2
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE114:
  28               		.section	.text.setled,"ax",@progbits
  30               	setled:
  31               	.LVL0:
  32               	.LFB116:
 104:quantum/rgb_matrix_drivers.c **** 
 105:quantum/rgb_matrix_drivers.c **** static void flush(void) {
 106:quantum/rgb_matrix_drivers.c ****     // Assumes use of RGB_DI_PIN
 107:quantum/rgb_matrix_drivers.c ****     ws2812_setleds(led, DRIVER_LED_TOTAL);
 108:quantum/rgb_matrix_drivers.c **** }
 109:quantum/rgb_matrix_drivers.c **** 
 110:quantum/rgb_matrix_drivers.c **** // Set an led in the buffer to a color
 111:quantum/rgb_matrix_drivers.c **** static inline void setled(int i, uint8_t r, uint8_t g, uint8_t b) {
  33               		.loc 1 111 67 is_stmt 1 view -0
  34               		.cfi_startproc
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 0 */
  38               	.L__stack_usage = 0
 112:quantum/rgb_matrix_drivers.c ****     led[i].r = r;
  39               		.loc 1 112 5 view .LVU4
  40               		.loc 1 112 14 is_stmt 0 view .LVU5
  41 0000 FC01      		movw r30,r24
  42 0002 EE0F      		lsl r30
  43 0004 FF1F      		rol r31
  44 0006 E80F      		add r30,r24
  45 0008 F91F      		adc r31,r25
  46 000a E050      		subi r30,lo8(-(led))
  47 000c F040      		sbci r31,hi8(-(led))
  48 000e 6183      		std Z+1,r22
 113:quantum/rgb_matrix_drivers.c ****     led[i].g = g;
  49               		.loc 1 113 5 is_stmt 1 view .LVU6
  50               		.loc 1 113 14 is_stmt 0 view .LVU7
  51 0010 4083      		st Z,r20
 114:quantum/rgb_matrix_drivers.c ****     led[i].b = b;
  52               		.loc 1 114 5 is_stmt 1 view .LVU8
  53               		.loc 1 114 14 is_stmt 0 view .LVU9
  54 0012 2283      		std Z+2,r18
  55               	/* epilogue start */
 115:quantum/rgb_matrix_drivers.c **** #    ifdef RGBW
 116:quantum/rgb_matrix_drivers.c ****     convert_rgb_to_rgbw(led[i]);
 117:quantum/rgb_matrix_drivers.c **** #    endif
 118:quantum/rgb_matrix_drivers.c **** }
  56               		.loc 1 118 1 view .LVU10
  57 0014 0895      		ret
  58               		.cfi_endproc
  59               	.LFE116:
  61               		.section	.text.setled_all,"ax",@progbits
  63               	setled_all:
  64               	.LVL1:
  65               	.LFB117:
 119:quantum/rgb_matrix_drivers.c **** 
 120:quantum/rgb_matrix_drivers.c **** static void setled_all(uint8_t r, uint8_t g, uint8_t b) {
  66               		.loc 1 120 57 is_stmt 1 view -0
  67               		.cfi_startproc
  68               	/* prologue: function */
  69               	/* frame size = 0 */
  70               	/* stack size = 0 */
  71               	.L__stack_usage = 0
 121:quantum/rgb_matrix_drivers.c ****     for (int i = 0; i < sizeof(led) / sizeof(led[0]); i++) {
  72               		.loc 1 121 5 view .LVU12
  73               	.LBB5:
  74               		.loc 1 121 10 view .LVU13
  75               		.loc 1 121 10 is_stmt 0 view .LVU14
  76 0000 E0E0      		ldi r30,lo8(led)
  77 0002 F0E0      		ldi r31,hi8(led)
  78               	.LVL2:
  79               	.L4:
 122:quantum/rgb_matrix_drivers.c ****         setled(i, r, g, b);
  80               		.loc 1 122 9 is_stmt 1 view .LVU15
  81               	.LBB6:
  82               	.LBI6:
 111:quantum/rgb_matrix_drivers.c ****     led[i].r = r;
  83               		.loc 1 111 20 view .LVU16
  84               	.LBB7:
 112:quantum/rgb_matrix_drivers.c ****     led[i].g = g;
  85               		.loc 1 112 5 view .LVU17
 112:quantum/rgb_matrix_drivers.c ****     led[i].g = g;
  86               		.loc 1 112 14 is_stmt 0 view .LVU18
  87 0004 8183      		std Z+1,r24
 113:quantum/rgb_matrix_drivers.c ****     led[i].b = b;
  88               		.loc 1 113 5 is_stmt 1 view .LVU19
 113:quantum/rgb_matrix_drivers.c ****     led[i].b = b;
  89               		.loc 1 113 14 is_stmt 0 view .LVU20
  90 0006 6083      		st Z,r22
 114:quantum/rgb_matrix_drivers.c **** #    ifdef RGBW
  91               		.loc 1 114 5 is_stmt 1 view .LVU21
 114:quantum/rgb_matrix_drivers.c **** #    ifdef RGBW
  92               		.loc 1 114 14 is_stmt 0 view .LVU22
  93 0008 4283      		std Z+2,r20
  94               	.LVL3:
 114:quantum/rgb_matrix_drivers.c **** #    ifdef RGBW
  95               		.loc 1 114 14 view .LVU23
  96 000a 3396      		adiw r30,3
  97               	.LBE7:
  98               	.LBE6:
 121:quantum/rgb_matrix_drivers.c ****         setled(i, r, g, b);
  99               		.loc 1 121 5 view .LVU24
 100 000c 90E0      		ldi r25,hi8(led+162)
 101 000e E030      		cpi r30,lo8(led+162)
 102 0010 F907      		cpc r31,r25
 103 0012 01F4      		brne .L4
 104               	/* epilogue start */
 121:quantum/rgb_matrix_drivers.c ****         setled(i, r, g, b);
 105               		.loc 1 121 5 view .LVU25
 106               	.LBE5:
 123:quantum/rgb_matrix_drivers.c ****     }
 124:quantum/rgb_matrix_drivers.c **** }
 107               		.loc 1 124 1 view .LVU26
 108 0014 0895      		ret
 109               		.cfi_endproc
 110               	.LFE117:
 112               		.section	.text.flush,"ax",@progbits
 114               	flush:
 115               	.LFB115:
 105:quantum/rgb_matrix_drivers.c ****     // Assumes use of RGB_DI_PIN
 116               		.loc 1 105 25 is_stmt 1 view -0
 117               		.cfi_startproc
 118               	/* prologue: function */
 119               	/* frame size = 0 */
 120               	/* stack size = 0 */
 121               	.L__stack_usage = 0
 107:quantum/rgb_matrix_drivers.c **** }
 122               		.loc 1 107 5 view .LVU28
 123 0000 66E3      		ldi r22,lo8(54)
 124 0002 70E0      		ldi r23,0
 125 0004 80E0      		ldi r24,lo8(led)
 126 0006 90E0      		ldi r25,hi8(led)
 127 0008 0C94 0000 		jmp ws2812_setleds
 128               	.LVL4:
 129               		.cfi_endproc
 130               	.LFE115:
 132               	.global	rgb_matrix_driver
 133               		.section	.rodata.rgb_matrix_driver,"a"
 136               	rgb_matrix_driver:
 137 0000 0000      		.word	gs(init)
 138 0002 0000      		.word	gs(setled)
 139 0004 0000      		.word	gs(setled_all)
 140 0006 0000      		.word	gs(flush)
 141               		.comm	led,162,1
 142               		.text
 143               	.Letext0:
 144               		.file 2 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchain
 145               		.file 3 "quantum/color.h"
 146               		.file 4 "quantum/rgb_matrix_types.h"
 147               		.file 5 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchain
 148               		.file 6 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 149               		.file 7 "tmk_core/common/action.h"
 150               		.file 8 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 151               		.file 9 "lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 152               		.file 10 "lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
 153               		.file 11 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchai
 154               		.file 12 "tmk_core/common/report.h"
 155               		.file 13 "tmk_core/common/host.h"
 156               		.file 14 "tmk_core/common/debug.h"
 157               		.file 15 "quantum/keycode_config.h"
 158               		.file 16 "quantum/keymap.h"
 159               		.file 17 "tmk_core/common/action_layer.h"
 160               		.file 18 "tmk_core/common/timer.h"
 161               		.file 19 "tmk_core/common/action_util.h"
 162               		.file 20 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchai
 163               		.file 21 "quantum/process_keycode/process_tap_dance.h"
 164               		.file 22 "quantum/quantum.h"
 165               		.file 23 "quantum/rgb_matrix.h"
 166               		.file 24 "drivers/avr/ws2812.h"
DEFINED SYMBOLS
                            *ABS*:00000000 rgb_matrix_drivers.c
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccawTmIq.s:2      *ABS*:0000003e __SP_H__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccawTmIq.s:3      *ABS*:0000003d __SP_L__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccawTmIq.s:4      *ABS*:0000003f __SREG__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccawTmIq.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccawTmIq.s:6      *ABS*:00000001 __zero_reg__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccawTmIq.s:12     .text.init:00000000 init
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccawTmIq.s:30     .text.setled:00000000 setled
                            *COM*:000000a2 led
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccawTmIq.s:63     .text.setled_all:00000000 setled_all
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccawTmIq.s:114    .text.flush:00000000 flush
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccawTmIq.s:136    .rodata.rgb_matrix_driver:00000000 rgb_matrix_driver

UNDEFINED SYMBOLS
ws2812_setleds
__do_copy_data
__do_clear_bss
