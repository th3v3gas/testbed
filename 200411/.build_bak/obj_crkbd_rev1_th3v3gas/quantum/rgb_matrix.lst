   1               		.file	"rgb_matrix.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.scale16by8,"ax",@progbits
  12               	scale16by8:
  13               	.LVL0:
  14               	.LFB119:
  15               		.file 1 "./lib/lib8tion/scale8.h"
   1:./lib/lib8tion/scale8.h **** #ifndef __INC_LIB8TION_SCALE_H
   2:./lib/lib8tion/scale8.h **** #define __INC_LIB8TION_SCALE_H
   3:./lib/lib8tion/scale8.h **** 
   4:./lib/lib8tion/scale8.h **** ///@ingroup lib8tion
   5:./lib/lib8tion/scale8.h **** 
   6:./lib/lib8tion/scale8.h **** ///@defgroup Scaling Scaling functions
   7:./lib/lib8tion/scale8.h **** /// Fast, efficient 8-bit scaling functions specifically
   8:./lib/lib8tion/scale8.h **** /// designed for high-performance LED programming.
   9:./lib/lib8tion/scale8.h **** ///
  10:./lib/lib8tion/scale8.h **** /// Because of the AVR(Arduino) and ARM assembly language
  11:./lib/lib8tion/scale8.h **** /// implementations provided, using these functions often
  12:./lib/lib8tion/scale8.h **** /// results in smaller and faster code than the equivalent
  13:./lib/lib8tion/scale8.h **** /// program using plain "C" arithmetic and logic.
  14:./lib/lib8tion/scale8.h **** ///@{
  15:./lib/lib8tion/scale8.h **** 
  16:./lib/lib8tion/scale8.h **** ///  scale one byte by a second one, which is treated as
  17:./lib/lib8tion/scale8.h **** ///  the numerator of a fraction whose denominator is 256
  18:./lib/lib8tion/scale8.h **** ///  In other words, it computes i * (scale / 256)
  19:./lib/lib8tion/scale8.h **** ///  4 clocks AVR with MUL, 2 clocks ARM
  20:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t scale8( uint8_t i, fract8 scale)
  21:./lib/lib8tion/scale8.h **** {
  22:./lib/lib8tion/scale8.h **** #if SCALE8_C == 1
  23:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED == 1)
  24:./lib/lib8tion/scale8.h ****     return (((uint16_t)i) * (1+(uint16_t)(scale))) >> 8;
  25:./lib/lib8tion/scale8.h **** #else
  26:./lib/lib8tion/scale8.h ****     return ((uint16_t)i * (uint16_t)(scale) ) >> 8;
  27:./lib/lib8tion/scale8.h **** #endif
  28:./lib/lib8tion/scale8.h **** #elif SCALE8_AVRASM == 1
  29:./lib/lib8tion/scale8.h **** #if defined(LIB8_ATTINY)
  30:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED == 1)
  31:./lib/lib8tion/scale8.h ****     uint8_t work=i;
  32:./lib/lib8tion/scale8.h **** #else
  33:./lib/lib8tion/scale8.h ****     uint8_t work=0;
  34:./lib/lib8tion/scale8.h **** #endif
  35:./lib/lib8tion/scale8.h ****     uint8_t cnt=0x80;
  36:./lib/lib8tion/scale8.h ****     asm volatile(
  37:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED == 1)
  38:./lib/lib8tion/scale8.h ****         "  inc %[scale]                 \n\t"
  39:./lib/lib8tion/scale8.h ****         "  breq DONE_%=                 \n\t"
  40:./lib/lib8tion/scale8.h ****         "  clr %[work]                  \n\t"
  41:./lib/lib8tion/scale8.h **** #endif
  42:./lib/lib8tion/scale8.h ****         "LOOP_%=:                       \n\t"
  43:./lib/lib8tion/scale8.h ****         /*"  sbrc %[scale], 0             \n\t"
  44:./lib/lib8tion/scale8.h ****         "  add %[work], %[i]            \n\t"
  45:./lib/lib8tion/scale8.h ****         "  ror %[work]                  \n\t"
  46:./lib/lib8tion/scale8.h ****         "  lsr %[scale]                 \n\t"
  47:./lib/lib8tion/scale8.h ****         "  clc                          \n\t"*/
  48:./lib/lib8tion/scale8.h ****         "  sbrc %[scale], 0             \n\t"
  49:./lib/lib8tion/scale8.h ****         "  add %[work], %[i]            \n\t"
  50:./lib/lib8tion/scale8.h ****         "  ror %[work]                  \n\t"
  51:./lib/lib8tion/scale8.h ****         "  lsr %[scale]                 \n\t"
  52:./lib/lib8tion/scale8.h ****         "  lsr %[cnt]                   \n\t"
  53:./lib/lib8tion/scale8.h ****         "brcc LOOP_%=                   \n\t"
  54:./lib/lib8tion/scale8.h ****         "DONE_%=:                       \n\t"
  55:./lib/lib8tion/scale8.h ****         : [work] "+r" (work), [cnt] "+r" (cnt)
  56:./lib/lib8tion/scale8.h ****         : [scale] "r" (scale), [i] "r" (i)
  57:./lib/lib8tion/scale8.h ****         :
  58:./lib/lib8tion/scale8.h ****       );
  59:./lib/lib8tion/scale8.h ****     return work;
  60:./lib/lib8tion/scale8.h **** #else
  61:./lib/lib8tion/scale8.h ****     asm volatile(
  62:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
  63:./lib/lib8tion/scale8.h ****         // Multiply 8-bit i * 8-bit scale, giving 16-bit r1,r0
  64:./lib/lib8tion/scale8.h ****         "mul %0, %1          \n\t"
  65:./lib/lib8tion/scale8.h ****         // Add i to r0, possibly setting the carry flag
  66:./lib/lib8tion/scale8.h ****         "add r0, %0         \n\t"
  67:./lib/lib8tion/scale8.h ****         // load the immediate 0 into i (note, this does _not_ touch any flags)
  68:./lib/lib8tion/scale8.h ****         "ldi %0, 0x00       \n\t"
  69:./lib/lib8tion/scale8.h ****         // walk and chew gum at the same time
  70:./lib/lib8tion/scale8.h ****         "adc %0, r1          \n\t"
  71:./lib/lib8tion/scale8.h **** #else
  72:./lib/lib8tion/scale8.h ****          /* Multiply 8-bit i * 8-bit scale, giving 16-bit r1,r0 */
  73:./lib/lib8tion/scale8.h ****          "mul %0, %1          \n\t"
  74:./lib/lib8tion/scale8.h ****          /* Move the high 8-bits of the product (r1) back to i */
  75:./lib/lib8tion/scale8.h ****          "mov %0, r1          \n\t"
  76:./lib/lib8tion/scale8.h ****          /* Restore r1 to "0"; it's expected to always be that */
  77:./lib/lib8tion/scale8.h **** #endif
  78:./lib/lib8tion/scale8.h ****          "clr __zero_reg__    \n\t"
  79:./lib/lib8tion/scale8.h **** 
  80:./lib/lib8tion/scale8.h ****          : "+a" (i)      /* writes to i */
  81:./lib/lib8tion/scale8.h ****          : "a"  (scale)  /* uses scale */
  82:./lib/lib8tion/scale8.h ****          : "r0", "r1"    /* clobbers r0, r1 */ );
  83:./lib/lib8tion/scale8.h **** 
  84:./lib/lib8tion/scale8.h ****     /* Return the result */
  85:./lib/lib8tion/scale8.h ****     return i;
  86:./lib/lib8tion/scale8.h **** #endif
  87:./lib/lib8tion/scale8.h **** #else
  88:./lib/lib8tion/scale8.h **** #error "No implementation for scale8 available."
  89:./lib/lib8tion/scale8.h **** #endif
  90:./lib/lib8tion/scale8.h **** }
  91:./lib/lib8tion/scale8.h **** 
  92:./lib/lib8tion/scale8.h **** 
  93:./lib/lib8tion/scale8.h **** ///  The "video" version of scale8 guarantees that the output will
  94:./lib/lib8tion/scale8.h **** ///  be only be zero if one or both of the inputs are zero.  If both
  95:./lib/lib8tion/scale8.h **** ///  inputs are non-zero, the output is guaranteed to be non-zero.
  96:./lib/lib8tion/scale8.h **** ///  This makes for better 'video'/LED dimming, at the cost of
  97:./lib/lib8tion/scale8.h **** ///  several additional cycles.
  98:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t scale8_video( uint8_t i, fract8 scale)
  99:./lib/lib8tion/scale8.h **** {
 100:./lib/lib8tion/scale8.h **** #if SCALE8_C == 1 || defined(LIB8_ATTINY)
 101:./lib/lib8tion/scale8.h ****     uint8_t j = (((int)i * (int)scale) >> 8) + ((i&&scale)?1:0);
 102:./lib/lib8tion/scale8.h ****     // uint8_t nonzeroscale = (scale != 0) ? 1 : 0;
 103:./lib/lib8tion/scale8.h ****     // uint8_t j = (i == 0) ? 0 : (((int)i * (int)(scale) ) >> 8) + nonzeroscale;
 104:./lib/lib8tion/scale8.h ****     return j;
 105:./lib/lib8tion/scale8.h **** #elif SCALE8_AVRASM == 1
 106:./lib/lib8tion/scale8.h ****     uint8_t j=0;
 107:./lib/lib8tion/scale8.h ****     asm volatile(
 108:./lib/lib8tion/scale8.h ****         "  tst %[i]\n\t"
 109:./lib/lib8tion/scale8.h ****         "  breq L_%=\n\t"
 110:./lib/lib8tion/scale8.h ****         "  mul %[i], %[scale]\n\t"
 111:./lib/lib8tion/scale8.h ****         "  mov %[j], r1\n\t"
 112:./lib/lib8tion/scale8.h ****         "  clr __zero_reg__\n\t"
 113:./lib/lib8tion/scale8.h ****         "  cpse %[scale], r1\n\t"
 114:./lib/lib8tion/scale8.h ****         "  subi %[j], 0xFF\n\t"
 115:./lib/lib8tion/scale8.h ****         "L_%=: \n\t"
 116:./lib/lib8tion/scale8.h ****         : [j] "+a" (j)
 117:./lib/lib8tion/scale8.h ****         : [i] "a" (i), [scale] "a" (scale)
 118:./lib/lib8tion/scale8.h ****         : "r0", "r1");
 119:./lib/lib8tion/scale8.h **** 
 120:./lib/lib8tion/scale8.h ****     return j;
 121:./lib/lib8tion/scale8.h ****     // uint8_t nonzeroscale = (scale != 0) ? 1 : 0;
 122:./lib/lib8tion/scale8.h ****     // asm volatile(
 123:./lib/lib8tion/scale8.h ****     //      "      tst %0           \n"
 124:./lib/lib8tion/scale8.h ****     //      "      breq L_%=        \n"
 125:./lib/lib8tion/scale8.h ****     //      "      mul %0, %1       \n"
 126:./lib/lib8tion/scale8.h ****     //      "      mov %0, r1       \n"
 127:./lib/lib8tion/scale8.h ****     //      "      add %0, %2       \n"
 128:./lib/lib8tion/scale8.h ****     //      "      clr __zero_reg__ \n"
 129:./lib/lib8tion/scale8.h ****     //      "L_%=:                  \n"
 130:./lib/lib8tion/scale8.h **** 
 131:./lib/lib8tion/scale8.h ****     //      : "+a" (i)
 132:./lib/lib8tion/scale8.h ****     //      : "a" (scale), "a" (nonzeroscale)
 133:./lib/lib8tion/scale8.h ****     //      : "r0", "r1");
 134:./lib/lib8tion/scale8.h **** 
 135:./lib/lib8tion/scale8.h ****     // // Return the result
 136:./lib/lib8tion/scale8.h ****     // return i;
 137:./lib/lib8tion/scale8.h **** #else
 138:./lib/lib8tion/scale8.h **** #error "No implementation for scale8_video available."
 139:./lib/lib8tion/scale8.h **** #endif
 140:./lib/lib8tion/scale8.h **** }
 141:./lib/lib8tion/scale8.h **** 
 142:./lib/lib8tion/scale8.h **** 
 143:./lib/lib8tion/scale8.h **** /// This version of scale8 does not clean up the R1 register on AVR
 144:./lib/lib8tion/scale8.h **** /// If you are doing several 'scale8's in a row, use this, and
 145:./lib/lib8tion/scale8.h **** /// then explicitly call cleanup_R1.
 146:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t scale8_LEAVING_R1_DIRTY( uint8_t i, fract8 scale)
 147:./lib/lib8tion/scale8.h **** {
 148:./lib/lib8tion/scale8.h **** #if SCALE8_C == 1
 149:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED == 1)
 150:./lib/lib8tion/scale8.h ****     return (((uint16_t)i) * ((uint16_t)(scale)+1)) >> 8;
 151:./lib/lib8tion/scale8.h **** #else
 152:./lib/lib8tion/scale8.h ****     return ((int)i * (int)(scale) ) >> 8;
 153:./lib/lib8tion/scale8.h **** #endif
 154:./lib/lib8tion/scale8.h **** #elif SCALE8_AVRASM == 1
 155:./lib/lib8tion/scale8.h ****     asm volatile(
 156:./lib/lib8tion/scale8.h ****       #if (FASTLED_SCALE8_FIXED==1)
 157:./lib/lib8tion/scale8.h ****               // Multiply 8-bit i * 8-bit scale, giving 16-bit r1,r0
 158:./lib/lib8tion/scale8.h ****               "mul %0, %1          \n\t"
 159:./lib/lib8tion/scale8.h ****               // Add i to r0, possibly setting the carry flag
 160:./lib/lib8tion/scale8.h ****               "add r0, %0         \n\t"
 161:./lib/lib8tion/scale8.h ****               // load the immediate 0 into i (note, this does _not_ touch any flags)
 162:./lib/lib8tion/scale8.h ****               "ldi %0, 0x00       \n\t"
 163:./lib/lib8tion/scale8.h ****               // walk and chew gum at the same time
 164:./lib/lib8tion/scale8.h ****               "adc %0, r1          \n\t"
 165:./lib/lib8tion/scale8.h ****       #else
 166:./lib/lib8tion/scale8.h ****          /* Multiply 8-bit i * 8-bit scale, giving 16-bit r1,r0 */
 167:./lib/lib8tion/scale8.h ****          "mul %0, %1    \n\t"
 168:./lib/lib8tion/scale8.h ****          /* Move the high 8-bits of the product (r1) back to i */
 169:./lib/lib8tion/scale8.h ****          "mov %0, r1    \n\t"
 170:./lib/lib8tion/scale8.h ****       #endif
 171:./lib/lib8tion/scale8.h ****          /* R1 IS LEFT DIRTY HERE; YOU MUST ZERO IT OUT YOURSELF  */
 172:./lib/lib8tion/scale8.h ****          /* "clr __zero_reg__    \n\t" */
 173:./lib/lib8tion/scale8.h **** 
 174:./lib/lib8tion/scale8.h ****          : "+a" (i)      /* writes to i */
 175:./lib/lib8tion/scale8.h ****          : "a"  (scale)  /* uses scale */
 176:./lib/lib8tion/scale8.h ****          : "r0", "r1"    /* clobbers r0, r1 */ );
 177:./lib/lib8tion/scale8.h **** 
 178:./lib/lib8tion/scale8.h ****     // Return the result
 179:./lib/lib8tion/scale8.h ****     return i;
 180:./lib/lib8tion/scale8.h **** #else
 181:./lib/lib8tion/scale8.h **** #error "No implementation for scale8_LEAVING_R1_DIRTY available."
 182:./lib/lib8tion/scale8.h **** #endif
 183:./lib/lib8tion/scale8.h **** }
 184:./lib/lib8tion/scale8.h **** 
 185:./lib/lib8tion/scale8.h **** 
 186:./lib/lib8tion/scale8.h **** /// This version of scale8_video does not clean up the R1 register on AVR
 187:./lib/lib8tion/scale8.h **** /// If you are doing several 'scale8_video's in a row, use this, and
 188:./lib/lib8tion/scale8.h **** /// then explicitly call cleanup_R1.
 189:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t scale8_video_LEAVING_R1_DIRTY( uint8_t i, fract8 scale)
 190:./lib/lib8tion/scale8.h **** {
 191:./lib/lib8tion/scale8.h **** #if SCALE8_C == 1 || defined(LIB8_ATTINY)
 192:./lib/lib8tion/scale8.h ****     uint8_t j = (((int)i * (int)scale) >> 8) + ((i&&scale)?1:0);
 193:./lib/lib8tion/scale8.h ****     // uint8_t nonzeroscale = (scale != 0) ? 1 : 0;
 194:./lib/lib8tion/scale8.h ****     // uint8_t j = (i == 0) ? 0 : (((int)i * (int)(scale) ) >> 8) + nonzeroscale;
 195:./lib/lib8tion/scale8.h ****     return j;
 196:./lib/lib8tion/scale8.h **** #elif SCALE8_AVRASM == 1
 197:./lib/lib8tion/scale8.h ****     uint8_t j=0;
 198:./lib/lib8tion/scale8.h ****     asm volatile(
 199:./lib/lib8tion/scale8.h ****         "  tst %[i]\n\t"
 200:./lib/lib8tion/scale8.h ****         "  breq L_%=\n\t"
 201:./lib/lib8tion/scale8.h ****         "  mul %[i], %[scale]\n\t"
 202:./lib/lib8tion/scale8.h ****         "  mov %[j], r1\n\t"
 203:./lib/lib8tion/scale8.h ****         "  breq L_%=\n\t"
 204:./lib/lib8tion/scale8.h ****         "  subi %[j], 0xFF\n\t"
 205:./lib/lib8tion/scale8.h ****         "L_%=: \n\t"
 206:./lib/lib8tion/scale8.h ****         : [j] "+a" (j)
 207:./lib/lib8tion/scale8.h ****         : [i] "a" (i), [scale] "a" (scale)
 208:./lib/lib8tion/scale8.h ****         : "r0", "r1");
 209:./lib/lib8tion/scale8.h **** 
 210:./lib/lib8tion/scale8.h ****     return j;
 211:./lib/lib8tion/scale8.h ****     // uint8_t nonzeroscale = (scale != 0) ? 1 : 0;
 212:./lib/lib8tion/scale8.h ****     // asm volatile(
 213:./lib/lib8tion/scale8.h ****     //      "      tst %0           \n"
 214:./lib/lib8tion/scale8.h ****     //      "      breq L_%=        \n"
 215:./lib/lib8tion/scale8.h ****     //      "      mul %0, %1       \n"
 216:./lib/lib8tion/scale8.h ****     //      "      mov %0, r1       \n"
 217:./lib/lib8tion/scale8.h ****     //      "      add %0, %2       \n"
 218:./lib/lib8tion/scale8.h ****     //      "      clr __zero_reg__ \n"
 219:./lib/lib8tion/scale8.h ****     //      "L_%=:                  \n"
 220:./lib/lib8tion/scale8.h **** 
 221:./lib/lib8tion/scale8.h ****     //      : "+a" (i)
 222:./lib/lib8tion/scale8.h ****     //      : "a" (scale), "a" (nonzeroscale)
 223:./lib/lib8tion/scale8.h ****     //      : "r0", "r1");
 224:./lib/lib8tion/scale8.h **** 
 225:./lib/lib8tion/scale8.h ****     // // Return the result
 226:./lib/lib8tion/scale8.h ****     // return i;
 227:./lib/lib8tion/scale8.h **** #else
 228:./lib/lib8tion/scale8.h **** #error "No implementation for scale8_video_LEAVING_R1_DIRTY available."
 229:./lib/lib8tion/scale8.h **** #endif
 230:./lib/lib8tion/scale8.h **** }
 231:./lib/lib8tion/scale8.h **** 
 232:./lib/lib8tion/scale8.h **** /// Clean up the r1 register after a series of *LEAVING_R1_DIRTY calls
 233:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE void cleanup_R1(void)
 234:./lib/lib8tion/scale8.h **** {
 235:./lib/lib8tion/scale8.h **** #if CLEANUP_R1_AVRASM == 1
 236:./lib/lib8tion/scale8.h ****     // Restore r1 to "0"; it's expected to always be that
 237:./lib/lib8tion/scale8.h ****     asm volatile( "clr __zero_reg__  \n\t" : : : "r1" );
 238:./lib/lib8tion/scale8.h **** #endif
 239:./lib/lib8tion/scale8.h **** }
 240:./lib/lib8tion/scale8.h **** 
 241:./lib/lib8tion/scale8.h **** 
 242:./lib/lib8tion/scale8.h **** /// scale a 16-bit unsigned value by an 8-bit value,
 243:./lib/lib8tion/scale8.h **** ///         considered as numerator of a fraction whose denominator
 244:./lib/lib8tion/scale8.h **** ///         is 256. In other words, it computes i * (scale / 256)
 245:./lib/lib8tion/scale8.h **** 
 246:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE uint16_t scale16by8( uint16_t i, fract8 scale )
 247:./lib/lib8tion/scale8.h **** {
  16               		.loc 1 247 1 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 248:./lib/lib8tion/scale8.h **** #if SCALE16BY8_C == 1
 249:./lib/lib8tion/scale8.h ****     uint16_t result;
 250:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 251:./lib/lib8tion/scale8.h ****     result = (i * (1+((uint16_t)scale))) >> 8;
 252:./lib/lib8tion/scale8.h **** #else
 253:./lib/lib8tion/scale8.h ****     result = (i * scale) / 256;
 254:./lib/lib8tion/scale8.h **** #endif
 255:./lib/lib8tion/scale8.h ****     return result;
 256:./lib/lib8tion/scale8.h **** #elif SCALE16BY8_AVRASM == 1
 257:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 258:./lib/lib8tion/scale8.h ****     uint16_t result = 0;
 259:./lib/lib8tion/scale8.h ****     asm volatile(
 260:./lib/lib8tion/scale8.h ****                  // result.A = HighByte( (i.A x scale) + i.A )
 261:./lib/lib8tion/scale8.h ****                  "  mul %A[i], %[scale]                 \n\t"
 262:./lib/lib8tion/scale8.h ****                  "  add r0, %A[i]                       \n\t"
 263:./lib/lib8tion/scale8.h ****             //   "  adc r1, [zero]                      \n\t"
 264:./lib/lib8tion/scale8.h ****             //   "  mov %A[result], r1                  \n\t"
 265:./lib/lib8tion/scale8.h ****                  "  adc %A[result], r1                  \n\t"
 266:./lib/lib8tion/scale8.h **** 
 267:./lib/lib8tion/scale8.h ****                  // result.A-B += i.B x scale
 268:./lib/lib8tion/scale8.h ****                  "  mul %B[i], %[scale]                 \n\t"
 269:./lib/lib8tion/scale8.h ****                  "  add %A[result], r0                  \n\t"
 270:./lib/lib8tion/scale8.h ****                  "  adc %B[result], r1                  \n\t"
 271:./lib/lib8tion/scale8.h **** 
 272:./lib/lib8tion/scale8.h ****                  // cleanup r1
 273:./lib/lib8tion/scale8.h ****                  "  clr __zero_reg__                    \n\t"
 274:./lib/lib8tion/scale8.h **** 
 275:./lib/lib8tion/scale8.h ****                  // result.A-B += i.B
 276:./lib/lib8tion/scale8.h ****                  "  add %A[result], %B[i]               \n\t"
 277:./lib/lib8tion/scale8.h ****                  "  adc %B[result], __zero_reg__        \n\t"
 278:./lib/lib8tion/scale8.h **** 
 279:./lib/lib8tion/scale8.h ****                  : [result] "+r" (result)
 280:./lib/lib8tion/scale8.h ****                  : [i] "r" (i), [scale] "r" (scale)
 281:./lib/lib8tion/scale8.h ****                  : "r0", "r1"
 282:./lib/lib8tion/scale8.h ****                  );
 283:./lib/lib8tion/scale8.h ****     return result;
 284:./lib/lib8tion/scale8.h **** #else
 285:./lib/lib8tion/scale8.h ****     uint16_t result = 0;
  22               		.loc 1 285 5 view .LVU1
 286:./lib/lib8tion/scale8.h ****     asm volatile(
  23               		.loc 1 286 5 view .LVU2
  24 0000 30E0      		ldi r19,0
  25 0002 20E0      		ldi r18,0
  26               	/* #APP */
  27               	 ;  286 "./lib/lib8tion/scale8.h" 1
  28 0004 869F      		  mul r24, r22                 
  29 0006 212D      		  mov r18, r1                  
  30 0008 969F      		  mul r25, r22                 
  31 000a 200D      		  add r18, r0                  
  32 000c 311D      		  adc r19, r1                  
  33 000e 1124      		  clr __zero_reg__                    
  34               		
  35               	 ;  0 "" 2
  36               	.LVL1:
 287:./lib/lib8tion/scale8.h ****          // result.A = HighByte(i.A x j )
 288:./lib/lib8tion/scale8.h ****          "  mul %A[i], %[scale]                 \n\t"
 289:./lib/lib8tion/scale8.h ****          "  mov %A[result], r1                  \n\t"
 290:./lib/lib8tion/scale8.h ****          //"  clr %B[result]                      \n\t"
 291:./lib/lib8tion/scale8.h **** 
 292:./lib/lib8tion/scale8.h ****          // result.A-B += i.B x j
 293:./lib/lib8tion/scale8.h ****          "  mul %B[i], %[scale]                 \n\t"
 294:./lib/lib8tion/scale8.h ****          "  add %A[result], r0                  \n\t"
 295:./lib/lib8tion/scale8.h ****          "  adc %B[result], r1                  \n\t"
 296:./lib/lib8tion/scale8.h **** 
 297:./lib/lib8tion/scale8.h ****          // cleanup r1
 298:./lib/lib8tion/scale8.h ****          "  clr __zero_reg__                    \n\t"
 299:./lib/lib8tion/scale8.h **** 
 300:./lib/lib8tion/scale8.h ****          : [result] "+r" (result)
 301:./lib/lib8tion/scale8.h ****          : [i] "r" (i), [scale] "r" (scale)
 302:./lib/lib8tion/scale8.h ****          : "r0", "r1"
 303:./lib/lib8tion/scale8.h ****          );
 304:./lib/lib8tion/scale8.h ****     return result;
  37               		.loc 1 304 5 view .LVU3
 305:./lib/lib8tion/scale8.h **** #endif
 306:./lib/lib8tion/scale8.h **** #else
 307:./lib/lib8tion/scale8.h ****     #error "No implementation for scale16by8 available."
 308:./lib/lib8tion/scale8.h **** #endif
 309:./lib/lib8tion/scale8.h **** }
  38               		.loc 1 309 1 is_stmt 0 view .LVU4
  39               	/* #NOAPP */
  40 0010 C901      		movw r24,r18
  41               	.LVL2:
  42               	/* epilogue start */
  43               		.loc 1 309 1 view .LVU5
  44 0012 0895      		ret
  45               		.cfi_endproc
  46               	.LFE119:
  48               		.section	.text.sqrt16,"ax",@progbits
  50               	sqrt16:
  51               	.LVL3:
  52               	.LFB143:
  53               		.file 2 "./lib/lib8tion/math8.h"
   1:./lib/lib8tion/math8.h **** #ifndef __INC_LIB8TION_MATH_H
   2:./lib/lib8tion/math8.h **** #define __INC_LIB8TION_MATH_H
   3:./lib/lib8tion/math8.h **** 
   4:./lib/lib8tion/math8.h **** #include "scale8.h"
   5:./lib/lib8tion/math8.h **** 
   6:./lib/lib8tion/math8.h **** ///@ingroup lib8tion
   7:./lib/lib8tion/math8.h **** 
   8:./lib/lib8tion/math8.h **** ///@defgroup Math Basic math operations
   9:./lib/lib8tion/math8.h **** /// Fast, efficient 8-bit math functions specifically
  10:./lib/lib8tion/math8.h **** /// designed for high-performance LED programming.
  11:./lib/lib8tion/math8.h **** ///
  12:./lib/lib8tion/math8.h **** /// Because of the AVR(Arduino) and ARM assembly language
  13:./lib/lib8tion/math8.h **** /// implementations provided, using these functions often
  14:./lib/lib8tion/math8.h **** /// results in smaller and faster code than the equivalent
  15:./lib/lib8tion/math8.h **** /// program using plain "C" arithmetic and logic.
  16:./lib/lib8tion/math8.h **** ///@{
  17:./lib/lib8tion/math8.h **** 
  18:./lib/lib8tion/math8.h **** 
  19:./lib/lib8tion/math8.h **** /// add one byte to another, saturating at 0xFF
  20:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  21:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  22:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  23:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qadd8( uint8_t i, uint8_t j)
  24:./lib/lib8tion/math8.h **** {
  25:./lib/lib8tion/math8.h **** #if QADD8_C == 1
  26:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
  27:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
  28:./lib/lib8tion/math8.h ****     return t;
  29:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
  30:./lib/lib8tion/math8.h ****     asm volatile(
  31:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
  32:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  33:./lib/lib8tion/math8.h **** 
  34:./lib/lib8tion/math8.h ****          /* Now test the C flag.
  35:./lib/lib8tion/math8.h ****            If C is clear, we branch around a load of 0xFF into i.
  36:./lib/lib8tion/math8.h ****            If C is set, we go ahead and load 0xFF into i.
  37:./lib/lib8tion/math8.h ****          */
  38:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
  39:./lib/lib8tion/math8.h ****          "ldi %0, 0xFF  \n\t"
  40:./lib/lib8tion/math8.h ****          "L_%=: "
  41:./lib/lib8tion/math8.h ****          : "+a" (i)
  42:./lib/lib8tion/math8.h ****          : "a"  (j) );
  43:./lib/lib8tion/math8.h ****     return i;
  44:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
  45:./lib/lib8tion/math8.h ****     asm volatile( "uqadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  46:./lib/lib8tion/math8.h ****     return i;
  47:./lib/lib8tion/math8.h **** #else
  48:./lib/lib8tion/math8.h **** #error "No implementation for qadd8 available."
  49:./lib/lib8tion/math8.h **** #endif
  50:./lib/lib8tion/math8.h **** }
  51:./lib/lib8tion/math8.h **** 
  52:./lib/lib8tion/math8.h **** /// Add one byte to another, saturating at 0x7F
  53:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  54:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  55:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  56:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t qadd7( int8_t i, int8_t j)
  57:./lib/lib8tion/math8.h **** {
  58:./lib/lib8tion/math8.h **** #if QADD7_C == 1
  59:./lib/lib8tion/math8.h ****     int16_t t = i + j;
  60:./lib/lib8tion/math8.h ****     if (t > 127) t = 127;
  61:./lib/lib8tion/math8.h ****     return t;
  62:./lib/lib8tion/math8.h **** #elif QADD7_AVRASM == 1
  63:./lib/lib8tion/math8.h ****     asm volatile(
  64:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the V flag */
  65:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  66:./lib/lib8tion/math8.h **** 
  67:./lib/lib8tion/math8.h ****          /* Now test the V flag.
  68:./lib/lib8tion/math8.h ****           If V is clear, we branch around a load of 0x7F into i.
  69:./lib/lib8tion/math8.h ****           If V is set, we go ahead and load 0x7F into i.
  70:./lib/lib8tion/math8.h ****           */
  71:./lib/lib8tion/math8.h ****          "brvc L_%=     \n\t"
  72:./lib/lib8tion/math8.h ****          "ldi %0, 0x7F  \n\t"
  73:./lib/lib8tion/math8.h ****          "L_%=: "
  74:./lib/lib8tion/math8.h ****          : "+a" (i)
  75:./lib/lib8tion/math8.h ****          : "a"  (j) );
  76:./lib/lib8tion/math8.h **** 
  77:./lib/lib8tion/math8.h ****     return i;
  78:./lib/lib8tion/math8.h **** #elif QADD7_ARM_DSP_ASM == 1
  79:./lib/lib8tion/math8.h ****     asm volatile( "qadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  80:./lib/lib8tion/math8.h ****     return i;
  81:./lib/lib8tion/math8.h **** #else
  82:./lib/lib8tion/math8.h **** #error "No implementation for qadd7 available."
  83:./lib/lib8tion/math8.h **** #endif
  84:./lib/lib8tion/math8.h **** }
  85:./lib/lib8tion/math8.h **** 
  86:./lib/lib8tion/math8.h **** /// subtract one byte from another, saturating at 0x00
  87:./lib/lib8tion/math8.h **** /// @returns i - j with a floor of 0
  88:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qsub8( uint8_t i, uint8_t j)
  89:./lib/lib8tion/math8.h **** {
  90:./lib/lib8tion/math8.h **** #if QSUB8_C == 1
  91:./lib/lib8tion/math8.h ****     int16_t t = i - j;
  92:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
  93:./lib/lib8tion/math8.h ****     return t;
  94:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
  95:./lib/lib8tion/math8.h **** 
  96:./lib/lib8tion/math8.h ****     asm volatile(
  97:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
  98:./lib/lib8tion/math8.h ****          "sub %0, %1    \n\t"
  99:./lib/lib8tion/math8.h **** 
 100:./lib/lib8tion/math8.h ****          /* Now test the C flag.
 101:./lib/lib8tion/math8.h ****           If C is clear, we branch around a load of 0x00 into i.
 102:./lib/lib8tion/math8.h ****           If C is set, we go ahead and load 0x00 into i.
 103:./lib/lib8tion/math8.h ****           */
 104:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
 105:./lib/lib8tion/math8.h ****          "ldi %0, 0x00  \n\t"
 106:./lib/lib8tion/math8.h ****          "L_%=: "
 107:./lib/lib8tion/math8.h ****          : "+a" (i)
 108:./lib/lib8tion/math8.h ****          : "a"  (j) );
 109:./lib/lib8tion/math8.h **** 
 110:./lib/lib8tion/math8.h ****     return i;
 111:./lib/lib8tion/math8.h **** #else
 112:./lib/lib8tion/math8.h **** #error "No implementation for qsub8 available."
 113:./lib/lib8tion/math8.h **** #endif
 114:./lib/lib8tion/math8.h **** }
 115:./lib/lib8tion/math8.h **** 
 116:./lib/lib8tion/math8.h **** /// add one byte to another, with one byte result
 117:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t add8( uint8_t i, uint8_t j)
 118:./lib/lib8tion/math8.h **** {
 119:./lib/lib8tion/math8.h **** #if ADD8_C == 1
 120:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
 121:./lib/lib8tion/math8.h ****     return t;
 122:./lib/lib8tion/math8.h **** #elif ADD8_AVRASM == 1
 123:./lib/lib8tion/math8.h ****     // Add j to i, period.
 124:./lib/lib8tion/math8.h ****     asm volatile( "add %0, %1" : "+a" (i) : "a" (j));
 125:./lib/lib8tion/math8.h ****     return i;
 126:./lib/lib8tion/math8.h **** #else
 127:./lib/lib8tion/math8.h **** #error "No implementation for add8 available."
 128:./lib/lib8tion/math8.h **** #endif
 129:./lib/lib8tion/math8.h **** }
 130:./lib/lib8tion/math8.h **** 
 131:./lib/lib8tion/math8.h **** /// add one byte to another, with one byte result
 132:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint16_t add8to16( uint8_t i, uint16_t j)
 133:./lib/lib8tion/math8.h **** {
 134:./lib/lib8tion/math8.h **** #if ADD8_C == 1
 135:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
 136:./lib/lib8tion/math8.h ****     return t;
 137:./lib/lib8tion/math8.h **** #elif ADD8_AVRASM == 1
 138:./lib/lib8tion/math8.h ****     // Add i(one byte) to j(two bytes)
 139:./lib/lib8tion/math8.h ****     asm volatile( "add %A[j], %[i]              \n\t"
 140:./lib/lib8tion/math8.h ****                   "adc %B[j], __zero_reg__      \n\t"
 141:./lib/lib8tion/math8.h ****                  : [j] "+a" (j)
 142:./lib/lib8tion/math8.h ****                  : [i] "a"  (i)
 143:./lib/lib8tion/math8.h ****                  );
 144:./lib/lib8tion/math8.h ****     return i;
 145:./lib/lib8tion/math8.h **** #else
 146:./lib/lib8tion/math8.h **** #error "No implementation for add8to16 available."
 147:./lib/lib8tion/math8.h **** #endif
 148:./lib/lib8tion/math8.h **** }
 149:./lib/lib8tion/math8.h **** 
 150:./lib/lib8tion/math8.h **** 
 151:./lib/lib8tion/math8.h **** /// subtract one byte from another, 8-bit result
 152:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t sub8( uint8_t i, uint8_t j)
 153:./lib/lib8tion/math8.h **** {
 154:./lib/lib8tion/math8.h **** #if SUB8_C == 1
 155:./lib/lib8tion/math8.h ****     int16_t t = i - j;
 156:./lib/lib8tion/math8.h ****     return t;
 157:./lib/lib8tion/math8.h **** #elif SUB8_AVRASM == 1
 158:./lib/lib8tion/math8.h ****     // Subtract j from i, period.
 159:./lib/lib8tion/math8.h ****     asm volatile( "sub %0, %1" : "+a" (i) : "a" (j));
 160:./lib/lib8tion/math8.h ****     return i;
 161:./lib/lib8tion/math8.h **** #else
 162:./lib/lib8tion/math8.h **** #error "No implementation for sub8 available."
 163:./lib/lib8tion/math8.h **** #endif
 164:./lib/lib8tion/math8.h **** }
 165:./lib/lib8tion/math8.h **** 
 166:./lib/lib8tion/math8.h **** /// Calculate an integer average of two unsigned
 167:./lib/lib8tion/math8.h **** ///       8-bit integer values (uint8_t).
 168:./lib/lib8tion/math8.h **** ///       Fractional results are rounded down, e.g. avg8(20,41) = 30
 169:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t avg8( uint8_t i, uint8_t j)
 170:./lib/lib8tion/math8.h **** {
 171:./lib/lib8tion/math8.h **** #if AVG8_C == 1
 172:./lib/lib8tion/math8.h ****     return (i + j) >> 1;
 173:./lib/lib8tion/math8.h **** #elif AVG8_AVRASM == 1
 174:./lib/lib8tion/math8.h ****     asm volatile(
 175:./lib/lib8tion/math8.h ****          /* First, add j to i, 9th bit overflows into C flag */
 176:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
 177:./lib/lib8tion/math8.h ****          /* Divide by two, moving C flag into high 8th bit */
 178:./lib/lib8tion/math8.h ****          "ror %0        \n\t"
 179:./lib/lib8tion/math8.h ****          : "+a" (i)
 180:./lib/lib8tion/math8.h ****          : "a"  (j) );
 181:./lib/lib8tion/math8.h ****     return i;
 182:./lib/lib8tion/math8.h **** #else
 183:./lib/lib8tion/math8.h **** #error "No implementation for avg8 available."
 184:./lib/lib8tion/math8.h **** #endif
 185:./lib/lib8tion/math8.h **** }
 186:./lib/lib8tion/math8.h **** 
 187:./lib/lib8tion/math8.h **** /// Calculate an integer average of two unsigned
 188:./lib/lib8tion/math8.h **** ///       16-bit integer values (uint16_t).
 189:./lib/lib8tion/math8.h **** ///       Fractional results are rounded down, e.g. avg16(20,41) = 30
 190:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint16_t avg16( uint16_t i, uint16_t j)
 191:./lib/lib8tion/math8.h **** {
 192:./lib/lib8tion/math8.h **** #if AVG16_C == 1
 193:./lib/lib8tion/math8.h ****     return (uint32_t)((uint32_t)(i) + (uint32_t)(j)) >> 1;
 194:./lib/lib8tion/math8.h **** #elif AVG16_AVRASM == 1
 195:./lib/lib8tion/math8.h ****     asm volatile(
 196:./lib/lib8tion/math8.h ****                  /* First, add jLo (heh) to iLo, 9th bit overflows into C flag */
 197:./lib/lib8tion/math8.h ****                  "add %A[i], %A[j]    \n\t"
 198:./lib/lib8tion/math8.h ****                  /* Now, add C + jHi to iHi, 17th bit overflows into C flag */
 199:./lib/lib8tion/math8.h ****                  "adc %B[i], %B[j]    \n\t"
 200:./lib/lib8tion/math8.h ****                  /* Divide iHi by two, moving C flag into high 16th bit, old 9th bit now in C */
 201:./lib/lib8tion/math8.h ****                  "ror %B[i]        \n\t"
 202:./lib/lib8tion/math8.h ****                  /* Divide iLo by two, moving C flag into high 8th bit */
 203:./lib/lib8tion/math8.h ****                  "ror %A[i]        \n\t"
 204:./lib/lib8tion/math8.h ****                  : [i] "+a" (i)
 205:./lib/lib8tion/math8.h ****                  : [j] "a"  (j) );
 206:./lib/lib8tion/math8.h ****     return i;
 207:./lib/lib8tion/math8.h **** #else
 208:./lib/lib8tion/math8.h **** #error "No implementation for avg16 available."
 209:./lib/lib8tion/math8.h **** #endif
 210:./lib/lib8tion/math8.h **** }
 211:./lib/lib8tion/math8.h **** 
 212:./lib/lib8tion/math8.h **** 
 213:./lib/lib8tion/math8.h **** /// Calculate an integer average of two signed 7-bit
 214:./lib/lib8tion/math8.h **** ///       integers (int8_t)
 215:./lib/lib8tion/math8.h **** ///       If the first argument is even, result is rounded down.
 216:./lib/lib8tion/math8.h **** ///       If the first argument is odd, result is result up.
 217:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t avg7( int8_t i, int8_t j)
 218:./lib/lib8tion/math8.h **** {
 219:./lib/lib8tion/math8.h **** #if AVG7_C == 1
 220:./lib/lib8tion/math8.h ****     return ((i + j) >> 1) + (i & 0x1);
 221:./lib/lib8tion/math8.h **** #elif AVG7_AVRASM == 1
 222:./lib/lib8tion/math8.h ****     asm volatile(
 223:./lib/lib8tion/math8.h ****                  "asr %1        \n\t"
 224:./lib/lib8tion/math8.h ****                  "asr %0        \n\t"
 225:./lib/lib8tion/math8.h ****                  "adc %0, %1    \n\t"
 226:./lib/lib8tion/math8.h ****                  : "+a" (i)
 227:./lib/lib8tion/math8.h ****                  : "a"  (j) );
 228:./lib/lib8tion/math8.h ****     return i;
 229:./lib/lib8tion/math8.h **** #else
 230:./lib/lib8tion/math8.h **** #error "No implementation for avg7 available."
 231:./lib/lib8tion/math8.h **** #endif
 232:./lib/lib8tion/math8.h **** }
 233:./lib/lib8tion/math8.h **** 
 234:./lib/lib8tion/math8.h **** /// Calculate an integer average of two signed 15-bit
 235:./lib/lib8tion/math8.h **** ///       integers (int16_t)
 236:./lib/lib8tion/math8.h **** ///       If the first argument is even, result is rounded down.
 237:./lib/lib8tion/math8.h **** ///       If the first argument is odd, result is result up.
 238:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int16_t avg15( int16_t i, int16_t j)
 239:./lib/lib8tion/math8.h **** {
 240:./lib/lib8tion/math8.h **** #if AVG15_C == 1
 241:./lib/lib8tion/math8.h ****     return ((int32_t)((int32_t)(i) + (int32_t)(j)) >> 1) + (i & 0x1);
 242:./lib/lib8tion/math8.h **** #elif AVG15_AVRASM == 1
 243:./lib/lib8tion/math8.h ****     asm volatile(
 244:./lib/lib8tion/math8.h ****                  /* first divide j by 2, throwing away lowest bit */
 245:./lib/lib8tion/math8.h ****                  "asr %B[j]          \n\t"
 246:./lib/lib8tion/math8.h ****                  "ror %A[j]          \n\t"
 247:./lib/lib8tion/math8.h ****                  /* now divide i by 2, with lowest bit going into C */
 248:./lib/lib8tion/math8.h ****                  "asr %B[i]          \n\t"
 249:./lib/lib8tion/math8.h ****                  "ror %A[i]          \n\t"
 250:./lib/lib8tion/math8.h ****                  /* add j + C to i */
 251:./lib/lib8tion/math8.h ****                  "adc %A[i], %A[j]   \n\t"
 252:./lib/lib8tion/math8.h ****                  "adc %B[i], %B[j]   \n\t"
 253:./lib/lib8tion/math8.h ****                  : [i] "+a" (i)
 254:./lib/lib8tion/math8.h ****                  : [j] "a"  (j) );
 255:./lib/lib8tion/math8.h ****     return i;
 256:./lib/lib8tion/math8.h **** #else
 257:./lib/lib8tion/math8.h **** #error "No implementation for avg15 available."
 258:./lib/lib8tion/math8.h **** #endif
 259:./lib/lib8tion/math8.h **** }
 260:./lib/lib8tion/math8.h **** 
 261:./lib/lib8tion/math8.h **** 
 262:./lib/lib8tion/math8.h **** ///       Calculate the remainder of one unsigned 8-bit
 263:./lib/lib8tion/math8.h **** ///       value divided by anoter, aka A % M.
 264:./lib/lib8tion/math8.h **** ///       Implemented by repeated subtraction, which is
 265:./lib/lib8tion/math8.h **** ///       very compact, and very fast if A is 'probably'
 266:./lib/lib8tion/math8.h **** ///       less than M.  If A is a large multiple of M,
 267:./lib/lib8tion/math8.h **** ///       the loop has to execute multiple times.  However,
 268:./lib/lib8tion/math8.h **** ///       even in that case, the loop is only two
 269:./lib/lib8tion/math8.h **** ///       instructions long on AVR, i.e., quick.
 270:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t mod8( uint8_t a, uint8_t m)
 271:./lib/lib8tion/math8.h **** {
 272:./lib/lib8tion/math8.h **** #if defined(__AVR__)
 273:./lib/lib8tion/math8.h ****     asm volatile (
 274:./lib/lib8tion/math8.h ****                   "L_%=:  sub %[a],%[m]    \n\t"
 275:./lib/lib8tion/math8.h ****                   "       brcc L_%=        \n\t"
 276:./lib/lib8tion/math8.h ****                   "       add %[a],%[m]    \n\t"
 277:./lib/lib8tion/math8.h ****                   : [a] "+r" (a)
 278:./lib/lib8tion/math8.h ****                   : [m] "r"  (m)
 279:./lib/lib8tion/math8.h ****                   );
 280:./lib/lib8tion/math8.h **** #else
 281:./lib/lib8tion/math8.h ****     while( a >= m) a -= m;
 282:./lib/lib8tion/math8.h **** #endif
 283:./lib/lib8tion/math8.h ****     return a;
 284:./lib/lib8tion/math8.h **** }
 285:./lib/lib8tion/math8.h **** 
 286:./lib/lib8tion/math8.h **** ///          Add two numbers, and calculate the modulo
 287:./lib/lib8tion/math8.h **** ///          of the sum and a third number, M.
 288:./lib/lib8tion/math8.h **** ///          In other words, it returns (A+B) % M.
 289:./lib/lib8tion/math8.h **** ///          It is designed as a compact mechanism for
 290:./lib/lib8tion/math8.h **** ///          incrementing a 'mode' switch and wrapping
 291:./lib/lib8tion/math8.h **** ///          around back to 'mode 0' when the switch
 292:./lib/lib8tion/math8.h **** ///          goes past the end of the available range.
 293:./lib/lib8tion/math8.h **** ///          e.g. if you have seven modes, this switches
 294:./lib/lib8tion/math8.h **** ///          to the next one and wraps around if needed:
 295:./lib/lib8tion/math8.h **** ///            mode = addmod8( mode, 1, 7);
 296:./lib/lib8tion/math8.h **** ///LIB8STATIC_ALWAYS_INLINESee 'mod8' for notes on performance.
 297:./lib/lib8tion/math8.h **** LIB8STATIC uint8_t addmod8( uint8_t a, uint8_t b, uint8_t m)
 298:./lib/lib8tion/math8.h **** {
 299:./lib/lib8tion/math8.h **** #if defined(__AVR__)
 300:./lib/lib8tion/math8.h ****     asm volatile (
 301:./lib/lib8tion/math8.h ****                   "       add %[a],%[b]    \n\t"
 302:./lib/lib8tion/math8.h ****                   "L_%=:  sub %[a],%[m]    \n\t"
 303:./lib/lib8tion/math8.h ****                   "       brcc L_%=        \n\t"
 304:./lib/lib8tion/math8.h ****                   "       add %[a],%[m]    \n\t"
 305:./lib/lib8tion/math8.h ****                   : [a] "+r" (a)
 306:./lib/lib8tion/math8.h ****                   : [b] "r"  (b), [m] "r" (m)
 307:./lib/lib8tion/math8.h ****                   );
 308:./lib/lib8tion/math8.h **** #else
 309:./lib/lib8tion/math8.h ****     a += b;
 310:./lib/lib8tion/math8.h ****     while( a >= m) a -= m;
 311:./lib/lib8tion/math8.h **** #endif
 312:./lib/lib8tion/math8.h ****     return a;
 313:./lib/lib8tion/math8.h **** }
 314:./lib/lib8tion/math8.h **** 
 315:./lib/lib8tion/math8.h **** ///          Subtract two numbers, and calculate the modulo
 316:./lib/lib8tion/math8.h **** ///          of the difference and a third number, M.
 317:./lib/lib8tion/math8.h **** ///          In other words, it returns (A-B) % M.
 318:./lib/lib8tion/math8.h **** ///          It is designed as a compact mechanism for
 319:./lib/lib8tion/math8.h **** ///          incrementing a 'mode' switch and wrapping
 320:./lib/lib8tion/math8.h **** ///          around back to 'mode 0' when the switch
 321:./lib/lib8tion/math8.h **** ///          goes past the end of the available range.
 322:./lib/lib8tion/math8.h **** ///          e.g. if you have seven modes, this switches
 323:./lib/lib8tion/math8.h **** ///          to the next one and wraps around if needed:
 324:./lib/lib8tion/math8.h **** ///            mode = addmod8( mode, 1, 7);
 325:./lib/lib8tion/math8.h **** ///LIB8STATIC_ALWAYS_INLINESee 'mod8' for notes on performance.
 326:./lib/lib8tion/math8.h **** LIB8STATIC uint8_t submod8( uint8_t a, uint8_t b, uint8_t m)
 327:./lib/lib8tion/math8.h **** {
 328:./lib/lib8tion/math8.h **** #if defined(__AVR__)
 329:./lib/lib8tion/math8.h ****     asm volatile (
 330:./lib/lib8tion/math8.h ****                   "       sub %[a],%[b]    \n\t"
 331:./lib/lib8tion/math8.h ****                   "L_%=:  sub %[a],%[m]    \n\t"
 332:./lib/lib8tion/math8.h ****                   "       brcc L_%=        \n\t"
 333:./lib/lib8tion/math8.h ****                   "       add %[a],%[m]    \n\t"
 334:./lib/lib8tion/math8.h ****                   : [a] "+r" (a)
 335:./lib/lib8tion/math8.h ****                   : [b] "r"  (b), [m] "r" (m)
 336:./lib/lib8tion/math8.h ****                   );
 337:./lib/lib8tion/math8.h **** #else
 338:./lib/lib8tion/math8.h ****     a -= b;
 339:./lib/lib8tion/math8.h ****     while( a >= m) a -= m;
 340:./lib/lib8tion/math8.h **** #endif
 341:./lib/lib8tion/math8.h ****     return a;
 342:./lib/lib8tion/math8.h **** }
 343:./lib/lib8tion/math8.h **** 
 344:./lib/lib8tion/math8.h **** /// 8x8 bit multiplication, with 8 bit result
 345:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t mul8( uint8_t i, uint8_t j)
 346:./lib/lib8tion/math8.h **** {
 347:./lib/lib8tion/math8.h **** #if MUL8_C == 1
 348:./lib/lib8tion/math8.h ****     return ((uint16_t)i * (uint16_t)(j) ) & 0xFF;
 349:./lib/lib8tion/math8.h **** #elif MUL8_AVRASM == 1
 350:./lib/lib8tion/math8.h ****     asm volatile(
 351:./lib/lib8tion/math8.h ****          /* Multiply 8-bit i * 8-bit j, giving 16-bit r1,r0 */
 352:./lib/lib8tion/math8.h ****          "mul %0, %1          \n\t"
 353:./lib/lib8tion/math8.h ****          /* Extract the LOW 8-bits (r0) */
 354:./lib/lib8tion/math8.h ****          "mov %0, r0          \n\t"
 355:./lib/lib8tion/math8.h ****          /* Restore r1 to "0"; it's expected to always be that */
 356:./lib/lib8tion/math8.h ****          "clr __zero_reg__    \n\t"
 357:./lib/lib8tion/math8.h ****          : "+a" (i)
 358:./lib/lib8tion/math8.h ****          : "a"  (j)
 359:./lib/lib8tion/math8.h ****          : "r0", "r1");
 360:./lib/lib8tion/math8.h **** 
 361:./lib/lib8tion/math8.h ****     return i;
 362:./lib/lib8tion/math8.h **** #else
 363:./lib/lib8tion/math8.h **** #error "No implementation for mul8 available."
 364:./lib/lib8tion/math8.h **** #endif
 365:./lib/lib8tion/math8.h **** }
 366:./lib/lib8tion/math8.h **** 
 367:./lib/lib8tion/math8.h **** 
 368:./lib/lib8tion/math8.h **** /// saturating 8x8 bit multiplication, with 8 bit result
 369:./lib/lib8tion/math8.h **** /// @returns the product of i * j, capping at 0xFF
 370:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qmul8( uint8_t i, uint8_t j)
 371:./lib/lib8tion/math8.h **** {
 372:./lib/lib8tion/math8.h **** #if QMUL8_C == 1
 373:./lib/lib8tion/math8.h ****     int p = ((uint16_t)i * (uint16_t)(j) );
 374:./lib/lib8tion/math8.h ****     if( p > 255) p = 255;
 375:./lib/lib8tion/math8.h ****     return p;
 376:./lib/lib8tion/math8.h **** #elif QMUL8_AVRASM == 1
 377:./lib/lib8tion/math8.h ****     asm volatile(
 378:./lib/lib8tion/math8.h ****                  /* Multiply 8-bit i * 8-bit j, giving 16-bit r1,r0 */
 379:./lib/lib8tion/math8.h ****                  "  mul %0, %1          \n\t"
 380:./lib/lib8tion/math8.h ****                  /* If high byte of result is zero, all is well. */
 381:./lib/lib8tion/math8.h ****                  "  tst r1              \n\t"
 382:./lib/lib8tion/math8.h ****                  "  breq Lnospill_%=    \n\t"
 383:./lib/lib8tion/math8.h ****                  /* If high byte of result > 0, saturate low byte to 0xFF */
 384:./lib/lib8tion/math8.h ****                  "  ldi %0,0xFF         \n\t"
 385:./lib/lib8tion/math8.h ****                  "  rjmp Ldone_%=       \n\t"
 386:./lib/lib8tion/math8.h ****                  "Lnospill_%=:          \n\t"
 387:./lib/lib8tion/math8.h ****                  /* Extract the LOW 8-bits (r0) */
 388:./lib/lib8tion/math8.h ****                  "  mov %0, r0          \n\t"
 389:./lib/lib8tion/math8.h ****                  "Ldone_%=:             \n\t"
 390:./lib/lib8tion/math8.h ****                  /* Restore r1 to "0"; it's expected to always be that */
 391:./lib/lib8tion/math8.h ****                  "  clr __zero_reg__    \n\t"
 392:./lib/lib8tion/math8.h ****                  : "+a" (i)
 393:./lib/lib8tion/math8.h ****                  : "a"  (j)
 394:./lib/lib8tion/math8.h ****                  : "r0", "r1");
 395:./lib/lib8tion/math8.h **** 
 396:./lib/lib8tion/math8.h ****     return i;
 397:./lib/lib8tion/math8.h **** #else
 398:./lib/lib8tion/math8.h **** #error "No implementation for qmul8 available."
 399:./lib/lib8tion/math8.h **** #endif
 400:./lib/lib8tion/math8.h **** }
 401:./lib/lib8tion/math8.h **** 
 402:./lib/lib8tion/math8.h **** 
 403:./lib/lib8tion/math8.h **** /// take abs() of a signed 8-bit uint8_t
 404:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t abs8( int8_t i)
 405:./lib/lib8tion/math8.h **** {
 406:./lib/lib8tion/math8.h **** #if ABS8_C == 1
 407:./lib/lib8tion/math8.h ****     if( i < 0) i = -i;
 408:./lib/lib8tion/math8.h ****     return i;
 409:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 410:./lib/lib8tion/math8.h **** 
 411:./lib/lib8tion/math8.h **** 
 412:./lib/lib8tion/math8.h ****     asm volatile(
 413:./lib/lib8tion/math8.h ****          /* First, check the high bit, and prepare to skip if it's clear */
 414:./lib/lib8tion/math8.h ****          "sbrc %0, 7 \n"
 415:./lib/lib8tion/math8.h **** 
 416:./lib/lib8tion/math8.h ****          /* Negate the value */
 417:./lib/lib8tion/math8.h ****          "neg %0     \n"
 418:./lib/lib8tion/math8.h **** 
 419:./lib/lib8tion/math8.h ****          : "+r" (i) : "r" (i) );
 420:./lib/lib8tion/math8.h ****     return i;
 421:./lib/lib8tion/math8.h **** #else
 422:./lib/lib8tion/math8.h **** #error "No implementation for abs8 available."
 423:./lib/lib8tion/math8.h **** #endif
 424:./lib/lib8tion/math8.h **** }
 425:./lib/lib8tion/math8.h **** 
 426:./lib/lib8tion/math8.h **** ///         square root for 16-bit integers
 427:./lib/lib8tion/math8.h **** ///         About three times faster and five times smaller
 428:./lib/lib8tion/math8.h **** ///         than Arduino's general sqrt on AVR.
 429:./lib/lib8tion/math8.h **** LIB8STATIC uint8_t sqrt16(uint16_t x)
 430:./lib/lib8tion/math8.h **** {
  54               		.loc 2 430 1 is_stmt 1 view -0
  55               		.cfi_startproc
  56               	/* prologue: function */
  57               	/* frame size = 0 */
  58               	/* stack size = 0 */
  59               	.L__stack_usage = 0
  60               		.loc 2 430 1 is_stmt 0 view .LVU7
  61 0000 AC01      		movw r20,r24
 431:./lib/lib8tion/math8.h ****     if( x <= 1) {
  62               		.loc 2 431 5 is_stmt 1 view .LVU8
  63               		.loc 2 431 7 is_stmt 0 view .LVU9
  64 0002 8230      		cpi r24,2
  65 0004 9105      		cpc r25,__zero_reg__
  66 0006 00F4      		brsh .L3
 432:./lib/lib8tion/math8.h ****         return x;
  67               		.loc 2 432 9 is_stmt 1 view .LVU10
  68               		.loc 2 432 16 is_stmt 0 view .LVU11
  69 0008 0895      		ret
  70               	.L3:
 433:./lib/lib8tion/math8.h ****     }
 434:./lib/lib8tion/math8.h **** 
 435:./lib/lib8tion/math8.h ****     uint8_t low = 1; // lower bound
  71               		.loc 2 435 5 is_stmt 1 view .LVU12
  72               	.LVL4:
 436:./lib/lib8tion/math8.h ****     uint8_t hi, mid;
  73               		.loc 2 436 5 view .LVU13
 437:./lib/lib8tion/math8.h **** 
 438:./lib/lib8tion/math8.h ****     if( x > 7904) {
  74               		.loc 2 438 5 view .LVU14
 439:./lib/lib8tion/math8.h ****         hi = 255;
  75               		.loc 2 439 12 is_stmt 0 view .LVU15
  76 000a 9FEF      		ldi r25,lo8(-1)
 438:./lib/lib8tion/math8.h ****         hi = 255;
  77               		.loc 2 438 7 view .LVU16
  78 000c 413E      		cpi r20,-31
  79 000e 8EE1      		ldi r24,30
  80 0010 5807      		cpc r21,r24
  81               	.LVL5:
 438:./lib/lib8tion/math8.h ****         hi = 255;
  82               		.loc 2 438 7 view .LVU17
  83 0012 00F4      		brsh .L5
 440:./lib/lib8tion/math8.h ****     } else {
 441:./lib/lib8tion/math8.h ****         hi = (x >> 5) + 8; // initial estimate for upper bound
  84               		.loc 2 441 9 is_stmt 1 view .LVU18
  85               		.loc 2 441 17 is_stmt 0 view .LVU19
  86 0014 9A01      		movw r18,r20
  87 0016 95E0      		ldi r25,5
  88               		1:
  89 0018 3695      		lsr r19
  90 001a 2795      		ror r18
  91 001c 9A95      		dec r25
  92 001e 01F4      		brne 1b
  93               		.loc 2 441 12 view .LVU20
  94 0020 98E0      		ldi r25,lo8(8)
  95 0022 920F      		add r25,r18
  96               	.LVL6:
  97               	.L5:
 439:./lib/lib8tion/math8.h ****     } else {
  98               		.loc 2 439 12 view .LVU21
  99 0024 61E0      		ldi r22,lo8(1)
 100               	.LVL7:
 101               	.L8:
 442:./lib/lib8tion/math8.h ****     }
 443:./lib/lib8tion/math8.h **** 
 444:./lib/lib8tion/math8.h ****     do {
 102               		.loc 2 444 5 is_stmt 1 view .LVU22
 445:./lib/lib8tion/math8.h ****         mid = (low + hi) >> 1;
 103               		.loc 2 445 9 view .LVU23
 104               		.loc 2 445 20 is_stmt 0 view .LVU24
 105 0026 E62F      		mov r30,r22
 106 0028 E90F      		add r30,r25
 107 002a FF27      		clr r31
 108 002c FF1F      		rol r31
 109 002e 9F01      		movw r18,r30
 110               		.loc 2 445 26 view .LVU25
 111 0030 3595      		asr r19
 112 0032 2795      		ror r18
 113               		.loc 2 445 13 view .LVU26
 114 0034 822F      		mov r24,r18
 115               	.LVL8:
 446:./lib/lib8tion/math8.h ****         if ((uint16_t)(mid * mid) > x) {
 116               		.loc 2 446 9 is_stmt 1 view .LVU27
 117               		.loc 2 446 28 is_stmt 0 view .LVU28
 118 0036 229F      		mul r18,r18
 119 0038 F001      		movw r30,r0
 120 003a 239F      		mul r18,r19
 121 003c F00D      		add r31,r0
 122 003e F00D      		add r31,r0
 123 0040 1124      		clr r1
 124               		.loc 2 446 12 view .LVU29
 125 0042 4E17      		cp r20,r30
 126 0044 5F07      		cpc r21,r31
 127 0046 00F4      		brsh .L6
 447:./lib/lib8tion/math8.h ****             hi = mid - 1;
 128               		.loc 2 447 13 is_stmt 1 view .LVU30
 129               		.loc 2 447 16 is_stmt 0 view .LVU31
 130 0048 9FEF      		ldi r25,lo8(-1)
 131               	.LVL9:
 132               		.loc 2 447 16 view .LVU32
 133 004a 920F      		add r25,r18
 134               	.LVL10:
 135               	.L7:
 448:./lib/lib8tion/math8.h ****         } else {
 449:./lib/lib8tion/math8.h ****             if( mid == 255) {
 450:./lib/lib8tion/math8.h ****                 return 255;
 451:./lib/lib8tion/math8.h ****             }
 452:./lib/lib8tion/math8.h ****             low = mid + 1;
 453:./lib/lib8tion/math8.h ****         }
 454:./lib/lib8tion/math8.h ****     } while (hi >= low);
 136               		.loc 2 454 5 view .LVU33
 137 004c 9617      		cp r25,r22
 138 004e 00F4      		brsh .L8
 455:./lib/lib8tion/math8.h **** 
 456:./lib/lib8tion/math8.h ****     return low - 1;
 139               		.loc 2 456 5 is_stmt 1 view .LVU34
 140               		.loc 2 456 16 is_stmt 0 view .LVU35
 141 0050 8FEF      		ldi r24,lo8(-1)
 142 0052 860F      		add r24,r22
 143               	.L2:
 144               	/* epilogue start */
 457:./lib/lib8tion/math8.h **** }
 145               		.loc 2 457 1 view .LVU36
 146 0054 0895      		ret
 147               	.L6:
 449:./lib/lib8tion/math8.h ****                 return 255;
 148               		.loc 2 449 13 is_stmt 1 view .LVU37
 449:./lib/lib8tion/math8.h ****                 return 255;
 149               		.loc 2 449 15 is_stmt 0 view .LVU38
 150 0056 2F3F      		cpi r18,lo8(-1)
 151 0058 01F0      		breq .L2
 452:./lib/lib8tion/math8.h ****         }
 152               		.loc 2 452 13 is_stmt 1 view .LVU39
 452:./lib/lib8tion/math8.h ****         }
 153               		.loc 2 452 17 is_stmt 0 view .LVU40
 154 005a 61E0      		ldi r22,lo8(1)
 155               	.LVL11:
 452:./lib/lib8tion/math8.h ****         }
 156               		.loc 2 452 17 view .LVU41
 157 005c 620F      		add r22,r18
 158               	.LVL12:
 452:./lib/lib8tion/math8.h ****         }
 159               		.loc 2 452 17 view .LVU42
 160 005e 00C0      		rjmp .L7
 161               		.cfi_endproc
 162               	.LFE143:
 164               		.section	.text.sin8_avr,"ax",@progbits
 166               	sin8_avr:
 167               	.LVL13:
 168               	.LFB157:
 169               		.file 3 "./lib/lib8tion/trig8.h"
   1:./lib/lib8tion/trig8.h **** #ifndef __INC_LIB8TION_TRIG_H
   2:./lib/lib8tion/trig8.h **** #define __INC_LIB8TION_TRIG_H
   3:./lib/lib8tion/trig8.h **** 
   4:./lib/lib8tion/trig8.h **** ///@ingroup lib8tion
   5:./lib/lib8tion/trig8.h **** 
   6:./lib/lib8tion/trig8.h **** ///@defgroup Trig Fast trig functions
   7:./lib/lib8tion/trig8.h **** /// Fast 8 and 16-bit approximations of sin(x) and cos(x).
   8:./lib/lib8tion/trig8.h **** ///        Don't use these approximations for calculating the
   9:./lib/lib8tion/trig8.h **** ///        trajectory of a rocket to Mars, but they're great
  10:./lib/lib8tion/trig8.h **** ///        for art projects and LED displays.
  11:./lib/lib8tion/trig8.h **** ///
  12:./lib/lib8tion/trig8.h **** ///        On Arduino/AVR, the 16-bit approximation is more than
  13:./lib/lib8tion/trig8.h **** ///        10X faster than floating point sin(x) and cos(x), while
  14:./lib/lib8tion/trig8.h **** /// the 8-bit approximation is more than 20X faster.
  15:./lib/lib8tion/trig8.h **** ///@{
  16:./lib/lib8tion/trig8.h **** 
  17:./lib/lib8tion/trig8.h **** #if defined(__AVR__)
  18:./lib/lib8tion/trig8.h **** #define sin16 sin16_avr
  19:./lib/lib8tion/trig8.h **** #else
  20:./lib/lib8tion/trig8.h **** #define sin16 sin16_C
  21:./lib/lib8tion/trig8.h **** #endif
  22:./lib/lib8tion/trig8.h **** 
  23:./lib/lib8tion/trig8.h **** /// Fast 16-bit approximation of sin(x). This approximation never varies more than
  24:./lib/lib8tion/trig8.h **** /// 0.69% from the floating point value you'd get by doing
  25:./lib/lib8tion/trig8.h **** ///
  26:./lib/lib8tion/trig8.h **** ///     float s = sin(x) * 32767.0;
  27:./lib/lib8tion/trig8.h **** ///
  28:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-65535
  29:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between -32767 to 32767.
  30:./lib/lib8tion/trig8.h **** LIB8STATIC int16_t sin16_avr( uint16_t theta )
  31:./lib/lib8tion/trig8.h **** {
  32:./lib/lib8tion/trig8.h ****     static const uint8_t data[] =
  33:./lib/lib8tion/trig8.h ****     { 0,         0,         49, 0, 6393%256,   6393/256, 48, 0,
  34:./lib/lib8tion/trig8.h ****       12539%256, 12539/256, 44, 0, 18204%256, 18204/256, 38, 0,
  35:./lib/lib8tion/trig8.h ****       23170%256, 23170/256, 31, 0, 27245%256, 27245/256, 23, 0,
  36:./lib/lib8tion/trig8.h ****       30273%256, 30273/256, 14, 0, 32137%256, 32137/256,  4 /*,0*/ };
  37:./lib/lib8tion/trig8.h **** 
  38:./lib/lib8tion/trig8.h ****     uint16_t offset = (theta & 0x3FFF);
  39:./lib/lib8tion/trig8.h **** 
  40:./lib/lib8tion/trig8.h ****     // AVR doesn't have a multi-bit shift instruction,
  41:./lib/lib8tion/trig8.h ****     // so if we say "offset >>= 3", gcc makes a tiny loop.
  42:./lib/lib8tion/trig8.h ****     // Inserting empty volatile statements between each
  43:./lib/lib8tion/trig8.h ****     // bit shift forces gcc to unroll the loop.
  44:./lib/lib8tion/trig8.h ****     offset >>= 1; // 0..8191
  45:./lib/lib8tion/trig8.h ****     asm volatile("");
  46:./lib/lib8tion/trig8.h ****     offset >>= 1; // 0..4095
  47:./lib/lib8tion/trig8.h ****     asm volatile("");
  48:./lib/lib8tion/trig8.h ****     offset >>= 1; // 0..2047
  49:./lib/lib8tion/trig8.h **** 
  50:./lib/lib8tion/trig8.h ****     if( theta & 0x4000 ) offset = 2047 - offset;
  51:./lib/lib8tion/trig8.h **** 
  52:./lib/lib8tion/trig8.h ****     uint8_t sectionX4;
  53:./lib/lib8tion/trig8.h ****     sectionX4 = offset / 256;
  54:./lib/lib8tion/trig8.h ****     sectionX4 *= 4;
  55:./lib/lib8tion/trig8.h **** 
  56:./lib/lib8tion/trig8.h ****     uint8_t m;
  57:./lib/lib8tion/trig8.h **** 
  58:./lib/lib8tion/trig8.h ****     union {
  59:./lib/lib8tion/trig8.h ****         uint16_t b;
  60:./lib/lib8tion/trig8.h ****         struct {
  61:./lib/lib8tion/trig8.h ****             uint8_t blo;
  62:./lib/lib8tion/trig8.h ****             uint8_t bhi;
  63:./lib/lib8tion/trig8.h ****         };
  64:./lib/lib8tion/trig8.h ****     } u;
  65:./lib/lib8tion/trig8.h **** 
  66:./lib/lib8tion/trig8.h ****     //in effect u.b = blo + (256 * bhi);
  67:./lib/lib8tion/trig8.h ****     u.blo = data[ sectionX4 ];
  68:./lib/lib8tion/trig8.h ****     u.bhi = data[ sectionX4 + 1];
  69:./lib/lib8tion/trig8.h ****     m     = data[ sectionX4 + 2];
  70:./lib/lib8tion/trig8.h **** 
  71:./lib/lib8tion/trig8.h ****     uint8_t secoffset8 = (uint8_t)(offset) / 2;
  72:./lib/lib8tion/trig8.h **** 
  73:./lib/lib8tion/trig8.h ****     uint16_t mx = m * secoffset8;
  74:./lib/lib8tion/trig8.h **** 
  75:./lib/lib8tion/trig8.h ****     int16_t  y  = mx + u.b;
  76:./lib/lib8tion/trig8.h ****     if( theta & 0x8000 ) y = -y;
  77:./lib/lib8tion/trig8.h **** 
  78:./lib/lib8tion/trig8.h ****     return y;
  79:./lib/lib8tion/trig8.h **** }
  80:./lib/lib8tion/trig8.h **** 
  81:./lib/lib8tion/trig8.h **** /// Fast 16-bit approximation of sin(x). This approximation never varies more than
  82:./lib/lib8tion/trig8.h **** /// 0.69% from the floating point value you'd get by doing
  83:./lib/lib8tion/trig8.h **** ///
  84:./lib/lib8tion/trig8.h **** ///     float s = sin(x) * 32767.0;
  85:./lib/lib8tion/trig8.h **** ///
  86:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-65535
  87:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between -32767 to 32767.
  88:./lib/lib8tion/trig8.h **** LIB8STATIC int16_t sin16_C( uint16_t theta )
  89:./lib/lib8tion/trig8.h **** {
  90:./lib/lib8tion/trig8.h ****     static const uint16_t base[] =
  91:./lib/lib8tion/trig8.h ****     { 0, 6393, 12539, 18204, 23170, 27245, 30273, 32137 };
  92:./lib/lib8tion/trig8.h ****     static const uint8_t slope[] =
  93:./lib/lib8tion/trig8.h ****     { 49, 48, 44, 38, 31, 23, 14, 4 };
  94:./lib/lib8tion/trig8.h **** 
  95:./lib/lib8tion/trig8.h ****     uint16_t offset = (theta & 0x3FFF) >> 3; // 0..2047
  96:./lib/lib8tion/trig8.h ****     if( theta & 0x4000 ) offset = 2047 - offset;
  97:./lib/lib8tion/trig8.h **** 
  98:./lib/lib8tion/trig8.h ****     uint8_t section = offset / 256; // 0..7
  99:./lib/lib8tion/trig8.h ****     uint16_t b   = base[section];
 100:./lib/lib8tion/trig8.h ****     uint8_t  m   = slope[section];
 101:./lib/lib8tion/trig8.h **** 
 102:./lib/lib8tion/trig8.h ****     uint8_t secoffset8 = (uint8_t)(offset) / 2;
 103:./lib/lib8tion/trig8.h **** 
 104:./lib/lib8tion/trig8.h ****     uint16_t mx = m * secoffset8;
 105:./lib/lib8tion/trig8.h ****     int16_t  y  = mx + b;
 106:./lib/lib8tion/trig8.h **** 
 107:./lib/lib8tion/trig8.h ****     if( theta & 0x8000 ) y = -y;
 108:./lib/lib8tion/trig8.h **** 
 109:./lib/lib8tion/trig8.h ****     return y;
 110:./lib/lib8tion/trig8.h **** }
 111:./lib/lib8tion/trig8.h **** 
 112:./lib/lib8tion/trig8.h **** 
 113:./lib/lib8tion/trig8.h **** /// Fast 16-bit approximation of cos(x). This approximation never varies more than
 114:./lib/lib8tion/trig8.h **** /// 0.69% from the floating point value you'd get by doing
 115:./lib/lib8tion/trig8.h **** ///
 116:./lib/lib8tion/trig8.h **** ///     float s = cos(x) * 32767.0;
 117:./lib/lib8tion/trig8.h **** ///
 118:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-65535
 119:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between -32767 to 32767.
 120:./lib/lib8tion/trig8.h **** LIB8STATIC int16_t cos16( uint16_t theta)
 121:./lib/lib8tion/trig8.h **** {
 122:./lib/lib8tion/trig8.h ****     return sin16( theta + 16384);
 123:./lib/lib8tion/trig8.h **** }
 124:./lib/lib8tion/trig8.h **** 
 125:./lib/lib8tion/trig8.h **** ///////////////////////////////////////////////////////////////////////
 126:./lib/lib8tion/trig8.h **** 
 127:./lib/lib8tion/trig8.h **** // sin8 & cos8
 128:./lib/lib8tion/trig8.h **** //        Fast 8-bit approximations of sin(x) & cos(x).
 129:./lib/lib8tion/trig8.h **** //        Input angle is an unsigned int from 0-255.
 130:./lib/lib8tion/trig8.h **** //        Output is an unsigned int from 0 to 255.
 131:./lib/lib8tion/trig8.h **** //
 132:./lib/lib8tion/trig8.h **** //        This approximation can vary to to 2%
 133:./lib/lib8tion/trig8.h **** //        from the floating point value you'd get by doing
 134:./lib/lib8tion/trig8.h **** //          float s = (sin( x ) * 128.0) + 128;
 135:./lib/lib8tion/trig8.h **** //
 136:./lib/lib8tion/trig8.h **** //        Don't use this approximation for calculating the
 137:./lib/lib8tion/trig8.h **** //        "real" trigonometric calculations, but it's great
 138:./lib/lib8tion/trig8.h **** //        for art projects and LED displays.
 139:./lib/lib8tion/trig8.h **** //
 140:./lib/lib8tion/trig8.h **** //        On Arduino/AVR, this approximation is more than
 141:./lib/lib8tion/trig8.h **** //        20X faster than floating point sin(x) and cos(x)
 142:./lib/lib8tion/trig8.h **** 
 143:./lib/lib8tion/trig8.h **** #if defined(__AVR__) && !defined(LIB8_ATTINY)
 144:./lib/lib8tion/trig8.h **** #define sin8 sin8_avr
 145:./lib/lib8tion/trig8.h **** #else
 146:./lib/lib8tion/trig8.h **** #define sin8 sin8_C
 147:./lib/lib8tion/trig8.h **** #endif
 148:./lib/lib8tion/trig8.h **** 
 149:./lib/lib8tion/trig8.h **** 
 150:./lib/lib8tion/trig8.h **** static const uint8_t b_m16_interleave[8] = { 0, 49, 49, 41, 90, 27, 117, 10 };
 151:./lib/lib8tion/trig8.h **** 
 152:./lib/lib8tion/trig8.h **** /// Fast 8-bit approximation of sin(x). This approximation never varies more than
 153:./lib/lib8tion/trig8.h **** /// 2% from the floating point value you'd get by doing
 154:./lib/lib8tion/trig8.h **** ///
 155:./lib/lib8tion/trig8.h **** ///     float s = (sin(x) * 128.0) + 128;
 156:./lib/lib8tion/trig8.h **** ///
 157:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-255
 158:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between 0 and 255
 159:./lib/lib8tion/trig8.h **** LIB8STATIC uint8_t  sin8_avr( uint8_t theta)
 160:./lib/lib8tion/trig8.h **** {
 170               		.loc 3 160 1 is_stmt 1 view -0
 171               		.cfi_startproc
 172               	/* prologue: function */
 173               	/* frame size = 0 */
 174               	/* stack size = 0 */
 175               	.L__stack_usage = 0
 161:./lib/lib8tion/trig8.h ****     uint8_t offset = theta;
 176               		.loc 3 161 5 view .LVU44
 162:./lib/lib8tion/trig8.h **** 
 163:./lib/lib8tion/trig8.h ****     asm volatile(
 177               		.loc 3 163 5 view .LVU45
 178 0000 E82F      		mov r30,r24
 179               	/* #APP */
 180               	 ;  163 "./lib/lib8tion/trig8.h" 1
 181 0002 86FD      		sbrc r24,6         
 182 0004 E095      		com  r30           
 183               		
 184               	 ;  0 "" 2
 185               	.LVL14:
 164:./lib/lib8tion/trig8.h ****                  "sbrc %[theta],6         \n\t"
 165:./lib/lib8tion/trig8.h ****                  "com  %[offset]           \n\t"
 166:./lib/lib8tion/trig8.h ****                  : [theta] "+r" (theta), [offset] "+r" (offset)
 167:./lib/lib8tion/trig8.h ****                  );
 168:./lib/lib8tion/trig8.h **** 
 169:./lib/lib8tion/trig8.h ****     offset &= 0x3F; // 0..63
 186               		.loc 3 169 5 view .LVU46
 170:./lib/lib8tion/trig8.h **** 
 171:./lib/lib8tion/trig8.h ****     uint8_t secoffset  = offset & 0x0F; // 0..15
 187               		.loc 3 171 5 view .LVU47
 188               		.loc 3 171 13 is_stmt 0 view .LVU48
 189               	/* #NOAPP */
 190 0006 2E2F      		mov r18,r30
 191 0008 2F70      		andi r18,lo8(15)
 192               	.LVL15:
 172:./lib/lib8tion/trig8.h ****     if( theta & 0x40) secoffset++;
 193               		.loc 3 172 5 is_stmt 1 view .LVU49
 194               		.loc 3 172 7 is_stmt 0 view .LVU50
 195 000a 86FD      		sbrc r24,6
 196               		.loc 3 172 23 is_stmt 1 discriminator 1 view .LVU51
 197               		.loc 3 172 32 is_stmt 0 discriminator 1 view .LVU52
 198 000c 2F5F      		subi r18,lo8(-(1))
 199               	.LVL16:
 200               	.L15:
 173:./lib/lib8tion/trig8.h **** 
 174:./lib/lib8tion/trig8.h ****     uint8_t m16; uint8_t b;
 201               		.loc 3 174 5 is_stmt 1 view .LVU53
 202               		.loc 3 174 18 view .LVU54
 175:./lib/lib8tion/trig8.h **** 
 176:./lib/lib8tion/trig8.h ****     uint8_t section = offset >> 4; // 0..3
 203               		.loc 3 176 5 view .LVU55
 177:./lib/lib8tion/trig8.h ****     uint8_t s2 = section * 2;
 204               		.loc 3 177 5 view .LVU56
 178:./lib/lib8tion/trig8.h **** 
 179:./lib/lib8tion/trig8.h ****     const uint8_t* p = b_m16_interleave;
 205               		.loc 3 179 5 view .LVU57
 180:./lib/lib8tion/trig8.h ****     p += s2;
 206               		.loc 3 180 5 view .LVU58
 176:./lib/lib8tion/trig8.h ****     uint8_t s2 = section * 2;
 207               		.loc 3 176 13 is_stmt 0 view .LVU59
 208 000e E695      		lsr r30
 209 0010 E695      		lsr r30
 210 0012 E695      		lsr r30
 211               	.LVL17:
 177:./lib/lib8tion/trig8.h **** 
 212               		.loc 3 177 13 view .LVU60
 213 0014 E670      		andi r30,lo8(6)
 214               		.loc 3 180 7 view .LVU61
 215 0016 F0E0      		ldi r31,0
 216 0018 E050      		subi r30,lo8(-(b_m16_interleave))
 217 001a F040      		sbci r31,hi8(-(b_m16_interleave))
 218               	.LVL18:
 181:./lib/lib8tion/trig8.h ****     b   = *p;
 219               		.loc 3 181 5 is_stmt 1 view .LVU62
 182:./lib/lib8tion/trig8.h ****     p++;
 220               		.loc 3 182 5 view .LVU63
 183:./lib/lib8tion/trig8.h ****     m16 = *p;
 221               		.loc 3 183 5 view .LVU64
 184:./lib/lib8tion/trig8.h **** 
 185:./lib/lib8tion/trig8.h ****     uint8_t mx;
 222               		.loc 3 185 5 view .LVU65
 186:./lib/lib8tion/trig8.h ****     uint8_t xr1;
 223               		.loc 3 186 5 view .LVU66
 187:./lib/lib8tion/trig8.h ****     asm volatile(
 224               		.loc 3 187 5 view .LVU67
 225 001c 9181      		ldd r25,Z+1
 226               	/* #APP */
 227               	 ;  187 "./lib/lib8tion/trig8.h" 1
 228 001e 929F      		mul r25,r18   
 229 0020 902D      		mov r25,r0              
 230 0022 212D      		mov r18,r1             
 231 0024 1124      		eor  r1, r1               
 232 0026 9295      		swap r25                
 233 0028 9F70      		andi r25,0x0F           
 234 002a 2295      		swap r18               
 235 002c 207F      		andi r18, 0xF0         
 236 002e 922B      		or   r25, r18        
 237               		
 238               	 ;  0 "" 2
 239               	.LVL19:
 188:./lib/lib8tion/trig8.h ****                  "mul %[m16],%[secoffset]   \n\t"
 189:./lib/lib8tion/trig8.h ****                  "mov %[mx],r0              \n\t"
 190:./lib/lib8tion/trig8.h ****                  "mov %[xr1],r1             \n\t"
 191:./lib/lib8tion/trig8.h ****                  "eor  r1, r1               \n\t"
 192:./lib/lib8tion/trig8.h ****                  "swap %[mx]                \n\t"
 193:./lib/lib8tion/trig8.h ****                  "andi %[mx],0x0F           \n\t"
 194:./lib/lib8tion/trig8.h ****                  "swap %[xr1]               \n\t"
 195:./lib/lib8tion/trig8.h ****                  "andi %[xr1], 0xF0         \n\t"
 196:./lib/lib8tion/trig8.h ****                  "or   %[mx], %[xr1]        \n\t"
 197:./lib/lib8tion/trig8.h ****                  : [mx] "=d" (mx), [xr1] "=d" (xr1)
 198:./lib/lib8tion/trig8.h ****                  : [m16] "d" (m16), [secoffset] "d" (secoffset)
 199:./lib/lib8tion/trig8.h ****                  );
 200:./lib/lib8tion/trig8.h **** 
 201:./lib/lib8tion/trig8.h ****     int8_t y = mx + b;
 240               		.loc 3 201 5 view .LVU68
 241               		.loc 3 201 19 is_stmt 0 view .LVU69
 242               	/* #NOAPP */
 243 0030 2081      		ld r18,Z
 244 0032 920F      		add r25,r18
 245               	.LVL20:
 202:./lib/lib8tion/trig8.h ****     if( theta & 0x80 ) y = -y;
 246               		.loc 3 202 5 is_stmt 1 view .LVU70
 247               		.loc 3 202 7 is_stmt 0 view .LVU71
 248 0034 87FD      		sbrc r24,7
 249               		.loc 3 202 24 is_stmt 1 discriminator 1 view .LVU72
 250               		.loc 3 202 26 is_stmt 0 discriminator 1 view .LVU73
 251 0036 9195      		neg r25
 252               	.LVL21:
 253               	.L16:
 203:./lib/lib8tion/trig8.h **** 
 204:./lib/lib8tion/trig8.h ****     y += 128;
 254               		.loc 3 204 5 is_stmt 1 view .LVU74
 205:./lib/lib8tion/trig8.h **** 
 206:./lib/lib8tion/trig8.h ****     return y;
 255               		.loc 3 206 5 view .LVU75
 207:./lib/lib8tion/trig8.h **** }
 256               		.loc 3 207 1 is_stmt 0 view .LVU76
 257 0038 80E8      		ldi r24,lo8(-128)
 258               	.LVL22:
 259               		.loc 3 207 1 view .LVU77
 260 003a 890F      		add r24,r25
 261               	.LVL23:
 262               	/* epilogue start */
 263               		.loc 3 207 1 view .LVU78
 264 003c 0895      		ret
 265               		.cfi_endproc
 266               	.LFE157:
 268               		.section	.text.BAND_SAT_math,"ax",@progbits
 270               	BAND_SAT_math:
 271               	.LVL24:
 272               	.LFB195:
 273               		.file 4 "quantum/rgb_matrix_animations/colorband_sat_anim.h"
   1:quantum/rgb_matrix_animations/colorband_sat_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_SAT
   2:quantum/rgb_matrix_animations/colorband_sat_anim.h **** RGB_MATRIX_EFFECT(BAND_SAT)
   3:quantum/rgb_matrix_animations/colorband_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/colorband_sat_anim.h **** 
   5:quantum/rgb_matrix_animations/colorband_sat_anim.h **** static HSV BAND_SAT_math(HSV hsv, uint8_t i, uint8_t time) {
 274               		.loc 4 5 60 is_stmt 1 view -0
 275               		.cfi_startproc
 276               	/* prologue: function */
 277               	/* frame size = 0 */
 278               	/* stack size = 0 */
 279               	.L__stack_usage = 0
   6:quantum/rgb_matrix_animations/colorband_sat_anim.h ****     int16_t s = hsv.s - abs(scale8(g_led_config.point[i].x, 228) + 28 - time) * 8;
 280               		.loc 4 6 5 view .LVU80
 281               	.LBB56:
 282               	.LBI56:
  20:./lib/lib8tion/scale8.h **** {
 283               		.loc 1 20 34 view .LVU81
 284               	.LBB57:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 285               		.loc 1 61 5 view .LVU82
 286               	.LBE57:
 287               	.LBE56:
 288               		.loc 4 6 25 is_stmt 0 view .LVU83
 289 0000 E42F      		mov r30,r20
 290 0002 F0E0      		ldi r31,0
 291 0004 EE0F      		lsl r30
 292 0006 FF1F      		rol r31
 293 0008 E050      		subi r30,lo8(-(g_led_config+48))
 294 000a F040      		sbci r31,hi8(-(g_led_config+48))
 295               	.LBB59:
 296               	.LBB58:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 297               		.loc 1 61 5 view .LVU84
 298 000c 4081      		ld r20,Z
 299               	.LVL25:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 300               		.loc 1 61 5 view .LVU85
 301 000e 34EE      		ldi r19,lo8(-28)
 302               	/* #APP */
 303               	 ;  61 "./lib/lib8tion/scale8.h" 1
 304 0010 439F      		mul r20, r19          
 305 0012 412D      		mov r20, r1          
 306 0014 1124      		clr __zero_reg__    
 307               		
 308               	 ;  0 "" 2
 309               	.LVL26:
  85:./lib/lib8tion/scale8.h **** #endif
 310               		.loc 1 85 5 is_stmt 1 view .LVU86
  85:./lib/lib8tion/scale8.h **** #endif
 311               		.loc 1 85 5 is_stmt 0 view .LVU87
 312               	/* #NOAPP */
 313               	.LBE58:
 314               	.LBE59:
   7:quantum/rgb_matrix_animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 315               		.loc 4 7 5 is_stmt 1 view .LVU88
 316               	.LBB60:
 317               	.LBI60:
  20:./lib/lib8tion/scale8.h **** {
 318               		.loc 1 20 34 view .LVU89
 319               	.LBB61:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 320               		.loc 1 61 5 view .LVU90
 321               	.LBE61:
 322               	.LBE60:
   6:quantum/rgb_matrix_animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 323               		.loc 4 6 20 is_stmt 0 view .LVU91
 324 0016 E72F      		mov r30,r23
 325 0018 F0E0      		ldi r31,0
   6:quantum/rgb_matrix_animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 326               		.loc 4 6 25 view .LVU92
 327 001a 50E0      		ldi r21,0
 328 001c 445E      		subi r20,-28
 329 001e 5F4F      		sbci r21,-1
 330               	.LVL27:
   6:quantum/rgb_matrix_animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 331               		.loc 4 6 25 view .LVU93
 332 0020 DA01      		movw r26,r20
 333 0022 A21B      		sub r26,r18
 334 0024 B109      		sbc r27,__zero_reg__
 335 0026 9D01      		movw r18,r26
 336               	.LVL28:
   6:quantum/rgb_matrix_animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 337               		.loc 4 6 25 view .LVU94
 338 0028 B7FF      		sbrs r27,7
 339 002a 00C0      		rjmp .L21
 340 002c 3195      		neg r19
 341 002e 2195      		neg r18
 342 0030 3109      		sbc r19,__zero_reg__
 343               	.L21:
   6:quantum/rgb_matrix_animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 344               		.loc 4 6 79 view .LVU95
 345 0032 93E0      		ldi r25,3
 346               		1:
 347 0034 220F      		lsl r18
 348 0036 331F      		rol r19
 349 0038 9A95      		dec r25
 350 003a 01F4      		brne 1b
   6:quantum/rgb_matrix_animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 351               		.loc 4 6 13 view .LVU96
 352 003c AF01      		movw r20,r30
 353 003e 421B      		sub r20,r18
 354 0040 530B      		sbc r21,r19
 355 0042 9A01      		movw r18,r20
 356               		.loc 4 7 34 view .LVU97
 357 0044 57FD      		sbrc r21,7
 358 0046 20E0      		ldi r18,0
 359               	.L22:
 360               	.LBB63:
 361               	.LBB62:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 362               		.loc 1 61 5 view .LVU98
 363               	/* #APP */
 364               	 ;  61 "./lib/lib8tion/scale8.h" 1
 365 0048 279F      		mul r18, r23          
 366 004a 212D      		mov r18, r1          
 367 004c 1124      		clr __zero_reg__    
 368               		
 369               	 ;  0 "" 2
 370               	.LVL29:
  85:./lib/lib8tion/scale8.h **** #endif
 371               		.loc 1 85 5 is_stmt 1 view .LVU99
  85:./lib/lib8tion/scale8.h **** #endif
 372               		.loc 1 85 5 is_stmt 0 view .LVU100
 373               	/* #NOAPP */
 374               	.LBE62:
 375               	.LBE63:
   8:quantum/rgb_matrix_animations/colorband_sat_anim.h ****     return hsv;
 376               		.loc 4 8 5 is_stmt 1 view .LVU101
   9:quantum/rgb_matrix_animations/colorband_sat_anim.h **** }
 377               		.loc 4 9 1 is_stmt 0 view .LVU102
 378 004e 722F      		mov r23,r18
 379               	.LVL30:
 380               	/* epilogue start */
 381               		.loc 4 9 1 view .LVU103
 382 0050 0895      		ret
 383               		.cfi_endproc
 384               	.LFE195:
 386               		.section	.text.BAND_VAL_math,"ax",@progbits
 388               	BAND_VAL_math:
 389               	.LVL31:
 390               	.LFB197:
 391               		.file 5 "quantum/rgb_matrix_animations/colorband_val_anim.h"
   1:quantum/rgb_matrix_animations/colorband_val_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_VAL
   2:quantum/rgb_matrix_animations/colorband_val_anim.h **** RGB_MATRIX_EFFECT(BAND_VAL)
   3:quantum/rgb_matrix_animations/colorband_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/colorband_val_anim.h **** 
   5:quantum/rgb_matrix_animations/colorband_val_anim.h **** static HSV BAND_VAL_math(HSV hsv, uint8_t i, uint8_t time) {
 392               		.loc 5 5 60 is_stmt 1 view -0
 393               		.cfi_startproc
 394               	/* prologue: function */
 395               	/* frame size = 0 */
 396               	/* stack size = 0 */
 397               	.L__stack_usage = 0
   6:quantum/rgb_matrix_animations/colorband_val_anim.h ****     int16_t v = hsv.v - abs(scale8(g_led_config.point[i].x, 228) + 28 - time) * 8;
 398               		.loc 5 6 5 view .LVU105
 399               	.LBB64:
 400               	.LBI64:
  20:./lib/lib8tion/scale8.h **** {
 401               		.loc 1 20 34 view .LVU106
 402               	.LBB65:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 403               		.loc 1 61 5 view .LVU107
 404               	.LBE65:
 405               	.LBE64:
 406               		.loc 5 6 25 is_stmt 0 view .LVU108
 407 0000 E42F      		mov r30,r20
 408 0002 F0E0      		ldi r31,0
 409 0004 EE0F      		lsl r30
 410 0006 FF1F      		rol r31
 411 0008 E050      		subi r30,lo8(-(g_led_config+48))
 412 000a F040      		sbci r31,hi8(-(g_led_config+48))
 413               	.LBB67:
 414               	.LBB66:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 415               		.loc 1 61 5 view .LVU109
 416 000c 4081      		ld r20,Z
 417               	.LVL32:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 418               		.loc 1 61 5 view .LVU110
 419 000e 34EE      		ldi r19,lo8(-28)
 420               	/* #APP */
 421               	 ;  61 "./lib/lib8tion/scale8.h" 1
 422 0010 439F      		mul r20, r19          
 423 0012 412D      		mov r20, r1          
 424 0014 1124      		clr __zero_reg__    
 425               		
 426               	 ;  0 "" 2
 427               	.LVL33:
  85:./lib/lib8tion/scale8.h **** #endif
 428               		.loc 1 85 5 is_stmt 1 view .LVU111
  85:./lib/lib8tion/scale8.h **** #endif
 429               		.loc 1 85 5 is_stmt 0 view .LVU112
 430               	/* #NOAPP */
 431               	.LBE66:
 432               	.LBE67:
   7:quantum/rgb_matrix_animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 433               		.loc 5 7 5 is_stmt 1 view .LVU113
 434               	.LBB68:
 435               	.LBI68:
  20:./lib/lib8tion/scale8.h **** {
 436               		.loc 1 20 34 view .LVU114
 437               	.LBB69:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 438               		.loc 1 61 5 view .LVU115
 439               	.LBE69:
 440               	.LBE68:
   6:quantum/rgb_matrix_animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 441               		.loc 5 6 20 is_stmt 0 view .LVU116
 442 0016 E82F      		mov r30,r24
 443 0018 F0E0      		ldi r31,0
   6:quantum/rgb_matrix_animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 444               		.loc 5 6 25 view .LVU117
 445 001a 50E0      		ldi r21,0
 446 001c 445E      		subi r20,-28
 447 001e 5F4F      		sbci r21,-1
 448               	.LVL34:
   6:quantum/rgb_matrix_animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 449               		.loc 5 6 25 view .LVU118
 450 0020 DA01      		movw r26,r20
 451 0022 A21B      		sub r26,r18
 452 0024 B109      		sbc r27,__zero_reg__
 453 0026 9D01      		movw r18,r26
 454               	.LVL35:
   6:quantum/rgb_matrix_animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 455               		.loc 5 6 25 view .LVU119
 456 0028 B7FF      		sbrs r27,7
 457 002a 00C0      		rjmp .L24
 458 002c 3195      		neg r19
 459 002e 2195      		neg r18
 460 0030 3109      		sbc r19,__zero_reg__
 461               	.L24:
   6:quantum/rgb_matrix_animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 462               		.loc 5 6 79 view .LVU120
 463 0032 93E0      		ldi r25,3
 464               		1:
 465 0034 220F      		lsl r18
 466 0036 331F      		rol r19
 467 0038 9A95      		dec r25
 468 003a 01F4      		brne 1b
   6:quantum/rgb_matrix_animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 469               		.loc 5 6 13 view .LVU121
 470 003c AF01      		movw r20,r30
 471 003e 421B      		sub r20,r18
 472 0040 530B      		sbc r21,r19
 473 0042 9A01      		movw r18,r20
 474               		.loc 5 7 34 view .LVU122
 475 0044 57FD      		sbrc r21,7
 476 0046 20E0      		ldi r18,0
 477               	.L25:
 478               	.LBB71:
 479               	.LBB70:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 480               		.loc 1 61 5 view .LVU123
 481 0048 582F      		mov r21,r24
 482               	/* #APP */
 483               	 ;  61 "./lib/lib8tion/scale8.h" 1
 484 004a 259F      		mul r18, r21          
 485 004c 212D      		mov r18, r1          
 486 004e 1124      		clr __zero_reg__    
 487               		
 488               	 ;  0 "" 2
 489               	.LVL36:
  85:./lib/lib8tion/scale8.h **** #endif
 490               		.loc 1 85 5 is_stmt 1 view .LVU124
  85:./lib/lib8tion/scale8.h **** #endif
 491               		.loc 1 85 5 is_stmt 0 view .LVU125
 492               	/* #NOAPP */
 493               	.LBE70:
 494               	.LBE71:
   8:quantum/rgb_matrix_animations/colorband_val_anim.h ****     return hsv;
 495               		.loc 5 8 5 is_stmt 1 view .LVU126
   9:quantum/rgb_matrix_animations/colorband_val_anim.h **** }
 496               		.loc 5 9 1 is_stmt 0 view .LVU127
 497 0050 822F      		mov r24,r18
 498               	.LVL37:
 499               	/* epilogue start */
 500               		.loc 5 9 1 view .LVU128
 501 0052 0895      		ret
 502               		.cfi_endproc
 503               	.LFE197:
 505               		.section	.text.CYCLE_ALL_math,"ax",@progbits
 507               	CYCLE_ALL_math:
 508               	.LVL38:
 509               	.LFB207:
 510               		.file 6 "quantum/rgb_matrix_animations/cycle_all_anim.h"
   1:quantum/rgb_matrix_animations/cycle_all_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_ALL
   2:quantum/rgb_matrix_animations/cycle_all_anim.h **** RGB_MATRIX_EFFECT(CYCLE_ALL)
   3:quantum/rgb_matrix_animations/cycle_all_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/cycle_all_anim.h **** 
   5:quantum/rgb_matrix_animations/cycle_all_anim.h **** static HSV CYCLE_ALL_math(HSV hsv, uint8_t i, uint8_t time) {
 511               		.loc 6 5 61 is_stmt 1 view -0
 512               		.cfi_startproc
 513               	/* prologue: function */
 514               	/* frame size = 0 */
 515               	/* stack size = 0 */
 516               	.L__stack_usage = 0
   6:quantum/rgb_matrix_animations/cycle_all_anim.h ****     hsv.h = time;
 517               		.loc 6 6 5 view .LVU130
   7:quantum/rgb_matrix_animations/cycle_all_anim.h ****     return hsv;
 518               		.loc 6 7 5 view .LVU131
   8:quantum/rgb_matrix_animations/cycle_all_anim.h **** }
 519               		.loc 6 8 1 is_stmt 0 view .LVU132
 520 0000 622F      		mov r22,r18
 521               	.LVL39:
 522               	/* epilogue start */
 523               		.loc 6 8 1 view .LVU133
 524 0002 0895      		ret
 525               		.cfi_endproc
 526               	.LFE207:
 528               		.section	.text.CYCLE_LEFT_RIGHT_math,"ax",@progbits
 530               	CYCLE_LEFT_RIGHT_math:
 531               	.LVL40:
 532               	.LFB209:
 533               		.file 7 "quantum/rgb_matrix_animations/cycle_left_right_anim.h"
   1:quantum/rgb_matrix_animations/cycle_left_right_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_LEFT_RIGHT
   2:quantum/rgb_matrix_animations/cycle_left_right_anim.h **** RGB_MATRIX_EFFECT(CYCLE_LEFT_RIGHT)
   3:quantum/rgb_matrix_animations/cycle_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/cycle_left_right_anim.h **** 
   5:quantum/rgb_matrix_animations/cycle_left_right_anim.h **** static HSV CYCLE_LEFT_RIGHT_math(HSV hsv, uint8_t i, uint8_t time) {
 534               		.loc 7 5 68 is_stmt 1 view -0
 535               		.cfi_startproc
 536               	/* prologue: function */
 537               	/* frame size = 0 */
 538               	/* stack size = 0 */
 539               	.L__stack_usage = 0
   6:quantum/rgb_matrix_animations/cycle_left_right_anim.h ****     hsv.h = g_led_config.point[i].x - time;
 540               		.loc 7 6 5 view .LVU135
   7:quantum/rgb_matrix_animations/cycle_left_right_anim.h ****     return hsv;
 541               		.loc 7 7 5 view .LVU136
   6:quantum/rgb_matrix_animations/cycle_left_right_anim.h ****     hsv.h = g_led_config.point[i].x - time;
 542               		.loc 7 6 34 is_stmt 0 view .LVU137
 543 0000 E42F      		mov r30,r20
 544 0002 F0E0      		ldi r31,0
 545 0004 EE0F      		lsl r30
 546 0006 FF1F      		rol r31
 547 0008 E050      		subi r30,lo8(-(g_led_config+48))
 548 000a F040      		sbci r31,hi8(-(g_led_config+48))
   6:quantum/rgb_matrix_animations/cycle_left_right_anim.h ****     hsv.h = g_led_config.point[i].x - time;
 549               		.loc 7 6 37 view .LVU138
 550 000c 6081      		ld r22,Z
 551               	.LVL41:
   6:quantum/rgb_matrix_animations/cycle_left_right_anim.h ****     hsv.h = g_led_config.point[i].x - time;
 552               		.loc 7 6 37 view .LVU139
 553 000e 621B      		sub r22,r18
 554               	/* epilogue start */
   8:quantum/rgb_matrix_animations/cycle_left_right_anim.h **** }
 555               		.loc 7 8 1 view .LVU140
 556 0010 0895      		ret
 557               		.cfi_endproc
 558               	.LFE209:
 560               		.section	.text.CYCLE_UP_DOWN_math,"ax",@progbits
 562               	CYCLE_UP_DOWN_math:
 563               	.LVL42:
 564               	.LFB211:
 565               		.file 8 "quantum/rgb_matrix_animations/cycle_up_down_anim.h"
   1:quantum/rgb_matrix_animations/cycle_up_down_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_UP_DOWN
   2:quantum/rgb_matrix_animations/cycle_up_down_anim.h **** RGB_MATRIX_EFFECT(CYCLE_UP_DOWN)
   3:quantum/rgb_matrix_animations/cycle_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/cycle_up_down_anim.h **** 
   5:quantum/rgb_matrix_animations/cycle_up_down_anim.h **** static HSV CYCLE_UP_DOWN_math(HSV hsv, uint8_t i, uint8_t time) {
 566               		.loc 8 5 65 is_stmt 1 view -0
 567               		.cfi_startproc
 568               	/* prologue: function */
 569               	/* frame size = 0 */
 570               	/* stack size = 0 */
 571               	.L__stack_usage = 0
   6:quantum/rgb_matrix_animations/cycle_up_down_anim.h ****     hsv.h = g_led_config.point[i].y - time;
 572               		.loc 8 6 5 view .LVU142
   7:quantum/rgb_matrix_animations/cycle_up_down_anim.h ****     return hsv;
 573               		.loc 8 7 5 view .LVU143
   6:quantum/rgb_matrix_animations/cycle_up_down_anim.h ****     hsv.h = g_led_config.point[i].y - time;
 574               		.loc 8 6 34 is_stmt 0 view .LVU144
 575 0000 E42F      		mov r30,r20
 576 0002 F0E0      		ldi r31,0
 577 0004 EE0F      		lsl r30
 578 0006 FF1F      		rol r31
 579 0008 E050      		subi r30,lo8(-(g_led_config))
 580 000a F040      		sbci r31,hi8(-(g_led_config))
   6:quantum/rgb_matrix_animations/cycle_up_down_anim.h ****     hsv.h = g_led_config.point[i].y - time;
 581               		.loc 8 6 37 view .LVU145
 582 000c 61A9      		ldd r22,Z+49
 583               	.LVL43:
   6:quantum/rgb_matrix_animations/cycle_up_down_anim.h ****     hsv.h = g_led_config.point[i].y - time;
 584               		.loc 8 6 37 view .LVU146
 585 000e 621B      		sub r22,r18
 586               	/* epilogue start */
   8:quantum/rgb_matrix_animations/cycle_up_down_anim.h **** }
 587               		.loc 8 8 1 view .LVU147
 588 0010 0895      		ret
 589               		.cfi_endproc
 590               	.LFE211:
 592               		.section	.text.RAINBOW_MOVING_CHEVRON_math,"ax",@progbits
 594               	RAINBOW_MOVING_CHEVRON_math:
 595               	.LVL44:
 596               	.LFB213:
 597               		.file 9 "quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h"
   1:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h **** #ifndef DISABLE_RGB_MATRIX_RAINBOW_MOVING_CHEVRON
   2:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h **** RGB_MATRIX_EFFECT(RAINBOW_MOVING_CHEVRON)
   3:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h **** 
   5:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h **** static HSV RAINBOW_MOVING_CHEVRON_math(HSV hsv, uint8_t i, uint8_t time) {
 598               		.loc 9 5 74 is_stmt 1 view -0
 599               		.cfi_startproc
 600               	/* prologue: function */
 601               	/* frame size = 0 */
 602               	/* stack size = 0 */
 603               	.L__stack_usage = 0
 604               		.loc 9 5 74 is_stmt 0 view .LVU149
 605 0000 322F      		mov r19,r18
   6:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h ****     hsv.h += abs8(g_led_config.point[i].y - k_rgb_matrix_center.y) + (g_led_config.point[i].x - tim
 606               		.loc 9 6 5 is_stmt 1 view .LVU150
 607               		.loc 9 6 40 is_stmt 0 view .LVU151
 608 0002 50E0      		ldi r21,0
 609 0004 FA01      		movw r30,r20
 610 0006 EE0F      		lsl r30
 611 0008 FF1F      		rol r31
 612 000a E050      		subi r30,lo8(-(g_led_config))
 613 000c F040      		sbci r31,hi8(-(g_led_config))
 614               		.loc 9 6 43 view .LVU152
 615 000e 91A9      		ldd r25,Z+49
 616 0010 9052      		subi r25,lo8(-(-32))
 617               	.LVL45:
 618               	.LBB72:
 619               	.LBI72:
 404:./lib/lib8tion/math8.h **** {
 620               		.loc 2 404 33 is_stmt 1 view .LVU153
 621               	.LBB73:
 412:./lib/lib8tion/math8.h ****          /* First, check the high bit, and prepare to skip if it's clear */
 622               		.loc 2 412 5 view .LVU154
 623               	/* #APP */
 624               	 ;  412 "./lib/lib8tion/math8.h" 1
 625 0012 97FD      		sbrc r25, 7 
 626 0014 9195      	neg r25     
 627               	
 628               	 ;  0 "" 2
 629               	.LVL46:
 420:./lib/lib8tion/math8.h **** #else
 630               		.loc 2 420 5 view .LVU155
 420:./lib/lib8tion/math8.h **** #else
 631               		.loc 2 420 5 is_stmt 0 view .LVU156
 632               	/* #NOAPP */
 633               	.LBE73:
 634               	.LBE72:
   7:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h ****     return hsv;
 635               		.loc 9 7 5 is_stmt 1 view .LVU157
   6:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h ****     return hsv;
 636               		.loc 9 6 92 is_stmt 0 view .LVU158
 637 0016 440F      		lsl r20
 638 0018 551F      		rol r21
 639               	.LVL47:
   6:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h ****     return hsv;
 640               		.loc 9 6 92 view .LVU159
 641 001a FA01      		movw r30,r20
 642 001c E050      		subi r30,lo8(-(g_led_config+48))
 643 001e F040      		sbci r31,hi8(-(g_led_config+48))
 644 0020 2081      		ld r18,Z
   6:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h ****     return hsv;
 645               		.loc 9 6 95 view .LVU160
 646 0022 231B      		sub r18,r19
 647 0024 330B      		sbc r19,r19
   6:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h ****     return hsv;
 648               		.loc 9 6 68 view .LVU161
 649 0026 290F      		add r18,r25
 650 0028 311D      		adc r19,__zero_reg__
 651 002a 97FD      		sbrc r25,7
 652 002c 3A95      		dec r19
   6:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h ****     return hsv;
 653               		.loc 9 6 11 view .LVU162
 654 002e 620F      		add r22,r18
 655               	.LVL48:
 656               	/* epilogue start */
   8:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h **** }
 657               		.loc 9 8 1 view .LVU163
 658 0030 0895      		ret
 659               		.cfi_endproc
 660               	.LFE213:
 662               		.section	.text.CYCLE_OUT_IN_math,"ax",@progbits
 664               	CYCLE_OUT_IN_math:
 665               	.LVL49:
 666               	.LFB215:
 667               		.file 10 "quantum/rgb_matrix_animations/cycle_out_in_anim.h"
   1:quantum/rgb_matrix_animations/cycle_out_in_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_OUT_IN
   2:quantum/rgb_matrix_animations/cycle_out_in_anim.h **** RGB_MATRIX_EFFECT(CYCLE_OUT_IN)
   3:quantum/rgb_matrix_animations/cycle_out_in_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/cycle_out_in_anim.h **** 
   5:quantum/rgb_matrix_animations/cycle_out_in_anim.h **** static HSV CYCLE_OUT_IN_math(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint8_t time) {
 668               		.loc 10 5 91 is_stmt 1 view -0
 669               		.cfi_startproc
 670               		.loc 10 5 91 is_stmt 0 view .LVU165
 671 0000 EF92      		push r14
 672               	.LCFI0:
 673               		.cfi_def_cfa_offset 3
 674               		.cfi_offset 14, -2
 675 0002 0F93      		push r16
 676               	.LCFI1:
 677               		.cfi_def_cfa_offset 4
 678               		.cfi_offset 16, -3
 679               	/* prologue: function */
 680               	/* frame size = 0 */
 681               	/* stack size = 2 */
 682               	.L__stack_usage = 2
 683               		.loc 10 5 91 view .LVU166
 684 0004 972F      		mov r25,r23
   6:quantum/rgb_matrix_animations/cycle_out_in_anim.h ****     hsv.h = 3 * dist / 2 + time;
 685               		.loc 10 6 5 is_stmt 1 view .LVU167
   7:quantum/rgb_matrix_animations/cycle_out_in_anim.h ****     return hsv;
 686               		.loc 10 7 5 view .LVU168
   6:quantum/rgb_matrix_animations/cycle_out_in_anim.h ****     hsv.h = 3 * dist / 2 + time;
 687               		.loc 10 6 15 is_stmt 0 view .LVU169
 688 0006 23E0      		ldi r18,lo8(3)
 689               	.LVL50:
   6:quantum/rgb_matrix_animations/cycle_out_in_anim.h ****     hsv.h = 3 * dist / 2 + time;
 690               		.loc 10 6 15 view .LVU170
 691 0008 029F      		mul r16,r18
 692 000a B001      		movw r22,r0
 693 000c 1124      		clr __zero_reg__
 694               	.LVL51:
   6:quantum/rgb_matrix_animations/cycle_out_in_anim.h ****     hsv.h = 3 * dist / 2 + time;
 695               		.loc 10 6 22 view .LVU171
 696 000e 7595      		asr r23
 697 0010 6795      		ror r22
   6:quantum/rgb_matrix_animations/cycle_out_in_anim.h ****     hsv.h = 3 * dist / 2 + time;
 698               		.loc 10 6 26 view .LVU172
 699 0012 6E0D      		add r22,r14
   8:quantum/rgb_matrix_animations/cycle_out_in_anim.h **** }
 700               		.loc 10 8 1 view .LVU173
 701 0014 792F      		mov r23,r25
 702               	/* epilogue start */
 703               		.loc 10 8 1 view .LVU174
 704 0016 0F91      		pop r16
 705               	.LVL52:
 706               		.loc 10 8 1 view .LVU175
 707 0018 EF90      		pop r14
 708               	.LVL53:
 709               		.loc 10 8 1 view .LVU176
 710 001a 0895      		ret
 711               		.cfi_endproc
 712               	.LFE215:
 714               		.section	.text.CYCLE_OUT_IN_DUAL_math,"ax",@progbits
 716               	CYCLE_OUT_IN_DUAL_math:
 717               	.LVL54:
 718               	.LFB217:
 719               		.file 11 "quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h"
   1:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_OUT_IN_DUAL
   2:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h **** RGB_MATRIX_EFFECT(CYCLE_OUT_IN_DUAL)
   3:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h **** 
   5:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h **** static HSV CYCLE_OUT_IN_DUAL_math(HSV hsv, int16_t dx, int16_t dy, uint8_t time) {
 720               		.loc 11 5 82 is_stmt 1 view -0
 721               		.cfi_startproc
 722               		.loc 11 5 82 is_stmt 0 view .LVU178
 723 0000 0F93      		push r16
 724               	.LCFI2:
 725               		.cfi_def_cfa_offset 3
 726               		.cfi_offset 16, -2
 727 0002 CF93      		push r28
 728               	.LCFI3:
 729               		.cfi_def_cfa_offset 4
 730               		.cfi_offset 28, -3
 731 0004 DF93      		push r29
 732               	.LCFI4:
 733               		.cfi_def_cfa_offset 5
 734               		.cfi_offset 29, -4
 735               	/* prologue: function */
 736               	/* frame size = 0 */
 737               	/* stack size = 3 */
 738               	.L__stack_usage = 3
 739               		.loc 11 5 82 view .LVU179
 740 0006 D72F      		mov r29,r23
 741               		.loc 11 5 82 view .LVU180
 742 0008 C82F      		mov r28,r24
   6:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h ****     dx           = (k_rgb_matrix_center.x / 2) - abs8(dx);
 743               		.loc 11 6 5 is_stmt 1 view .LVU181
 744               	.LVL55:
 745               	.LBB74:
 746               	.LBI74:
 404:./lib/lib8tion/math8.h **** {
 747               		.loc 2 404 33 view .LVU182
 748               	.LBB75:
 412:./lib/lib8tion/math8.h ****          /* First, check the high bit, and prepare to skip if it's clear */
 749               		.loc 2 412 5 view .LVU183
 750               	/* #APP */
 751               	 ;  412 "./lib/lib8tion/math8.h" 1
 752 000a 47FD      		sbrc r20, 7 
 753 000c 4195      	neg r20     
 754               	
 755               	 ;  0 "" 2
 756               	.LVL56:
 420:./lib/lib8tion/math8.h **** #else
 757               		.loc 2 420 5 view .LVU184
 420:./lib/lib8tion/math8.h **** #else
 758               		.loc 2 420 5 is_stmt 0 view .LVU185
 759               	/* #NOAPP */
 760               	.LBE75:
 761               	.LBE74:
 762               		.loc 11 6 18 view .LVU186
 763 000e 88E3      		ldi r24,lo8(56)
 764 0010 90E0      		ldi r25,0
 765               		.loc 11 6 18 view .LVU187
 766 0012 841B      		sub r24,r20
 767 0014 9109      		sbc r25,__zero_reg__
 768 0016 47FD      		sbrc r20,7
 769 0018 9395      		inc r25
 770               	.LVL57:
   7:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h ****     uint8_t dist = sqrt16(dx * dx + dy * dy);
 771               		.loc 11 7 5 is_stmt 1 view .LVU188
 772               		.loc 11 7 30 is_stmt 0 view .LVU189
 773 001a 889F      		mul r24,r24
 774 001c B001      		movw r22,r0
 775 001e 899F      		mul r24,r25
 776 0020 700D      		add r23,r0
 777 0022 700D      		add r23,r0
 778 0024 1124      		clr r1
 779               	.LVL58:
 780               		.loc 11 7 40 view .LVU190
 781 0026 229F      		mul r18,r18
 782 0028 C001      		movw r24,r0
 783 002a 239F      		mul r18,r19
 784 002c 900D      		add r25,r0
 785 002e 900D      		add r25,r0
 786 0030 1124      		clr r1
 787               	.LVL59:
 788               		.loc 11 7 20 view .LVU191
 789 0032 860F      		add r24,r22
 790 0034 971F      		adc r25,r23
 791 0036 0E94 0000 		call sqrt16
 792               	.LVL60:
   8:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h ****     hsv.h        = 3 * dist + time;
 793               		.loc 11 8 5 is_stmt 1 view .LVU192
   9:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h ****     return hsv;
 794               		.loc 11 9 5 view .LVU193
   8:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h ****     hsv.h        = 3 * dist + time;
 795               		.loc 11 8 29 is_stmt 0 view .LVU194
 796 003a 982F      		mov r25,r24
 797 003c 990F      		lsl r25
 798 003e 890F      		add r24,r25
 799               	.LVL61:
   8:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h ****     hsv.h        = 3 * dist + time;
 800               		.loc 11 8 29 view .LVU195
 801 0040 682F      		mov r22,r24
 802 0042 600F      		add r22,r16
  10:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h **** }
 803               		.loc 11 10 1 view .LVU196
 804 0044 7D2F      		mov r23,r29
 805 0046 8C2F      		mov r24,r28
 806               	/* epilogue start */
 807 0048 DF91      		pop r29
 808               		.loc 11 10 1 view .LVU197
 809 004a CF91      		pop r28
 810               		.loc 11 10 1 view .LVU198
 811 004c 0F91      		pop r16
 812               	.LVL62:
 813               		.loc 11 10 1 view .LVU199
 814 004e 0895      		ret
 815               		.cfi_endproc
 816               	.LFE217:
 818               		.section	.text.DUAL_BEACON_math,"ax",@progbits
 820               	DUAL_BEACON_math:
 821               	.LVL63:
 822               	.LFB223:
 823               		.file 12 "quantum/rgb_matrix_animations/dual_beacon_anim.h"
   1:quantum/rgb_matrix_animations/dual_beacon_anim.h **** #ifndef DISABLE_RGB_MATRIX_DUAL_BEACON
   2:quantum/rgb_matrix_animations/dual_beacon_anim.h **** RGB_MATRIX_EFFECT(DUAL_BEACON)
   3:quantum/rgb_matrix_animations/dual_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/dual_beacon_anim.h **** 
   5:quantum/rgb_matrix_animations/dual_beacon_anim.h **** static HSV DUAL_BEACON_math(HSV hsv, int8_t sin, int8_t cos, uint8_t i, uint8_t time) {
 824               		.loc 12 5 87 is_stmt 1 view -0
 825               		.cfi_startproc
 826               		.loc 12 5 87 is_stmt 0 view .LVU201
 827 0000 0F93      		push r16
 828               	.LCFI5:
 829               		.cfi_def_cfa_offset 3
 830               		.cfi_offset 16, -2
 831 0002 1F93      		push r17
 832               	.LCFI6:
 833               		.cfi_def_cfa_offset 4
 834               		.cfi_offset 17, -3
 835               	/* prologue: function */
 836               	/* frame size = 0 */
 837               	/* stack size = 2 */
 838               	.L__stack_usage = 2
 839 0004 522F      		mov r21,r18
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 840               		.loc 12 6 5 is_stmt 1 view .LVU202
 841               		.loc 12 6 37 is_stmt 0 view .LVU203
 842 0006 10E0      		ldi r17,0
   7:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     return hsv;
 843               		.loc 12 7 5 is_stmt 1 view .LVU204
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 844               		.loc 12 6 37 is_stmt 0 view .LVU205
 845 0008 F801      		movw r30,r16
 846 000a EE0F      		lsl r30
 847 000c FF1F      		rol r31
 848               	.LVL64:
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 849               		.loc 12 6 37 view .LVU206
 850 000e E050      		subi r30,lo8(-(g_led_config))
 851 0010 F040      		sbci r31,hi8(-(g_led_config))
 852 0012 A1A9      		ldd r26,Z+49
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 853               		.loc 12 6 40 view .LVU207
 854 0014 A052      		subi r26,32
 855 0016 BB0B      		sbc r27,r27
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 856               		.loc 12 6 65 view .LVU208
 857 0018 9D01      		movw r18,r26
 858 001a 5203      		mulsu r21,r18
 859 001c F001      		movw r30,r0
 860 001e 539F      		mul r21,r19
 861 0020 F00D      		add r31,r0
 862 0022 1124      		clr __zero_reg__
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 863               		.loc 12 6 95 view .LVU209
 864 0024 000F      		lsl r16
 865 0026 111F      		rol r17
 866               	.LVL65:
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 867               		.loc 12 6 95 view .LVU210
 868 0028 D801      		movw r26,r16
 869 002a A050      		subi r26,lo8(-(g_led_config+48))
 870 002c B040      		sbci r27,hi8(-(g_led_config+48))
 871 002e 0C91      		ld r16,X
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 872               		.loc 12 6 98 view .LVU211
 873 0030 0057      		subi r16,112
 874 0032 110B      		sbc r17,r17
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 875               		.loc 12 6 123 view .LVU212
 876 0034 4003      		mulsu r20,r16
 877 0036 9001      		movw r18,r0
 878 0038 419F      		mul r20,r17
 879 003a 300D      		add r19,r0
 880 003c 1124      		clr __zero_reg__
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 881               		.loc 12 6 71 view .LVU213
 882 003e 2E0F      		add r18,r30
 883 0040 3F1F      		adc r19,r31
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 884               		.loc 12 6 130 view .LVU214
 885 0042 37FF      		sbrs r19,7
 886 0044 00C0      		rjmp .L33
 887 0046 2158      		subi r18,-127
 888 0048 3F4F      		sbci r19,-1
 889               	.L33:
 890 004a 220F      		lsl r18
 891 004c 232F      		mov r18,r19
 892 004e 221F      		rol r18
 893 0050 330B      		sbc r19,r19
   6:quantum/rgb_matrix_animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 894               		.loc 12 6 11 view .LVU215
 895 0052 620F      		add r22,r18
 896               	.LVL66:
 897               	/* epilogue start */
   8:quantum/rgb_matrix_animations/dual_beacon_anim.h **** }
 898               		.loc 12 8 1 view .LVU216
 899 0054 1F91      		pop r17
 900               	.LVL67:
 901               		.loc 12 8 1 view .LVU217
 902 0056 0F91      		pop r16
 903               	.LVL68:
 904               		.loc 12 8 1 view .LVU218
 905 0058 0895      		ret
 906               		.cfi_endproc
 907               	.LFE223:
 909               		.section	.text.RAINBOW_BEACON_math,"ax",@progbits
 911               	RAINBOW_BEACON_math:
 912               	.LVL69:
 913               	.LFB225:
 914               		.file 13 "quantum/rgb_matrix_animations/rainbow_beacon_anim.h"
   1:quantum/rgb_matrix_animations/rainbow_beacon_anim.h **** #ifndef DISABLE_RGB_MATRIX_RAINBOW_BEACON
   2:quantum/rgb_matrix_animations/rainbow_beacon_anim.h **** RGB_MATRIX_EFFECT(RAINBOW_BEACON)
   3:quantum/rgb_matrix_animations/rainbow_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/rainbow_beacon_anim.h **** 
   5:quantum/rgb_matrix_animations/rainbow_beacon_anim.h **** static HSV RAINBOW_BEACON_math(HSV hsv, int8_t sin, int8_t cos, uint8_t i, uint8_t time) {
 915               		.loc 13 5 90 is_stmt 1 view -0
 916               		.cfi_startproc
 917               		.loc 13 5 90 is_stmt 0 view .LVU220
 918 0000 0F93      		push r16
 919               	.LCFI7:
 920               		.cfi_def_cfa_offset 3
 921               		.cfi_offset 16, -2
 922 0002 1F93      		push r17
 923               	.LCFI8:
 924               		.cfi_def_cfa_offset 4
 925               		.cfi_offset 17, -3
 926               	/* prologue: function */
 927               	/* frame size = 0 */
 928               	/* stack size = 2 */
 929               	.L__stack_usage = 2
 930 0004 522F      		mov r21,r18
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 931               		.loc 13 6 5 is_stmt 1 view .LVU221
 932               		.loc 13 6 37 is_stmt 0 view .LVU222
 933 0006 10E0      		ldi r17,0
   7:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     return hsv;
 934               		.loc 13 7 5 is_stmt 1 view .LVU223
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 935               		.loc 13 6 37 is_stmt 0 view .LVU224
 936 0008 F801      		movw r30,r16
 937 000a EE0F      		lsl r30
 938 000c FF1F      		rol r31
 939               	.LVL70:
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 940               		.loc 13 6 37 view .LVU225
 941 000e E050      		subi r30,lo8(-(g_led_config))
 942 0010 F040      		sbci r31,hi8(-(g_led_config))
 943 0012 A1A9      		ldd r26,Z+49
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 944               		.loc 13 6 40 view .LVU226
 945 0014 A052      		subi r26,32
 946 0016 BB0B      		sbc r27,r27
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 947               		.loc 13 6 69 view .LVU227
 948 0018 9D01      		movw r18,r26
 949 001a 5203      		mulsu r21,r18
 950 001c F001      		movw r30,r0
 951 001e 539F      		mul r21,r19
 952 0020 F00D      		add r31,r0
 953 0022 1124      		clr __zero_reg__
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 954               		.loc 13 6 99 view .LVU228
 955 0024 000F      		lsl r16
 956 0026 111F      		rol r17
 957               	.LVL71:
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 958               		.loc 13 6 99 view .LVU229
 959 0028 D801      		movw r26,r16
 960 002a A050      		subi r26,lo8(-(g_led_config+48))
 961 002c B040      		sbci r27,hi8(-(g_led_config+48))
 962 002e 0C91      		ld r16,X
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 963               		.loc 13 6 102 view .LVU230
 964 0030 0057      		subi r16,112
 965 0032 110B      		sbc r17,r17
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 966               		.loc 13 6 131 view .LVU231
 967 0034 4003      		mulsu r20,r16
 968 0036 9001      		movw r18,r0
 969 0038 419F      		mul r20,r17
 970 003a 300D      		add r19,r0
 971 003c 1124      		clr __zero_reg__
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 972               		.loc 13 6 75 view .LVU232
 973 003e 2E0F      		add r18,r30
 974 0040 3F1F      		adc r19,r31
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 975               		.loc 13 6 138 view .LVU233
 976 0042 37FF      		sbrs r19,7
 977 0044 00C0      		rjmp .L35
 978 0046 215C      		subi r18,-63
 979 0048 3F4F      		sbci r19,-1
 980               	.L35:
 981 004a 96E0      		ldi r25,6
 982               		1:
 983 004c 3595      		asr r19
 984 004e 2795      		ror r18
 985 0050 9A95      		dec r25
 986 0052 01F4      		brne 1b
   6:quantum/rgb_matrix_animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 987               		.loc 13 6 11 view .LVU234
 988 0054 620F      		add r22,r18
 989               	.LVL72:
 990               	/* epilogue start */
   8:quantum/rgb_matrix_animations/rainbow_beacon_anim.h **** }
 991               		.loc 13 8 1 view .LVU235
 992 0056 1F91      		pop r17
 993               	.LVL73:
 994               		.loc 13 8 1 view .LVU236
 995 0058 0F91      		pop r16
 996               	.LVL74:
 997               		.loc 13 8 1 view .LVU237
 998 005a 0895      		ret
 999               		.cfi_endproc
 1000               	.LFE225:
 1002               		.section	.text.RAINBOW_PINWHEELS_math,"ax",@progbits
 1004               	RAINBOW_PINWHEELS_math:
 1005               	.LVL75:
 1006               	.LFB227:
 1007               		.file 14 "quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h"
   1:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h **** #ifndef DISABLE_RGB_MATRIX_RAINBOW_PINWHEELS
   2:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h **** RGB_MATRIX_EFFECT(RAINBOW_PINWHEELS)
   3:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h **** 
   5:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h **** static HSV RAINBOW_PINWHEELS_math(HSV hsv, int8_t sin, int8_t cos, uint8_t i, uint8_t time) {
 1008               		.loc 14 5 93 is_stmt 1 view -0
 1009               		.cfi_startproc
 1010               		.loc 14 5 93 is_stmt 0 view .LVU239
 1011 0000 0F93      		push r16
 1012               	.LCFI9:
 1013               		.cfi_def_cfa_offset 3
 1014               		.cfi_offset 16, -2
 1015 0002 1F93      		push r17
 1016               	.LCFI10:
 1017               		.cfi_def_cfa_offset 4
 1018               		.cfi_offset 17, -3
 1019               	/* prologue: function */
 1020               	/* frame size = 0 */
 1021               	/* stack size = 2 */
 1022               	.L__stack_usage = 2
   6:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 3 * cos + (56 - abs8(g_led_config
 1023               		.loc 14 6 5 is_stmt 1 view .LVU240
 1024               		.loc 14 6 37 is_stmt 0 view .LVU241
 1025 0004 10E0      		ldi r17,0
 1026               		.loc 14 6 109 view .LVU242
 1027 0006 F801      		movw r30,r16
 1028 0008 EE0F      		lsl r30
 1029 000a FF1F      		rol r31
 1030 000c E050      		subi r30,lo8(-(g_led_config+48))
 1031 000e F040      		sbci r31,hi8(-(g_led_config+48))
 1032               		.loc 14 6 112 view .LVU243
 1033 0010 9081      		ld r25,Z
 1034 0012 9057      		subi r25,lo8(-(-112))
 1035               	.LVL76:
 1036               	.LBB76:
 1037               	.LBI76:
 404:./lib/lib8tion/math8.h **** {
 1038               		.loc 2 404 33 is_stmt 1 view .LVU244
 1039               	.LBB77:
 412:./lib/lib8tion/math8.h ****          /* First, check the high bit, and prepare to skip if it's clear */
 1040               		.loc 2 412 5 view .LVU245
 1041               	/* #APP */
 1042               	 ;  412 "./lib/lib8tion/math8.h" 1
 1043 0014 97FD      		sbrc r25, 7 
 1044 0016 9195      	neg r25     
 1045               	
 1046               	 ;  0 "" 2
 1047               	.LVL77:
 420:./lib/lib8tion/math8.h **** #else
 1048               		.loc 2 420 5 view .LVU246
 420:./lib/lib8tion/math8.h **** #else
 1049               		.loc 2 420 5 is_stmt 0 view .LVU247
 1050               	/* #NOAPP */
 1051               	.LBE77:
 1052               	.LBE76:
   7:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h ****     return hsv;
 1053               		.loc 14 7 5 is_stmt 1 view .LVU248
   6:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h ****     return hsv;
 1054               		.loc 14 6 37 is_stmt 0 view .LVU249
 1055 0018 000F      		lsl r16
 1056 001a 111F      		rol r17
 1057               	.LVL78:
   6:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h ****     return hsv;
 1058               		.loc 14 6 37 view .LVU250
 1059 001c F801      		movw r30,r16
 1060 001e E050      		subi r30,lo8(-(g_led_config))
 1061 0020 F040      		sbci r31,hi8(-(g_led_config))
 1062 0022 01A9      		ldd r16,Z+49
   6:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h ****     return hsv;
 1063               		.loc 14 6 40 view .LVU251
 1064 0024 0052      		subi r16,32
 1065 0026 110B      		sbc r17,r17
   6:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h ****     return hsv;
 1066               		.loc 14 6 69 view .LVU252
 1067 0028 2003      		mulsu r18,r16
 1068 002a F001      		movw r30,r0
 1069 002c 219F      		mul r18,r17
 1070 002e F00D      		add r31,r0
 1071 0030 1124      		clr __zero_reg__
   6:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h ****     return hsv;
 1072               		.loc 14 6 81 view .LVU253
 1073 0032 08E3      		ldi r16,lo8(56)
 1074 0034 10E0      		ldi r17,0
 1075 0036 091B      		sub r16,r25
 1076 0038 1109      		sbc r17,__zero_reg__
 1077 003a 97FD      		sbrc r25,7
 1078 003c 1395      		inc r17
   6:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h ****     return hsv;
 1079               		.loc 14 6 142 view .LVU254
 1080 003e 4003      		mulsu r20,r16
 1081 0040 9001      		movw r18,r0
 1082 0042 419F      		mul r20,r17
 1083 0044 300D      		add r19,r0
 1084 0046 1124      		clr __zero_reg__
 1085               	.LVL79:
   6:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h ****     return hsv;
 1086               		.loc 14 6 75 view .LVU255
 1087 0048 E20F      		add r30,r18
 1088 004a F31F      		adc r31,r19
 1089 004c 9F01      		movw r18,r30
 1090 004e 220F      		lsl r18
 1091 0050 331F      		rol r19
 1092 0052 2E0F      		add r18,r30
 1093 0054 3F1F      		adc r19,r31
   6:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h ****     return hsv;
 1094               		.loc 14 6 149 view .LVU256
 1095 0056 37FF      		sbrs r19,7
 1096 0058 00C0      		rjmp .L37
 1097 005a 2158      		subi r18,-127
 1098 005c 3F4F      		sbci r19,-1
 1099               	.L37:
 1100 005e 220F      		lsl r18
 1101 0060 232F      		mov r18,r19
 1102 0062 221F      		rol r18
 1103 0064 330B      		sbc r19,r19
   6:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h ****     return hsv;
 1104               		.loc 14 6 11 view .LVU257
 1105 0066 620F      		add r22,r18
 1106               	.LVL80:
 1107               	/* epilogue start */
   8:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h **** }
 1108               		.loc 14 8 1 view .LVU258
 1109 0068 1F91      		pop r17
 1110               	.LVL81:
 1111               		.loc 14 8 1 view .LVU259
 1112 006a 0F91      		pop r16
 1113               	.LVL82:
 1114               		.loc 14 8 1 view .LVU260
 1115 006c 0895      		ret
 1116               		.cfi_endproc
 1117               	.LFE227:
 1119               		.section	.text.atan2_8,"ax",@progbits
 1121               	atan2_8:
 1122               	.LVL83:
 1123               	.LFB160:
 208:./lib/lib8tion/trig8.h **** 
 209:./lib/lib8tion/trig8.h **** 
 210:./lib/lib8tion/trig8.h **** /// Fast 8-bit approximation of sin(x). This approximation never varies more than
 211:./lib/lib8tion/trig8.h **** /// 2% from the floating point value you'd get by doing
 212:./lib/lib8tion/trig8.h **** ///
 213:./lib/lib8tion/trig8.h **** ///     float s = (sin(x) * 128.0) + 128;
 214:./lib/lib8tion/trig8.h **** ///
 215:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-255
 216:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between 0 and 255
 217:./lib/lib8tion/trig8.h **** LIB8STATIC uint8_t sin8_C( uint8_t theta)
 218:./lib/lib8tion/trig8.h **** {
 219:./lib/lib8tion/trig8.h ****     uint8_t offset = theta;
 220:./lib/lib8tion/trig8.h ****     if( theta & 0x40 ) {
 221:./lib/lib8tion/trig8.h ****         offset = (uint8_t)255 - offset;
 222:./lib/lib8tion/trig8.h ****     }
 223:./lib/lib8tion/trig8.h ****     offset &= 0x3F; // 0..63
 224:./lib/lib8tion/trig8.h **** 
 225:./lib/lib8tion/trig8.h ****     uint8_t secoffset  = offset & 0x0F; // 0..15
 226:./lib/lib8tion/trig8.h ****     if( theta & 0x40) secoffset++;
 227:./lib/lib8tion/trig8.h **** 
 228:./lib/lib8tion/trig8.h ****     uint8_t section = offset >> 4; // 0..3
 229:./lib/lib8tion/trig8.h ****     uint8_t s2 = section * 2;
 230:./lib/lib8tion/trig8.h ****     const uint8_t* p = b_m16_interleave;
 231:./lib/lib8tion/trig8.h ****     p += s2;
 232:./lib/lib8tion/trig8.h ****     uint8_t b   =  *p;
 233:./lib/lib8tion/trig8.h ****     p++;
 234:./lib/lib8tion/trig8.h ****     uint8_t m16 =  *p;
 235:./lib/lib8tion/trig8.h **** 
 236:./lib/lib8tion/trig8.h ****     uint8_t mx = (m16 * secoffset) >> 4;
 237:./lib/lib8tion/trig8.h **** 
 238:./lib/lib8tion/trig8.h ****     int8_t y = mx + b;
 239:./lib/lib8tion/trig8.h ****     if( theta & 0x80 ) y = -y;
 240:./lib/lib8tion/trig8.h **** 
 241:./lib/lib8tion/trig8.h ****     y += 128;
 242:./lib/lib8tion/trig8.h **** 
 243:./lib/lib8tion/trig8.h ****     return y;
 244:./lib/lib8tion/trig8.h **** }
 245:./lib/lib8tion/trig8.h **** 
 246:./lib/lib8tion/trig8.h **** /// Fast 8-bit approximation of cos(x). This approximation never varies more than
 247:./lib/lib8tion/trig8.h **** /// 2% from the floating point value you'd get by doing
 248:./lib/lib8tion/trig8.h **** ///
 249:./lib/lib8tion/trig8.h **** ///     float s = (cos(x) * 128.0) + 128;
 250:./lib/lib8tion/trig8.h **** ///
 251:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-255
 252:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between 0 and 255
 253:./lib/lib8tion/trig8.h **** LIB8STATIC uint8_t cos8( uint8_t theta)
 254:./lib/lib8tion/trig8.h **** {
 255:./lib/lib8tion/trig8.h ****     return sin8( theta + 64);
 256:./lib/lib8tion/trig8.h **** }
 257:./lib/lib8tion/trig8.h **** 
 258:./lib/lib8tion/trig8.h **** /// Fast 16-bit approximation of atan2(x).
 259:./lib/lib8tion/trig8.h **** /// @returns atan2, value between 0 and 255
 260:./lib/lib8tion/trig8.h **** LIB8STATIC uint8_t atan2_8(int16_t dy, int16_t dx)
 261:./lib/lib8tion/trig8.h **** {
 1124               		.loc 3 261 1 is_stmt 1 view -0
 1125               		.cfi_startproc
 1126               	/* prologue: function */
 1127               	/* frame size = 0 */
 1128               	/* stack size = 0 */
 1129               	.L__stack_usage = 0
 1130               		.loc 3 261 1 is_stmt 0 view .LVU262
 1131 0000 FC01      		movw r30,r24
 1132 0002 9B01      		movw r18,r22
 262:./lib/lib8tion/trig8.h ****     if (dy == 0)
 1133               		.loc 3 262 5 is_stmt 1 view .LVU263
 1134               		.loc 3 262 8 is_stmt 0 view .LVU264
 1135 0004 0097      		sbiw r24,0
 1136 0006 01F4      		brne .L39
 263:./lib/lib8tion/trig8.h ****     {
 264:./lib/lib8tion/trig8.h ****         if (dx >= 0)
 1137               		.loc 3 264 9 is_stmt 1 view .LVU265
 265:./lib/lib8tion/trig8.h ****             return 0;
 1138               		.loc 3 265 20 is_stmt 0 view .LVU266
 1139 0008 80E0      		ldi r24,0
 1140               	.LVL84:
 264:./lib/lib8tion/trig8.h ****             return 0;
 1141               		.loc 3 264 12 view .LVU267
 1142 000a 77FF      		sbrs r23,7
 1143 000c 00C0      		rjmp .L38
 266:./lib/lib8tion/trig8.h ****         else
 267:./lib/lib8tion/trig8.h ****             return 128;
 1144               		.loc 3 267 20 view .LVU268
 1145 000e 80E8      		ldi r24,lo8(-128)
 1146 0010 0895      		ret
 1147               	.LVL85:
 1148               	.L39:
 1149               	.LBB80:
 1150               	.LBI80:
 260:./lib/lib8tion/trig8.h **** {
 1151               		.loc 3 260 20 is_stmt 1 view .LVU269
 1152               	.LBB81:
 268:./lib/lib8tion/trig8.h ****     }
 269:./lib/lib8tion/trig8.h **** 
 270:./lib/lib8tion/trig8.h ****     int16_t abs_y = dy > 0 ? dy : -dy;
 1153               		.loc 3 270 5 view .LVU270
 1154               		.loc 3 270 13 is_stmt 0 view .LVU271
 1155 0012 AC01      		movw r20,r24
 1156 0014 97FF      		sbrs r25,7
 1157 0016 00C0      		rjmp .L41
 1158               	.LVL86:
 1159               		.loc 3 270 13 view .LVU272
 1160 0018 4427      		clr r20
 1161 001a 5527      		clr r21
 1162 001c 481B      		sub r20,r24
 1163 001e 590B      		sbc r21,r25
 1164               	.LVL87:
 1165               	.L41:
 271:./lib/lib8tion/trig8.h ****     int8_t a;
 1166               		.loc 3 271 5 is_stmt 1 view .LVU273
 272:./lib/lib8tion/trig8.h **** 
 273:./lib/lib8tion/trig8.h ****     if (dx >= 0)
 1167               		.loc 3 273 5 view .LVU274
 1168 0020 B901      		movw r22,r18
 1169               	.LVL88:
 1170               		.loc 3 273 5 is_stmt 0 view .LVU275
 1171 0022 640F      		add r22,r20
 1172 0024 751F      		adc r23,r21
 1173               		.loc 3 273 8 view .LVU276
 1174 0026 37FD      		sbrc r19,7
 1175 0028 00C0      		rjmp .L42
 274:./lib/lib8tion/trig8.h ****         a = 32 - (32 * (dx - abs_y) / (dx + abs_y));
 1176               		.loc 3 274 9 is_stmt 1 view .LVU277
 1177               		.loc 3 274 28 is_stmt 0 view .LVU278
 1178 002a 241B      		sub r18,r20
 1179 002c 350B      		sbc r19,r21
 1180               	.LVL89:
 1181               		.loc 3 274 22 view .LVU279
 1182 002e C901      		movw r24,r18
 1183               	.LVL90:
 1184               		.loc 3 274 22 view .LVU280
 1185 0030 A5E0      		ldi r26,5
 1186               		1:
 1187 0032 880F      		lsl r24
 1188 0034 991F      		rol r25
 1189 0036 AA95      		dec r26
 1190 0038 01F4      		brne 1b
 1191               		.loc 3 274 37 view .LVU281
 1192 003a 0E94 0000 		call __divmodhi4
 1193               		.loc 3 274 16 view .LVU282
 1194 003e 80E2      		ldi r24,lo8(32)
 1195               	.L45:
 275:./lib/lib8tion/trig8.h ****     else
 276:./lib/lib8tion/trig8.h ****         a = 96 - (32 * (dx + abs_y) / (abs_y - dx));
 1196               		.loc 3 276 16 view .LVU283
 1197 0040 861B      		sub r24,r22
 1198               	.LVL91:
 277:./lib/lib8tion/trig8.h **** 
 278:./lib/lib8tion/trig8.h ****     if (dy < 0)
 1199               		.loc 3 278 5 is_stmt 1 view .LVU284
 1200               		.loc 3 278 8 is_stmt 0 view .LVU285
 1201 0042 F7FF      		sbrs r31,7
 1202 0044 00C0      		rjmp .L38
 279:./lib/lib8tion/trig8.h ****         return -a;     // negate if in quad III or IV
 1203               		.loc 3 279 9 is_stmt 1 view .LVU286
 1204               		.loc 3 279 16 is_stmt 0 view .LVU287
 1205 0046 8195      		neg r24
 1206               	.LVL92:
 1207               		.loc 3 279 16 view .LVU288
 1208 0048 0895      		ret
 1209               	.LVL93:
 1210               	.L42:
 276:./lib/lib8tion/trig8.h **** 
 1211               		.loc 3 276 9 is_stmt 1 view .LVU289
 276:./lib/lib8tion/trig8.h **** 
 1212               		.loc 3 276 22 is_stmt 0 view .LVU290
 1213 004a CB01      		movw r24,r22
 1214               	.LVL94:
 276:./lib/lib8tion/trig8.h **** 
 1215               		.loc 3 276 22 view .LVU291
 1216 004c 65E0      		ldi r22,5
 1217               		1:
 1218 004e 880F      		lsl r24
 1219 0050 991F      		rol r25
 1220 0052 6A95      		dec r22
 1221 0054 01F4      		brne 1b
 276:./lib/lib8tion/trig8.h **** 
 1222               		.loc 3 276 46 view .LVU292
 1223 0056 BA01      		movw r22,r20
 1224 0058 621B      		sub r22,r18
 1225 005a 730B      		sbc r23,r19
 276:./lib/lib8tion/trig8.h **** 
 1226               		.loc 3 276 37 view .LVU293
 1227 005c 0E94 0000 		call __divmodhi4
 276:./lib/lib8tion/trig8.h **** 
 1228               		.loc 3 276 16 view .LVU294
 1229 0060 80E6      		ldi r24,lo8(96)
 1230 0062 00C0      		rjmp .L45
 1231               	.LVL95:
 1232               	.L38:
 1233               	/* epilogue start */
 276:./lib/lib8tion/trig8.h **** 
 1234               		.loc 3 276 16 view .LVU295
 1235               	.LBE81:
 1236               	.LBE80:
 280:./lib/lib8tion/trig8.h ****     return a;
 281:./lib/lib8tion/trig8.h **** }
 1237               		.loc 3 281 1 view .LVU296
 1238 0064 0895      		ret
 1239               		.cfi_endproc
 1240               	.LFE160:
 1242               		.section	.text.BAND_PINWHEEL_SAT_math,"ax",@progbits
 1244               	BAND_PINWHEEL_SAT_math:
 1245               	.LVL96:
 1246               	.LFB199:
 1247               		.file 15 "quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h"
   1:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_PINWHEEL_SAT
   2:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h **** RGB_MATRIX_EFFECT(BAND_PINWHEEL_SAT)
   3:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h **** 
   5:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h **** static HSV BAND_PINWHEEL_SAT_math(HSV hsv, int16_t dx, int16_t dy, uint8_t time) {
 1248               		.loc 15 5 82 is_stmt 1 view -0
 1249               		.cfi_startproc
 1250               		.loc 15 5 82 is_stmt 0 view .LVU298
 1251 0000 0F93      		push r16
 1252               	.LCFI11:
 1253               		.cfi_def_cfa_offset 3
 1254               		.cfi_offset 16, -2
 1255 0002 1F93      		push r17
 1256               	.LCFI12:
 1257               		.cfi_def_cfa_offset 4
 1258               		.cfi_offset 17, -3
 1259 0004 CF93      		push r28
 1260               	.LCFI13:
 1261               		.cfi_def_cfa_offset 5
 1262               		.cfi_offset 28, -4
 1263 0006 DF93      		push r29
 1264               	.LCFI14:
 1265               		.cfi_def_cfa_offset 6
 1266               		.cfi_offset 29, -5
 1267               	/* prologue: function */
 1268               	/* frame size = 0 */
 1269               	/* stack size = 4 */
 1270               	.L__stack_usage = 4
 1271 0008 D62F      		mov r29,r22
 1272               		.loc 15 5 82 view .LVU299
 1273 000a 172F      		mov r17,r23
 1274               		.loc 15 5 82 view .LVU300
 1275 000c C82F      		mov r28,r24
 1276 000e C901      		movw r24,r18
   6:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h ****     hsv.s = scale8(hsv.s - time - atan2_8(dy, dx) * 3, hsv.s);
 1277               		.loc 15 6 5 is_stmt 1 view .LVU301
 1278               		.loc 15 6 26 is_stmt 0 view .LVU302
 1279 0010 272F      		mov r18,r23
 1280               	.LVL97:
 1281               		.loc 15 6 26 view .LVU303
 1282 0012 201B      		sub r18,r16
 1283 0014 022F      		mov r16,r18
 1284               	.LVL98:
 1285               		.loc 15 6 35 view .LVU304
 1286 0016 BA01      		movw r22,r20
 1287               	.LVL99:
 1288               		.loc 15 6 35 view .LVU305
 1289 0018 0E94 0000 		call atan2_8
 1290               	.LVL100:
 1291               	.LBB82:
 1292               	.LBI82:
  20:./lib/lib8tion/scale8.h **** {
 1293               		.loc 1 20 34 is_stmt 1 view .LVU306
 1294               	.LBB83:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 1295               		.loc 1 61 5 view .LVU307
 1296               	.LBE83:
 1297               	.LBE82:
 1298               		.loc 15 6 13 is_stmt 0 view .LVU308
 1299 001c 982F      		mov r25,r24
 1300 001e 990F      		lsl r25
 1301 0020 990F      		lsl r25
 1302 0022 782F      		mov r23,r24
 1303 0024 791B      		sub r23,r25
 1304 0026 700F      		add r23,r16
 1305               	.LBB85:
 1306               	.LBB84:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 1307               		.loc 1 61 5 view .LVU309
 1308               	/* #APP */
 1309               	 ;  61 "./lib/lib8tion/scale8.h" 1
 1310 0028 719F      		mul r23, r17          
 1311 002a 712D      		mov r23, r1          
 1312 002c 1124      		clr __zero_reg__    
 1313               		
 1314               	 ;  0 "" 2
 1315               	.LVL101:
  85:./lib/lib8tion/scale8.h **** #endif
 1316               		.loc 1 85 5 is_stmt 1 view .LVU310
  85:./lib/lib8tion/scale8.h **** #endif
 1317               		.loc 1 85 5 is_stmt 0 view .LVU311
 1318               	/* #NOAPP */
 1319               	.LBE84:
 1320               	.LBE85:
   7:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h ****     return hsv;
 1321               		.loc 15 7 5 is_stmt 1 view .LVU312
   8:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h **** }
 1322               		.loc 15 8 1 is_stmt 0 view .LVU313
 1323 002e 6D2F      		mov r22,r29
 1324 0030 8C2F      		mov r24,r28
 1325               	/* epilogue start */
 1326 0032 DF91      		pop r29
 1327               	.LVL102:
 1328               		.loc 15 8 1 view .LVU314
 1329 0034 CF91      		pop r28
 1330               		.loc 15 8 1 view .LVU315
 1331 0036 1F91      		pop r17
 1332               	.LVL103:
 1333               		.loc 15 8 1 view .LVU316
 1334 0038 0F91      		pop r16
 1335 003a 0895      		ret
 1336               		.cfi_endproc
 1337               	.LFE199:
 1339               		.section	.text.BAND_PINWHEEL_VAL_math,"ax",@progbits
 1341               	BAND_PINWHEEL_VAL_math:
 1342               	.LVL104:
 1343               	.LFB201:
 1344               		.file 16 "quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h"
   1:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_PINWHEEL_VAL
   2:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h **** RGB_MATRIX_EFFECT(BAND_PINWHEEL_VAL)
   3:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h **** 
   5:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h **** static HSV BAND_PINWHEEL_VAL_math(HSV hsv, int16_t dx, int16_t dy, uint8_t time) {
 1345               		.loc 16 5 82 is_stmt 1 view -0
 1346               		.cfi_startproc
 1347               		.loc 16 5 82 is_stmt 0 view .LVU318
 1348 0000 0F93      		push r16
 1349               	.LCFI15:
 1350               		.cfi_def_cfa_offset 3
 1351               		.cfi_offset 16, -2
 1352 0002 1F93      		push r17
 1353               	.LCFI16:
 1354               		.cfi_def_cfa_offset 4
 1355               		.cfi_offset 17, -3
 1356 0004 CF93      		push r28
 1357               	.LCFI17:
 1358               		.cfi_def_cfa_offset 5
 1359               		.cfi_offset 28, -4
 1360 0006 DF93      		push r29
 1361               	.LCFI18:
 1362               		.cfi_def_cfa_offset 6
 1363               		.cfi_offset 29, -5
 1364               	/* prologue: function */
 1365               	/* frame size = 0 */
 1366               	/* stack size = 4 */
 1367               	.L__stack_usage = 4
 1368 0008 D62F      		mov r29,r22
 1369               		.loc 16 5 82 view .LVU319
 1370 000a C72F      		mov r28,r23
 1371               		.loc 16 5 82 view .LVU320
 1372 000c 182F      		mov r17,r24
 1373 000e C901      		movw r24,r18
   6:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h ****     hsv.v = scale8(hsv.v - time - atan2_8(dy, dx) * 3, hsv.v);
 1374               		.loc 16 6 5 is_stmt 1 view .LVU321
 1375               		.loc 16 6 26 is_stmt 0 view .LVU322
 1376 0010 212F      		mov r18,r17
 1377               	.LVL105:
 1378               		.loc 16 6 26 view .LVU323
 1379 0012 201B      		sub r18,r16
 1380 0014 022F      		mov r16,r18
 1381               	.LVL106:
 1382               		.loc 16 6 35 view .LVU324
 1383 0016 BA01      		movw r22,r20
 1384               	.LVL107:
 1385               		.loc 16 6 35 view .LVU325
 1386 0018 0E94 0000 		call atan2_8
 1387               	.LVL108:
 1388               	.LBB86:
 1389               	.LBI86:
  20:./lib/lib8tion/scale8.h **** {
 1390               		.loc 1 20 34 is_stmt 1 view .LVU326
 1391               	.LBB87:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 1392               		.loc 1 61 5 view .LVU327
 1393               	.LBE87:
 1394               	.LBE86:
 1395               		.loc 16 6 13 is_stmt 0 view .LVU328
 1396 001c 982F      		mov r25,r24
 1397 001e 990F      		lsl r25
 1398 0020 990F      		lsl r25
 1399 0022 891B      		sub r24,r25
 1400               	.LVL109:
 1401               		.loc 16 6 13 view .LVU329
 1402 0024 800F      		add r24,r16
 1403               	.LBB89:
 1404               	.LBB88:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 1405               		.loc 1 61 5 view .LVU330
 1406 0026 282F      		mov r18,r24
 1407               	/* #APP */
 1408               	 ;  61 "./lib/lib8tion/scale8.h" 1
 1409 0028 219F      		mul r18, r17          
 1410 002a 212D      		mov r18, r1          
 1411 002c 1124      		clr __zero_reg__    
 1412               		
 1413               	 ;  0 "" 2
 1414               	/* #NOAPP */
 1415 002e 822F      		mov r24,r18
 1416               	.LVL110:
  85:./lib/lib8tion/scale8.h **** #endif
 1417               		.loc 1 85 5 is_stmt 1 view .LVU331
  85:./lib/lib8tion/scale8.h **** #endif
 1418               		.loc 1 85 5 is_stmt 0 view .LVU332
 1419               	.LBE88:
 1420               	.LBE89:
   7:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h ****     return hsv;
 1421               		.loc 16 7 5 is_stmt 1 view .LVU333
   8:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h **** }
 1422               		.loc 16 8 1 is_stmt 0 view .LVU334
 1423 0030 6D2F      		mov r22,r29
 1424 0032 7C2F      		mov r23,r28
 1425               	/* epilogue start */
 1426 0034 DF91      		pop r29
 1427               	.LVL111:
 1428               		.loc 16 8 1 view .LVU335
 1429 0036 CF91      		pop r28
 1430               		.loc 16 8 1 view .LVU336
 1431 0038 1F91      		pop r17
 1432               	.LVL112:
 1433               		.loc 16 8 1 view .LVU337
 1434 003a 0F91      		pop r16
 1435 003c 0895      		ret
 1436               		.cfi_endproc
 1437               	.LFE201:
 1439               		.section	.text.BAND_SPIRAL_SAT_math,"ax",@progbits
 1441               	BAND_SPIRAL_SAT_math:
 1442               	.LVL113:
 1443               	.LFB203:
 1444               		.file 17 "quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h"
   1:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_SPIRAL_SAT
   2:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h **** RGB_MATRIX_EFFECT(BAND_SPIRAL_SAT)
   3:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h **** 
   5:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h **** static HSV BAND_SPIRAL_SAT_math(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint8_t time) {
 1445               		.loc 17 5 94 is_stmt 1 view -0
 1446               		.cfi_startproc
 1447               		.loc 17 5 94 is_stmt 0 view .LVU339
 1448 0000 EF92      		push r14
 1449               	.LCFI19:
 1450               		.cfi_def_cfa_offset 3
 1451               		.cfi_offset 14, -2
 1452 0002 0F93      		push r16
 1453               	.LCFI20:
 1454               		.cfi_def_cfa_offset 4
 1455               		.cfi_offset 16, -3
 1456 0004 1F93      		push r17
 1457               	.LCFI21:
 1458               		.cfi_def_cfa_offset 5
 1459               		.cfi_offset 17, -4
 1460 0006 CF93      		push r28
 1461               	.LCFI22:
 1462               		.cfi_def_cfa_offset 6
 1463               		.cfi_offset 28, -5
 1464 0008 DF93      		push r29
 1465               	.LCFI23:
 1466               		.cfi_def_cfa_offset 7
 1467               		.cfi_offset 29, -6
 1468               	/* prologue: function */
 1469               	/* frame size = 0 */
 1470               	/* stack size = 5 */
 1471               	.L__stack_usage = 5
 1472 000a D62F      		mov r29,r22
 1473               		.loc 17 5 94 view .LVU340
 1474 000c 172F      		mov r17,r23
 1475               		.loc 17 5 94 view .LVU341
 1476 000e C82F      		mov r28,r24
 1477 0010 C901      		movw r24,r18
   6:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h ****     hsv.s = scale8(hsv.s + dist - time - atan2_8(dy, dx), hsv.s);
 1478               		.loc 17 6 5 is_stmt 1 view .LVU342
 1479               		.loc 17 6 33 is_stmt 0 view .LVU343
 1480 0012 0E19      		sub r16,r14
 1481               	.LVL114:
 1482               		.loc 17 6 33 view .LVU344
 1483 0014 070F      		add r16,r23
 1484               		.loc 17 6 42 view .LVU345
 1485 0016 BA01      		movw r22,r20
 1486               	.LVL115:
 1487               		.loc 17 6 42 view .LVU346
 1488 0018 0E94 0000 		call atan2_8
 1489               	.LVL116:
 1490               	.LBB90:
 1491               	.LBI90:
  20:./lib/lib8tion/scale8.h **** {
 1492               		.loc 1 20 34 is_stmt 1 view .LVU347
 1493               	.LBB91:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 1494               		.loc 1 61 5 view .LVU348
 1495               	.LBE91:
 1496               	.LBE90:
 1497               		.loc 17 6 13 is_stmt 0 view .LVU349
 1498 001c 702F      		mov r23,r16
 1499 001e 781B      		sub r23,r24
 1500               	.LVL117:
 1501               	.LBB93:
 1502               	.LBB92:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 1503               		.loc 1 61 5 view .LVU350
 1504               	/* #APP */
 1505               	 ;  61 "./lib/lib8tion/scale8.h" 1
 1506 0020 719F      		mul r23, r17          
 1507 0022 712D      		mov r23, r1          
 1508 0024 1124      		clr __zero_reg__    
 1509               		
 1510               	 ;  0 "" 2
 1511               	.LVL118:
  85:./lib/lib8tion/scale8.h **** #endif
 1512               		.loc 1 85 5 is_stmt 1 view .LVU351
  85:./lib/lib8tion/scale8.h **** #endif
 1513               		.loc 1 85 5 is_stmt 0 view .LVU352
 1514               	/* #NOAPP */
 1515               	.LBE92:
 1516               	.LBE93:
   7:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h ****     return hsv;
 1517               		.loc 17 7 5 is_stmt 1 view .LVU353
   8:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h **** }
 1518               		.loc 17 8 1 is_stmt 0 view .LVU354
 1519 0026 6D2F      		mov r22,r29
 1520 0028 8C2F      		mov r24,r28
 1521               	/* epilogue start */
 1522 002a DF91      		pop r29
 1523               	.LVL119:
 1524               		.loc 17 8 1 view .LVU355
 1525 002c CF91      		pop r28
 1526               		.loc 17 8 1 view .LVU356
 1527 002e 1F91      		pop r17
 1528               	.LVL120:
 1529               		.loc 17 8 1 view .LVU357
 1530 0030 0F91      		pop r16
 1531 0032 EF90      		pop r14
 1532               	.LVL121:
 1533               		.loc 17 8 1 view .LVU358
 1534 0034 0895      		ret
 1535               		.cfi_endproc
 1536               	.LFE203:
 1538               		.section	.text.BAND_SPIRAL_VAL_math,"ax",@progbits
 1540               	BAND_SPIRAL_VAL_math:
 1541               	.LVL122:
 1542               	.LFB205:
 1543               		.file 18 "quantum/rgb_matrix_animations/colorband_spiral_val_anim.h"
   1:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_SPIRAL_VAL
   2:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h **** RGB_MATRIX_EFFECT(BAND_SPIRAL_VAL)
   3:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h **** 
   5:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h **** static HSV BAND_SPIRAL_VAL_math(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint8_t time) {
 1544               		.loc 18 5 94 is_stmt 1 view -0
 1545               		.cfi_startproc
 1546               		.loc 18 5 94 is_stmt 0 view .LVU360
 1547 0000 EF92      		push r14
 1548               	.LCFI24:
 1549               		.cfi_def_cfa_offset 3
 1550               		.cfi_offset 14, -2
 1551 0002 0F93      		push r16
 1552               	.LCFI25:
 1553               		.cfi_def_cfa_offset 4
 1554               		.cfi_offset 16, -3
 1555 0004 1F93      		push r17
 1556               	.LCFI26:
 1557               		.cfi_def_cfa_offset 5
 1558               		.cfi_offset 17, -4
 1559 0006 CF93      		push r28
 1560               	.LCFI27:
 1561               		.cfi_def_cfa_offset 6
 1562               		.cfi_offset 28, -5
 1563 0008 DF93      		push r29
 1564               	.LCFI28:
 1565               		.cfi_def_cfa_offset 7
 1566               		.cfi_offset 29, -6
 1567               	/* prologue: function */
 1568               	/* frame size = 0 */
 1569               	/* stack size = 5 */
 1570               	.L__stack_usage = 5
 1571 000a D62F      		mov r29,r22
 1572               		.loc 18 5 94 view .LVU361
 1573 000c C72F      		mov r28,r23
 1574               		.loc 18 5 94 view .LVU362
 1575 000e 182F      		mov r17,r24
 1576 0010 C901      		movw r24,r18
   6:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h ****     hsv.v = scale8(hsv.v + dist - time - atan2_8(dy, dx), hsv.v);
 1577               		.loc 18 6 5 is_stmt 1 view .LVU363
 1578               		.loc 18 6 33 is_stmt 0 view .LVU364
 1579 0012 0E19      		sub r16,r14
 1580               	.LVL123:
 1581               		.loc 18 6 33 view .LVU365
 1582 0014 010F      		add r16,r17
 1583               		.loc 18 6 42 view .LVU366
 1584 0016 BA01      		movw r22,r20
 1585               	.LVL124:
 1586               		.loc 18 6 42 view .LVU367
 1587 0018 0E94 0000 		call atan2_8
 1588               	.LVL125:
 1589               	.LBB94:
 1590               	.LBI94:
  20:./lib/lib8tion/scale8.h **** {
 1591               		.loc 1 20 34 is_stmt 1 view .LVU368
 1592               	.LBB95:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 1593               		.loc 1 61 5 view .LVU369
 1594               	.LBE95:
 1595               	.LBE94:
 1596               		.loc 18 6 13 is_stmt 0 view .LVU370
 1597 001c 081B      		sub r16,r24
 1598               	.LVL126:
 1599               	.LBB97:
 1600               	.LBB96:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 1601               		.loc 1 61 5 view .LVU371
 1602 001e 202F      		mov r18,r16
 1603               	/* #APP */
 1604               	 ;  61 "./lib/lib8tion/scale8.h" 1
 1605 0020 219F      		mul r18, r17          
 1606 0022 212D      		mov r18, r1          
 1607 0024 1124      		clr __zero_reg__    
 1608               		
 1609               	 ;  0 "" 2
 1610               	/* #NOAPP */
 1611 0026 822F      		mov r24,r18
 1612               	.LVL127:
  85:./lib/lib8tion/scale8.h **** #endif
 1613               		.loc 1 85 5 is_stmt 1 view .LVU372
  85:./lib/lib8tion/scale8.h **** #endif
 1614               		.loc 1 85 5 is_stmt 0 view .LVU373
 1615               	.LBE96:
 1616               	.LBE97:
   7:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h ****     return hsv;
 1617               		.loc 18 7 5 is_stmt 1 view .LVU374
   8:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h **** }
 1618               		.loc 18 8 1 is_stmt 0 view .LVU375
 1619 0028 6D2F      		mov r22,r29
 1620 002a 7C2F      		mov r23,r28
 1621               	/* epilogue start */
 1622 002c DF91      		pop r29
 1623               	.LVL128:
 1624               		.loc 18 8 1 view .LVU376
 1625 002e CF91      		pop r28
 1626               		.loc 18 8 1 view .LVU377
 1627 0030 1F91      		pop r17
 1628               	.LVL129:
 1629               		.loc 18 8 1 view .LVU378
 1630 0032 0F91      		pop r16
 1631 0034 EF90      		pop r14
 1632               	.LVL130:
 1633               		.loc 18 8 1 view .LVU379
 1634 0036 0895      		ret
 1635               		.cfi_endproc
 1636               	.LFE205:
 1638               		.section	.text.CYCLE_PINWHEEL_math,"ax",@progbits
 1640               	CYCLE_PINWHEEL_math:
 1641               	.LVL131:
 1642               	.LFB219:
 1643               		.file 19 "quantum/rgb_matrix_animations/cycle_pinwheel_anim.h"
   1:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_PINWHEEL
   2:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h **** RGB_MATRIX_EFFECT(CYCLE_PINWHEEL)
   3:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h **** 
   5:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h **** static HSV CYCLE_PINWHEEL_math(HSV hsv, int16_t dx, int16_t dy, uint8_t time) {
 1644               		.loc 19 5 79 is_stmt 1 view -0
 1645               		.cfi_startproc
 1646               		.loc 19 5 79 is_stmt 0 view .LVU381
 1647 0000 0F93      		push r16
 1648               	.LCFI29:
 1649               		.cfi_def_cfa_offset 3
 1650               		.cfi_offset 16, -2
 1651 0002 CF93      		push r28
 1652               	.LCFI30:
 1653               		.cfi_def_cfa_offset 4
 1654               		.cfi_offset 28, -3
 1655 0004 DF93      		push r29
 1656               	.LCFI31:
 1657               		.cfi_def_cfa_offset 5
 1658               		.cfi_offset 29, -4
 1659               	/* prologue: function */
 1660               	/* frame size = 0 */
 1661               	/* stack size = 3 */
 1662               	.L__stack_usage = 3
 1663               		.loc 19 5 79 view .LVU382
 1664 0006 D72F      		mov r29,r23
 1665               		.loc 19 5 79 view .LVU383
 1666 0008 C82F      		mov r28,r24
 1667 000a C901      		movw r24,r18
   6:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h ****     hsv.h = atan2_8(dy, dx) + time;
 1668               		.loc 19 6 5 is_stmt 1 view .LVU384
 1669               		.loc 19 6 13 is_stmt 0 view .LVU385
 1670 000c BA01      		movw r22,r20
 1671               	.LVL132:
 1672               		.loc 19 6 13 view .LVU386
 1673 000e 0E94 0000 		call atan2_8
 1674               	.LVL133:
   7:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h ****     return hsv;
 1675               		.loc 19 7 5 is_stmt 1 view .LVU387
   6:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h ****     hsv.h = atan2_8(dy, dx) + time;
 1676               		.loc 19 6 29 is_stmt 0 view .LVU388
 1677 0012 682F      		mov r22,r24
 1678 0014 600F      		add r22,r16
   8:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h **** }
 1679               		.loc 19 8 1 view .LVU389
 1680 0016 7D2F      		mov r23,r29
 1681 0018 8C2F      		mov r24,r28
 1682               	/* epilogue start */
 1683 001a DF91      		pop r29
 1684               		.loc 19 8 1 view .LVU390
 1685 001c CF91      		pop r28
 1686               		.loc 19 8 1 view .LVU391
 1687 001e 0F91      		pop r16
 1688               	.LVL134:
 1689               		.loc 19 8 1 view .LVU392
 1690 0020 0895      		ret
 1691               		.cfi_endproc
 1692               	.LFE219:
 1694               		.section	.text.CYCLE_SPIRAL_math,"ax",@progbits
 1696               	CYCLE_SPIRAL_math:
 1697               	.LVL135:
 1698               	.LFB221:
 1699               		.file 20 "quantum/rgb_matrix_animations/cycle_spiral_anim.h"
   1:quantum/rgb_matrix_animations/cycle_spiral_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_SPIRAL
   2:quantum/rgb_matrix_animations/cycle_spiral_anim.h **** RGB_MATRIX_EFFECT(CYCLE_SPIRAL)
   3:quantum/rgb_matrix_animations/cycle_spiral_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/cycle_spiral_anim.h **** 
   5:quantum/rgb_matrix_animations/cycle_spiral_anim.h **** static HSV CYCLE_SPIRAL_math(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint8_t time) {
 1700               		.loc 20 5 91 is_stmt 1 view -0
 1701               		.cfi_startproc
 1702               		.loc 20 5 91 is_stmt 0 view .LVU394
 1703 0000 EF92      		push r14
 1704               	.LCFI32:
 1705               		.cfi_def_cfa_offset 3
 1706               		.cfi_offset 14, -2
 1707 0002 0F93      		push r16
 1708               	.LCFI33:
 1709               		.cfi_def_cfa_offset 4
 1710               		.cfi_offset 16, -3
 1711 0004 CF93      		push r28
 1712               	.LCFI34:
 1713               		.cfi_def_cfa_offset 5
 1714               		.cfi_offset 28, -4
 1715 0006 DF93      		push r29
 1716               	.LCFI35:
 1717               		.cfi_def_cfa_offset 6
 1718               		.cfi_offset 29, -5
 1719               	/* prologue: function */
 1720               	/* frame size = 0 */
 1721               	/* stack size = 4 */
 1722               	.L__stack_usage = 4
 1723               		.loc 20 5 91 view .LVU395
 1724 0008 D72F      		mov r29,r23
 1725               		.loc 20 5 91 view .LVU396
 1726 000a C82F      		mov r28,r24
 1727 000c C901      		movw r24,r18
   6:quantum/rgb_matrix_animations/cycle_spiral_anim.h ****     hsv.h = dist - time - atan2_8(dy, dx);
 1728               		.loc 20 6 5 is_stmt 1 view .LVU397
 1729               		.loc 20 6 18 is_stmt 0 view .LVU398
 1730 000e 0E19      		sub r16,r14
 1731               	.LVL136:
 1732               		.loc 20 6 27 view .LVU399
 1733 0010 BA01      		movw r22,r20
 1734               	.LVL137:
 1735               		.loc 20 6 27 view .LVU400
 1736 0012 0E94 0000 		call atan2_8
 1737               	.LVL138:
   7:quantum/rgb_matrix_animations/cycle_spiral_anim.h ****     return hsv;
 1738               		.loc 20 7 5 is_stmt 1 view .LVU401
   6:quantum/rgb_matrix_animations/cycle_spiral_anim.h ****     hsv.h = dist - time - atan2_8(dy, dx);
 1739               		.loc 20 6 25 is_stmt 0 view .LVU402
 1740 0016 602F      		mov r22,r16
 1741 0018 681B      		sub r22,r24
   8:quantum/rgb_matrix_animations/cycle_spiral_anim.h **** }
 1742               		.loc 20 8 1 view .LVU403
 1743 001a 7D2F      		mov r23,r29
 1744 001c 8C2F      		mov r24,r28
 1745               	/* epilogue start */
 1746 001e DF91      		pop r29
 1747               		.loc 20 8 1 view .LVU404
 1748 0020 CF91      		pop r28
 1749               	.LVL139:
 1750               		.loc 20 8 1 view .LVU405
 1751 0022 0F91      		pop r16
 1752 0024 EF90      		pop r14
 1753               	.LVL140:
 1754               		.loc 20 8 1 view .LVU406
 1755 0026 0895      		ret
 1756               		.cfi_endproc
 1757               	.LFE221:
 1759               		.section	.text.eeconfig_read_rgb_matrix,"ax",@progbits
 1760               	.global	eeconfig_read_rgb_matrix
 1762               	eeconfig_read_rgb_matrix:
 1763               	.LFB233:
 1764               		.file 21 "quantum/rgb_matrix.c"
   1:quantum/rgb_matrix.c **** /* Copyright 2017 Jason Williams
   2:quantum/rgb_matrix.c ****  * Copyright 2017 Jack Humbert
   3:quantum/rgb_matrix.c ****  * Copyright 2018 Yiancar
   4:quantum/rgb_matrix.c ****  *
   5:quantum/rgb_matrix.c ****  * This program is free software: you can redistribute it and/or modify
   6:quantum/rgb_matrix.c ****  * it under the terms of the GNU General Public License as published by
   7:quantum/rgb_matrix.c ****  * the Free Software Foundation, either version 2 of the License, or
   8:quantum/rgb_matrix.c ****  * (at your option) any later version.
   9:quantum/rgb_matrix.c ****  *
  10:quantum/rgb_matrix.c ****  * This program is distributed in the hope that it will be useful,
  11:quantum/rgb_matrix.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:quantum/rgb_matrix.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:quantum/rgb_matrix.c ****  * GNU General Public License for more details.
  14:quantum/rgb_matrix.c ****  *
  15:quantum/rgb_matrix.c ****  * You should have received a copy of the GNU General Public License
  16:quantum/rgb_matrix.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  17:quantum/rgb_matrix.c ****  */
  18:quantum/rgb_matrix.c **** 
  19:quantum/rgb_matrix.c **** #include "rgb_matrix.h"
  20:quantum/rgb_matrix.c **** #include "progmem.h"
  21:quantum/rgb_matrix.c **** #include "config.h"
  22:quantum/rgb_matrix.c **** #include "eeprom.h"
  23:quantum/rgb_matrix.c **** #include <string.h>
  24:quantum/rgb_matrix.c **** #include <math.h>
  25:quantum/rgb_matrix.c **** 
  26:quantum/rgb_matrix.c **** #include "lib/lib8tion/lib8tion.h"
  27:quantum/rgb_matrix.c **** 
  28:quantum/rgb_matrix.c **** #ifndef RGB_MATRIX_CENTER
  29:quantum/rgb_matrix.c **** const point_t k_rgb_matrix_center = {112, 32};
  30:quantum/rgb_matrix.c **** #else
  31:quantum/rgb_matrix.c **** const point_t k_rgb_matrix_center = RGB_MATRIX_CENTER;
  32:quantum/rgb_matrix.c **** #endif
  33:quantum/rgb_matrix.c **** 
  34:quantum/rgb_matrix.c **** // Generic effect runners
  35:quantum/rgb_matrix.c **** #include "rgb_matrix_runners/effect_runner_dx_dy_dist.h"
  36:quantum/rgb_matrix.c **** #include "rgb_matrix_runners/effect_runner_dx_dy.h"
  37:quantum/rgb_matrix.c **** #include "rgb_matrix_runners/effect_runner_i.h"
  38:quantum/rgb_matrix.c **** #include "rgb_matrix_runners/effect_runner_sin_cos_i.h"
  39:quantum/rgb_matrix.c **** #include "rgb_matrix_runners/effect_runner_reactive.h"
  40:quantum/rgb_matrix.c **** #include "rgb_matrix_runners/effect_runner_reactive_splash.h"
  41:quantum/rgb_matrix.c **** 
  42:quantum/rgb_matrix.c **** // ------------------------------------------
  43:quantum/rgb_matrix.c **** // -----Begin rgb effect includes macros-----
  44:quantum/rgb_matrix.c **** #define RGB_MATRIX_EFFECT(name)
  45:quantum/rgb_matrix.c **** #define RGB_MATRIX_CUSTOM_EFFECT_IMPLS
  46:quantum/rgb_matrix.c **** 
  47:quantum/rgb_matrix.c **** #include "rgb_matrix_animations/rgb_matrix_effects.inc"
  48:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_CUSTOM_KB
  49:quantum/rgb_matrix.c **** #    include "rgb_matrix_kb.inc"
  50:quantum/rgb_matrix.c **** #endif
  51:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_CUSTOM_USER
  52:quantum/rgb_matrix.c **** #    include "rgb_matrix_user.inc"
  53:quantum/rgb_matrix.c **** #endif
  54:quantum/rgb_matrix.c **** 
  55:quantum/rgb_matrix.c **** #undef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
  56:quantum/rgb_matrix.c **** #undef RGB_MATRIX_EFFECT
  57:quantum/rgb_matrix.c **** // -----End rgb effect includes macros-------
  58:quantum/rgb_matrix.c **** // ------------------------------------------
  59:quantum/rgb_matrix.c **** 
  60:quantum/rgb_matrix.c **** #ifndef RGB_DISABLE_AFTER_TIMEOUT
  61:quantum/rgb_matrix.c **** #    define RGB_DISABLE_AFTER_TIMEOUT 0
  62:quantum/rgb_matrix.c **** #endif
  63:quantum/rgb_matrix.c **** 
  64:quantum/rgb_matrix.c **** #ifndef RGB_DISABLE_WHEN_USB_SUSPENDED
  65:quantum/rgb_matrix.c **** #    define RGB_DISABLE_WHEN_USB_SUSPENDED false
  66:quantum/rgb_matrix.c **** #endif
  67:quantum/rgb_matrix.c **** 
  68:quantum/rgb_matrix.c **** #if !defined(RGB_MATRIX_MAXIMUM_BRIGHTNESS) || RGB_MATRIX_MAXIMUM_BRIGHTNESS > UINT8_MAX
  69:quantum/rgb_matrix.c **** #    undef RGB_MATRIX_MAXIMUM_BRIGHTNESS
  70:quantum/rgb_matrix.c **** #    define RGB_MATRIX_MAXIMUM_BRIGHTNESS UINT8_MAX
  71:quantum/rgb_matrix.c **** #endif
  72:quantum/rgb_matrix.c **** 
  73:quantum/rgb_matrix.c **** #if !defined(RGB_MATRIX_HUE_STEP)
  74:quantum/rgb_matrix.c **** #    define RGB_MATRIX_HUE_STEP 8
  75:quantum/rgb_matrix.c **** #endif
  76:quantum/rgb_matrix.c **** 
  77:quantum/rgb_matrix.c **** #if !defined(RGB_MATRIX_SAT_STEP)
  78:quantum/rgb_matrix.c **** #    define RGB_MATRIX_SAT_STEP 16
  79:quantum/rgb_matrix.c **** #endif
  80:quantum/rgb_matrix.c **** 
  81:quantum/rgb_matrix.c **** #if !defined(RGB_MATRIX_VAL_STEP)
  82:quantum/rgb_matrix.c **** #    define RGB_MATRIX_VAL_STEP 16
  83:quantum/rgb_matrix.c **** #endif
  84:quantum/rgb_matrix.c **** 
  85:quantum/rgb_matrix.c **** #if !defined(RGB_MATRIX_SPD_STEP)
  86:quantum/rgb_matrix.c **** #    define RGB_MATRIX_SPD_STEP 16
  87:quantum/rgb_matrix.c **** #endif
  88:quantum/rgb_matrix.c **** 
  89:quantum/rgb_matrix.c **** #if !defined(RGB_MATRIX_STARTUP_MODE)
  90:quantum/rgb_matrix.c **** #    ifndef DISABLE_RGB_MATRIX_CYCLE_LEFT_RIGHT
  91:quantum/rgb_matrix.c **** #        define RGB_MATRIX_STARTUP_MODE RGB_MATRIX_CYCLE_LEFT_RIGHT
  92:quantum/rgb_matrix.c **** #    else
  93:quantum/rgb_matrix.c **** // fallback to solid colors if RGB_MATRIX_CYCLE_LEFT_RIGHT is disabled in userspace
  94:quantum/rgb_matrix.c **** #        define RGB_MATRIX_STARTUP_MODE RGB_MATRIX_SOLID_COLOR
  95:quantum/rgb_matrix.c **** #    endif
  96:quantum/rgb_matrix.c **** #endif
  97:quantum/rgb_matrix.c **** 
  98:quantum/rgb_matrix.c **** #if !defined(RGB_MATRIX_STARTUP_HUE)
  99:quantum/rgb_matrix.c **** #    define RGB_MATRIX_STARTUP_HUE 0
 100:quantum/rgb_matrix.c **** #endif
 101:quantum/rgb_matrix.c **** 
 102:quantum/rgb_matrix.c **** #if !defined(RGB_MATRIX_STARTUP_SAT)
 103:quantum/rgb_matrix.c **** #    define RGB_MATRIX_STARTUP_SAT UINT8_MAX
 104:quantum/rgb_matrix.c **** #endif
 105:quantum/rgb_matrix.c **** 
 106:quantum/rgb_matrix.c **** #if !defined(RGB_MATRIX_STARTUP_VAL)
 107:quantum/rgb_matrix.c **** #    define RGB_MATRIX_STARTUP_VAL RGB_MATRIX_MAXIMUM_BRIGHTNESS
 108:quantum/rgb_matrix.c **** #endif
 109:quantum/rgb_matrix.c **** 
 110:quantum/rgb_matrix.c **** #if !defined(RGB_MATRIX_STARTUP_SPD)
 111:quantum/rgb_matrix.c **** #    define RGB_MATRIX_STARTUP_SPD UINT8_MAX / 2
 112:quantum/rgb_matrix.c **** #endif
 113:quantum/rgb_matrix.c **** 
 114:quantum/rgb_matrix.c **** 
 115:quantum/rgb_matrix.c **** bool g_suspend_state = false;
 116:quantum/rgb_matrix.c **** 
 117:quantum/rgb_matrix.c **** rgb_config_t rgb_matrix_config;
 118:quantum/rgb_matrix.c **** 
 119:quantum/rgb_matrix.c **** rgb_counters_t  g_rgb_counters;
 120:quantum/rgb_matrix.c **** static uint32_t rgb_counters_buffer;
 121:quantum/rgb_matrix.c **** 
 122:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_FRAMEBUFFER_EFFECTS
 123:quantum/rgb_matrix.c **** uint8_t rgb_frame_buffer[MATRIX_ROWS][MATRIX_COLS] = {{0}};
 124:quantum/rgb_matrix.c **** #endif
 125:quantum/rgb_matrix.c **** 
 126:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 127:quantum/rgb_matrix.c **** last_hit_t        g_last_hit_tracker;
 128:quantum/rgb_matrix.c **** static last_hit_t last_hit_buffer;
 129:quantum/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 130:quantum/rgb_matrix.c **** 
 131:quantum/rgb_matrix.c **** void eeconfig_read_rgb_matrix(void) { eeprom_read_block(&rgb_matrix_config, EECONFIG_RGB_MATRIX, si
 1765               		.loc 21 131 37 is_stmt 1 view -0
 1766               		.cfi_startproc
 1767               	/* prologue: function */
 1768               	/* frame size = 0 */
 1769               	/* stack size = 0 */
 1770               	.L__stack_usage = 0
 1771               		.loc 21 131 39 view .LVU408
 1772 0000 45E0      		ldi r20,lo8(5)
 1773 0002 50E0      		ldi r21,0
 1774 0004 6CE1      		ldi r22,lo8(28)
 1775 0006 70E0      		ldi r23,0
 1776 0008 80E0      		ldi r24,lo8(rgb_matrix_config)
 1777 000a 90E0      		ldi r25,hi8(rgb_matrix_config)
 1778 000c 0C94 0000 		jmp eeprom_read_block
 1779               	.LVL141:
 1780               		.cfi_endproc
 1781               	.LFE233:
 1783               		.section	.text.eeconfig_update_rgb_matrix,"ax",@progbits
 1784               	.global	eeconfig_update_rgb_matrix
 1786               	eeconfig_update_rgb_matrix:
 1787               	.LFB234:
 132:quantum/rgb_matrix.c **** 
 133:quantum/rgb_matrix.c **** void eeconfig_update_rgb_matrix(void) { eeprom_update_block(&rgb_matrix_config, EECONFIG_RGB_MATRIX
 1788               		.loc 21 133 39 view -0
 1789               		.cfi_startproc
 1790               	/* prologue: function */
 1791               	/* frame size = 0 */
 1792               	/* stack size = 0 */
 1793               	.L__stack_usage = 0
 1794               		.loc 21 133 41 view .LVU410
 1795 0000 45E0      		ldi r20,lo8(5)
 1796 0002 50E0      		ldi r21,0
 1797 0004 6CE1      		ldi r22,lo8(28)
 1798 0006 70E0      		ldi r23,0
 1799 0008 80E0      		ldi r24,lo8(rgb_matrix_config)
 1800 000a 90E0      		ldi r25,hi8(rgb_matrix_config)
 1801 000c 0C94 0000 		jmp eeprom_update_block
 1802               	.LVL142:
 1803               		.cfi_endproc
 1804               	.LFE234:
 1806               		.section	.rodata
 1807               	.LC0:
 1808 0000 00        		.byte	0
 1809 0001 FF        		.byte	-1
 1810 0002 FF        		.byte	-1
 1811               		.section	.text.eeconfig_update_rgb_matrix_default,"ax",@progbits
 1812               	.global	eeconfig_update_rgb_matrix_default
 1814               	eeconfig_update_rgb_matrix_default:
 1815               	.LFB235:
 134:quantum/rgb_matrix.c **** 
 135:quantum/rgb_matrix.c **** void eeconfig_update_rgb_matrix_default(void) {
 1816               		.loc 21 135 47 view -0
 1817               		.cfi_startproc
 1818               	/* prologue: function */
 1819               	/* frame size = 0 */
 1820               	/* stack size = 0 */
 1821               	.L__stack_usage = 0
 136:quantum/rgb_matrix.c ****     dprintf("eeconfig_update_rgb_matrix_default\n");
 1822               		.loc 21 136 52 view .LVU412
 137:quantum/rgb_matrix.c ****     rgb_matrix_config.enable = 1;
 1823               		.loc 21 137 5 view .LVU413
 138:quantum/rgb_matrix.c ****     rgb_matrix_config.mode   = RGB_MATRIX_STARTUP_MODE;
 1824               		.loc 21 138 5 view .LVU414
 137:quantum/rgb_matrix.c ****     rgb_matrix_config.enable = 1;
 1825               		.loc 21 137 30 is_stmt 0 view .LVU415
 1826 0000 E0E0      		ldi r30,lo8(rgb_matrix_config)
 1827 0002 F0E0      		ldi r31,hi8(rgb_matrix_config)
 1828 0004 85E3      		ldi r24,lo8(53)
 1829 0006 8083      		st Z,r24
 139:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv    = (HSV){RGB_MATRIX_STARTUP_HUE, RGB_MATRIX_STARTUP_SAT, RGB_MATRIX_STA
 1830               		.loc 21 139 5 is_stmt 1 view .LVU416
 1831               		.loc 21 139 30 is_stmt 0 view .LVU417
 1832 0008 8091 0000 		lds r24,.LC0
 1833 000c 9091 0000 		lds r25,.LC0+1
 1834 0010 A091 0000 		lds r26,.LC0+2
 1835 0014 8183      		std Z+1,r24
 1836 0016 9283      		std Z+2,r25
 1837 0018 A383      		std Z+3,r26
 140:quantum/rgb_matrix.c ****     rgb_matrix_config.speed  = RGB_MATRIX_STARTUP_SPD;
 1838               		.loc 21 140 5 is_stmt 1 view .LVU418
 1839               		.loc 21 140 30 is_stmt 0 view .LVU419
 1840 001a 8FE7      		ldi r24,lo8(127)
 1841 001c 8483      		std Z+4,r24
 141:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 1842               		.loc 21 141 5 is_stmt 1 view .LVU420
 1843 001e 0C94 0000 		jmp eeconfig_update_rgb_matrix
 1844               	.LVL143:
 1845               		.cfi_endproc
 1846               	.LFE235:
 1848               		.section	.text.eeconfig_debug_rgb_matrix,"ax",@progbits
 1849               	.global	eeconfig_debug_rgb_matrix
 1851               	eeconfig_debug_rgb_matrix:
 1852               	.LFB236:
 142:quantum/rgb_matrix.c **** }
 143:quantum/rgb_matrix.c **** 
 144:quantum/rgb_matrix.c **** void eeconfig_debug_rgb_matrix(void) {
 1853               		.loc 21 144 38 view -0
 1854               		.cfi_startproc
 1855               	/* prologue: function */
 1856               	/* frame size = 0 */
 1857               	/* stack size = 0 */
 1858               	.L__stack_usage = 0
 145:quantum/rgb_matrix.c ****     dprintf("rgb_matrix_config eprom\n");
 1859               		.loc 21 145 41 view .LVU422
 146:quantum/rgb_matrix.c ****     dprintf("rgb_matrix_config.enable = %d\n", rgb_matrix_config.enable);
 1860               		.loc 21 146 73 view .LVU423
 147:quantum/rgb_matrix.c ****     dprintf("rgb_matrix_config.mode = %d\n", rgb_matrix_config.mode);
 1861               		.loc 21 147 69 view .LVU424
 148:quantum/rgb_matrix.c ****     dprintf("rgb_matrix_config.hsv.h = %d\n", rgb_matrix_config.hsv.h);
 1862               		.loc 21 148 71 view .LVU425
 149:quantum/rgb_matrix.c ****     dprintf("rgb_matrix_config.hsv.s = %d\n", rgb_matrix_config.hsv.s);
 1863               		.loc 21 149 71 view .LVU426
 150:quantum/rgb_matrix.c ****     dprintf("rgb_matrix_config.hsv.v = %d\n", rgb_matrix_config.hsv.v);
 1864               		.loc 21 150 71 view .LVU427
 151:quantum/rgb_matrix.c ****     dprintf("rgb_matrix_config.speed = %d\n", rgb_matrix_config.speed);
 1865               		.loc 21 151 71 view .LVU428
 1866               	/* epilogue start */
 152:quantum/rgb_matrix.c **** }
 1867               		.loc 21 152 1 is_stmt 0 view .LVU429
 1868 0000 0895      		ret
 1869               		.cfi_endproc
 1870               	.LFE236:
 1872               		.section	.text.rgb_matrix_map_row_column_to_led_kb,"ax",@progbits
 1873               		.weak	rgb_matrix_map_row_column_to_led_kb
 1875               	rgb_matrix_map_row_column_to_led_kb:
 1876               	.LVL144:
 1877               	.LFB237:
 153:quantum/rgb_matrix.c **** 
 154:quantum/rgb_matrix.c **** __attribute__((weak)) uint8_t rgb_matrix_map_row_column_to_led_kb(uint8_t row, uint8_t column, uint
 1878               		.loc 21 154 112 is_stmt 1 view -0
 1879               		.cfi_startproc
 1880               	/* prologue: function */
 1881               	/* frame size = 0 */
 1882               	/* stack size = 0 */
 1883               	.L__stack_usage = 0
 1884               		.loc 21 154 114 view .LVU431
 1885               		.loc 21 154 1 is_stmt 0 view .LVU432
 1886 0000 80E0      		ldi r24,0
 1887               	.LVL145:
 1888               	/* epilogue start */
 1889               		.loc 21 154 1 view .LVU433
 1890 0002 0895      		ret
 1891               		.cfi_endproc
 1892               	.LFE237:
 1894               		.section	.text.rgb_matrix_map_row_column_to_led,"ax",@progbits
 1895               	.global	rgb_matrix_map_row_column_to_led
 1897               	rgb_matrix_map_row_column_to_led:
 1898               	.LVL146:
 1899               	.LFB238:
 155:quantum/rgb_matrix.c **** 
 156:quantum/rgb_matrix.c **** uint8_t rgb_matrix_map_row_column_to_led(uint8_t row, uint8_t column, uint8_t *led_i) {
 1900               		.loc 21 156 87 is_stmt 1 view -0
 1901               		.cfi_startproc
 1902               		.loc 21 156 87 is_stmt 0 view .LVU435
 1903 0000 0F93      		push r16
 1904               	.LCFI36:
 1905               		.cfi_def_cfa_offset 3
 1906               		.cfi_offset 16, -2
 1907 0002 1F93      		push r17
 1908               	.LCFI37:
 1909               		.cfi_def_cfa_offset 4
 1910               		.cfi_offset 17, -3
 1911 0004 CF93      		push r28
 1912               	.LCFI38:
 1913               		.cfi_def_cfa_offset 5
 1914               		.cfi_offset 28, -4
 1915 0006 DF93      		push r29
 1916               	.LCFI39:
 1917               		.cfi_def_cfa_offset 6
 1918               		.cfi_offset 29, -5
 1919               	/* prologue: function */
 1920               	/* frame size = 0 */
 1921               	/* stack size = 4 */
 1922               	.L__stack_usage = 4
 1923 0008 C82F      		mov r28,r24
 1924 000a D62F      		mov r29,r22
 1925 000c 8A01      		movw r16,r20
 157:quantum/rgb_matrix.c ****     uint8_t led_count = rgb_matrix_map_row_column_to_led_kb(row, column, led_i);
 1926               		.loc 21 157 5 is_stmt 1 view .LVU436
 1927               		.loc 21 157 25 is_stmt 0 view .LVU437
 1928 000e 0E94 0000 		call rgb_matrix_map_row_column_to_led_kb
 1929               	.LVL147:
 158:quantum/rgb_matrix.c ****     uint8_t led_index = g_led_config.matrix_co[row][column];
 1930               		.loc 21 158 5 is_stmt 1 view .LVU438
 1931               		.loc 21 158 13 is_stmt 0 view .LVU439
 1932 0012 96E0      		ldi r25,lo8(6)
 1933 0014 C99F      		mul r28,r25
 1934 0016 B001      		movw r22,r0
 1935 0018 1124      		clr __zero_reg__
 1936 001a 6050      		subi r22,lo8(-(g_led_config))
 1937 001c 7040      		sbci r23,hi8(-(g_led_config))
 1938 001e 6D0F      		add r22,r29
 1939 0020 711D      		adc r23,__zero_reg__
 1940 0022 FB01      		movw r30,r22
 1941 0024 9081      		ld r25,Z
 1942               	.LVL148:
 159:quantum/rgb_matrix.c ****     if (led_index != NO_LED) {
 1943               		.loc 21 159 5 is_stmt 1 view .LVU440
 1944               		.loc 21 159 8 is_stmt 0 view .LVU441
 1945 0026 9F3F      		cpi r25,lo8(-1)
 1946 0028 01F0      		breq .L57
 160:quantum/rgb_matrix.c ****         led_i[led_count] = led_index;
 1947               		.loc 21 160 9 is_stmt 1 view .LVU442
 1948               		.loc 21 160 26 is_stmt 0 view .LVU443
 1949 002a F801      		movw r30,r16
 1950 002c E80F      		add r30,r24
 1951 002e F11D      		adc r31,__zero_reg__
 1952 0030 9083      		st Z,r25
 161:quantum/rgb_matrix.c ****         led_count++;
 1953               		.loc 21 161 9 is_stmt 1 view .LVU444
 1954               		.loc 21 161 18 is_stmt 0 view .LVU445
 1955 0032 8F5F      		subi r24,lo8(-(1))
 1956               	.LVL149:
 162:quantum/rgb_matrix.c ****     }
 163:quantum/rgb_matrix.c ****     return led_count;
 1957               		.loc 21 163 5 is_stmt 1 view .LVU446
 1958               	.L57:
 1959               	/* epilogue start */
 164:quantum/rgb_matrix.c **** }
 1960               		.loc 21 164 1 is_stmt 0 view .LVU447
 1961 0034 DF91      		pop r29
 1962               	.LVL150:
 1963               		.loc 21 164 1 view .LVU448
 1964 0036 CF91      		pop r28
 1965               	.LVL151:
 1966               		.loc 21 164 1 view .LVU449
 1967 0038 1F91      		pop r17
 1968 003a 0F91      		pop r16
 1969               	.LVL152:
 1970               		.loc 21 164 1 view .LVU450
 1971 003c 0895      		ret
 1972               		.cfi_endproc
 1973               	.LFE238:
 1975               		.section	.text.rgb_matrix_update_pwm_buffers,"ax",@progbits
 1976               	.global	rgb_matrix_update_pwm_buffers
 1978               	rgb_matrix_update_pwm_buffers:
 1979               	.LFB239:
 165:quantum/rgb_matrix.c **** 
 166:quantum/rgb_matrix.c **** void rgb_matrix_update_pwm_buffers(void) { rgb_matrix_driver.flush(); }
 1980               		.loc 21 166 42 is_stmt 1 view -0
 1981               		.cfi_startproc
 1982               	/* prologue: function */
 1983               	/* frame size = 0 */
 1984               	/* stack size = 0 */
 1985               	.L__stack_usage = 0
 1986               		.loc 21 166 44 view .LVU452
 1987 0000 E091 0000 		lds r30,rgb_matrix_driver+6
 1988 0004 F091 0000 		lds r31,rgb_matrix_driver+6+1
 1989 0008 0994      		ijmp
 1990               	.LVL153:
 1991               		.cfi_endproc
 1992               	.LFE239:
 1994               		.section	.text.rgb_matrix_set_color,"ax",@progbits
 1995               	.global	rgb_matrix_set_color
 1997               	rgb_matrix_set_color:
 1998               	.LVL154:
 1999               	.LFB240:
 167:quantum/rgb_matrix.c **** 
 168:quantum/rgb_matrix.c **** void rgb_matrix_set_color(int index, uint8_t red, uint8_t green, uint8_t blue) { rgb_matrix_driver.
 2000               		.loc 21 168 80 view -0
 2001               		.cfi_startproc
 2002               	/* prologue: function */
 2003               	/* frame size = 0 */
 2004               	/* stack size = 0 */
 2005               	.L__stack_usage = 0
 2006               		.loc 21 168 82 view .LVU454
 2007 0000 E091 0000 		lds r30,rgb_matrix_driver+2
 2008 0004 F091 0000 		lds r31,rgb_matrix_driver+2+1
 2009 0008 0994      		ijmp
 2010               	.LVL155:
 2011               		.loc 21 168 82 is_stmt 0 view .LVU455
 2012               		.cfi_endproc
 2013               	.LFE240:
 2015               		.section	.text.effect_runner_dx_dy_dist,"ax",@progbits
 2016               	.global	effect_runner_dx_dy_dist
 2018               	effect_runner_dx_dy_dist:
 2019               	.LVL156:
 2020               	.LFB186:
 2021               		.file 22 "quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h"
   1:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h **** #pragma once
   2:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h **** 
   3:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h **** typedef HSV (*dx_dy_dist_f)(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint8_t time);
   4:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h **** 
   5:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h **** bool effect_runner_dx_dy_dist(effect_params_t* params, dx_dy_dist_f effect_func) {
 2022               		.loc 22 5 82 is_stmt 1 view -0
 2023               		.cfi_startproc
 2024               		.loc 22 5 82 is_stmt 0 view .LVU457
 2025 0000 3F92      		push r3
 2026               	.LCFI40:
 2027               		.cfi_def_cfa_offset 3
 2028               		.cfi_offset 3, -2
 2029 0002 4F92      		push r4
 2030               	.LCFI41:
 2031               		.cfi_def_cfa_offset 4
 2032               		.cfi_offset 4, -3
 2033 0004 5F92      		push r5
 2034               	.LCFI42:
 2035               		.cfi_def_cfa_offset 5
 2036               		.cfi_offset 5, -4
 2037 0006 6F92      		push r6
 2038               	.LCFI43:
 2039               		.cfi_def_cfa_offset 6
 2040               		.cfi_offset 6, -5
 2041 0008 7F92      		push r7
 2042               	.LCFI44:
 2043               		.cfi_def_cfa_offset 7
 2044               		.cfi_offset 7, -6
 2045 000a 8F92      		push r8
 2046               	.LCFI45:
 2047               		.cfi_def_cfa_offset 8
 2048               		.cfi_offset 8, -7
 2049 000c 9F92      		push r9
 2050               	.LCFI46:
 2051               		.cfi_def_cfa_offset 9
 2052               		.cfi_offset 9, -8
 2053 000e AF92      		push r10
 2054               	.LCFI47:
 2055               		.cfi_def_cfa_offset 10
 2056               		.cfi_offset 10, -9
 2057 0010 BF92      		push r11
 2058               	.LCFI48:
 2059               		.cfi_def_cfa_offset 11
 2060               		.cfi_offset 11, -10
 2061 0012 CF92      		push r12
 2062               	.LCFI49:
 2063               		.cfi_def_cfa_offset 12
 2064               		.cfi_offset 12, -11
 2065 0014 DF92      		push r13
 2066               	.LCFI50:
 2067               		.cfi_def_cfa_offset 13
 2068               		.cfi_offset 13, -12
 2069 0016 EF92      		push r14
 2070               	.LCFI51:
 2071               		.cfi_def_cfa_offset 14
 2072               		.cfi_offset 14, -13
 2073 0018 FF92      		push r15
 2074               	.LCFI52:
 2075               		.cfi_def_cfa_offset 15
 2076               		.cfi_offset 15, -14
 2077 001a 0F93      		push r16
 2078               	.LCFI53:
 2079               		.cfi_def_cfa_offset 16
 2080               		.cfi_offset 16, -15
 2081 001c 1F93      		push r17
 2082               	.LCFI54:
 2083               		.cfi_def_cfa_offset 17
 2084               		.cfi_offset 17, -16
 2085 001e CF93      		push r28
 2086               	.LCFI55:
 2087               		.cfi_def_cfa_offset 18
 2088               		.cfi_offset 28, -17
 2089 0020 DF93      		push r29
 2090               	.LCFI56:
 2091               		.cfi_def_cfa_offset 19
 2092               		.cfi_offset 29, -18
 2093               	/* prologue: function */
 2094               	/* frame size = 0 */
 2095               	/* stack size = 17 */
 2096               	.L__stack_usage = 17
 2097 0022 3C01      		movw r6,r24
 2098 0024 2B01      		movw r4,r22
   6:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2099               		.loc 22 6 5 is_stmt 1 view .LVU458
 2100 0026 FC01      		movw r30,r24
 2101 0028 C081      		ld r28,Z
 2102 002a 8BE0      		ldi r24,lo8(11)
 2103               	.LVL157:
 2104               		.loc 22 6 5 is_stmt 0 view .LVU459
 2105 002c C89F      		mul r28,r24
 2106 002e C02D      		mov r28,r0
 2107 0030 1124      		clr r1
 2108               	.LVL158:
 2109               		.loc 22 6 5 is_stmt 1 view .LVU460
 2110 0032 1BE0      		ldi r17,lo8(11)
 2111 0034 1C0F      		add r17,r28
 2112               	.LVL159:
 2113               		.loc 22 6 5 view .LVU461
 2114 0036 F12E      		mov r15,r17
 2115 0038 1733      		cpi r17,lo8(55)
 2116 003a 00F0      		brlo .L65
 2117 003c 36E3      		ldi r19,lo8(54)
 2118 003e F32E      		mov r15,r19
 2119               	.L65:
 2120               	.LVL160:
 2121               		.loc 22 6 44 view .LVU462
   7:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h **** 
   8:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     uint8_t time = scale16by8(g_rgb_counters.tick, rgb_matrix_config.speed / 2);
 2122               		.loc 22 8 5 view .LVU463
 2123               		.loc 22 8 20 is_stmt 0 view .LVU464
 2124 0040 6091 0000 		lds r22,rgb_matrix_config+4
 2125               	.LVL161:
 2126               		.loc 22 8 20 view .LVU465
 2127 0044 6695      		lsr r22
 2128 0046 8091 0000 		lds r24,g_rgb_counters
 2129 004a 9091 0000 		lds r25,g_rgb_counters+1
 2130 004e 0E94 0000 		call scale16by8
 2131               	.LVL162:
 2132 0052 382E      		mov r3,r24
 2133               	.LVL163:
   9:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 2134               		.loc 22 9 5 is_stmt 1 view .LVU466
 2135               	.LBB98:
 2136               		.loc 22 9 10 view .LVU467
 2137               		.loc 22 9 10 is_stmt 0 view .LVU468
 2138 0054 D0E0      		ldi r29,0
 2139 0056 CE01      		movw r24,r28
 2140 0058 880F      		lsl r24
 2141 005a 991F      		rol r25
 2142 005c 9C01      		movw r18,r24
 2143 005e 2050      		subi r18,lo8(-(g_led_config))
 2144 0060 3040      		sbci r19,hi8(-(g_led_config))
 2145 0062 6901      		movw r12,r18
 2146               	.LVL164:
 2147               	.L66:
 2148               		.loc 22 9 5 discriminator 1 view .LVU469
 2149 0064 CF15      		cp r28,r15
 2150 0066 00F0      		brlo .L69
 2151               	.LBE98:
  10:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         RGB_MATRIX_TEST_LED_FLAGS();
  11:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         int16_t dx   = g_led_config.point[i].x - k_rgb_matrix_center.x;
  12:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         int16_t dy   = g_led_config.point[i].y - k_rgb_matrix_center.y;
  13:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         uint8_t dist = sqrt16(dx * dx + dy * dy);
  14:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time));
  15:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  16:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     }
  17:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     return led_max < DRIVER_LED_TOTAL;
 2152               		.loc 22 17 5 is_stmt 1 view .LVU470
 2153               		.loc 22 17 20 is_stmt 0 view .LVU471
 2154 0068 81E0      		ldi r24,lo8(1)
 2155 006a 1633      		cpi r17,lo8(54)
 2156 006c 00F0      		brlo .L70
 2157 006e 80E0      		ldi r24,0
 2158               	.L70:
 2159               	/* epilogue start */
  18:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h **** }
 2160               		.loc 22 18 1 view .LVU472
 2161 0070 DF91      		pop r29
 2162 0072 CF91      		pop r28
 2163               	.LVL165:
 2164               		.loc 22 18 1 view .LVU473
 2165 0074 1F91      		pop r17
 2166 0076 0F91      		pop r16
 2167 0078 FF90      		pop r15
 2168               	.LVL166:
 2169               		.loc 22 18 1 view .LVU474
 2170 007a EF90      		pop r14
 2171 007c DF90      		pop r13
 2172 007e CF90      		pop r12
 2173 0080 BF90      		pop r11
 2174 0082 AF90      		pop r10
 2175 0084 9F90      		pop r9
 2176 0086 8F90      		pop r8
 2177 0088 7F90      		pop r7
 2178 008a 6F90      		pop r6
 2179               	.LVL167:
 2180               		.loc 22 18 1 view .LVU475
 2181 008c 5F90      		pop r5
 2182 008e 4F90      		pop r4
 2183               	.LVL168:
 2184               		.loc 22 18 1 view .LVU476
 2185 0090 3F90      		pop r3
 2186               	.LVL169:
 2187               		.loc 22 18 1 view .LVU477
 2188 0092 0895      		ret
 2189               	.LVL170:
 2190               	.L69:
 2191               	.LBB100:
 2192               	.LBB99:
  10:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2193               		.loc 22 10 9 is_stmt 1 view .LVU478
 2194 0094 FE01      		movw r30,r28
 2195 0096 E050      		subi r30,lo8(-(g_led_config+156))
 2196 0098 F040      		sbci r31,hi8(-(g_led_config+156))
 2197 009a 8081      		ld r24,Z
 2198 009c F301      		movw r30,r6
 2199 009e 9181      		ldd r25,Z+1
 2200 00a0 8923      		and r24,r25
 2201 00a2 01F0      		breq .L68
  11:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         int16_t dy   = g_led_config.point[i].y - k_rgb_matrix_center.y;
 2202               		.loc 22 11 9 view .LVU479
  11:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         int16_t dy   = g_led_config.point[i].y - k_rgb_matrix_center.y;
 2203               		.loc 22 11 45 is_stmt 0 view .LVU480
 2204 00a4 F601      		movw r30,r12
 2205 00a6 80A9      		ldd r24,Z+48
  11:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         int16_t dy   = g_led_config.point[i].y - k_rgb_matrix_center.y;
 2206               		.loc 22 11 17 view .LVU481
 2207 00a8 282F      		mov r18,r24
 2208 00aa 2057      		subi r18,112
 2209 00ac 330B      		sbc r19,r19
 2210 00ae 5901      		movw r10,r18
 2211               	.LVL171:
  12:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         uint8_t dist = sqrt16(dx * dx + dy * dy);
 2212               		.loc 22 12 9 is_stmt 1 view .LVU482
  12:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         uint8_t dist = sqrt16(dx * dx + dy * dy);
 2213               		.loc 22 12 45 is_stmt 0 view .LVU483
 2214 00b0 81A9      		ldd r24,Z+49
  12:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         uint8_t dist = sqrt16(dx * dx + dy * dy);
 2215               		.loc 22 12 17 view .LVU484
 2216 00b2 E82F      		mov r30,r24
 2217 00b4 E052      		subi r30,32
 2218 00b6 FF0B      		sbc r31,r31
 2219 00b8 4F01      		movw r8,r30
 2220               	.LVL172:
  13:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time));
 2221               		.loc 22 13 9 is_stmt 1 view .LVU485
  13:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time));
 2222               		.loc 22 13 34 is_stmt 0 view .LVU486
 2223 00ba AA9C      		mul r10,r10
 2224 00bc 9001      		movw r18,r0
 2225 00be AB9C      		mul r10,r11
 2226 00c0 300D      		add r19,r0
 2227 00c2 300D      		add r19,r0
 2228 00c4 1124      		clr r1
  13:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time));
 2229               		.loc 22 13 44 view .LVU487
 2230 00c6 EE9F      		mul r30,r30
 2231 00c8 C001      		movw r24,r0
 2232 00ca EF9F      		mul r30,r31
 2233 00cc 900D      		add r25,r0
 2234 00ce 900D      		add r25,r0
 2235 00d0 1124      		clr r1
  13:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time));
 2236               		.loc 22 13 24 view .LVU488
 2237 00d2 820F      		add r24,r18
 2238 00d4 931F      		adc r25,r19
 2239 00d6 0E94 0000 		call sqrt16
 2240               	.LVL173:
 2241 00da 082F      		mov r16,r24
 2242               	.LVL174:
  14:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2243               		.loc 22 14 9 is_stmt 1 view .LVU489
  14:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2244               		.loc 22 14 24 is_stmt 0 view .LVU490
 2245 00dc 6091 0000 		lds r22,rgb_matrix_config+1
 2246 00e0 7091 0000 		lds r23,rgb_matrix_config+1+1
 2247 00e4 8091 0000 		lds r24,rgb_matrix_config+1+2
 2248 00e8 E32C      		mov r14,r3
 2249 00ea 9401      		movw r18,r8
 2250 00ec A501      		movw r20,r10
 2251 00ee F201      		movw r30,r4
 2252 00f0 0995      		icall
 2253               	.LVL175:
 2254 00f2 0E94 0000 		call hsv_to_rgb
 2255               	.LVL176:
 2256 00f6 462F      		mov r20,r22
 2257               	.LVL177:
  15:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     }
 2258               		.loc 22 15 9 is_stmt 1 view .LVU491
  15:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     }
 2259               		.loc 22 15 9 is_stmt 0 view .LVU492
 2260 00f8 282F      		mov r18,r24
  15:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     }
 2261               		.loc 22 15 9 view .LVU493
 2262 00fa 672F      		mov r22,r23
 2263 00fc CE01      		movw r24,r28
  15:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     }
 2264               		.loc 22 15 9 view .LVU494
 2265 00fe 0E94 0000 		call rgb_matrix_set_color
 2266               	.LVL178:
 2267               	.L68:
  15:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     }
 2268               		.loc 22 15 9 view .LVU495
 2269 0102 F2E0      		ldi r31,2
 2270 0104 CF0E      		add r12,r31
 2271 0106 D11C      		adc r13,__zero_reg__
 2272 0108 2196      		adiw r28,1
 2273               	.LVL179:
  15:quantum/rgb_matrix_runners/effect_runner_dx_dy_dist.h ****     }
 2274               		.loc 22 15 9 view .LVU496
 2275 010a 00C0      		rjmp .L66
 2276               	.LBE99:
 2277               	.LBE100:
 2278               		.cfi_endproc
 2279               	.LFE186:
 2281               		.section	.text.BAND_SPIRAL_SAT,"ax",@progbits
 2282               	.global	BAND_SPIRAL_SAT
 2284               	BAND_SPIRAL_SAT:
 2285               	.LVL180:
 2286               	.LFB204:
   9:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h **** 
  10:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h **** bool BAND_SPIRAL_SAT(effect_params_t* params) { return effect_runner_dx_dy_dist(params, &BAND_SPIRA
 2287               		.loc 17 10 47 is_stmt 1 view -0
 2288               		.cfi_startproc
 2289               	/* prologue: function */
 2290               	/* frame size = 0 */
 2291               	/* stack size = 0 */
 2292               	.L__stack_usage = 0
 2293               		.loc 17 10 49 view .LVU498
 2294               		.loc 17 10 56 is_stmt 0 view .LVU499
 2295 0000 60E0      		ldi r22,lo8(gs(BAND_SPIRAL_SAT_math))
 2296 0002 70E0      		ldi r23,hi8(gs(BAND_SPIRAL_SAT_math))
 2297 0004 0C94 0000 		jmp effect_runner_dx_dy_dist
 2298               	.LVL181:
 2299               		.loc 17 10 56 view .LVU500
 2300               		.cfi_endproc
 2301               	.LFE204:
 2303               		.section	.text.BAND_SPIRAL_VAL,"ax",@progbits
 2304               	.global	BAND_SPIRAL_VAL
 2306               	BAND_SPIRAL_VAL:
 2307               	.LVL182:
 2308               	.LFB206:
   9:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h **** 
  10:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h **** bool BAND_SPIRAL_VAL(effect_params_t* params) { return effect_runner_dx_dy_dist(params, &BAND_SPIRA
 2309               		.loc 18 10 47 is_stmt 1 view -0
 2310               		.cfi_startproc
 2311               	/* prologue: function */
 2312               	/* frame size = 0 */
 2313               	/* stack size = 0 */
 2314               	.L__stack_usage = 0
 2315               		.loc 18 10 49 view .LVU502
 2316               		.loc 18 10 56 is_stmt 0 view .LVU503
 2317 0000 60E0      		ldi r22,lo8(gs(BAND_SPIRAL_VAL_math))
 2318 0002 70E0      		ldi r23,hi8(gs(BAND_SPIRAL_VAL_math))
 2319 0004 0C94 0000 		jmp effect_runner_dx_dy_dist
 2320               	.LVL183:
 2321               		.loc 18 10 56 view .LVU504
 2322               		.cfi_endproc
 2323               	.LFE206:
 2325               		.section	.text.CYCLE_OUT_IN,"ax",@progbits
 2326               	.global	CYCLE_OUT_IN
 2328               	CYCLE_OUT_IN:
 2329               	.LVL184:
 2330               	.LFB216:
   9:quantum/rgb_matrix_animations/cycle_out_in_anim.h **** 
  10:quantum/rgb_matrix_animations/cycle_out_in_anim.h **** bool CYCLE_OUT_IN(effect_params_t* params) { return effect_runner_dx_dy_dist(params, &CYCLE_OUT_IN_
 2331               		.loc 10 10 44 is_stmt 1 view -0
 2332               		.cfi_startproc
 2333               	/* prologue: function */
 2334               	/* frame size = 0 */
 2335               	/* stack size = 0 */
 2336               	.L__stack_usage = 0
 2337               		.loc 10 10 46 view .LVU506
 2338               		.loc 10 10 53 is_stmt 0 view .LVU507
 2339 0000 60E0      		ldi r22,lo8(gs(CYCLE_OUT_IN_math))
 2340 0002 70E0      		ldi r23,hi8(gs(CYCLE_OUT_IN_math))
 2341 0004 0C94 0000 		jmp effect_runner_dx_dy_dist
 2342               	.LVL185:
 2343               		.loc 10 10 53 view .LVU508
 2344               		.cfi_endproc
 2345               	.LFE216:
 2347               		.section	.text.CYCLE_SPIRAL,"ax",@progbits
 2348               	.global	CYCLE_SPIRAL
 2350               	CYCLE_SPIRAL:
 2351               	.LVL186:
 2352               	.LFB222:
   9:quantum/rgb_matrix_animations/cycle_spiral_anim.h **** 
  10:quantum/rgb_matrix_animations/cycle_spiral_anim.h **** bool CYCLE_SPIRAL(effect_params_t* params) { return effect_runner_dx_dy_dist(params, &CYCLE_SPIRAL_
 2353               		.loc 20 10 44 is_stmt 1 view -0
 2354               		.cfi_startproc
 2355               	/* prologue: function */
 2356               	/* frame size = 0 */
 2357               	/* stack size = 0 */
 2358               	.L__stack_usage = 0
 2359               		.loc 20 10 46 view .LVU510
 2360               		.loc 20 10 53 is_stmt 0 view .LVU511
 2361 0000 60E0      		ldi r22,lo8(gs(CYCLE_SPIRAL_math))
 2362 0002 70E0      		ldi r23,hi8(gs(CYCLE_SPIRAL_math))
 2363 0004 0C94 0000 		jmp effect_runner_dx_dy_dist
 2364               	.LVL187:
 2365               		.loc 20 10 53 view .LVU512
 2366               		.cfi_endproc
 2367               	.LFE222:
 2369               		.section	.text.effect_runner_dx_dy,"ax",@progbits
 2370               	.global	effect_runner_dx_dy
 2372               	effect_runner_dx_dy:
 2373               	.LVL188:
 2374               	.LFB187:
 2375               		.file 23 "quantum/rgb_matrix_runners/effect_runner_dx_dy.h"
   1:quantum/rgb_matrix_runners/effect_runner_dx_dy.h **** #pragma once
   2:quantum/rgb_matrix_runners/effect_runner_dx_dy.h **** 
   3:quantum/rgb_matrix_runners/effect_runner_dx_dy.h **** typedef HSV (*dx_dy_f)(HSV hsv, int16_t dx, int16_t dy, uint8_t time);
   4:quantum/rgb_matrix_runners/effect_runner_dx_dy.h **** 
   5:quantum/rgb_matrix_runners/effect_runner_dx_dy.h **** bool effect_runner_dx_dy(effect_params_t* params, dx_dy_f effect_func) {
 2376               		.loc 23 5 72 is_stmt 1 view -0
 2377               		.cfi_startproc
 2378               		.loc 23 5 72 is_stmt 0 view .LVU514
 2379 0000 8F92      		push r8
 2380               	.LCFI57:
 2381               		.cfi_def_cfa_offset 3
 2382               		.cfi_offset 8, -2
 2383 0002 9F92      		push r9
 2384               	.LCFI58:
 2385               		.cfi_def_cfa_offset 4
 2386               		.cfi_offset 9, -3
 2387 0004 AF92      		push r10
 2388               	.LCFI59:
 2389               		.cfi_def_cfa_offset 5
 2390               		.cfi_offset 10, -4
 2391 0006 BF92      		push r11
 2392               	.LCFI60:
 2393               		.cfi_def_cfa_offset 6
 2394               		.cfi_offset 11, -5
 2395 0008 CF92      		push r12
 2396               	.LCFI61:
 2397               		.cfi_def_cfa_offset 7
 2398               		.cfi_offset 12, -6
 2399 000a DF92      		push r13
 2400               	.LCFI62:
 2401               		.cfi_def_cfa_offset 8
 2402               		.cfi_offset 13, -7
 2403 000c EF92      		push r14
 2404               	.LCFI63:
 2405               		.cfi_def_cfa_offset 9
 2406               		.cfi_offset 14, -8
 2407 000e FF92      		push r15
 2408               	.LCFI64:
 2409               		.cfi_def_cfa_offset 10
 2410               		.cfi_offset 15, -9
 2411 0010 0F93      		push r16
 2412               	.LCFI65:
 2413               		.cfi_def_cfa_offset 11
 2414               		.cfi_offset 16, -10
 2415 0012 1F93      		push r17
 2416               	.LCFI66:
 2417               		.cfi_def_cfa_offset 12
 2418               		.cfi_offset 17, -11
 2419 0014 CF93      		push r28
 2420               	.LCFI67:
 2421               		.cfi_def_cfa_offset 13
 2422               		.cfi_offset 28, -12
 2423 0016 DF93      		push r29
 2424               	.LCFI68:
 2425               		.cfi_def_cfa_offset 14
 2426               		.cfi_offset 29, -13
 2427               	/* prologue: function */
 2428               	/* frame size = 0 */
 2429               	/* stack size = 12 */
 2430               	.L__stack_usage = 12
 2431 0018 5C01      		movw r10,r24
 2432 001a 6B01      		movw r12,r22
   6:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2433               		.loc 23 6 5 is_stmt 1 view .LVU515
 2434 001c FC01      		movw r30,r24
 2435 001e C081      		ld r28,Z
 2436 0020 8BE0      		ldi r24,lo8(11)
 2437               	.LVL189:
 2438               		.loc 23 6 5 is_stmt 0 view .LVU516
 2439 0022 C89F      		mul r28,r24
 2440 0024 C02D      		mov r28,r0
 2441 0026 1124      		clr r1
 2442               	.LVL190:
 2443               		.loc 23 6 5 is_stmt 1 view .LVU517
 2444 0028 1BE0      		ldi r17,lo8(11)
 2445 002a 1C0F      		add r17,r28
 2446               	.LVL191:
 2447               		.loc 23 6 5 view .LVU518
 2448 002c 912E      		mov r9,r17
 2449 002e 1733      		cpi r17,lo8(55)
 2450 0030 00F0      		brlo .L76
 2451 0032 36E3      		ldi r19,lo8(54)
 2452 0034 932E      		mov r9,r19
 2453               	.L76:
 2454               	.LVL192:
 2455               		.loc 23 6 44 view .LVU519
   7:quantum/rgb_matrix_runners/effect_runner_dx_dy.h **** 
   8:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     uint8_t time = scale16by8(g_rgb_counters.tick, rgb_matrix_config.speed / 2);
 2456               		.loc 23 8 5 view .LVU520
 2457               		.loc 23 8 20 is_stmt 0 view .LVU521
 2458 0036 6091 0000 		lds r22,rgb_matrix_config+4
 2459               	.LVL193:
 2460               		.loc 23 8 20 view .LVU522
 2461 003a 6695      		lsr r22
 2462 003c 8091 0000 		lds r24,g_rgb_counters
 2463 0040 9091 0000 		lds r25,g_rgb_counters+1
 2464 0044 0E94 0000 		call scale16by8
 2465               	.LVL194:
 2466 0048 882E      		mov r8,r24
 2467               	.LVL195:
   9:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 2468               		.loc 23 9 5 is_stmt 1 view .LVU523
 2469               	.LBB101:
 2470               		.loc 23 9 10 view .LVU524
 2471               		.loc 23 9 10 is_stmt 0 view .LVU525
 2472 004a D0E0      		ldi r29,0
 2473 004c CE01      		movw r24,r28
 2474 004e 880F      		lsl r24
 2475 0050 991F      		rol r25
 2476 0052 9C01      		movw r18,r24
 2477 0054 2050      		subi r18,lo8(-(g_led_config))
 2478 0056 3040      		sbci r19,hi8(-(g_led_config))
 2479 0058 7901      		movw r14,r18
 2480               	.LVL196:
 2481               	.L77:
 2482               		.loc 23 9 5 discriminator 1 view .LVU526
 2483 005a C915      		cp r28,r9
 2484 005c 00F0      		brlo .L80
 2485               	.LBE101:
  10:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         RGB_MATRIX_TEST_LED_FLAGS();
  11:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         int16_t dx  = g_led_config.point[i].x - k_rgb_matrix_center.x;
  12:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         int16_t dy  = g_led_config.point[i].y - k_rgb_matrix_center.y;
  13:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         RGB     rgb = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, time));
  14:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  15:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     }
  16:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     return led_max < DRIVER_LED_TOTAL;
 2486               		.loc 23 16 5 is_stmt 1 view .LVU527
 2487               		.loc 23 16 20 is_stmt 0 view .LVU528
 2488 005e 81E0      		ldi r24,lo8(1)
 2489 0060 1633      		cpi r17,lo8(54)
 2490 0062 00F0      		brlo .L81
 2491 0064 80E0      		ldi r24,0
 2492               	.L81:
 2493               	/* epilogue start */
  17:quantum/rgb_matrix_runners/effect_runner_dx_dy.h **** }
 2494               		.loc 23 17 1 view .LVU529
 2495 0066 DF91      		pop r29
 2496 0068 CF91      		pop r28
 2497               	.LVL197:
 2498               		.loc 23 17 1 view .LVU530
 2499 006a 1F91      		pop r17
 2500 006c 0F91      		pop r16
 2501 006e FF90      		pop r15
 2502 0070 EF90      		pop r14
 2503 0072 DF90      		pop r13
 2504 0074 CF90      		pop r12
 2505               	.LVL198:
 2506               		.loc 23 17 1 view .LVU531
 2507 0076 BF90      		pop r11
 2508 0078 AF90      		pop r10
 2509               	.LVL199:
 2510               		.loc 23 17 1 view .LVU532
 2511 007a 9F90      		pop r9
 2512               	.LVL200:
 2513               		.loc 23 17 1 view .LVU533
 2514 007c 8F90      		pop r8
 2515               	.LVL201:
 2516               		.loc 23 17 1 view .LVU534
 2517 007e 0895      		ret
 2518               	.LVL202:
 2519               	.L80:
 2520               	.LBB103:
 2521               	.LBB102:
  10:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2522               		.loc 23 10 9 is_stmt 1 view .LVU535
 2523 0080 FE01      		movw r30,r28
 2524 0082 E050      		subi r30,lo8(-(g_led_config+156))
 2525 0084 F040      		sbci r31,hi8(-(g_led_config+156))
 2526 0086 8081      		ld r24,Z
 2527 0088 F501      		movw r30,r10
 2528 008a 9181      		ldd r25,Z+1
 2529 008c 8923      		and r24,r25
 2530 008e 01F0      		breq .L79
  11:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         int16_t dy  = g_led_config.point[i].y - k_rgb_matrix_center.y;
 2531               		.loc 23 11 9 view .LVU536
 2532               	.LVL203:
  12:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         RGB     rgb = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, time));
 2533               		.loc 23 12 9 view .LVU537
  13:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2534               		.loc 23 13 9 view .LVU538
  12:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         RGB     rgb = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, time));
 2535               		.loc 23 12 44 is_stmt 0 view .LVU539
 2536 0090 F701      		movw r30,r14
 2537 0092 21A9      		ldd r18,Z+49
  12:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         RGB     rgb = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, time));
 2538               		.loc 23 12 17 view .LVU540
 2539 0094 2052      		subi r18,32
 2540 0096 330B      		sbc r19,r19
 2541               	.LVL204:
  11:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         int16_t dy  = g_led_config.point[i].y - k_rgb_matrix_center.y;
 2542               		.loc 23 11 44 view .LVU541
 2543 0098 40A9      		ldd r20,Z+48
  11:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         int16_t dy  = g_led_config.point[i].y - k_rgb_matrix_center.y;
 2544               		.loc 23 11 17 view .LVU542
 2545 009a 4057      		subi r20,112
 2546 009c 550B      		sbc r21,r21
 2547               	.LVL205:
  13:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2548               		.loc 23 13 23 view .LVU543
 2549 009e 6091 0000 		lds r22,rgb_matrix_config+1
 2550 00a2 7091 0000 		lds r23,rgb_matrix_config+1+1
 2551 00a6 8091 0000 		lds r24,rgb_matrix_config+1+2
 2552 00aa 082D      		mov r16,r8
 2553 00ac F601      		movw r30,r12
 2554 00ae 0995      		icall
 2555               	.LVL206:
  13:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2556               		.loc 23 13 23 view .LVU544
 2557 00b0 0E94 0000 		call hsv_to_rgb
 2558               	.LVL207:
 2559 00b4 462F      		mov r20,r22
 2560               	.LVL208:
  14:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     }
 2561               		.loc 23 14 9 is_stmt 1 view .LVU545
  14:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     }
 2562               		.loc 23 14 9 is_stmt 0 view .LVU546
 2563 00b6 282F      		mov r18,r24
  14:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     }
 2564               		.loc 23 14 9 view .LVU547
 2565 00b8 672F      		mov r22,r23
 2566 00ba CE01      		movw r24,r28
  14:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     }
 2567               		.loc 23 14 9 view .LVU548
 2568 00bc 0E94 0000 		call rgb_matrix_set_color
 2569               	.LVL209:
 2570               	.L79:
  14:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     }
 2571               		.loc 23 14 9 view .LVU549
 2572 00c0 F2E0      		ldi r31,2
 2573 00c2 EF0E      		add r14,r31
 2574 00c4 F11C      		adc r15,__zero_reg__
 2575 00c6 2196      		adiw r28,1
 2576               	.LVL210:
  14:quantum/rgb_matrix_runners/effect_runner_dx_dy.h ****     }
 2577               		.loc 23 14 9 view .LVU550
 2578 00c8 00C0      		rjmp .L77
 2579               	.LBE102:
 2580               	.LBE103:
 2581               		.cfi_endproc
 2582               	.LFE187:
 2584               		.section	.text.BAND_PINWHEEL_SAT,"ax",@progbits
 2585               	.global	BAND_PINWHEEL_SAT
 2587               	BAND_PINWHEEL_SAT:
 2588               	.LVL211:
 2589               	.LFB200:
   9:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h **** 
  10:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h **** bool BAND_PINWHEEL_SAT(effect_params_t* params) { return effect_runner_dx_dy(params, &BAND_PINWHEEL
 2590               		.loc 15 10 49 is_stmt 1 view -0
 2591               		.cfi_startproc
 2592               	/* prologue: function */
 2593               	/* frame size = 0 */
 2594               	/* stack size = 0 */
 2595               	.L__stack_usage = 0
 2596               		.loc 15 10 51 view .LVU552
 2597               		.loc 15 10 58 is_stmt 0 view .LVU553
 2598 0000 60E0      		ldi r22,lo8(gs(BAND_PINWHEEL_SAT_math))
 2599 0002 70E0      		ldi r23,hi8(gs(BAND_PINWHEEL_SAT_math))
 2600 0004 0C94 0000 		jmp effect_runner_dx_dy
 2601               	.LVL212:
 2602               		.loc 15 10 58 view .LVU554
 2603               		.cfi_endproc
 2604               	.LFE200:
 2606               		.section	.text.BAND_PINWHEEL_VAL,"ax",@progbits
 2607               	.global	BAND_PINWHEEL_VAL
 2609               	BAND_PINWHEEL_VAL:
 2610               	.LVL213:
 2611               	.LFB202:
   9:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h **** 
  10:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h **** bool BAND_PINWHEEL_VAL(effect_params_t* params) { return effect_runner_dx_dy(params, &BAND_PINWHEEL
 2612               		.loc 16 10 49 is_stmt 1 view -0
 2613               		.cfi_startproc
 2614               	/* prologue: function */
 2615               	/* frame size = 0 */
 2616               	/* stack size = 0 */
 2617               	.L__stack_usage = 0
 2618               		.loc 16 10 51 view .LVU556
 2619               		.loc 16 10 58 is_stmt 0 view .LVU557
 2620 0000 60E0      		ldi r22,lo8(gs(BAND_PINWHEEL_VAL_math))
 2621 0002 70E0      		ldi r23,hi8(gs(BAND_PINWHEEL_VAL_math))
 2622 0004 0C94 0000 		jmp effect_runner_dx_dy
 2623               	.LVL214:
 2624               		.loc 16 10 58 view .LVU558
 2625               		.cfi_endproc
 2626               	.LFE202:
 2628               		.section	.text.CYCLE_OUT_IN_DUAL,"ax",@progbits
 2629               	.global	CYCLE_OUT_IN_DUAL
 2631               	CYCLE_OUT_IN_DUAL:
 2632               	.LVL215:
 2633               	.LFB218:
  11:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h **** 
  12:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h **** bool CYCLE_OUT_IN_DUAL(effect_params_t* params) { return effect_runner_dx_dy(params, &CYCLE_OUT_IN_
 2634               		.loc 11 12 49 is_stmt 1 view -0
 2635               		.cfi_startproc
 2636               	/* prologue: function */
 2637               	/* frame size = 0 */
 2638               	/* stack size = 0 */
 2639               	.L__stack_usage = 0
 2640               		.loc 11 12 51 view .LVU560
 2641               		.loc 11 12 58 is_stmt 0 view .LVU561
 2642 0000 60E0      		ldi r22,lo8(gs(CYCLE_OUT_IN_DUAL_math))
 2643 0002 70E0      		ldi r23,hi8(gs(CYCLE_OUT_IN_DUAL_math))
 2644 0004 0C94 0000 		jmp effect_runner_dx_dy
 2645               	.LVL216:
 2646               		.loc 11 12 58 view .LVU562
 2647               		.cfi_endproc
 2648               	.LFE218:
 2650               		.section	.text.CYCLE_PINWHEEL,"ax",@progbits
 2651               	.global	CYCLE_PINWHEEL
 2653               	CYCLE_PINWHEEL:
 2654               	.LVL217:
 2655               	.LFB220:
   9:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h **** 
  10:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h **** bool CYCLE_PINWHEEL(effect_params_t* params) { return effect_runner_dx_dy(params, &CYCLE_PINWHEEL_m
 2656               		.loc 19 10 46 is_stmt 1 view -0
 2657               		.cfi_startproc
 2658               	/* prologue: function */
 2659               	/* frame size = 0 */
 2660               	/* stack size = 0 */
 2661               	.L__stack_usage = 0
 2662               		.loc 19 10 48 view .LVU564
 2663               		.loc 19 10 55 is_stmt 0 view .LVU565
 2664 0000 60E0      		ldi r22,lo8(gs(CYCLE_PINWHEEL_math))
 2665 0002 70E0      		ldi r23,hi8(gs(CYCLE_PINWHEEL_math))
 2666 0004 0C94 0000 		jmp effect_runner_dx_dy
 2667               	.LVL218:
 2668               		.loc 19 10 55 view .LVU566
 2669               		.cfi_endproc
 2670               	.LFE220:
 2672               		.section	.text.effect_runner_i,"ax",@progbits
 2673               	.global	effect_runner_i
 2675               	effect_runner_i:
 2676               	.LVL219:
 2677               	.LFB188:
 2678               		.file 24 "quantum/rgb_matrix_runners/effect_runner_i.h"
   1:quantum/rgb_matrix_runners/effect_runner_i.h **** #pragma once
   2:quantum/rgb_matrix_runners/effect_runner_i.h **** 
   3:quantum/rgb_matrix_runners/effect_runner_i.h **** typedef HSV (*i_f)(HSV hsv, uint8_t i, uint8_t time);
   4:quantum/rgb_matrix_runners/effect_runner_i.h **** 
   5:quantum/rgb_matrix_runners/effect_runner_i.h **** bool effect_runner_i(effect_params_t* params, i_f effect_func) {
 2679               		.loc 24 5 64 is_stmt 1 view -0
 2680               		.cfi_startproc
 2681               		.loc 24 5 64 is_stmt 0 view .LVU568
 2682 0000 BF92      		push r11
 2683               	.LCFI69:
 2684               		.cfi_def_cfa_offset 3
 2685               		.cfi_offset 11, -2
 2686 0002 CF92      		push r12
 2687               	.LCFI70:
 2688               		.cfi_def_cfa_offset 4
 2689               		.cfi_offset 12, -3
 2690 0004 DF92      		push r13
 2691               	.LCFI71:
 2692               		.cfi_def_cfa_offset 5
 2693               		.cfi_offset 13, -4
 2694 0006 EF92      		push r14
 2695               	.LCFI72:
 2696               		.cfi_def_cfa_offset 6
 2697               		.cfi_offset 14, -5
 2698 0008 FF92      		push r15
 2699               	.LCFI73:
 2700               		.cfi_def_cfa_offset 7
 2701               		.cfi_offset 15, -6
 2702 000a 0F93      		push r16
 2703               	.LCFI74:
 2704               		.cfi_def_cfa_offset 8
 2705               		.cfi_offset 16, -7
 2706 000c 1F93      		push r17
 2707               	.LCFI75:
 2708               		.cfi_def_cfa_offset 9
 2709               		.cfi_offset 17, -8
 2710 000e CF93      		push r28
 2711               	.LCFI76:
 2712               		.cfi_def_cfa_offset 10
 2713               		.cfi_offset 28, -9
 2714 0010 DF93      		push r29
 2715               	.LCFI77:
 2716               		.cfi_def_cfa_offset 11
 2717               		.cfi_offset 29, -10
 2718               	/* prologue: function */
 2719               	/* frame size = 0 */
 2720               	/* stack size = 9 */
 2721               	.L__stack_usage = 9
 2722 0012 6C01      		movw r12,r24
 2723 0014 7B01      		movw r14,r22
   6:quantum/rgb_matrix_runners/effect_runner_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2724               		.loc 24 6 5 is_stmt 1 view .LVU569
 2725 0016 FC01      		movw r30,r24
 2726 0018 C081      		ld r28,Z
 2727 001a 8BE0      		ldi r24,lo8(11)
 2728               	.LVL220:
 2729               		.loc 24 6 5 is_stmt 0 view .LVU570
 2730 001c C89F      		mul r28,r24
 2731 001e C02D      		mov r28,r0
 2732 0020 1124      		clr r1
 2733               	.LVL221:
 2734               		.loc 24 6 5 is_stmt 1 view .LVU571
 2735 0022 1BE0      		ldi r17,lo8(11)
 2736 0024 1C0F      		add r17,r28
 2737               	.LVL222:
 2738               		.loc 24 6 5 view .LVU572
 2739 0026 012F      		mov r16,r17
 2740 0028 1733      		cpi r17,lo8(55)
 2741 002a 00F0      		brlo .L87
 2742 002c 06E3      		ldi r16,lo8(54)
 2743               	.L87:
 2744               	.LVL223:
 2745               		.loc 24 6 44 view .LVU573
   7:quantum/rgb_matrix_runners/effect_runner_i.h **** 
   8:quantum/rgb_matrix_runners/effect_runner_i.h ****     uint8_t time = scale16by8(g_rgb_counters.tick, rgb_matrix_config.speed / 4);
 2746               		.loc 24 8 5 view .LVU574
 2747               		.loc 24 8 20 is_stmt 0 view .LVU575
 2748 002e 6091 0000 		lds r22,rgb_matrix_config+4
 2749               	.LVL224:
 2750               		.loc 24 8 20 view .LVU576
 2751 0032 6695      		lsr r22
 2752 0034 6695      		lsr r22
 2753 0036 8091 0000 		lds r24,g_rgb_counters
 2754 003a 9091 0000 		lds r25,g_rgb_counters+1
 2755 003e 0E94 0000 		call scale16by8
 2756               	.LVL225:
 2757 0042 B82E      		mov r11,r24
 2758               	.LVL226:
   9:quantum/rgb_matrix_runners/effect_runner_i.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 2759               		.loc 24 9 5 is_stmt 1 view .LVU577
 2760               	.LBB104:
 2761               		.loc 24 9 10 view .LVU578
 2762               		.loc 24 9 10 is_stmt 0 view .LVU579
 2763 0044 D0E0      		ldi r29,0
 2764               	.LVL227:
 2765               	.L88:
 2766               		.loc 24 9 5 discriminator 1 view .LVU580
 2767 0046 C017      		cp r28,r16
 2768 0048 00F0      		brlo .L91
 2769               	.LBE104:
  10:quantum/rgb_matrix_runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
  11:quantum/rgb_matrix_runners/effect_runner_i.h ****         RGB rgb = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, i, time));
  12:quantum/rgb_matrix_runners/effect_runner_i.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  13:quantum/rgb_matrix_runners/effect_runner_i.h ****     }
  14:quantum/rgb_matrix_runners/effect_runner_i.h ****     return led_max < DRIVER_LED_TOTAL;
 2770               		.loc 24 14 5 is_stmt 1 view .LVU581
 2771               		.loc 24 14 20 is_stmt 0 view .LVU582
 2772 004a 81E0      		ldi r24,lo8(1)
 2773 004c 1633      		cpi r17,lo8(54)
 2774 004e 00F0      		brlo .L92
 2775 0050 80E0      		ldi r24,0
 2776               	.L92:
 2777               	/* epilogue start */
  15:quantum/rgb_matrix_runners/effect_runner_i.h **** }
 2778               		.loc 24 15 1 view .LVU583
 2779 0052 DF91      		pop r29
 2780 0054 CF91      		pop r28
 2781               	.LVL228:
 2782               		.loc 24 15 1 view .LVU584
 2783 0056 1F91      		pop r17
 2784 0058 0F91      		pop r16
 2785               	.LVL229:
 2786               		.loc 24 15 1 view .LVU585
 2787 005a FF90      		pop r15
 2788 005c EF90      		pop r14
 2789               	.LVL230:
 2790               		.loc 24 15 1 view .LVU586
 2791 005e DF90      		pop r13
 2792 0060 CF90      		pop r12
 2793               	.LVL231:
 2794               		.loc 24 15 1 view .LVU587
 2795 0062 BF90      		pop r11
 2796               	.LVL232:
 2797               		.loc 24 15 1 view .LVU588
 2798 0064 0895      		ret
 2799               	.LVL233:
 2800               	.L91:
 2801               	.LBB106:
 2802               	.LBB105:
  10:quantum/rgb_matrix_runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2803               		.loc 24 10 9 is_stmt 1 view .LVU589
 2804 0066 FE01      		movw r30,r28
 2805 0068 E050      		subi r30,lo8(-(g_led_config+156))
 2806 006a F040      		sbci r31,hi8(-(g_led_config+156))
 2807 006c 8081      		ld r24,Z
 2808 006e F601      		movw r30,r12
 2809 0070 9181      		ldd r25,Z+1
 2810 0072 8923      		and r24,r25
 2811 0074 01F0      		breq .L90
  11:quantum/rgb_matrix_runners/effect_runner_i.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2812               		.loc 24 11 9 view .LVU590
  11:quantum/rgb_matrix_runners/effect_runner_i.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2813               		.loc 24 11 19 is_stmt 0 view .LVU591
 2814 0076 6091 0000 		lds r22,rgb_matrix_config+1
 2815 007a 7091 0000 		lds r23,rgb_matrix_config+1+1
 2816 007e 8091 0000 		lds r24,rgb_matrix_config+1+2
 2817 0082 2B2D      		mov r18,r11
 2818 0084 4C2F      		mov r20,r28
 2819 0086 F701      		movw r30,r14
 2820 0088 0995      		icall
 2821               	.LVL234:
 2822 008a 0E94 0000 		call hsv_to_rgb
 2823               	.LVL235:
 2824 008e 462F      		mov r20,r22
 2825               	.LVL236:
  12:quantum/rgb_matrix_runners/effect_runner_i.h ****     }
 2826               		.loc 24 12 9 is_stmt 1 view .LVU592
  12:quantum/rgb_matrix_runners/effect_runner_i.h ****     }
 2827               		.loc 24 12 9 is_stmt 0 view .LVU593
 2828 0090 282F      		mov r18,r24
  12:quantum/rgb_matrix_runners/effect_runner_i.h ****     }
 2829               		.loc 24 12 9 view .LVU594
 2830 0092 672F      		mov r22,r23
 2831 0094 CE01      		movw r24,r28
  12:quantum/rgb_matrix_runners/effect_runner_i.h ****     }
 2832               		.loc 24 12 9 view .LVU595
 2833 0096 0E94 0000 		call rgb_matrix_set_color
 2834               	.LVL237:
 2835               	.L90:
  12:quantum/rgb_matrix_runners/effect_runner_i.h ****     }
 2836               		.loc 24 12 9 view .LVU596
 2837 009a 2196      		adiw r28,1
 2838               	.LVL238:
  12:quantum/rgb_matrix_runners/effect_runner_i.h ****     }
 2839               		.loc 24 12 9 view .LVU597
 2840 009c 00C0      		rjmp .L88
 2841               	.LBE105:
 2842               	.LBE106:
 2843               		.cfi_endproc
 2844               	.LFE188:
 2846               		.section	.text.BAND_SAT,"ax",@progbits
 2847               	.global	BAND_SAT
 2849               	BAND_SAT:
 2850               	.LVL239:
 2851               	.LFB196:
  10:quantum/rgb_matrix_animations/colorband_sat_anim.h **** 
  11:quantum/rgb_matrix_animations/colorband_sat_anim.h **** bool BAND_SAT(effect_params_t* params) { return effect_runner_i(params, &BAND_SAT_math); }
 2852               		.loc 4 11 40 is_stmt 1 view -0
 2853               		.cfi_startproc
 2854               	/* prologue: function */
 2855               	/* frame size = 0 */
 2856               	/* stack size = 0 */
 2857               	.L__stack_usage = 0
 2858               		.loc 4 11 42 view .LVU599
 2859               		.loc 4 11 49 is_stmt 0 view .LVU600
 2860 0000 60E0      		ldi r22,lo8(gs(BAND_SAT_math))
 2861 0002 70E0      		ldi r23,hi8(gs(BAND_SAT_math))
 2862 0004 0C94 0000 		jmp effect_runner_i
 2863               	.LVL240:
 2864               		.loc 4 11 49 view .LVU601
 2865               		.cfi_endproc
 2866               	.LFE196:
 2868               		.section	.text.BAND_VAL,"ax",@progbits
 2869               	.global	BAND_VAL
 2871               	BAND_VAL:
 2872               	.LVL241:
 2873               	.LFB198:
  10:quantum/rgb_matrix_animations/colorband_val_anim.h **** 
  11:quantum/rgb_matrix_animations/colorband_val_anim.h **** bool BAND_VAL(effect_params_t* params) { return effect_runner_i(params, &BAND_VAL_math); }
 2874               		.loc 5 11 40 is_stmt 1 view -0
 2875               		.cfi_startproc
 2876               	/* prologue: function */
 2877               	/* frame size = 0 */
 2878               	/* stack size = 0 */
 2879               	.L__stack_usage = 0
 2880               		.loc 5 11 42 view .LVU603
 2881               		.loc 5 11 49 is_stmt 0 view .LVU604
 2882 0000 60E0      		ldi r22,lo8(gs(BAND_VAL_math))
 2883 0002 70E0      		ldi r23,hi8(gs(BAND_VAL_math))
 2884 0004 0C94 0000 		jmp effect_runner_i
 2885               	.LVL242:
 2886               		.loc 5 11 49 view .LVU605
 2887               		.cfi_endproc
 2888               	.LFE198:
 2890               		.section	.text.CYCLE_ALL,"ax",@progbits
 2891               	.global	CYCLE_ALL
 2893               	CYCLE_ALL:
 2894               	.LVL243:
 2895               	.LFB208:
   9:quantum/rgb_matrix_animations/cycle_all_anim.h **** 
  10:quantum/rgb_matrix_animations/cycle_all_anim.h **** bool CYCLE_ALL(effect_params_t* params) { return effect_runner_i(params, &CYCLE_ALL_math); }
 2896               		.loc 6 10 41 is_stmt 1 view -0
 2897               		.cfi_startproc
 2898               	/* prologue: function */
 2899               	/* frame size = 0 */
 2900               	/* stack size = 0 */
 2901               	.L__stack_usage = 0
 2902               		.loc 6 10 43 view .LVU607
 2903               		.loc 6 10 50 is_stmt 0 view .LVU608
 2904 0000 60E0      		ldi r22,lo8(gs(CYCLE_ALL_math))
 2905 0002 70E0      		ldi r23,hi8(gs(CYCLE_ALL_math))
 2906 0004 0C94 0000 		jmp effect_runner_i
 2907               	.LVL244:
 2908               		.loc 6 10 50 view .LVU609
 2909               		.cfi_endproc
 2910               	.LFE208:
 2912               		.section	.text.CYCLE_LEFT_RIGHT,"ax",@progbits
 2913               	.global	CYCLE_LEFT_RIGHT
 2915               	CYCLE_LEFT_RIGHT:
 2916               	.LVL245:
 2917               	.LFB210:
   9:quantum/rgb_matrix_animations/cycle_left_right_anim.h **** 
  10:quantum/rgb_matrix_animations/cycle_left_right_anim.h **** bool CYCLE_LEFT_RIGHT(effect_params_t* params) { return effect_runner_i(params, &CYCLE_LEFT_RIGHT_m
 2918               		.loc 7 10 48 is_stmt 1 view -0
 2919               		.cfi_startproc
 2920               	/* prologue: function */
 2921               	/* frame size = 0 */
 2922               	/* stack size = 0 */
 2923               	.L__stack_usage = 0
 2924               		.loc 7 10 50 view .LVU611
 2925               		.loc 7 10 57 is_stmt 0 view .LVU612
 2926 0000 60E0      		ldi r22,lo8(gs(CYCLE_LEFT_RIGHT_math))
 2927 0002 70E0      		ldi r23,hi8(gs(CYCLE_LEFT_RIGHT_math))
 2928 0004 0C94 0000 		jmp effect_runner_i
 2929               	.LVL246:
 2930               		.loc 7 10 57 view .LVU613
 2931               		.cfi_endproc
 2932               	.LFE210:
 2934               		.section	.text.CYCLE_UP_DOWN,"ax",@progbits
 2935               	.global	CYCLE_UP_DOWN
 2937               	CYCLE_UP_DOWN:
 2938               	.LVL247:
 2939               	.LFB212:
   9:quantum/rgb_matrix_animations/cycle_up_down_anim.h **** 
  10:quantum/rgb_matrix_animations/cycle_up_down_anim.h **** bool CYCLE_UP_DOWN(effect_params_t* params) { return effect_runner_i(params, &CYCLE_UP_DOWN_math); 
 2940               		.loc 8 10 45 is_stmt 1 view -0
 2941               		.cfi_startproc
 2942               	/* prologue: function */
 2943               	/* frame size = 0 */
 2944               	/* stack size = 0 */
 2945               	.L__stack_usage = 0
 2946               		.loc 8 10 47 view .LVU615
 2947               		.loc 8 10 54 is_stmt 0 view .LVU616
 2948 0000 60E0      		ldi r22,lo8(gs(CYCLE_UP_DOWN_math))
 2949 0002 70E0      		ldi r23,hi8(gs(CYCLE_UP_DOWN_math))
 2950 0004 0C94 0000 		jmp effect_runner_i
 2951               	.LVL248:
 2952               		.loc 8 10 54 view .LVU617
 2953               		.cfi_endproc
 2954               	.LFE212:
 2956               		.section	.text.RAINBOW_MOVING_CHEVRON,"ax",@progbits
 2957               	.global	RAINBOW_MOVING_CHEVRON
 2959               	RAINBOW_MOVING_CHEVRON:
 2960               	.LVL249:
 2961               	.LFB214:
   9:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h **** 
  10:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h **** bool RAINBOW_MOVING_CHEVRON(effect_params_t* params) { return effect_runner_i(params, &RAINBOW_MOVI
 2962               		.loc 9 10 54 is_stmt 1 view -0
 2963               		.cfi_startproc
 2964               	/* prologue: function */
 2965               	/* frame size = 0 */
 2966               	/* stack size = 0 */
 2967               	.L__stack_usage = 0
 2968               		.loc 9 10 56 view .LVU619
 2969               		.loc 9 10 63 is_stmt 0 view .LVU620
 2970 0000 60E0      		ldi r22,lo8(gs(RAINBOW_MOVING_CHEVRON_math))
 2971 0002 70E0      		ldi r23,hi8(gs(RAINBOW_MOVING_CHEVRON_math))
 2972 0004 0C94 0000 		jmp effect_runner_i
 2973               	.LVL250:
 2974               		.loc 9 10 63 view .LVU621
 2975               		.cfi_endproc
 2976               	.LFE214:
 2978               		.section	.text.effect_runner_sin_cos_i,"ax",@progbits
 2979               	.global	effect_runner_sin_cos_i
 2981               	effect_runner_sin_cos_i:
 2982               	.LVL251:
 2983               	.LFB189:
 2984               		.file 25 "quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h"
   1:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** #pragma once
   2:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** 
   3:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** typedef HSV (*sin_cos_i_f)(HSV hsv, int8_t sin, int8_t cos, uint8_t i, uint8_t time);
   4:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** 
   5:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** bool effect_runner_sin_cos_i(effect_params_t* params, sin_cos_i_f effect_func) {
 2985               		.loc 25 5 80 is_stmt 1 view -0
 2986               		.cfi_startproc
 2987               		.loc 25 5 80 is_stmt 0 view .LVU623
 2988 0000 7F92      		push r7
 2989               	.LCFI78:
 2990               		.cfi_def_cfa_offset 3
 2991               		.cfi_offset 7, -2
 2992 0002 8F92      		push r8
 2993               	.LCFI79:
 2994               		.cfi_def_cfa_offset 4
 2995               		.cfi_offset 8, -3
 2996 0004 9F92      		push r9
 2997               	.LCFI80:
 2998               		.cfi_def_cfa_offset 5
 2999               		.cfi_offset 9, -4
 3000 0006 AF92      		push r10
 3001               	.LCFI81:
 3002               		.cfi_def_cfa_offset 6
 3003               		.cfi_offset 10, -5
 3004 0008 BF92      		push r11
 3005               	.LCFI82:
 3006               		.cfi_def_cfa_offset 7
 3007               		.cfi_offset 11, -6
 3008 000a CF92      		push r12
 3009               	.LCFI83:
 3010               		.cfi_def_cfa_offset 8
 3011               		.cfi_offset 12, -7
 3012 000c DF92      		push r13
 3013               	.LCFI84:
 3014               		.cfi_def_cfa_offset 9
 3015               		.cfi_offset 13, -8
 3016 000e EF92      		push r14
 3017               	.LCFI85:
 3018               		.cfi_def_cfa_offset 10
 3019               		.cfi_offset 14, -9
 3020 0010 FF92      		push r15
 3021               	.LCFI86:
 3022               		.cfi_def_cfa_offset 11
 3023               		.cfi_offset 15, -10
 3024 0012 0F93      		push r16
 3025               	.LCFI87:
 3026               		.cfi_def_cfa_offset 12
 3027               		.cfi_offset 16, -11
 3028 0014 1F93      		push r17
 3029               	.LCFI88:
 3030               		.cfi_def_cfa_offset 13
 3031               		.cfi_offset 17, -12
 3032 0016 CF93      		push r28
 3033               	.LCFI89:
 3034               		.cfi_def_cfa_offset 14
 3035               		.cfi_offset 28, -13
 3036 0018 DF93      		push r29
 3037               	.LCFI90:
 3038               		.cfi_def_cfa_offset 15
 3039               		.cfi_offset 29, -14
 3040               	/* prologue: function */
 3041               	/* frame size = 0 */
 3042               	/* stack size = 13 */
 3043               	.L__stack_usage = 13
 3044 001a 5C01      		movw r10,r24
 3045 001c 6B01      		movw r12,r22
   6:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3046               		.loc 25 6 5 is_stmt 1 view .LVU624
 3047 001e FC01      		movw r30,r24
 3048 0020 C081      		ld r28,Z
 3049 0022 8BE0      		ldi r24,lo8(11)
 3050               	.LVL252:
 3051               		.loc 25 6 5 is_stmt 0 view .LVU625
 3052 0024 C89F      		mul r28,r24
 3053 0026 C02D      		mov r28,r0
 3054 0028 1124      		clr r1
 3055               	.LVL253:
 3056               		.loc 25 6 5 is_stmt 1 view .LVU626
 3057 002a 1BE0      		ldi r17,lo8(11)
 3058 002c 1C0F      		add r17,r28
 3059               	.LVL254:
 3060               		.loc 25 6 5 view .LVU627
 3061 002e 912E      		mov r9,r17
 3062 0030 1733      		cpi r17,lo8(55)
 3063 0032 00F0      		brlo .L100
 3064 0034 36E3      		ldi r19,lo8(54)
 3065 0036 932E      		mov r9,r19
 3066               	.L100:
 3067               	.LVL255:
 3068               		.loc 25 6 44 view .LVU628
   7:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** 
   8:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     uint16_t time      = scale16by8(g_rgb_counters.tick, rgb_matrix_config.speed / 4);
 3069               		.loc 25 8 5 view .LVU629
 3070               		.loc 25 8 26 is_stmt 0 view .LVU630
 3071 0038 6091 0000 		lds r22,rgb_matrix_config+4
 3072               	.LVL256:
 3073               		.loc 25 8 26 view .LVU631
 3074 003c 6695      		lsr r22
 3075 003e 6695      		lsr r22
 3076 0040 8091 0000 		lds r24,g_rgb_counters
 3077 0044 9091 0000 		lds r25,g_rgb_counters+1
 3078 0048 0E94 0000 		call scale16by8
 3079               	.LVL257:
 3080 004c F82E      		mov r15,r24
   9:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     int8_t   cos_value = cos8(time) - 128;
 3081               		.loc 25 9 5 is_stmt 1 view .LVU632
 3082               	.LVL258:
 3083               	.LBB111:
 3084               	.LBI111:
 253:./lib/lib8tion/trig8.h **** {
 3085               		.loc 3 253 20 view .LVU633
 3086               	.LBB112:
 255:./lib/lib8tion/trig8.h **** }
 3087               		.loc 3 255 5 view .LVU634
 255:./lib/lib8tion/trig8.h **** }
 3088               		.loc 3 255 12 is_stmt 0 view .LVU635
 3089 004e 80E4      		ldi r24,lo8(64)
 3090 0050 8F0D      		add r24,r15
 3091 0052 0E94 0000 		call sin8_avr
 3092               	.LVL259:
 255:./lib/lib8tion/trig8.h **** }
 3093               		.loc 3 255 12 view .LVU636
 3094               	.LBE112:
 3095               	.LBE111:
 3096               		.loc 25 9 37 view .LVU637
 3097 0056 90E8      		ldi r25,lo8(-128)
 3098 0058 892E      		mov r8,r25
 3099 005a 880E      		add r8,r24
 3100               	.LVL260:
  10:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     int8_t   sin_value = sin8(time) - 128;
 3101               		.loc 25 10 5 is_stmt 1 view .LVU638
 3102               		.loc 25 10 26 is_stmt 0 view .LVU639
 3103 005c 8F2D      		mov r24,r15
 3104 005e 0E94 0000 		call sin8_avr
 3105               	.LVL261:
 3106               		.loc 25 10 37 view .LVU640
 3107 0062 20E8      		ldi r18,lo8(-128)
 3108 0064 722E      		mov r7,r18
 3109 0066 780E      		add r7,r24
 3110               	.LVL262:
  11:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3111               		.loc 25 11 5 is_stmt 1 view .LVU641
 3112               	.LBB113:
 3113               		.loc 25 11 10 view .LVU642
 3114               		.loc 25 11 10 is_stmt 0 view .LVU643
 3115 0068 D0E0      		ldi r29,0
 3116               	.LVL263:
 3117               	.L101:
 3118               		.loc 25 11 5 discriminator 1 view .LVU644
 3119 006a C915      		cp r28,r9
 3120 006c 00F0      		brlo .L104
 3121               	.LBE113:
  12:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
  13:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****         RGB rgb = hsv_to_rgb(effect_func(rgb_matrix_config.hsv, cos_value, sin_value, i, time));
  14:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  15:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     }
  16:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     return led_max < DRIVER_LED_TOTAL;
 3122               		.loc 25 16 5 is_stmt 1 view .LVU645
 3123               		.loc 25 16 20 is_stmt 0 view .LVU646
 3124 006e 81E0      		ldi r24,lo8(1)
 3125 0070 1633      		cpi r17,lo8(54)
 3126 0072 00F0      		brlo .L105
 3127 0074 80E0      		ldi r24,0
 3128               	.L105:
 3129               	/* epilogue start */
  17:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h **** }
 3130               		.loc 25 17 1 view .LVU647
 3131 0076 DF91      		pop r29
 3132 0078 CF91      		pop r28
 3133               	.LVL264:
 3134               		.loc 25 17 1 view .LVU648
 3135 007a 1F91      		pop r17
 3136 007c 0F91      		pop r16
 3137 007e FF90      		pop r15
 3138 0080 EF90      		pop r14
 3139 0082 DF90      		pop r13
 3140 0084 CF90      		pop r12
 3141               	.LVL265:
 3142               		.loc 25 17 1 view .LVU649
 3143 0086 BF90      		pop r11
 3144 0088 AF90      		pop r10
 3145               	.LVL266:
 3146               		.loc 25 17 1 view .LVU650
 3147 008a 9F90      		pop r9
 3148               	.LVL267:
 3149               		.loc 25 17 1 view .LVU651
 3150 008c 8F90      		pop r8
 3151               	.LVL268:
 3152               		.loc 25 17 1 view .LVU652
 3153 008e 7F90      		pop r7
 3154               	.LVL269:
 3155               		.loc 25 17 1 view .LVU653
 3156 0090 0895      		ret
 3157               	.LVL270:
 3158               	.L104:
 3159               	.LBB115:
 3160               	.LBB114:
  12:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3161               		.loc 25 12 9 is_stmt 1 view .LVU654
 3162 0092 FE01      		movw r30,r28
 3163 0094 E050      		subi r30,lo8(-(g_led_config+156))
 3164 0096 F040      		sbci r31,hi8(-(g_led_config+156))
 3165 0098 8081      		ld r24,Z
 3166 009a F501      		movw r30,r10
 3167 009c 9181      		ldd r25,Z+1
 3168 009e 8923      		and r24,r25
 3169 00a0 01F0      		breq .L103
  13:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3170               		.loc 25 13 9 view .LVU655
  13:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3171               		.loc 25 13 19 is_stmt 0 view .LVU656
 3172 00a2 6091 0000 		lds r22,rgb_matrix_config+1
 3173 00a6 7091 0000 		lds r23,rgb_matrix_config+1+1
 3174 00aa 8091 0000 		lds r24,rgb_matrix_config+1+2
 3175 00ae EF2C      		mov r14,r15
 3176 00b0 0C2F      		mov r16,r28
 3177 00b2 272D      		mov r18,r7
 3178 00b4 482D      		mov r20,r8
 3179 00b6 F601      		movw r30,r12
 3180 00b8 0995      		icall
 3181               	.LVL271:
 3182 00ba 0E94 0000 		call hsv_to_rgb
 3183               	.LVL272:
 3184 00be 462F      		mov r20,r22
 3185               	.LVL273:
  14:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     }
 3186               		.loc 25 14 9 is_stmt 1 view .LVU657
  14:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     }
 3187               		.loc 25 14 9 is_stmt 0 view .LVU658
 3188 00c0 282F      		mov r18,r24
  14:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     }
 3189               		.loc 25 14 9 view .LVU659
 3190 00c2 672F      		mov r22,r23
 3191 00c4 CE01      		movw r24,r28
  14:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     }
 3192               		.loc 25 14 9 view .LVU660
 3193 00c6 0E94 0000 		call rgb_matrix_set_color
 3194               	.LVL274:
 3195               	.L103:
  14:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     }
 3196               		.loc 25 14 9 view .LVU661
 3197 00ca 2196      		adiw r28,1
 3198               	.LVL275:
  14:quantum/rgb_matrix_runners/effect_runner_sin_cos_i.h ****     }
 3199               		.loc 25 14 9 view .LVU662
 3200 00cc 00C0      		rjmp .L101
 3201               	.LBE114:
 3202               	.LBE115:
 3203               		.cfi_endproc
 3204               	.LFE189:
 3206               		.section	.text.DUAL_BEACON,"ax",@progbits
 3207               	.global	DUAL_BEACON
 3209               	DUAL_BEACON:
 3210               	.LVL276:
 3211               	.LFB224:
   9:quantum/rgb_matrix_animations/dual_beacon_anim.h **** 
  10:quantum/rgb_matrix_animations/dual_beacon_anim.h **** bool DUAL_BEACON(effect_params_t* params) { return effect_runner_sin_cos_i(params, &DUAL_BEACON_mat
 3212               		.loc 12 10 43 is_stmt 1 view -0
 3213               		.cfi_startproc
 3214               	/* prologue: function */
 3215               	/* frame size = 0 */
 3216               	/* stack size = 0 */
 3217               	.L__stack_usage = 0
 3218               		.loc 12 10 45 view .LVU664
 3219               		.loc 12 10 52 is_stmt 0 view .LVU665
 3220 0000 60E0      		ldi r22,lo8(gs(DUAL_BEACON_math))
 3221 0002 70E0      		ldi r23,hi8(gs(DUAL_BEACON_math))
 3222 0004 0C94 0000 		jmp effect_runner_sin_cos_i
 3223               	.LVL277:
 3224               		.loc 12 10 52 view .LVU666
 3225               		.cfi_endproc
 3226               	.LFE224:
 3228               		.section	.text.RAINBOW_BEACON,"ax",@progbits
 3229               	.global	RAINBOW_BEACON
 3231               	RAINBOW_BEACON:
 3232               	.LVL278:
 3233               	.LFB226:
   9:quantum/rgb_matrix_animations/rainbow_beacon_anim.h **** 
  10:quantum/rgb_matrix_animations/rainbow_beacon_anim.h **** bool RAINBOW_BEACON(effect_params_t* params) { return effect_runner_sin_cos_i(params, &RAINBOW_BEAC
 3234               		.loc 13 10 46 is_stmt 1 view -0
 3235               		.cfi_startproc
 3236               	/* prologue: function */
 3237               	/* frame size = 0 */
 3238               	/* stack size = 0 */
 3239               	.L__stack_usage = 0
 3240               		.loc 13 10 48 view .LVU668
 3241               		.loc 13 10 55 is_stmt 0 view .LVU669
 3242 0000 60E0      		ldi r22,lo8(gs(RAINBOW_BEACON_math))
 3243 0002 70E0      		ldi r23,hi8(gs(RAINBOW_BEACON_math))
 3244 0004 0C94 0000 		jmp effect_runner_sin_cos_i
 3245               	.LVL279:
 3246               		.loc 13 10 55 view .LVU670
 3247               		.cfi_endproc
 3248               	.LFE226:
 3250               		.section	.text.RAINBOW_PINWHEELS,"ax",@progbits
 3251               	.global	RAINBOW_PINWHEELS
 3253               	RAINBOW_PINWHEELS:
 3254               	.LVL280:
 3255               	.LFB228:
   9:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h **** 
  10:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h **** bool RAINBOW_PINWHEELS(effect_params_t* params) { return effect_runner_sin_cos_i(params, &RAINBOW_P
 3256               		.loc 14 10 49 is_stmt 1 view -0
 3257               		.cfi_startproc
 3258               	/* prologue: function */
 3259               	/* frame size = 0 */
 3260               	/* stack size = 0 */
 3261               	.L__stack_usage = 0
 3262               		.loc 14 10 51 view .LVU672
 3263               		.loc 14 10 58 is_stmt 0 view .LVU673
 3264 0000 60E0      		ldi r22,lo8(gs(RAINBOW_PINWHEELS_math))
 3265 0002 70E0      		ldi r23,hi8(gs(RAINBOW_PINWHEELS_math))
 3266 0004 0C94 0000 		jmp effect_runner_sin_cos_i
 3267               	.LVL281:
 3268               		.loc 14 10 58 view .LVU674
 3269               		.cfi_endproc
 3270               	.LFE228:
 3272               		.section	.text.SOLID_COLOR,"ax",@progbits
 3273               	.global	SOLID_COLOR
 3275               	SOLID_COLOR:
 3276               	.LVL282:
 3277               	.LFB190:
 3278               		.file 26 "quantum/rgb_matrix_animations/solid_color_anim.h"
   1:quantum/rgb_matrix_animations/solid_color_anim.h **** RGB_MATRIX_EFFECT(SOLID_COLOR)
   2:quantum/rgb_matrix_animations/solid_color_anim.h **** #ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   3:quantum/rgb_matrix_animations/solid_color_anim.h **** 
   4:quantum/rgb_matrix_animations/solid_color_anim.h **** bool SOLID_COLOR(effect_params_t* params) {
 3279               		.loc 26 4 43 is_stmt 1 view -0
 3280               		.cfi_startproc
 3281               		.loc 26 4 43 is_stmt 0 view .LVU676
 3282 0000 BF92      		push r11
 3283               	.LCFI91:
 3284               		.cfi_def_cfa_offset 3
 3285               		.cfi_offset 11, -2
 3286 0002 CF92      		push r12
 3287               	.LCFI92:
 3288               		.cfi_def_cfa_offset 4
 3289               		.cfi_offset 12, -3
 3290 0004 DF92      		push r13
 3291               	.LCFI93:
 3292               		.cfi_def_cfa_offset 5
 3293               		.cfi_offset 13, -4
 3294 0006 EF92      		push r14
 3295               	.LCFI94:
 3296               		.cfi_def_cfa_offset 6
 3297               		.cfi_offset 14, -5
 3298 0008 FF92      		push r15
 3299               	.LCFI95:
 3300               		.cfi_def_cfa_offset 7
 3301               		.cfi_offset 15, -6
 3302 000a 0F93      		push r16
 3303               	.LCFI96:
 3304               		.cfi_def_cfa_offset 8
 3305               		.cfi_offset 16, -7
 3306 000c 1F93      		push r17
 3307               	.LCFI97:
 3308               		.cfi_def_cfa_offset 9
 3309               		.cfi_offset 17, -8
 3310 000e CF93      		push r28
 3311               	.LCFI98:
 3312               		.cfi_def_cfa_offset 10
 3313               		.cfi_offset 28, -9
 3314 0010 DF93      		push r29
 3315               	.LCFI99:
 3316               		.cfi_def_cfa_offset 11
 3317               		.cfi_offset 29, -10
 3318               	/* prologue: function */
 3319               	/* frame size = 0 */
 3320               	/* stack size = 9 */
 3321               	.L__stack_usage = 9
 3322 0012 7C01      		movw r14,r24
   5:quantum/rgb_matrix_animations/solid_color_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3323               		.loc 26 5 5 is_stmt 1 view .LVU677
 3324 0014 FC01      		movw r30,r24
 3325 0016 C081      		ld r28,Z
 3326 0018 8BE0      		ldi r24,lo8(11)
 3327               	.LVL283:
 3328               		.loc 26 5 5 is_stmt 0 view .LVU678
 3329 001a C89F      		mul r28,r24
 3330 001c C02D      		mov r28,r0
 3331 001e 1124      		clr r1
 3332               	.LVL284:
 3333               		.loc 26 5 5 is_stmt 1 view .LVU679
 3334 0020 1BE0      		ldi r17,lo8(11)
 3335 0022 1C0F      		add r17,r28
 3336               	.LVL285:
 3337               		.loc 26 5 5 view .LVU680
 3338 0024 012F      		mov r16,r17
 3339 0026 1733      		cpi r17,lo8(55)
 3340 0028 00F0      		brlo .L110
 3341 002a 06E3      		ldi r16,lo8(54)
 3342               	.L110:
 3343               	.LVL286:
 3344               		.loc 26 5 44 view .LVU681
   6:quantum/rgb_matrix_animations/solid_color_anim.h **** 
   7:quantum/rgb_matrix_animations/solid_color_anim.h ****     RGB rgb = hsv_to_rgb(rgb_matrix_config.hsv);
 3345               		.loc 26 7 5 view .LVU682
 3346               		.loc 26 7 15 is_stmt 0 view .LVU683
 3347 002c 6091 0000 		lds r22,rgb_matrix_config+1
 3348 0030 7091 0000 		lds r23,rgb_matrix_config+1+1
 3349 0034 8091 0000 		lds r24,rgb_matrix_config+1+2
 3350 0038 0E94 0000 		call hsv_to_rgb
 3351               	.LVL287:
 3352 003c D62E      		mov r13,r22
 3353               	.LVL288:
 3354               		.loc 26 7 15 view .LVU684
 3355 003e C72E      		mov r12,r23
 3356               		.loc 26 7 15 view .LVU685
 3357 0040 B82E      		mov r11,r24
   8:quantum/rgb_matrix_animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3358               		.loc 26 8 5 is_stmt 1 view .LVU686
 3359               	.LBB116:
 3360               		.loc 26 8 10 view .LVU687
 3361               	.LVL289:
 3362               		.loc 26 8 10 is_stmt 0 view .LVU688
 3363 0042 D0E0      		ldi r29,0
 3364               	.LVL290:
 3365               	.L111:
 3366               		.loc 26 8 5 discriminator 1 view .LVU689
 3367 0044 C017      		cp r28,r16
 3368 0046 00F0      		brlo .L113
 3369               	.LBE116:
   9:quantum/rgb_matrix_animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
  10:quantum/rgb_matrix_animations/solid_color_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  11:quantum/rgb_matrix_animations/solid_color_anim.h ****     }
  12:quantum/rgb_matrix_animations/solid_color_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 3370               		.loc 26 12 5 is_stmt 1 view .LVU690
 3371               		.loc 26 12 20 is_stmt 0 view .LVU691
 3372 0048 81E0      		ldi r24,lo8(1)
 3373 004a 1633      		cpi r17,lo8(54)
 3374 004c 00F0      		brlo .L114
 3375 004e 80E0      		ldi r24,0
 3376               	.L114:
 3377               	/* epilogue start */
  13:quantum/rgb_matrix_animations/solid_color_anim.h **** }
 3378               		.loc 26 13 1 view .LVU692
 3379 0050 DF91      		pop r29
 3380 0052 CF91      		pop r28
 3381               	.LVL291:
 3382               		.loc 26 13 1 view .LVU693
 3383 0054 1F91      		pop r17
 3384 0056 0F91      		pop r16
 3385               	.LVL292:
 3386               		.loc 26 13 1 view .LVU694
 3387 0058 FF90      		pop r15
 3388 005a EF90      		pop r14
 3389               	.LVL293:
 3390               		.loc 26 13 1 view .LVU695
 3391 005c DF90      		pop r13
 3392               	.LVL294:
 3393               		.loc 26 13 1 view .LVU696
 3394 005e CF90      		pop r12
 3395               		.loc 26 13 1 view .LVU697
 3396 0060 BF90      		pop r11
 3397               		.loc 26 13 1 view .LVU698
 3398 0062 0895      		ret
 3399               	.LVL295:
 3400               	.L113:
 3401               	.LBB117:
   9:quantum/rgb_matrix_animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3402               		.loc 26 9 9 is_stmt 1 view .LVU699
 3403 0064 FE01      		movw r30,r28
 3404 0066 E050      		subi r30,lo8(-(g_led_config+156))
 3405 0068 F040      		sbci r31,hi8(-(g_led_config+156))
 3406 006a 8081      		ld r24,Z
 3407 006c F701      		movw r30,r14
 3408 006e 9181      		ldd r25,Z+1
 3409 0070 8923      		and r24,r25
 3410 0072 01F0      		breq .L112
  10:quantum/rgb_matrix_animations/solid_color_anim.h ****     }
 3411               		.loc 26 10 9 view .LVU700
 3412 0074 2B2D      		mov r18,r11
 3413 0076 4D2D      		mov r20,r13
 3414 0078 6C2D      		mov r22,r12
 3415 007a CE01      		movw r24,r28
 3416 007c 0E94 0000 		call rgb_matrix_set_color
 3417               	.LVL296:
 3418               	.L112:
  10:quantum/rgb_matrix_animations/solid_color_anim.h ****     }
 3419               		.loc 26 10 9 is_stmt 0 view .LVU701
 3420 0080 2196      		adiw r28,1
 3421               	.LVL297:
  10:quantum/rgb_matrix_animations/solid_color_anim.h ****     }
 3422               		.loc 26 10 9 view .LVU702
 3423 0082 00C0      		rjmp .L111
 3424               	.LBE117:
 3425               		.cfi_endproc
 3426               	.LFE190:
 3428               		.section	.text.ALPHAS_MODS,"ax",@progbits
 3429               	.global	ALPHAS_MODS
 3431               	ALPHAS_MODS:
 3432               	.LVL298:
 3433               	.LFB191:
 3434               		.file 27 "quantum/rgb_matrix_animations/alpha_mods_anim.h"
   1:quantum/rgb_matrix_animations/alpha_mods_anim.h **** #ifndef DISABLE_RGB_MATRIX_ALPHAS_MODS
   2:quantum/rgb_matrix_animations/alpha_mods_anim.h **** RGB_MATRIX_EFFECT(ALPHAS_MODS)
   3:quantum/rgb_matrix_animations/alpha_mods_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/alpha_mods_anim.h **** 
   5:quantum/rgb_matrix_animations/alpha_mods_anim.h **** // alphas = color1, mods = color2
   6:quantum/rgb_matrix_animations/alpha_mods_anim.h **** bool ALPHAS_MODS(effect_params_t* params) {
 3435               		.loc 27 6 43 is_stmt 1 view -0
 3436               		.cfi_startproc
 3437               		.loc 27 6 43 is_stmt 0 view .LVU704
 3438 0000 8F92      		push r8
 3439               	.LCFI100:
 3440               		.cfi_def_cfa_offset 3
 3441               		.cfi_offset 8, -2
 3442 0002 9F92      		push r9
 3443               	.LCFI101:
 3444               		.cfi_def_cfa_offset 4
 3445               		.cfi_offset 9, -3
 3446 0004 AF92      		push r10
 3447               	.LCFI102:
 3448               		.cfi_def_cfa_offset 5
 3449               		.cfi_offset 10, -4
 3450 0006 BF92      		push r11
 3451               	.LCFI103:
 3452               		.cfi_def_cfa_offset 6
 3453               		.cfi_offset 11, -5
 3454 0008 CF92      		push r12
 3455               	.LCFI104:
 3456               		.cfi_def_cfa_offset 7
 3457               		.cfi_offset 12, -6
 3458 000a DF92      		push r13
 3459               	.LCFI105:
 3460               		.cfi_def_cfa_offset 8
 3461               		.cfi_offset 13, -7
 3462 000c EF92      		push r14
 3463               	.LCFI106:
 3464               		.cfi_def_cfa_offset 9
 3465               		.cfi_offset 14, -8
 3466 000e FF92      		push r15
 3467               	.LCFI107:
 3468               		.cfi_def_cfa_offset 10
 3469               		.cfi_offset 15, -9
 3470 0010 0F93      		push r16
 3471               	.LCFI108:
 3472               		.cfi_def_cfa_offset 11
 3473               		.cfi_offset 16, -10
 3474 0012 1F93      		push r17
 3475               	.LCFI109:
 3476               		.cfi_def_cfa_offset 12
 3477               		.cfi_offset 17, -11
 3478 0014 CF93      		push r28
 3479               	.LCFI110:
 3480               		.cfi_def_cfa_offset 13
 3481               		.cfi_offset 28, -12
 3482 0016 DF93      		push r29
 3483               	.LCFI111:
 3484               		.cfi_def_cfa_offset 14
 3485               		.cfi_offset 29, -13
 3486               	/* prologue: function */
 3487               	/* frame size = 0 */
 3488               	/* stack size = 12 */
 3489               	.L__stack_usage = 12
 3490 0018 7C01      		movw r14,r24
   7:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3491               		.loc 27 7 5 is_stmt 1 view .LVU705
 3492 001a FC01      		movw r30,r24
 3493 001c C081      		ld r28,Z
 3494 001e 8BE0      		ldi r24,lo8(11)
 3495               	.LVL299:
 3496               		.loc 27 7 5 is_stmt 0 view .LVU706
 3497 0020 C89F      		mul r28,r24
 3498 0022 C02D      		mov r28,r0
 3499 0024 1124      		clr r1
 3500               	.LVL300:
 3501               		.loc 27 7 5 is_stmt 1 view .LVU707
 3502 0026 1BE0      		ldi r17,lo8(11)
 3503 0028 1C0F      		add r17,r28
 3504               	.LVL301:
 3505               		.loc 27 7 5 view .LVU708
 3506 002a 012F      		mov r16,r17
 3507 002c 1733      		cpi r17,lo8(55)
 3508 002e 00F0      		brlo .L119
 3509 0030 06E3      		ldi r16,lo8(54)
 3510               	.L119:
 3511               	.LVL302:
 3512               		.loc 27 7 44 view .LVU709
   8:quantum/rgb_matrix_animations/alpha_mods_anim.h **** 
   9:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     HSV hsv  = rgb_matrix_config.hsv;
 3513               		.loc 27 9 5 view .LVU710
 3514               		.loc 27 9 9 is_stmt 0 view .LVU711
 3515 0032 C090 0000 		lds r12,rgb_matrix_config+2
 3516               	.LVL303:
 3517               		.loc 27 9 9 view .LVU712
 3518 0036 D090 0000 		lds r13,rgb_matrix_config+3
 3519               		.loc 27 9 9 view .LVU713
 3520 003a D091 0000 		lds r29,rgb_matrix_config+1
 3521               	.LVL304:
  10:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     RGB rgb1 = hsv_to_rgb(hsv);
 3522               		.loc 27 10 5 is_stmt 1 view .LVU714
 3523               		.loc 27 10 16 is_stmt 0 view .LVU715
 3524 003e 6D2F      		mov r22,r29
 3525               	.LVL305:
 3526               		.loc 27 10 16 view .LVU716
 3527 0040 7C2D      		mov r23,r12
 3528               		.loc 27 10 16 view .LVU717
 3529 0042 8D2D      		mov r24,r13
 3530 0044 0E94 0000 		call hsv_to_rgb
 3531               	.LVL306:
 3532 0048 B62E      		mov r11,r22
 3533               	.LVL307:
 3534               		.loc 27 10 16 view .LVU718
 3535 004a A72E      		mov r10,r23
 3536               		.loc 27 10 16 view .LVU719
 3537 004c 982E      		mov r9,r24
  11:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     hsv.h += rgb_matrix_config.speed;
 3538               		.loc 27 11 5 is_stmt 1 view .LVU720
 3539               	.LVL308:
  12:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     RGB rgb2 = hsv_to_rgb(hsv);
 3540               		.loc 27 12 5 view .LVU721
  11:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     hsv.h += rgb_matrix_config.speed;
 3541               		.loc 27 11 11 is_stmt 0 view .LVU722
 3542 004e 6091 0000 		lds r22,rgb_matrix_config+4
 3543 0052 6D0F      		add r22,r29
 3544               	.LVL309:
 3545               		.loc 27 12 16 view .LVU723
 3546 0054 7C2D      		mov r23,r12
 3547 0056 8D2D      		mov r24,r13
 3548 0058 0E94 0000 		call hsv_to_rgb
 3549               	.LVL310:
 3550               		.loc 27 12 16 view .LVU724
 3551 005c D62E      		mov r13,r22
 3552               	.LVL311:
 3553               		.loc 27 12 16 view .LVU725
 3554 005e C72E      		mov r12,r23
 3555               		.loc 27 12 16 view .LVU726
 3556 0060 882E      		mov r8,r24
  13:quantum/rgb_matrix_animations/alpha_mods_anim.h **** 
  14:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3557               		.loc 27 14 5 is_stmt 1 view .LVU727
 3558               	.LBB118:
 3559               		.loc 27 14 10 view .LVU728
 3560               	.LVL312:
 3561               		.loc 27 14 10 is_stmt 0 view .LVU729
 3562 0062 D0E0      		ldi r29,0
 3563               	.LVL313:
 3564               	.L120:
 3565               		.loc 27 14 5 discriminator 1 view .LVU730
 3566 0064 C017      		cp r28,r16
 3567 0066 00F0      		brlo .L123
 3568               	.LBE118:
  15:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
  16:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         if (HAS_FLAGS(g_led_config.flags[i], LED_FLAG_MODIFIER)) {
  17:quantum/rgb_matrix_animations/alpha_mods_anim.h ****             rgb_matrix_set_color(i, rgb2.r, rgb2.g, rgb2.b);
  18:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         } else {
  19:quantum/rgb_matrix_animations/alpha_mods_anim.h ****             rgb_matrix_set_color(i, rgb1.r, rgb1.g, rgb1.b);
  20:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         }
  21:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     }
  22:quantum/rgb_matrix_animations/alpha_mods_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 3569               		.loc 27 22 5 is_stmt 1 view .LVU731
 3570               	.LVL314:
 3571               		.loc 27 22 20 is_stmt 0 view .LVU732
 3572 0068 81E0      		ldi r24,lo8(1)
 3573 006a 1633      		cpi r17,lo8(54)
 3574 006c 00F0      		brlo .L124
 3575 006e 80E0      		ldi r24,0
 3576               	.L124:
 3577               	/* epilogue start */
  23:quantum/rgb_matrix_animations/alpha_mods_anim.h **** }
 3578               		.loc 27 23 1 view .LVU733
 3579 0070 DF91      		pop r29
 3580 0072 CF91      		pop r28
 3581               	.LVL315:
 3582               		.loc 27 23 1 view .LVU734
 3583 0074 1F91      		pop r17
 3584 0076 0F91      		pop r16
 3585               	.LVL316:
 3586               		.loc 27 23 1 view .LVU735
 3587 0078 FF90      		pop r15
 3588 007a EF90      		pop r14
 3589               	.LVL317:
 3590               		.loc 27 23 1 view .LVU736
 3591 007c DF90      		pop r13
 3592               	.LVL318:
 3593               		.loc 27 23 1 view .LVU737
 3594 007e CF90      		pop r12
 3595               		.loc 27 23 1 view .LVU738
 3596 0080 BF90      		pop r11
 3597               	.LVL319:
 3598               		.loc 27 23 1 view .LVU739
 3599 0082 AF90      		pop r10
 3600               		.loc 27 23 1 view .LVU740
 3601 0084 9F90      		pop r9
 3602               		.loc 27 23 1 view .LVU741
 3603 0086 8F90      		pop r8
 3604               		.loc 27 23 1 view .LVU742
 3605 0088 0895      		ret
 3606               	.LVL320:
 3607               	.L123:
 3608               	.LBB119:
  15:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3609               		.loc 27 15 9 is_stmt 1 view .LVU743
 3610 008a FE01      		movw r30,r28
 3611 008c E050      		subi r30,lo8(-(g_led_config+156))
 3612 008e F040      		sbci r31,hi8(-(g_led_config+156))
 3613 0090 9081      		ld r25,Z
 3614 0092 F701      		movw r30,r14
 3615 0094 8181      		ldd r24,Z+1
 3616 0096 8923      		and r24,r25
 3617 0098 01F0      		breq .L121
  16:quantum/rgb_matrix_animations/alpha_mods_anim.h ****             rgb_matrix_set_color(i, rgb2.r, rgb2.g, rgb2.b);
 3618               		.loc 27 16 9 view .LVU744
  17:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         } else {
 3619               		.loc 27 17 13 is_stmt 0 view .LVU745
 3620 009a 282D      		mov r18,r8
 3621 009c 4D2D      		mov r20,r13
 3622 009e 6C2D      		mov r22,r12
  16:quantum/rgb_matrix_animations/alpha_mods_anim.h ****             rgb_matrix_set_color(i, rgb2.r, rgb2.g, rgb2.b);
 3623               		.loc 27 16 12 view .LVU746
 3624 00a0 90FD      		sbrc r25,0
 3625 00a2 00C0      		rjmp .L128
  19:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         }
 3626               		.loc 27 19 13 is_stmt 1 view .LVU747
 3627 00a4 292D      		mov r18,r9
 3628 00a6 4B2D      		mov r20,r11
 3629 00a8 6A2D      		mov r22,r10
 3630               	.L128:
 3631 00aa CE01      		movw r24,r28
 3632 00ac 0E94 0000 		call rgb_matrix_set_color
 3633               	.LVL321:
 3634               	.L121:
  19:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         }
 3635               		.loc 27 19 13 is_stmt 0 view .LVU748
 3636 00b0 2196      		adiw r28,1
 3637               	.LVL322:
  19:quantum/rgb_matrix_animations/alpha_mods_anim.h ****         }
 3638               		.loc 27 19 13 view .LVU749
 3639 00b2 00C0      		rjmp .L120
 3640               	.LBE119:
 3641               		.cfi_endproc
 3642               	.LFE191:
 3644               		.section	.text.GRADIENT_UP_DOWN,"ax",@progbits
 3645               	.global	GRADIENT_UP_DOWN
 3647               	GRADIENT_UP_DOWN:
 3648               	.LVL323:
 3649               	.LFB192:
 3650               		.file 28 "quantum/rgb_matrix_animations/gradient_up_down_anim.h"
   1:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** #ifndef DISABLE_RGB_MATRIX_GRADIENT_UP_DOWN
   2:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** RGB_MATRIX_EFFECT(GRADIENT_UP_DOWN)
   3:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** 
   5:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** bool GRADIENT_UP_DOWN(effect_params_t* params) {
 3651               		.loc 28 5 48 is_stmt 1 view -0
 3652               		.cfi_startproc
 3653               		.loc 28 5 48 is_stmt 0 view .LVU751
 3654 0000 BF92      		push r11
 3655               	.LCFI112:
 3656               		.cfi_def_cfa_offset 3
 3657               		.cfi_offset 11, -2
 3658 0002 CF92      		push r12
 3659               	.LCFI113:
 3660               		.cfi_def_cfa_offset 4
 3661               		.cfi_offset 12, -3
 3662 0004 DF92      		push r13
 3663               	.LCFI114:
 3664               		.cfi_def_cfa_offset 5
 3665               		.cfi_offset 13, -4
 3666 0006 EF92      		push r14
 3667               	.LCFI115:
 3668               		.cfi_def_cfa_offset 6
 3669               		.cfi_offset 14, -5
 3670 0008 FF92      		push r15
 3671               	.LCFI116:
 3672               		.cfi_def_cfa_offset 7
 3673               		.cfi_offset 15, -6
 3674 000a 0F93      		push r16
 3675               	.LCFI117:
 3676               		.cfi_def_cfa_offset 8
 3677               		.cfi_offset 16, -7
 3678 000c 1F93      		push r17
 3679               	.LCFI118:
 3680               		.cfi_def_cfa_offset 9
 3681               		.cfi_offset 17, -8
 3682 000e CF93      		push r28
 3683               	.LCFI119:
 3684               		.cfi_def_cfa_offset 10
 3685               		.cfi_offset 28, -9
 3686 0010 DF93      		push r29
 3687               	.LCFI120:
 3688               		.cfi_def_cfa_offset 11
 3689               		.cfi_offset 29, -10
 3690               	/* prologue: function */
 3691               	/* frame size = 0 */
 3692               	/* stack size = 9 */
 3693               	.L__stack_usage = 9
 3694 0012 7C01      		movw r14,r24
   6:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3695               		.loc 28 6 5 is_stmt 1 view .LVU752
 3696 0014 FC01      		movw r30,r24
 3697 0016 C081      		ld r28,Z
 3698 0018 8BE0      		ldi r24,lo8(11)
 3699               	.LVL324:
 3700               		.loc 28 6 5 is_stmt 0 view .LVU753
 3701 001a C89F      		mul r28,r24
 3702 001c C02D      		mov r28,r0
 3703 001e 1124      		clr r1
 3704               	.LVL325:
 3705               		.loc 28 6 5 is_stmt 1 view .LVU754
 3706 0020 1BE0      		ldi r17,lo8(11)
 3707 0022 1C0F      		add r17,r28
 3708               	.LVL326:
 3709               		.loc 28 6 5 view .LVU755
 3710 0024 D12E      		mov r13,r17
 3711 0026 1733      		cpi r17,lo8(55)
 3712 0028 00F0      		brlo .L130
 3713 002a 96E3      		ldi r25,lo8(54)
 3714 002c D92E      		mov r13,r25
 3715               	.L130:
 3716               	.LVL327:
 3717               		.loc 28 6 44 view .LVU756
   7:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** 
   8:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     HSV     hsv   = rgb_matrix_config.hsv;
 3718               		.loc 28 8 5 view .LVU757
 3719               		.loc 28 8 13 is_stmt 0 view .LVU758
 3720 002e C090 0000 		lds r12,rgb_matrix_config+2
 3721               	.LVL328:
 3722               		.loc 28 8 13 view .LVU759
 3723 0032 B090 0000 		lds r11,rgb_matrix_config+3
   9:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 3724               		.loc 28 9 5 is_stmt 1 view .LVU760
 3725               	.LVL329:
 3726               	.LBB120:
 3727               	.LBI120:
  20:./lib/lib8tion/scale8.h **** {
 3728               		.loc 1 20 34 view .LVU761
 3729               	.LBB121:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 3730               		.loc 1 61 5 view .LVU762
 3731 0036 2091 0000 		lds r18,rgb_matrix_config+4
 3732 003a 00E4      		ldi r16,lo8(64)
 3733               	/* #APP */
 3734               	 ;  61 "./lib/lib8tion/scale8.h" 1
 3735 003c 029F      		mul r16, r18          
 3736 003e 012D      		mov r16, r1          
 3737 0040 1124      		clr __zero_reg__    
 3738               		
 3739               	 ;  0 "" 2
 3740               	.LVL330:
  85:./lib/lib8tion/scale8.h **** #endif
 3741               		.loc 1 85 5 view .LVU763
  85:./lib/lib8tion/scale8.h **** #endif
 3742               		.loc 1 85 5 is_stmt 0 view .LVU764
 3743               	/* #NOAPP */
 3744               	.LBE121:
 3745               	.LBE120:
  10:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3746               		.loc 28 10 5 is_stmt 1 view .LVU765
 3747               	.LBB122:
 3748               		.loc 28 10 10 view .LVU766
 3749               		.loc 28 10 10 is_stmt 0 view .LVU767
 3750 0042 D0E0      		ldi r29,0
 3751               	.LVL331:
 3752               	.L131:
 3753               		.loc 28 10 5 discriminator 1 view .LVU768
 3754 0044 CD15      		cp r28,r13
 3755 0046 00F0      		brlo .L134
 3756               	.LBE122:
  11:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
  12:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         // The y range will be 0..64, map this to 0..4
  13:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         // Relies on hue being 8-bit and wrapping
  14:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         hsv.h   = rgb_matrix_config.hsv.h + scale * (g_led_config.point[i].y >> 4);
  15:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
  16:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  17:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     }
  18:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 3757               		.loc 28 18 5 is_stmt 1 view .LVU769
 3758               		.loc 28 18 20 is_stmt 0 view .LVU770
 3759 0048 81E0      		ldi r24,lo8(1)
 3760 004a 1633      		cpi r17,lo8(54)
 3761 004c 00F0      		brlo .L135
 3762 004e 80E0      		ldi r24,0
 3763               	.L135:
 3764               	/* epilogue start */
  19:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** }
 3765               		.loc 28 19 1 view .LVU771
 3766 0050 DF91      		pop r29
 3767 0052 CF91      		pop r28
 3768               	.LVL332:
 3769               		.loc 28 19 1 view .LVU772
 3770 0054 1F91      		pop r17
 3771 0056 0F91      		pop r16
 3772               	.LVL333:
 3773               		.loc 28 19 1 view .LVU773
 3774 0058 FF90      		pop r15
 3775 005a EF90      		pop r14
 3776               	.LVL334:
 3777               		.loc 28 19 1 view .LVU774
 3778 005c DF90      		pop r13
 3779               	.LVL335:
 3780               		.loc 28 19 1 view .LVU775
 3781 005e CF90      		pop r12
 3782               		.loc 28 19 1 view .LVU776
 3783 0060 BF90      		pop r11
 3784               		.loc 28 19 1 view .LVU777
 3785 0062 0895      		ret
 3786               	.LVL336:
 3787               	.L134:
 3788               	.LBB124:
 3789               	.LBB123:
  11:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3790               		.loc 28 11 9 is_stmt 1 view .LVU778
 3791 0064 FE01      		movw r30,r28
 3792 0066 E050      		subi r30,lo8(-(g_led_config+156))
 3793 0068 F040      		sbci r31,hi8(-(g_led_config+156))
 3794 006a 8081      		ld r24,Z
 3795 006c F701      		movw r30,r14
 3796 006e 9181      		ldd r25,Z+1
 3797 0070 8923      		and r24,r25
 3798 0072 01F0      		breq .L133
  14:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
 3799               		.loc 28 14 9 view .LVU779
  14:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
 3800               		.loc 28 14 75 is_stmt 0 view .LVU780
 3801 0074 FE01      		movw r30,r28
 3802 0076 EE0F      		lsl r30
 3803 0078 FF1F      		rol r31
 3804 007a E050      		subi r30,lo8(-(g_led_config))
 3805 007c F040      		sbci r31,hi8(-(g_led_config))
  14:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
 3806               		.loc 28 14 51 view .LVU781
 3807 007e 81A9      		ldd r24,Z+49
 3808 0080 8295      		swap r24
 3809 0082 8F70      		andi r24,lo8(15)
  14:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
 3810               		.loc 28 14 43 view .LVU782
 3811 0084 6091 0000 		lds r22,rgb_matrix_config+1
 3812 0088 809F      		mul r24,r16
 3813 008a 600D      		add r22,r0
 3814 008c 1124      		clr __zero_reg__
  15:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3815               		.loc 28 15 9 is_stmt 1 view .LVU783
  15:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3816               		.loc 28 15 19 is_stmt 0 view .LVU784
 3817 008e 7C2D      		mov r23,r12
 3818 0090 8B2D      		mov r24,r11
 3819 0092 0E94 0000 		call hsv_to_rgb
 3820               	.LVL337:
 3821 0096 462F      		mov r20,r22
 3822               	.LVL338:
  16:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     }
 3823               		.loc 28 16 9 is_stmt 1 view .LVU785
  16:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     }
 3824               		.loc 28 16 9 is_stmt 0 view .LVU786
 3825 0098 282F      		mov r18,r24
  16:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     }
 3826               		.loc 28 16 9 view .LVU787
 3827 009a 672F      		mov r22,r23
 3828 009c CE01      		movw r24,r28
  16:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     }
 3829               		.loc 28 16 9 view .LVU788
 3830 009e 0E94 0000 		call rgb_matrix_set_color
 3831               	.LVL339:
 3832               	.L133:
  16:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     }
 3833               		.loc 28 16 9 view .LVU789
 3834 00a2 2196      		adiw r28,1
 3835               	.LVL340:
  16:quantum/rgb_matrix_animations/gradient_up_down_anim.h ****     }
 3836               		.loc 28 16 9 view .LVU790
 3837 00a4 00C0      		rjmp .L131
 3838               	.LBE123:
 3839               	.LBE124:
 3840               		.cfi_endproc
 3841               	.LFE192:
 3843               		.section	.text.GRADIENT_LEFT_RIGHT,"ax",@progbits
 3844               	.global	GRADIENT_LEFT_RIGHT
 3846               	GRADIENT_LEFT_RIGHT:
 3847               	.LVL341:
 3848               	.LFB193:
 3849               		.file 29 "quantum/rgb_matrix_animations/gradient_left_right_anim.h"
   1:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** #ifndef DISABLE_RGB_MATRIX_GRADIENT_LEFT_RIGHT
   2:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** RGB_MATRIX_EFFECT(GRADIENT_LEFT_RIGHT)
   3:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** 
   5:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** bool GRADIENT_LEFT_RIGHT(effect_params_t* params) {
 3850               		.loc 29 5 51 is_stmt 1 view -0
 3851               		.cfi_startproc
 3852               		.loc 29 5 51 is_stmt 0 view .LVU792
 3853 0000 BF92      		push r11
 3854               	.LCFI121:
 3855               		.cfi_def_cfa_offset 3
 3856               		.cfi_offset 11, -2
 3857 0002 CF92      		push r12
 3858               	.LCFI122:
 3859               		.cfi_def_cfa_offset 4
 3860               		.cfi_offset 12, -3
 3861 0004 DF92      		push r13
 3862               	.LCFI123:
 3863               		.cfi_def_cfa_offset 5
 3864               		.cfi_offset 13, -4
 3865 0006 EF92      		push r14
 3866               	.LCFI124:
 3867               		.cfi_def_cfa_offset 6
 3868               		.cfi_offset 14, -5
 3869 0008 FF92      		push r15
 3870               	.LCFI125:
 3871               		.cfi_def_cfa_offset 7
 3872               		.cfi_offset 15, -6
 3873 000a 0F93      		push r16
 3874               	.LCFI126:
 3875               		.cfi_def_cfa_offset 8
 3876               		.cfi_offset 16, -7
 3877 000c 1F93      		push r17
 3878               	.LCFI127:
 3879               		.cfi_def_cfa_offset 9
 3880               		.cfi_offset 17, -8
 3881 000e CF93      		push r28
 3882               	.LCFI128:
 3883               		.cfi_def_cfa_offset 10
 3884               		.cfi_offset 28, -9
 3885 0010 DF93      		push r29
 3886               	.LCFI129:
 3887               		.cfi_def_cfa_offset 11
 3888               		.cfi_offset 29, -10
 3889               	/* prologue: function */
 3890               	/* frame size = 0 */
 3891               	/* stack size = 9 */
 3892               	.L__stack_usage = 9
 3893 0012 8C01      		movw r16,r24
   6:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3894               		.loc 29 6 5 is_stmt 1 view .LVU793
 3895 0014 FC01      		movw r30,r24
 3896 0016 C081      		ld r28,Z
 3897 0018 8BE0      		ldi r24,lo8(11)
 3898               	.LVL342:
 3899               		.loc 29 6 5 is_stmt 0 view .LVU794
 3900 001a C89F      		mul r28,r24
 3901 001c C02D      		mov r28,r0
 3902 001e 1124      		clr r1
 3903               	.LVL343:
 3904               		.loc 29 6 5 is_stmt 1 view .LVU795
 3905 0020 5BE0      		ldi r21,lo8(11)
 3906 0022 F52E      		mov r15,r21
 3907 0024 FC0E      		add r15,r28
 3908               	.LVL344:
 3909               		.loc 29 6 5 view .LVU796
 3910 0026 DF2C      		mov r13,r15
 3911 0028 F6E3      		ldi r31,lo8(54)
 3912 002a FF15      		cp r31,r15
 3913 002c 00F4      		brsh .L137
 3914 002e 46E3      		ldi r20,lo8(54)
 3915 0030 D42E      		mov r13,r20
 3916               	.L137:
 3917               	.LVL345:
 3918               		.loc 29 6 44 view .LVU797
   7:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** 
   8:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     HSV     hsv   = rgb_matrix_config.hsv;
 3919               		.loc 29 8 5 view .LVU798
 3920               		.loc 29 8 13 is_stmt 0 view .LVU799
 3921 0032 C090 0000 		lds r12,rgb_matrix_config+2
 3922               	.LVL346:
 3923               		.loc 29 8 13 view .LVU800
 3924 0036 B090 0000 		lds r11,rgb_matrix_config+3
   9:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 3925               		.loc 29 9 5 is_stmt 1 view .LVU801
 3926               	.LVL347:
 3927               	.LBB125:
 3928               	.LBI125:
  20:./lib/lib8tion/scale8.h **** {
 3929               		.loc 1 20 34 view .LVU802
 3930               	.LBB126:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 3931               		.loc 1 61 5 view .LVU803
 3932 003a 2091 0000 		lds r18,rgb_matrix_config+4
 3933 003e 30E4      		ldi r19,lo8(64)
 3934 0040 E32E      		mov r14,r19
 3935 0042 3E2D      		mov r19,r14
 3936               	/* #APP */
 3937               	 ;  61 "./lib/lib8tion/scale8.h" 1
 3938 0044 329F      		mul r19, r18          
 3939 0046 312D      		mov r19, r1          
 3940 0048 1124      		clr __zero_reg__    
 3941               		
 3942               	 ;  0 "" 2
 3943               	/* #NOAPP */
 3944 004a E32E      		mov r14,r19
 3945               	.LVL348:
  85:./lib/lib8tion/scale8.h **** #endif
 3946               		.loc 1 85 5 view .LVU804
  85:./lib/lib8tion/scale8.h **** #endif
 3947               		.loc 1 85 5 is_stmt 0 view .LVU805
 3948               	.LBE126:
 3949               	.LBE125:
  10:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3950               		.loc 29 10 5 is_stmt 1 view .LVU806
 3951               	.LBB127:
 3952               		.loc 29 10 10 view .LVU807
 3953               		.loc 29 10 10 is_stmt 0 view .LVU808
 3954 004c D0E0      		ldi r29,0
 3955               	.LVL349:
 3956               	.L138:
 3957               		.loc 29 10 5 discriminator 1 view .LVU809
 3958 004e CD15      		cp r28,r13
 3959 0050 00F0      		brlo .L141
 3960               	.LBE127:
  11:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
  12:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         // The x range will be 0..224, map this to 0..7
  13:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         // Relies on hue being 8-bit and wrapping
  14:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         hsv.h   = rgb_matrix_config.hsv.h + (scale * g_led_config.point[i].x >> 5);
  15:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
  16:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  17:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     }
  18:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 3961               		.loc 29 18 5 is_stmt 1 view .LVU810
 3962               		.loc 29 18 20 is_stmt 0 view .LVU811
 3963 0052 81E0      		ldi r24,lo8(1)
 3964 0054 35E3      		ldi r19,lo8(53)
 3965 0056 3F15      		cp r19,r15
 3966 0058 00F4      		brsh .L142
 3967 005a 80E0      		ldi r24,0
 3968               	.L142:
 3969               	/* epilogue start */
  19:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** }
 3970               		.loc 29 19 1 view .LVU812
 3971 005c DF91      		pop r29
 3972 005e CF91      		pop r28
 3973               	.LVL350:
 3974               		.loc 29 19 1 view .LVU813
 3975 0060 1F91      		pop r17
 3976 0062 0F91      		pop r16
 3977               	.LVL351:
 3978               		.loc 29 19 1 view .LVU814
 3979 0064 FF90      		pop r15
 3980 0066 EF90      		pop r14
 3981               	.LVL352:
 3982               		.loc 29 19 1 view .LVU815
 3983 0068 DF90      		pop r13
 3984               	.LVL353:
 3985               		.loc 29 19 1 view .LVU816
 3986 006a CF90      		pop r12
 3987               		.loc 29 19 1 view .LVU817
 3988 006c BF90      		pop r11
 3989               		.loc 29 19 1 view .LVU818
 3990 006e 0895      		ret
 3991               	.LVL354:
 3992               	.L141:
 3993               	.LBB129:
 3994               	.LBB128:
  11:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3995               		.loc 29 11 9 is_stmt 1 view .LVU819
 3996 0070 FE01      		movw r30,r28
 3997 0072 E050      		subi r30,lo8(-(g_led_config+156))
 3998 0074 F040      		sbci r31,hi8(-(g_led_config+156))
 3999 0076 8081      		ld r24,Z
 4000 0078 F801      		movw r30,r16
 4001 007a 9181      		ldd r25,Z+1
 4002 007c 8923      		and r24,r25
 4003 007e 01F0      		breq .L140
  14:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
 4004               		.loc 29 14 9 view .LVU820
  14:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
 4005               		.loc 29 14 75 is_stmt 0 view .LVU821
 4006 0080 FE01      		movw r30,r28
 4007 0082 EE0F      		lsl r30
 4008 0084 FF1F      		rol r31
 4009 0086 E050      		subi r30,lo8(-(g_led_config))
 4010 0088 F040      		sbci r31,hi8(-(g_led_config))
  14:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
 4011               		.loc 29 14 52 view .LVU822
 4012 008a 60A9      		ldd r22,Z+48
 4013 008c E69E      		mul r14,r22
 4014 008e B001      		movw r22,r0
 4015 0090 1124      		clr __zero_reg__
  14:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
 4016               		.loc 29 14 78 view .LVU823
 4017 0092 95E0      		ldi r25,5
 4018               		1:
 4019 0094 7595      		asr r23
 4020 0096 6795      		ror r22
 4021 0098 9A95      		dec r25
 4022 009a 01F4      		brne 1b
  14:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         RGB rgb = hsv_to_rgb(hsv);
 4023               		.loc 29 14 43 view .LVU824
 4024 009c 8091 0000 		lds r24,rgb_matrix_config+1
 4025 00a0 680F      		add r22,r24
  15:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4026               		.loc 29 15 9 is_stmt 1 view .LVU825
  15:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4027               		.loc 29 15 19 is_stmt 0 view .LVU826
 4028 00a2 7C2D      		mov r23,r12
 4029 00a4 8B2D      		mov r24,r11
 4030 00a6 0E94 0000 		call hsv_to_rgb
 4031               	.LVL355:
 4032 00aa 462F      		mov r20,r22
 4033               	.LVL356:
  16:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     }
 4034               		.loc 29 16 9 is_stmt 1 view .LVU827
  16:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     }
 4035               		.loc 29 16 9 is_stmt 0 view .LVU828
 4036 00ac 282F      		mov r18,r24
  16:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     }
 4037               		.loc 29 16 9 view .LVU829
 4038 00ae 672F      		mov r22,r23
 4039 00b0 CE01      		movw r24,r28
  16:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     }
 4040               		.loc 29 16 9 view .LVU830
 4041 00b2 0E94 0000 		call rgb_matrix_set_color
 4042               	.LVL357:
 4043               	.L140:
  16:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     }
 4044               		.loc 29 16 9 view .LVU831
 4045 00b6 2196      		adiw r28,1
 4046               	.LVL358:
  16:quantum/rgb_matrix_animations/gradient_left_right_anim.h ****     }
 4047               		.loc 29 16 9 view .LVU832
 4048 00b8 00C0      		rjmp .L138
 4049               	.LBE128:
 4050               	.LBE129:
 4051               		.cfi_endproc
 4052               	.LFE193:
 4054               		.section	.text.BREATHING,"ax",@progbits
 4055               	.global	BREATHING
 4057               	BREATHING:
 4058               	.LVL359:
 4059               	.LFB194:
 4060               		.file 30 "quantum/rgb_matrix_animations/breathing_anim.h"
   1:quantum/rgb_matrix_animations/breathing_anim.h **** #ifndef DISABLE_RGB_MATRIX_BREATHING
   2:quantum/rgb_matrix_animations/breathing_anim.h **** RGB_MATRIX_EFFECT(BREATHING)
   3:quantum/rgb_matrix_animations/breathing_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/breathing_anim.h **** 
   5:quantum/rgb_matrix_animations/breathing_anim.h **** bool BREATHING(effect_params_t* params) {
 4061               		.loc 30 5 41 is_stmt 1 view -0
 4062               		.cfi_startproc
 4063               		.loc 30 5 41 is_stmt 0 view .LVU834
 4064 0000 BF92      		push r11
 4065               	.LCFI130:
 4066               		.cfi_def_cfa_offset 3
 4067               		.cfi_offset 11, -2
 4068 0002 CF92      		push r12
 4069               	.LCFI131:
 4070               		.cfi_def_cfa_offset 4
 4071               		.cfi_offset 12, -3
 4072 0004 DF92      		push r13
 4073               	.LCFI132:
 4074               		.cfi_def_cfa_offset 5
 4075               		.cfi_offset 13, -4
 4076 0006 EF92      		push r14
 4077               	.LCFI133:
 4078               		.cfi_def_cfa_offset 6
 4079               		.cfi_offset 14, -5
 4080 0008 FF92      		push r15
 4081               	.LCFI134:
 4082               		.cfi_def_cfa_offset 7
 4083               		.cfi_offset 15, -6
 4084 000a 0F93      		push r16
 4085               	.LCFI135:
 4086               		.cfi_def_cfa_offset 8
 4087               		.cfi_offset 16, -7
 4088 000c 1F93      		push r17
 4089               	.LCFI136:
 4090               		.cfi_def_cfa_offset 9
 4091               		.cfi_offset 17, -8
 4092 000e CF93      		push r28
 4093               	.LCFI137:
 4094               		.cfi_def_cfa_offset 10
 4095               		.cfi_offset 28, -9
 4096 0010 DF93      		push r29
 4097               	.LCFI138:
 4098               		.cfi_def_cfa_offset 11
 4099               		.cfi_offset 29, -10
 4100               	/* prologue: function */
 4101               	/* frame size = 0 */
 4102               	/* stack size = 9 */
 4103               	.L__stack_usage = 9
 4104 0012 8C01      		movw r16,r24
   6:quantum/rgb_matrix_animations/breathing_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 4105               		.loc 30 6 5 is_stmt 1 view .LVU835
 4106 0014 FC01      		movw r30,r24
 4107 0016 C081      		ld r28,Z
 4108 0018 8BE0      		ldi r24,lo8(11)
 4109               	.LVL360:
 4110               		.loc 30 6 5 is_stmt 0 view .LVU836
 4111 001a C89F      		mul r28,r24
 4112 001c C02D      		mov r28,r0
 4113 001e 1124      		clr r1
 4114               	.LVL361:
 4115               		.loc 30 6 5 is_stmt 1 view .LVU837
 4116 0020 9BE0      		ldi r25,lo8(11)
 4117 0022 F92E      		mov r15,r25
 4118 0024 FC0E      		add r15,r28
 4119               	.LVL362:
 4120               		.loc 30 6 5 view .LVU838
 4121 0026 EF2C      		mov r14,r15
 4122 0028 F6E3      		ldi r31,lo8(54)
 4123 002a FF15      		cp r31,r15
 4124 002c 00F4      		brsh .L144
 4125 002e 86E3      		ldi r24,lo8(54)
 4126 0030 E82E      		mov r14,r24
 4127               	.L144:
 4128               	.LVL363:
 4129               		.loc 30 6 44 view .LVU839
   7:quantum/rgb_matrix_animations/breathing_anim.h **** 
   8:quantum/rgb_matrix_animations/breathing_anim.h ****     HSV      hsv  = rgb_matrix_config.hsv;
 4130               		.loc 30 8 5 view .LVU840
 4131               		.loc 30 8 14 is_stmt 0 view .LVU841
 4132 0032 D090 0000 		lds r13,rgb_matrix_config+1
 4133               	.LVL364:
 4134               		.loc 30 8 14 view .LVU842
 4135 0036 D091 0000 		lds r29,rgb_matrix_config+2
 4136               		.loc 30 8 14 view .LVU843
 4137 003a C090 0000 		lds r12,rgb_matrix_config+3
 4138               	.LVL365:
   9:quantum/rgb_matrix_animations/breathing_anim.h ****     uint16_t time = scale16by8(g_rgb_counters.tick, rgb_matrix_config.speed / 8);
 4139               		.loc 30 9 5 is_stmt 1 view .LVU844
 4140               		.loc 30 9 21 is_stmt 0 view .LVU845
 4141 003e 6091 0000 		lds r22,rgb_matrix_config+4
 4142 0042 6695      		lsr r22
 4143 0044 6695      		lsr r22
 4144 0046 6695      		lsr r22
 4145 0048 8091 0000 		lds r24,g_rgb_counters
 4146 004c 9091 0000 		lds r25,g_rgb_counters+1
 4147 0050 0E94 0000 		call scale16by8
 4148               	.LVL366:
  10:quantum/rgb_matrix_animations/breathing_anim.h ****     hsv.v         = scale8(abs8(sin8(time) - 128) * 2, hsv.v);
 4149               		.loc 30 10 5 is_stmt 1 view .LVU846
 4150               		.loc 30 10 33 is_stmt 0 view .LVU847
 4151 0054 0E94 0000 		call sin8_avr
 4152               	.LVL367:
 4153               		.loc 30 10 44 view .LVU848
 4154 0058 8058      		subi r24,lo8(-(-128))
 4155               	.LVL368:
 4156               	.LBB130:
 4157               	.LBI130:
 404:./lib/lib8tion/math8.h **** {
 4158               		.loc 2 404 33 is_stmt 1 view .LVU849
 4159               	.LBB131:
 412:./lib/lib8tion/math8.h ****          /* First, check the high bit, and prepare to skip if it's clear */
 4160               		.loc 2 412 5 view .LVU850
 4161               	/* #APP */
 4162               	 ;  412 "./lib/lib8tion/math8.h" 1
 4163 005a 87FD      		sbrc r24, 7 
 4164 005c 8195      	neg r24     
 4165               	
 4166               	 ;  0 "" 2
 4167               	.LVL369:
 420:./lib/lib8tion/math8.h **** #else
 4168               		.loc 2 420 5 view .LVU851
 420:./lib/lib8tion/math8.h **** #else
 4169               		.loc 2 420 5 is_stmt 0 view .LVU852
 4170               	/* #NOAPP */
 4171               	.LBE131:
 4172               	.LBE130:
 4173               	.LBB132:
 4174               	.LBI132:
  20:./lib/lib8tion/scale8.h **** {
 4175               		.loc 1 20 34 is_stmt 1 view .LVU853
 4176               	.LBB133:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 4177               		.loc 1 61 5 view .LVU854
 4178               	.LBE133:
 4179               	.LBE132:
 4180               		.loc 30 10 21 is_stmt 0 view .LVU855
 4181 005e 880F      		lsl r24
 4182               	.LVL370:
 4183               	.LBB135:
 4184               	.LBB134:
  61:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
 4185               		.loc 1 61 5 view .LVU856
 4186 0060 282F      		mov r18,r24
 4187 0062 3C2D      		mov r19,r12
 4188               	/* #APP */
 4189               	 ;  61 "./lib/lib8tion/scale8.h" 1
 4190 0064 239F      		mul r18, r19          
 4191 0066 212D      		mov r18, r1          
 4192 0068 1124      		clr __zero_reg__    
 4193               		
 4194               	 ;  0 "" 2
 4195               	/* #NOAPP */
 4196 006a 822F      		mov r24,r18
 4197               	.LVL371:
  85:./lib/lib8tion/scale8.h **** #endif
 4198               		.loc 1 85 5 is_stmt 1 view .LVU857
  85:./lib/lib8tion/scale8.h **** #endif
 4199               		.loc 1 85 5 is_stmt 0 view .LVU858
 4200               	.LBE134:
 4201               	.LBE135:
  11:quantum/rgb_matrix_animations/breathing_anim.h ****     RGB rgb       = hsv_to_rgb(hsv);
 4202               		.loc 30 11 5 is_stmt 1 view .LVU859
 4203               		.loc 30 11 21 is_stmt 0 view .LVU860
 4204 006c 6D2D      		mov r22,r13
 4205               		.loc 30 11 21 view .LVU861
 4206 006e 7D2F      		mov r23,r29
 4207 0070 0E94 0000 		call hsv_to_rgb
 4208               	.LVL372:
 4209               		.loc 30 11 21 view .LVU862
 4210 0074 D62E      		mov r13,r22
 4211               	.LVL373:
 4212               		.loc 30 11 21 view .LVU863
 4213 0076 C72E      		mov r12,r23
 4214               		.loc 30 11 21 view .LVU864
 4215 0078 B82E      		mov r11,r24
  12:quantum/rgb_matrix_animations/breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 4216               		.loc 30 12 5 is_stmt 1 view .LVU865
 4217               	.LBB136:
 4218               		.loc 30 12 10 view .LVU866
 4219               	.LVL374:
 4220               		.loc 30 12 10 is_stmt 0 view .LVU867
 4221 007a D0E0      		ldi r29,0
 4222               	.LVL375:
 4223               	.L145:
 4224               		.loc 30 12 5 discriminator 1 view .LVU868
 4225 007c CE15      		cp r28,r14
 4226 007e 00F0      		brlo .L147
 4227               	.LBE136:
  13:quantum/rgb_matrix_animations/breathing_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
  14:quantum/rgb_matrix_animations/breathing_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  15:quantum/rgb_matrix_animations/breathing_anim.h ****     }
  16:quantum/rgb_matrix_animations/breathing_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 4228               		.loc 30 16 5 is_stmt 1 view .LVU869
 4229               	.LVL376:
 4230               		.loc 30 16 20 is_stmt 0 view .LVU870
 4231 0080 81E0      		ldi r24,lo8(1)
 4232 0082 25E3      		ldi r18,lo8(53)
 4233 0084 2F15      		cp r18,r15
 4234 0086 00F4      		brsh .L148
 4235 0088 80E0      		ldi r24,0
 4236               	.L148:
 4237               	/* epilogue start */
  17:quantum/rgb_matrix_animations/breathing_anim.h **** }
 4238               		.loc 30 17 1 view .LVU871
 4239 008a DF91      		pop r29
 4240 008c CF91      		pop r28
 4241               	.LVL377:
 4242               		.loc 30 17 1 view .LVU872
 4243 008e 1F91      		pop r17
 4244 0090 0F91      		pop r16
 4245               	.LVL378:
 4246               		.loc 30 17 1 view .LVU873
 4247 0092 FF90      		pop r15
 4248 0094 EF90      		pop r14
 4249               	.LVL379:
 4250               		.loc 30 17 1 view .LVU874
 4251 0096 DF90      		pop r13
 4252               	.LVL380:
 4253               		.loc 30 17 1 view .LVU875
 4254 0098 CF90      		pop r12
 4255               		.loc 30 17 1 view .LVU876
 4256 009a BF90      		pop r11
 4257               		.loc 30 17 1 view .LVU877
 4258 009c 0895      		ret
 4259               	.LVL381:
 4260               	.L147:
 4261               	.LBB137:
  13:quantum/rgb_matrix_animations/breathing_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4262               		.loc 30 13 9 is_stmt 1 view .LVU878
 4263 009e FE01      		movw r30,r28
 4264 00a0 E050      		subi r30,lo8(-(g_led_config+156))
 4265 00a2 F040      		sbci r31,hi8(-(g_led_config+156))
 4266 00a4 8081      		ld r24,Z
 4267 00a6 F801      		movw r30,r16
 4268 00a8 9181      		ldd r25,Z+1
 4269 00aa 8923      		and r24,r25
 4270 00ac 01F0      		breq .L146
  14:quantum/rgb_matrix_animations/breathing_anim.h ****     }
 4271               		.loc 30 14 9 view .LVU879
 4272 00ae 2B2D      		mov r18,r11
 4273 00b0 4D2D      		mov r20,r13
 4274 00b2 6C2D      		mov r22,r12
 4275 00b4 CE01      		movw r24,r28
 4276 00b6 0E94 0000 		call rgb_matrix_set_color
 4277               	.LVL382:
 4278               	.L146:
  14:quantum/rgb_matrix_animations/breathing_anim.h ****     }
 4279               		.loc 30 14 9 is_stmt 0 view .LVU880
 4280 00ba 2196      		adiw r28,1
 4281               	.LVL383:
  14:quantum/rgb_matrix_animations/breathing_anim.h ****     }
 4282               		.loc 30 14 9 view .LVU881
 4283 00bc 00C0      		rjmp .L145
 4284               	.LBE137:
 4285               		.cfi_endproc
 4286               	.LFE194:
 4288               		.section	.text.raindrops_set_color.isra.1,"ax",@progbits
 4290               	raindrops_set_color.isra.1:
 4291               	.LVL384:
 4292               	.LFB279:
 4293               		.file 31 "quantum/rgb_matrix_animations/raindrops_anim.h"
   1:quantum/rgb_matrix_animations/raindrops_anim.h **** #ifndef DISABLE_RGB_MATRIX_RAINDROPS
   2:quantum/rgb_matrix_animations/raindrops_anim.h **** RGB_MATRIX_EFFECT(RAINDROPS)
   3:quantum/rgb_matrix_animations/raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/raindrops_anim.h **** 
   5:quantum/rgb_matrix_animations/raindrops_anim.h **** static void raindrops_set_color(int i, effect_params_t* params) {
 4294               		.loc 31 5 13 is_stmt 1 view -0
 4295               		.cfi_startproc
 4296               		.loc 31 5 13 is_stmt 0 view .LVU883
 4297 0000 DF92      		push r13
 4298               	.LCFI139:
 4299               		.cfi_def_cfa_offset 3
 4300               		.cfi_offset 13, -2
 4301 0002 EF92      		push r14
 4302               	.LCFI140:
 4303               		.cfi_def_cfa_offset 4
 4304               		.cfi_offset 14, -3
 4305 0004 FF92      		push r15
 4306               	.LCFI141:
 4307               		.cfi_def_cfa_offset 5
 4308               		.cfi_offset 15, -4
 4309 0006 0F93      		push r16
 4310               	.LCFI142:
 4311               		.cfi_def_cfa_offset 6
 4312               		.cfi_offset 16, -5
 4313 0008 1F93      		push r17
 4314               	.LCFI143:
 4315               		.cfi_def_cfa_offset 7
 4316               		.cfi_offset 17, -6
 4317 000a CF93      		push r28
 4318               	.LCFI144:
 4319               		.cfi_def_cfa_offset 8
 4320               		.cfi_offset 28, -7
 4321 000c DF93      		push r29
 4322               	.LCFI145:
 4323               		.cfi_def_cfa_offset 9
 4324               		.cfi_offset 29, -8
 4325               	/* prologue: function */
 4326               	/* frame size = 0 */
 4327               	/* stack size = 7 */
 4328               	.L__stack_usage = 7
 4329 000e 8C01      		movw r16,r24
   6:quantum/rgb_matrix_animations/raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 4330               		.loc 31 6 5 is_stmt 1 view .LVU884
 4331               		.loc 31 6 10 is_stmt 0 view .LVU885
 4332 0010 FC01      		movw r30,r24
 4333 0012 E050      		subi r30,lo8(-(g_led_config+156))
 4334 0014 F040      		sbci r31,hi8(-(g_led_config+156))
 4335               		.loc 31 6 9 view .LVU886
 4336 0016 8081      		ld r24,Z
 4337               	.LVL385:
 4338               		.loc 31 6 9 view .LVU887
 4339 0018 6823      		and r22,r24
 4340               		.loc 31 6 8 view .LVU888
 4341 001a 01F0      		breq .L156
   7:quantum/rgb_matrix_animations/raindrops_anim.h ****     HSV hsv = {0, rgb_matrix_config.hsv.s, rgb_matrix_config.hsv.v};
 4342               		.loc 31 7 5 is_stmt 1 view .LVU889
 4343               		.loc 31 7 9 is_stmt 0 view .LVU890
 4344 001c D090 0000 		lds r13,rgb_matrix_config+2
 4345               	.LVL386:
 4346               		.loc 31 7 9 view .LVU891
 4347 0020 D091 0000 		lds r29,rgb_matrix_config+3
   8:quantum/rgb_matrix_animations/raindrops_anim.h **** 
   9:quantum/rgb_matrix_animations/raindrops_anim.h ****     // Take the shortest path between hues
  10:quantum/rgb_matrix_animations/raindrops_anim.h ****     int16_t deltaH = ((rgb_matrix_config.hsv.h + 180) % 360 - rgb_matrix_config.hsv.h) / 4;
 4348               		.loc 31 10 5 is_stmt 1 view .LVU892
 4349               		.loc 31 10 45 is_stmt 0 view .LVU893
 4350 0024 C091 0000 		lds r28,rgb_matrix_config+1
 4351 0028 EC2E      		mov r14,r28
 4352 002a F12C      		mov r15,__zero_reg__
 4353               	.LVL387:
  11:quantum/rgb_matrix_animations/raindrops_anim.h ****     if (deltaH > 127) {
 4354               		.loc 31 11 5 is_stmt 1 view .LVU894
  12:quantum/rgb_matrix_animations/raindrops_anim.h ****         deltaH -= 256;
  13:quantum/rgb_matrix_animations/raindrops_anim.h ****     } else if (deltaH < -127) {
 4355               		.loc 31 13 12 view .LVU895
  14:quantum/rgb_matrix_animations/raindrops_anim.h ****         deltaH += 256;
  15:quantum/rgb_matrix_animations/raindrops_anim.h ****     }
  16:quantum/rgb_matrix_animations/raindrops_anim.h **** 
  17:quantum/rgb_matrix_animations/raindrops_anim.h ****     hsv.h   = rgb_matrix_config.hsv.h + (deltaH * (rand() & 0x03));
 4356               		.loc 31 17 5 view .LVU896
 4357               		.loc 31 17 52 is_stmt 0 view .LVU897
 4358 002c 0E94 0000 		call rand
 4359               	.LVL388:
 4360 0030 282F      		mov r18,r24
  10:quantum/rgb_matrix_animations/raindrops_anim.h ****     if (deltaH > 127) {
 4361               		.loc 31 10 48 view .LVU898
 4362 0032 C701      		movw r24,r14
 4363 0034 8C54      		subi r24,76
 4364 0036 9F4F      		sbci r25,-1
  10:quantum/rgb_matrix_animations/raindrops_anim.h ****     if (deltaH > 127) {
 4365               		.loc 31 10 55 view .LVU899
 4366 0038 68E6      		ldi r22,lo8(104)
 4367 003a 71E0      		ldi r23,lo8(1)
 4368 003c 0E94 0000 		call __divmodhi4
  10:quantum/rgb_matrix_animations/raindrops_anim.h ****     if (deltaH > 127) {
 4369               		.loc 31 10 13 view .LVU900
 4370 0040 8E19      		sub r24,r14
 4371 0042 9F09      		sbc r25,r15
 4372 0044 97FD      		sbrc r25,7
 4373 0046 0396      		adiw r24,3
 4374               	.L155:
 4375 0048 9595      		asr r25
 4376 004a 8795      		ror r24
 4377 004c 9595      		asr r25
 4378 004e 8795      		ror r24
 4379               		.loc 31 17 39 view .LVU901
 4380 0050 2370      		andi r18,lo8(3)
 4381 0052 6C2F      		mov r22,r28
 4382 0054 289F      		mul r18,r24
 4383 0056 600D      		add r22,r0
 4384 0058 1124      		clr __zero_reg__
  18:quantum/rgb_matrix_animations/raindrops_anim.h ****     RGB rgb = hsv_to_rgb(hsv);
 4385               		.loc 31 18 5 is_stmt 1 view .LVU902
 4386               		.loc 31 18 15 is_stmt 0 view .LVU903
 4387 005a 7D2D      		mov r23,r13
 4388               		.loc 31 18 15 view .LVU904
 4389 005c 8D2F      		mov r24,r29
 4390 005e 0E94 0000 		call hsv_to_rgb
 4391               	.LVL389:
 4392 0062 462F      		mov r20,r22
 4393               	.LVL390:
  19:quantum/rgb_matrix_animations/raindrops_anim.h ****     rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4394               		.loc 31 19 5 is_stmt 1 view .LVU905
 4395               		.loc 31 19 5 is_stmt 0 view .LVU906
 4396 0064 282F      		mov r18,r24
 4397               		.loc 31 19 5 view .LVU907
 4398 0066 672F      		mov r22,r23
 4399 0068 C801      		movw r24,r16
 4400               	/* epilogue start */
  20:quantum/rgb_matrix_animations/raindrops_anim.h **** }
 4401               		.loc 31 20 1 view .LVU908
 4402 006a DF91      		pop r29
 4403               		.loc 31 20 1 view .LVU909
 4404 006c CF91      		pop r28
 4405 006e 1F91      		pop r17
 4406 0070 0F91      		pop r16
 4407               	.LVL391:
 4408               		.loc 31 20 1 view .LVU910
 4409 0072 FF90      		pop r15
 4410 0074 EF90      		pop r14
 4411               	.LVL392:
 4412               		.loc 31 20 1 view .LVU911
 4413 0076 DF90      		pop r13
  19:quantum/rgb_matrix_animations/raindrops_anim.h ****     rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4414               		.loc 31 19 5 view .LVU912
 4415 0078 0C94 0000 		jmp rgb_matrix_set_color
 4416               	.LVL393:
 4417               	.L156:
 4418               	/* epilogue start */
 4419               		.loc 31 20 1 view .LVU913
 4420 007c DF91      		pop r29
 4421 007e CF91      		pop r28
 4422 0080 1F91      		pop r17
 4423 0082 0F91      		pop r16
 4424               	.LVL394:
 4425               		.loc 31 20 1 view .LVU914
 4426 0084 FF90      		pop r15
 4427 0086 EF90      		pop r14
 4428 0088 DF90      		pop r13
 4429 008a 0895      		ret
 4430               		.cfi_endproc
 4431               	.LFE279:
 4433               		.section	.text.RAINDROPS,"ax",@progbits
 4434               	.global	RAINDROPS
 4436               	RAINDROPS:
 4437               	.LVL395:
 4438               	.LFB230:
  21:quantum/rgb_matrix_animations/raindrops_anim.h **** 
  22:quantum/rgb_matrix_animations/raindrops_anim.h **** bool RAINDROPS(effect_params_t* params) {
 4439               		.loc 31 22 41 is_stmt 1 view -0
 4440               		.cfi_startproc
 4441               		.loc 31 22 41 is_stmt 0 view .LVU916
 4442 0000 DF92      		push r13
 4443               	.LCFI146:
 4444               		.cfi_def_cfa_offset 3
 4445               		.cfi_offset 13, -2
 4446 0002 EF92      		push r14
 4447               	.LCFI147:
 4448               		.cfi_def_cfa_offset 4
 4449               		.cfi_offset 14, -3
 4450 0004 FF92      		push r15
 4451               	.LCFI148:
 4452               		.cfi_def_cfa_offset 5
 4453               		.cfi_offset 15, -4
 4454 0006 0F93      		push r16
 4455               	.LCFI149:
 4456               		.cfi_def_cfa_offset 6
 4457               		.cfi_offset 16, -5
 4458 0008 1F93      		push r17
 4459               	.LCFI150:
 4460               		.cfi_def_cfa_offset 7
 4461               		.cfi_offset 17, -6
 4462 000a CF93      		push r28
 4463               	.LCFI151:
 4464               		.cfi_def_cfa_offset 8
 4465               		.cfi_offset 28, -7
 4466 000c DF93      		push r29
 4467               	.LCFI152:
 4468               		.cfi_def_cfa_offset 9
 4469               		.cfi_offset 29, -8
 4470               	/* prologue: function */
 4471               	/* frame size = 0 */
 4472               	/* stack size = 7 */
 4473               	.L__stack_usage = 7
 4474 000e 8C01      		movw r16,r24
  23:quantum/rgb_matrix_animations/raindrops_anim.h ****     if (!params->init) {
 4475               		.loc 31 23 5 is_stmt 1 view .LVU917
 4476               		.loc 31 23 16 is_stmt 0 view .LVU918
 4477 0010 FC01      		movw r30,r24
 4478 0012 C281      		ldd r28,Z+2
 4479               		.loc 31 23 8 view .LVU919
 4480 0014 C111      		cpse r28,__zero_reg__
 4481 0016 00C0      		rjmp .L158
  24:quantum/rgb_matrix_animations/raindrops_anim.h ****         // Change one LED every tick, make sure speed is not 0
  25:quantum/rgb_matrix_animations/raindrops_anim.h ****         if (scale16by8(g_rgb_counters.tick, qadd8(rgb_matrix_config.speed, 16)) % 10 == 0) {
 4482               		.loc 31 25 9 is_stmt 1 view .LVU920
 4483               	.LVL396:
 4484               	.LBB138:
 4485               	.LBI138:
  23:./lib/lib8tion/math8.h **** {
 4486               		.loc 2 23 34 view .LVU921
 4487               	.LBB139:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 4488               		.loc 2 30 5 view .LVU922
 4489 0018 6091 0000 		lds r22,rgb_matrix_config+4
 4490 001c 20E1      		ldi r18,lo8(16)
 4491               	/* #APP */
 4492               	 ;  30 "./lib/lib8tion/math8.h" 1
 4493 001e 620F      		add r22, r18    
 4494 0020 00F4      		brcc L_3704     
 4495 0022 6FEF      		ldi r22, 0xFF  
 4496               		L_3704: 
 4497               	 ;  0 "" 2
 4498               	.LVL397:
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 4499               		.loc 2 43 5 view .LVU923
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 4500               		.loc 2 43 5 is_stmt 0 view .LVU924
 4501               	/* #NOAPP */
 4502               	.LBE139:
 4503               	.LBE138:
 4504               		.loc 31 25 13 view .LVU925
 4505 0024 8091 0000 		lds r24,g_rgb_counters
 4506 0028 9091 0000 		lds r25,g_rgb_counters+1
 4507               	.LVL398:
 4508               		.loc 31 25 13 view .LVU926
 4509 002c 0E94 0000 		call scale16by8
 4510               	.LVL399:
 4511               		.loc 31 25 81 view .LVU927
 4512 0030 6AE0      		ldi r22,lo8(10)
 4513 0032 70E0      		ldi r23,0
 4514 0034 0E94 0000 		call __udivmodhi4
 4515               		.loc 31 25 12 view .LVU928
 4516 0038 892B      		or r24,r25
 4517 003a 01F4      		brne .L157
  26:quantum/rgb_matrix_animations/raindrops_anim.h ****             raindrops_set_color(rand() % DRIVER_LED_TOTAL, params);
 4518               		.loc 31 26 13 is_stmt 1 view .LVU929
 4519               		.loc 31 26 33 is_stmt 0 view .LVU930
 4520 003c 0E94 0000 		call rand
 4521               	.LVL400:
 4522               		.loc 31 26 13 view .LVU931
 4523 0040 66E3      		ldi r22,lo8(54)
 4524 0042 70E0      		ldi r23,0
 4525 0044 0E94 0000 		call __divmodhi4
 4526 0048 F801      		movw r30,r16
 4527 004a 6181      		ldd r22,Z+1
 4528 004c 0E94 0000 		call raindrops_set_color.isra.1
 4529               	.LVL401:
 4530               	.L157:
  27:quantum/rgb_matrix_animations/raindrops_anim.h ****         }
  28:quantum/rgb_matrix_animations/raindrops_anim.h ****         return false;
  29:quantum/rgb_matrix_animations/raindrops_anim.h ****     }
  30:quantum/rgb_matrix_animations/raindrops_anim.h **** 
  31:quantum/rgb_matrix_animations/raindrops_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
  32:quantum/rgb_matrix_animations/raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
  33:quantum/rgb_matrix_animations/raindrops_anim.h ****         raindrops_set_color(i, params);
  34:quantum/rgb_matrix_animations/raindrops_anim.h ****     }
  35:quantum/rgb_matrix_animations/raindrops_anim.h ****     return led_max < DRIVER_LED_TOTAL;
  36:quantum/rgb_matrix_animations/raindrops_anim.h **** }
 4531               		.loc 31 36 1 view .LVU932
 4532 0050 8C2F      		mov r24,r28
 4533               	/* epilogue start */
 4534 0052 DF91      		pop r29
 4535 0054 CF91      		pop r28
 4536 0056 1F91      		pop r17
 4537 0058 0F91      		pop r16
 4538               	.LVL402:
 4539               		.loc 31 36 1 view .LVU933
 4540 005a FF90      		pop r15
 4541 005c EF90      		pop r14
 4542 005e DF90      		pop r13
 4543 0060 0895      		ret
 4544               	.LVL403:
 4545               	.L158:
  31:quantum/rgb_matrix_animations/raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 4546               		.loc 31 31 5 is_stmt 1 view .LVU934
 4547 0062 C081      		ld r28,Z
 4548 0064 8BE0      		ldi r24,lo8(11)
 4549 0066 C89F      		mul r28,r24
 4550 0068 C02D      		mov r28,r0
 4551 006a 1124      		clr r1
 4552               	.LVL404:
  31:quantum/rgb_matrix_animations/raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 4553               		.loc 31 31 5 view .LVU935
 4554 006c 8BE0      		ldi r24,lo8(11)
 4555 006e D82E      		mov r13,r24
 4556 0070 DC0E      		add r13,r28
 4557               	.LVL405:
  31:quantum/rgb_matrix_animations/raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 4558               		.loc 31 31 5 view .LVU936
 4559 0072 8D2D      		mov r24,r13
 4560 0074 F6E3      		ldi r31,lo8(54)
 4561 0076 FD15      		cp r31,r13
 4562 0078 00F4      		brsh .L160
 4563 007a 86E3      		ldi r24,lo8(54)
 4564               	.L160:
 4565               	.LVL406:
  31:quantum/rgb_matrix_animations/raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 4566               		.loc 31 31 44 view .LVU937
  32:quantum/rgb_matrix_animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4567               		.loc 31 32 5 view .LVU938
 4568               	.LBB140:
  32:quantum/rgb_matrix_animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4569               		.loc 31 32 10 view .LVU939
  32:quantum/rgb_matrix_animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4570               		.loc 31 32 14 is_stmt 0 view .LVU940
 4571 007c D0E0      		ldi r29,0
 4572               	.LVL407:
  32:quantum/rgb_matrix_animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4573               		.loc 31 32 29 view .LVU941
 4574 007e E82E      		mov r14,r24
 4575 0080 F12C      		mov r15,__zero_reg__
 4576               	.LVL408:
 4577               	.L161:
  32:quantum/rgb_matrix_animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4578               		.loc 31 32 5 discriminator 1 view .LVU942
 4579 0082 CE15      		cp r28,r14
 4580 0084 DF05      		cpc r29,r15
 4581 0086 04F0      		brlt .L162
  32:quantum/rgb_matrix_animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4582               		.loc 31 32 5 discriminator 1 view .LVU943
 4583               	.LBE140:
  35:quantum/rgb_matrix_animations/raindrops_anim.h **** }
 4584               		.loc 31 35 5 is_stmt 1 view .LVU944
 4585 0088 C1E0      		ldi r28,lo8(1)
 4586               	.LVL409:
  35:quantum/rgb_matrix_animations/raindrops_anim.h **** }
 4587               		.loc 31 35 5 is_stmt 0 view .LVU945
 4588 008a F5E3      		ldi r31,lo8(53)
 4589 008c FD15      		cp r31,r13
 4590 008e 00F4      		brsh .L157
 4591 0090 C0E0      		ldi r28,0
  35:quantum/rgb_matrix_animations/raindrops_anim.h **** }
 4592               		.loc 31 35 20 view .LVU946
 4593 0092 00C0      		rjmp .L157
 4594               	.LVL410:
 4595               	.L162:
 4596               	.LBB141:
  33:quantum/rgb_matrix_animations/raindrops_anim.h ****     }
 4597               		.loc 31 33 9 is_stmt 1 discriminator 3 view .LVU947
 4598 0094 F801      		movw r30,r16
 4599 0096 6181      		ldd r22,Z+1
 4600 0098 CE01      		movw r24,r28
 4601 009a 0E94 0000 		call raindrops_set_color.isra.1
 4602               	.LVL411:
  32:quantum/rgb_matrix_animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4603               		.loc 31 32 41 is_stmt 0 discriminator 3 view .LVU948
 4604 009e 2196      		adiw r28,1
 4605               	.LVL412:
  32:quantum/rgb_matrix_animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4606               		.loc 31 32 41 discriminator 3 view .LVU949
 4607 00a0 00C0      		rjmp .L161
 4608               	.LBE141:
 4609               		.cfi_endproc
 4610               	.LFE230:
 4612               		.section	.text.jellybean_raindrops_set_color.isra.2,"ax",@progbits
 4614               	jellybean_raindrops_set_color.isra.2:
 4615               	.LVL413:
 4616               	.LFB280:
 4617               		.file 32 "quantum/rgb_matrix_animations/jellybean_raindrops_anim.h"
   1:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** #ifndef DISABLE_RGB_MATRIX_JELLYBEAN_RAINDROPS
   2:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** RGB_MATRIX_EFFECT(JELLYBEAN_RAINDROPS)
   3:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** 
   5:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** static void jellybean_raindrops_set_color(int i, effect_params_t* params) {
 4618               		.loc 32 5 13 is_stmt 1 view -0
 4619               		.cfi_startproc
 4620               		.loc 32 5 13 is_stmt 0 view .LVU951
 4621 0000 1F93      		push r17
 4622               	.LCFI153:
 4623               		.cfi_def_cfa_offset 3
 4624               		.cfi_offset 17, -2
 4625 0002 CF93      		push r28
 4626               	.LCFI154:
 4627               		.cfi_def_cfa_offset 4
 4628               		.cfi_offset 28, -3
 4629 0004 DF93      		push r29
 4630               	.LCFI155:
 4631               		.cfi_def_cfa_offset 5
 4632               		.cfi_offset 29, -4
 4633               	/* prologue: function */
 4634               	/* frame size = 0 */
 4635               	/* stack size = 3 */
 4636               	.L__stack_usage = 3
 4637 0006 EC01      		movw r28,r24
   6:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 4638               		.loc 32 6 5 is_stmt 1 view .LVU952
 4639               		.loc 32 6 10 is_stmt 0 view .LVU953
 4640 0008 FC01      		movw r30,r24
 4641 000a E050      		subi r30,lo8(-(g_led_config+156))
 4642 000c F040      		sbci r31,hi8(-(g_led_config+156))
 4643               		.loc 32 6 9 view .LVU954
 4644 000e 8081      		ld r24,Z
 4645               	.LVL414:
 4646               		.loc 32 6 9 view .LVU955
 4647 0010 6823      		and r22,r24
 4648               		.loc 32 6 8 view .LVU956
 4649 0012 01F0      		breq .L167
   7:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     HSV hsv = {rand() & 0xFF, rand() & 0xFF, rgb_matrix_config.hsv.v};
 4650               		.loc 32 7 5 is_stmt 1 view .LVU957
 4651               		.loc 32 7 16 is_stmt 0 view .LVU958
 4652 0014 0E94 0000 		call rand
 4653               	.LVL415:
 4654 0018 182F      		mov r17,r24
 4655               		.loc 32 7 31 view .LVU959
 4656 001a 0E94 0000 		call rand
 4657               	.LVL416:
   8:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     RGB rgb = hsv_to_rgb(hsv);
 4658               		.loc 32 8 5 is_stmt 1 view .LVU960
 4659               		.loc 32 8 15 is_stmt 0 view .LVU961
 4660 001e 612F      		mov r22,r17
 4661 0020 782F      		mov r23,r24
 4662 0022 8091 0000 		lds r24,rgb_matrix_config+3
 4663 0026 0E94 0000 		call hsv_to_rgb
 4664               	.LVL417:
 4665 002a 462F      		mov r20,r22
 4666               	.LVL418:
   9:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4667               		.loc 32 9 5 is_stmt 1 view .LVU962
 4668               		.loc 32 9 5 is_stmt 0 view .LVU963
 4669 002c 282F      		mov r18,r24
 4670               		.loc 32 9 5 view .LVU964
 4671 002e 672F      		mov r22,r23
 4672 0030 CE01      		movw r24,r28
 4673               	/* epilogue start */
  10:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** }
 4674               		.loc 32 10 1 view .LVU965
 4675 0032 DF91      		pop r29
 4676 0034 CF91      		pop r28
 4677               	.LVL419:
 4678               		.loc 32 10 1 view .LVU966
 4679 0036 1F91      		pop r17
   9:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4680               		.loc 32 9 5 view .LVU967
 4681 0038 0C94 0000 		jmp rgb_matrix_set_color
 4682               	.LVL420:
 4683               	.L167:
 4684               	/* epilogue start */
 4685               		.loc 32 10 1 view .LVU968
 4686 003c DF91      		pop r29
 4687 003e CF91      		pop r28
 4688               	.LVL421:
 4689               		.loc 32 10 1 view .LVU969
 4690 0040 1F91      		pop r17
 4691 0042 0895      		ret
 4692               		.cfi_endproc
 4693               	.LFE280:
 4695               		.section	.text.JELLYBEAN_RAINDROPS,"ax",@progbits
 4696               	.global	JELLYBEAN_RAINDROPS
 4698               	JELLYBEAN_RAINDROPS:
 4699               	.LVL422:
 4700               	.LFB232:
  11:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** 
  12:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** bool JELLYBEAN_RAINDROPS(effect_params_t* params) {
 4701               		.loc 32 12 51 is_stmt 1 view -0
 4702               		.cfi_startproc
 4703               		.loc 32 12 51 is_stmt 0 view .LVU971
 4704 0000 DF92      		push r13
 4705               	.LCFI156:
 4706               		.cfi_def_cfa_offset 3
 4707               		.cfi_offset 13, -2
 4708 0002 EF92      		push r14
 4709               	.LCFI157:
 4710               		.cfi_def_cfa_offset 4
 4711               		.cfi_offset 14, -3
 4712 0004 FF92      		push r15
 4713               	.LCFI158:
 4714               		.cfi_def_cfa_offset 5
 4715               		.cfi_offset 15, -4
 4716 0006 0F93      		push r16
 4717               	.LCFI159:
 4718               		.cfi_def_cfa_offset 6
 4719               		.cfi_offset 16, -5
 4720 0008 1F93      		push r17
 4721               	.LCFI160:
 4722               		.cfi_def_cfa_offset 7
 4723               		.cfi_offset 17, -6
 4724 000a CF93      		push r28
 4725               	.LCFI161:
 4726               		.cfi_def_cfa_offset 8
 4727               		.cfi_offset 28, -7
 4728 000c DF93      		push r29
 4729               	.LCFI162:
 4730               		.cfi_def_cfa_offset 9
 4731               		.cfi_offset 29, -8
 4732               	/* prologue: function */
 4733               	/* frame size = 0 */
 4734               	/* stack size = 7 */
 4735               	.L__stack_usage = 7
 4736 000e 8C01      		movw r16,r24
  13:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     if (!params->init) {
 4737               		.loc 32 13 5 is_stmt 1 view .LVU972
 4738               		.loc 32 13 16 is_stmt 0 view .LVU973
 4739 0010 FC01      		movw r30,r24
 4740 0012 C281      		ldd r28,Z+2
 4741               		.loc 32 13 8 view .LVU974
 4742 0014 C111      		cpse r28,__zero_reg__
 4743 0016 00C0      		rjmp .L169
  14:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         // Change one LED every tick, make sure speed is not 0
  15:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         if (scale16by8(g_rgb_counters.tick, qadd8(rgb_matrix_config.speed, 16)) % 5 == 0) {
 4744               		.loc 32 15 9 is_stmt 1 view .LVU975
 4745               	.LVL423:
 4746               	.LBB142:
 4747               	.LBI142:
  23:./lib/lib8tion/math8.h **** {
 4748               		.loc 2 23 34 view .LVU976
 4749               	.LBB143:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 4750               		.loc 2 30 5 view .LVU977
 4751 0018 6091 0000 		lds r22,rgb_matrix_config+4
 4752 001c 20E1      		ldi r18,lo8(16)
 4753               	/* #APP */
 4754               	 ;  30 "./lib/lib8tion/math8.h" 1
 4755 001e 620F      		add r22, r18    
 4756 0020 00F4      		brcc L_3926     
 4757 0022 6FEF      		ldi r22, 0xFF  
 4758               		L_3926: 
 4759               	 ;  0 "" 2
 4760               	.LVL424:
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 4761               		.loc 2 43 5 view .LVU978
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 4762               		.loc 2 43 5 is_stmt 0 view .LVU979
 4763               	/* #NOAPP */
 4764               	.LBE143:
 4765               	.LBE142:
 4766               		.loc 32 15 13 view .LVU980
 4767 0024 8091 0000 		lds r24,g_rgb_counters
 4768 0028 9091 0000 		lds r25,g_rgb_counters+1
 4769               	.LVL425:
 4770               		.loc 32 15 13 view .LVU981
 4771 002c 0E94 0000 		call scale16by8
 4772               	.LVL426:
 4773               		.loc 32 15 81 view .LVU982
 4774 0030 65E0      		ldi r22,lo8(5)
 4775 0032 70E0      		ldi r23,0
 4776 0034 0E94 0000 		call __udivmodhi4
 4777               		.loc 32 15 12 view .LVU983
 4778 0038 892B      		or r24,r25
 4779 003a 01F4      		brne .L168
  16:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****             jellybean_raindrops_set_color(rand() % DRIVER_LED_TOTAL, params);
 4780               		.loc 32 16 13 is_stmt 1 view .LVU984
 4781               		.loc 32 16 43 is_stmt 0 view .LVU985
 4782 003c 0E94 0000 		call rand
 4783               	.LVL427:
 4784               		.loc 32 16 13 view .LVU986
 4785 0040 66E3      		ldi r22,lo8(54)
 4786 0042 70E0      		ldi r23,0
 4787 0044 0E94 0000 		call __divmodhi4
 4788 0048 F801      		movw r30,r16
 4789 004a 6181      		ldd r22,Z+1
 4790 004c 0E94 0000 		call jellybean_raindrops_set_color.isra.2
 4791               	.LVL428:
 4792               	.L168:
  17:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         }
  18:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         return false;
  19:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     }
  20:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** 
  21:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
  22:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
  23:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
  24:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     }
  25:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     return led_max < DRIVER_LED_TOTAL;
  26:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** }
 4793               		.loc 32 26 1 view .LVU987
 4794 0050 8C2F      		mov r24,r28
 4795               	/* epilogue start */
 4796 0052 DF91      		pop r29
 4797 0054 CF91      		pop r28
 4798 0056 1F91      		pop r17
 4799 0058 0F91      		pop r16
 4800               	.LVL429:
 4801               		.loc 32 26 1 view .LVU988
 4802 005a FF90      		pop r15
 4803 005c EF90      		pop r14
 4804 005e DF90      		pop r13
 4805 0060 0895      		ret
 4806               	.LVL430:
 4807               	.L169:
  21:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 4808               		.loc 32 21 5 is_stmt 1 view .LVU989
 4809 0062 C081      		ld r28,Z
 4810 0064 8BE0      		ldi r24,lo8(11)
 4811 0066 C89F      		mul r28,r24
 4812 0068 C02D      		mov r28,r0
 4813 006a 1124      		clr r1
 4814               	.LVL431:
  21:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 4815               		.loc 32 21 5 view .LVU990
 4816 006c 8BE0      		ldi r24,lo8(11)
 4817 006e D82E      		mov r13,r24
 4818 0070 DC0E      		add r13,r28
 4819               	.LVL432:
  21:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 4820               		.loc 32 21 5 view .LVU991
 4821 0072 8D2D      		mov r24,r13
 4822 0074 F6E3      		ldi r31,lo8(54)
 4823 0076 FD15      		cp r31,r13
 4824 0078 00F4      		brsh .L171
 4825 007a 86E3      		ldi r24,lo8(54)
 4826               	.L171:
 4827               	.LVL433:
  21:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 4828               		.loc 32 21 44 view .LVU992
  22:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 4829               		.loc 32 22 5 view .LVU993
 4830               	.LBB144:
  22:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 4831               		.loc 32 22 10 view .LVU994
  22:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 4832               		.loc 32 22 14 is_stmt 0 view .LVU995
 4833 007c D0E0      		ldi r29,0
 4834               	.LVL434:
  22:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 4835               		.loc 32 22 29 view .LVU996
 4836 007e E82E      		mov r14,r24
 4837 0080 F12C      		mov r15,__zero_reg__
 4838               	.LVL435:
 4839               	.L172:
  22:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 4840               		.loc 32 22 5 discriminator 1 view .LVU997
 4841 0082 CE15      		cp r28,r14
 4842 0084 DF05      		cpc r29,r15
 4843 0086 04F0      		brlt .L173
  22:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 4844               		.loc 32 22 5 discriminator 1 view .LVU998
 4845               	.LBE144:
  25:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** }
 4846               		.loc 32 25 5 is_stmt 1 view .LVU999
 4847 0088 C1E0      		ldi r28,lo8(1)
 4848               	.LVL436:
  25:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** }
 4849               		.loc 32 25 5 is_stmt 0 view .LVU1000
 4850 008a F5E3      		ldi r31,lo8(53)
 4851 008c FD15      		cp r31,r13
 4852 008e 00F4      		brsh .L168
 4853 0090 C0E0      		ldi r28,0
  25:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** }
 4854               		.loc 32 25 20 view .LVU1001
 4855 0092 00C0      		rjmp .L168
 4856               	.LVL437:
 4857               	.L173:
 4858               	.LBB145:
  23:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****     }
 4859               		.loc 32 23 9 is_stmt 1 discriminator 3 view .LVU1002
 4860 0094 F801      		movw r30,r16
 4861 0096 6181      		ldd r22,Z+1
 4862 0098 CE01      		movw r24,r28
 4863 009a 0E94 0000 		call jellybean_raindrops_set_color.isra.2
 4864               	.LVL438:
  22:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 4865               		.loc 32 22 41 is_stmt 0 discriminator 3 view .LVU1003
 4866 009e 2196      		adiw r28,1
 4867               	.LVL439:
  22:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 4868               		.loc 32 22 41 discriminator 3 view .LVU1004
 4869 00a0 00C0      		rjmp .L172
 4870               	.LBE145:
 4871               		.cfi_endproc
 4872               	.LFE232:
 4874               		.section	.text.rgb_matrix_set_color_all,"ax",@progbits
 4875               	.global	rgb_matrix_set_color_all
 4877               	rgb_matrix_set_color_all:
 4878               	.LVL440:
 4879               	.LFB241:
 169:quantum/rgb_matrix.c **** 
 170:quantum/rgb_matrix.c **** void rgb_matrix_set_color_all(uint8_t red, uint8_t green, uint8_t blue) { rgb_matrix_driver.set_col
 4880               		.loc 21 170 73 is_stmt 1 view -0
 4881               		.cfi_startproc
 4882               	/* prologue: function */
 4883               	/* frame size = 0 */
 4884               	/* stack size = 0 */
 4885               	.L__stack_usage = 0
 4886               		.loc 21 170 75 view .LVU1006
 4887 0000 E091 0000 		lds r30,rgb_matrix_driver+4
 4888 0004 F091 0000 		lds r31,rgb_matrix_driver+4+1
 4889 0008 0994      		ijmp
 4890               	.LVL441:
 4891               		.loc 21 170 75 is_stmt 0 view .LVU1007
 4892               		.cfi_endproc
 4893               	.LFE241:
 4895               		.section	.text.process_rgb_matrix,"ax",@progbits
 4896               	.global	process_rgb_matrix
 4898               	process_rgb_matrix:
 4899               	.LVL442:
 4900               	.LFB242:
 171:quantum/rgb_matrix.c **** 
 172:quantum/rgb_matrix.c **** bool process_rgb_matrix(uint16_t keycode, keyrecord_t *record) {
 4901               		.loc 21 172 64 is_stmt 1 view -0
 4902               		.cfi_startproc
 4903               	/* prologue: function */
 4904               	/* frame size = 0 */
 4905               	/* stack size = 0 */
 4906               	.L__stack_usage = 0
 173:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 174:quantum/rgb_matrix.c ****     uint8_t led[LED_HITS_TO_REMEMBER];
 175:quantum/rgb_matrix.c ****     uint8_t led_count = 0;
 176:quantum/rgb_matrix.c **** 
 177:quantum/rgb_matrix.c **** #    if defined(RGB_MATRIX_KEYRELEASES)
 178:quantum/rgb_matrix.c ****     if (!record->event.pressed) {
 179:quantum/rgb_matrix.c ****         led_count                  = rgb_matrix_map_row_column_to_led(record->event.key.row, record
 180:quantum/rgb_matrix.c ****         g_rgb_counters.any_key_hit = 0;
 181:quantum/rgb_matrix.c ****     }
 182:quantum/rgb_matrix.c **** #    elif defined(RGB_MATRIX_KEYPRESSES)
 183:quantum/rgb_matrix.c ****     if (record->event.pressed) {
 184:quantum/rgb_matrix.c ****         led_count                  = rgb_matrix_map_row_column_to_led(record->event.key.row, record
 185:quantum/rgb_matrix.c ****         g_rgb_counters.any_key_hit = 0;
 186:quantum/rgb_matrix.c ****     }
 187:quantum/rgb_matrix.c **** #    endif  // defined(RGB_MATRIX_KEYRELEASES)
 188:quantum/rgb_matrix.c **** 
 189:quantum/rgb_matrix.c ****     if (last_hit_buffer.count + led_count > LED_HITS_TO_REMEMBER) {
 190:quantum/rgb_matrix.c ****         memcpy(&last_hit_buffer.x[0], &last_hit_buffer.x[led_count], LED_HITS_TO_REMEMBER - led_cou
 191:quantum/rgb_matrix.c ****         memcpy(&last_hit_buffer.y[0], &last_hit_buffer.y[led_count], LED_HITS_TO_REMEMBER - led_cou
 192:quantum/rgb_matrix.c ****         memcpy(&last_hit_buffer.tick[0], &last_hit_buffer.tick[led_count], (LED_HITS_TO_REMEMBER - 
 193:quantum/rgb_matrix.c ****         memcpy(&last_hit_buffer.index[0], &last_hit_buffer.index[led_count], LED_HITS_TO_REMEMBER -
 194:quantum/rgb_matrix.c ****         last_hit_buffer.count--;
 195:quantum/rgb_matrix.c ****     }
 196:quantum/rgb_matrix.c **** 
 197:quantum/rgb_matrix.c ****     for (uint8_t i = 0; i < led_count; i++) {
 198:quantum/rgb_matrix.c ****         uint8_t index                = last_hit_buffer.count;
 199:quantum/rgb_matrix.c ****         last_hit_buffer.x[index]     = g_led_config.point[led[i]].x;
 200:quantum/rgb_matrix.c ****         last_hit_buffer.y[index]     = g_led_config.point[led[i]].y;
 201:quantum/rgb_matrix.c ****         last_hit_buffer.index[index] = led[i];
 202:quantum/rgb_matrix.c ****         last_hit_buffer.tick[index]  = 0;
 203:quantum/rgb_matrix.c ****         last_hit_buffer.count++;
 204:quantum/rgb_matrix.c ****     }
 205:quantum/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 206:quantum/rgb_matrix.c **** 
 207:quantum/rgb_matrix.c **** #if defined(RGB_MATRIX_FRAMEBUFFER_EFFECTS) && !defined(DISABLE_RGB_MATRIX_TYPING_HEATMAP)
 208:quantum/rgb_matrix.c ****     if (rgb_matrix_config.mode == RGB_MATRIX_TYPING_HEATMAP) {
 209:quantum/rgb_matrix.c ****         process_rgb_matrix_typing_heatmap(record);
 210:quantum/rgb_matrix.c ****     }
 211:quantum/rgb_matrix.c **** #endif  // defined(RGB_MATRIX_FRAMEBUFFER_EFFECTS) && !defined(DISABLE_RGB_MATRIX_TYPING_HEATMAP)
 212:quantum/rgb_matrix.c **** 
 213:quantum/rgb_matrix.c ****     return true;
 4907               		.loc 21 213 5 view .LVU1009
 214:quantum/rgb_matrix.c **** }
 4908               		.loc 21 214 1 is_stmt 0 view .LVU1010
 4909 0000 81E0      		ldi r24,lo8(1)
 4910               	.LVL443:
 4911               	/* epilogue start */
 4912               		.loc 21 214 1 view .LVU1011
 4913 0002 0895      		ret
 4914               		.cfi_endproc
 4915               	.LFE242:
 4917               		.section	.text.rgb_matrix_test,"ax",@progbits
 4918               	.global	rgb_matrix_test
 4920               	rgb_matrix_test:
 4921               	.LFB243:
 215:quantum/rgb_matrix.c **** 
 216:quantum/rgb_matrix.c **** void rgb_matrix_test(void) {
 4922               		.loc 21 216 28 is_stmt 1 view -0
 4923               		.cfi_startproc
 4924               	/* prologue: function */
 4925               	/* frame size = 0 */
 4926               	/* stack size = 0 */
 4927               	.L__stack_usage = 0
 217:quantum/rgb_matrix.c ****     // Mask out bits 4 and 5
 218:quantum/rgb_matrix.c ****     // Increase the factor to make the test animation slower (and reduce to make it faster)
 219:quantum/rgb_matrix.c ****     uint8_t factor = 10;
 4928               		.loc 21 219 5 view .LVU1013
 4929               	.LVL444:
 220:quantum/rgb_matrix.c ****     switch ((g_rgb_counters.tick & (0b11 << factor)) >> factor) {
 4930               		.loc 21 220 5 view .LVU1014
 4931               		.loc 21 220 54 is_stmt 0 view .LVU1015
 4932 0000 8091 0000 		lds r24,g_rgb_counters
 4933 0004 9091 0000 		lds r25,g_rgb_counters+1
 4934 0008 A091 0000 		lds r26,g_rgb_counters+2
 4935 000c B091 0000 		lds r27,g_rgb_counters+3
 4936 0010 2AE0      		ldi r18,10
 4937               		1:
 4938 0012 B695      		lsr r27
 4939 0014 A795      		ror r26
 4940 0016 9795      		ror r25
 4941 0018 8795      		ror r24
 4942 001a 2A95      		dec r18
 4943 001c 01F4      		brne 1b
 4944 001e 8370      		andi r24,3
 4945 0020 9927      		clr r25
 4946 0022 AA27      		clr r26
 4947 0024 BB27      		clr r27
 4948               		.loc 21 220 5 view .LVU1016
 4949 0026 8230      		cpi r24,2
 4950 0028 9105      		cpc r25,__zero_reg__
 4951 002a A105      		cpc r26,__zero_reg__
 4952 002c B105      		cpc r27,__zero_reg__
 4953 002e 01F0      		breq .L178
 4954 0030 8330      		cpi r24,3
 4955 0032 9105      		cpc r25,__zero_reg__
 4956 0034 A105      		cpc r26,__zero_reg__
 4957 0036 B105      		cpc r27,__zero_reg__
 4958 0038 01F0      		breq .L179
 221:quantum/rgb_matrix.c ****         case 0: {
 222:quantum/rgb_matrix.c ****             rgb_matrix_set_color_all(20, 0, 0);
 4959               		.loc 21 222 13 view .LVU1017
 4960 003a 40E0      		ldi r20,0
 4961 003c 60E0      		ldi r22,0
 220:quantum/rgb_matrix.c ****     switch ((g_rgb_counters.tick & (0b11 << factor)) >> factor) {
 4962               		.loc 21 220 5 view .LVU1018
 4963 003e 0197      		sbiw r24,1
 4964 0040 A105      		cpc r26,__zero_reg__
 4965 0042 B105      		cpc r27,__zero_reg__
 4966 0044 01F4      		brne .L181
 223:quantum/rgb_matrix.c ****             break;
 224:quantum/rgb_matrix.c ****         }
 225:quantum/rgb_matrix.c ****         case 1: {
 226:quantum/rgb_matrix.c ****             rgb_matrix_set_color_all(0, 20, 0);
 4967               		.loc 21 226 13 is_stmt 1 view .LVU1019
 4968 0046 64E1      		ldi r22,lo8(20)
 4969               	.L183:
 227:quantum/rgb_matrix.c ****             break;
 228:quantum/rgb_matrix.c ****         }
 229:quantum/rgb_matrix.c ****         case 2: {
 230:quantum/rgb_matrix.c ****             rgb_matrix_set_color_all(0, 0, 20);
 4970               		.loc 21 230 13 is_stmt 0 view .LVU1020
 4971 0048 80E0      		ldi r24,0
 4972               	.L182:
 231:quantum/rgb_matrix.c ****             break;
 232:quantum/rgb_matrix.c ****         }
 233:quantum/rgb_matrix.c ****         case 3: {
 234:quantum/rgb_matrix.c ****             rgb_matrix_set_color_all(20, 20, 20);
 4973               		.loc 21 234 13 view .LVU1021
 4974 004a 0C94 0000 		jmp rgb_matrix_set_color_all
 4975               	.LVL445:
 4976               	.L178:
 230:quantum/rgb_matrix.c ****             break;
 4977               		.loc 21 230 13 is_stmt 1 view .LVU1022
 4978 004e 44E1      		ldi r20,lo8(20)
 4979 0050 60E0      		ldi r22,0
 4980 0052 00C0      		rjmp .L183
 4981               	.L179:
 4982               		.loc 21 234 13 view .LVU1023
 4983 0054 44E1      		ldi r20,lo8(20)
 4984 0056 64E1      		ldi r22,lo8(20)
 4985               	.L181:
 4986 0058 84E1      		ldi r24,lo8(20)
 4987 005a 00C0      		rjmp .L182
 4988               		.cfi_endproc
 4989               	.LFE243:
 4991               		.section	.text.rgb_matrix_indicators_kb,"ax",@progbits
 4992               		.weak	rgb_matrix_indicators_kb
 4994               	rgb_matrix_indicators_kb:
 4995               	.LFB252:
 235:quantum/rgb_matrix.c ****             break;
 236:quantum/rgb_matrix.c ****         }
 237:quantum/rgb_matrix.c ****     }
 238:quantum/rgb_matrix.c **** }
 239:quantum/rgb_matrix.c **** 
 240:quantum/rgb_matrix.c **** static bool rgb_matrix_none(effect_params_t *params) {
 241:quantum/rgb_matrix.c ****     if (!params->init) {
 242:quantum/rgb_matrix.c ****         return false;
 243:quantum/rgb_matrix.c ****     }
 244:quantum/rgb_matrix.c **** 
 245:quantum/rgb_matrix.c ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 246:quantum/rgb_matrix.c ****     for (uint8_t i = led_min; i < led_max; i++) {
 247:quantum/rgb_matrix.c ****         rgb_matrix_set_color(i, 0, 0, 0);
 248:quantum/rgb_matrix.c ****     }
 249:quantum/rgb_matrix.c ****     return led_max < DRIVER_LED_TOTAL;
 250:quantum/rgb_matrix.c **** }
 251:quantum/rgb_matrix.c **** 
 252:quantum/rgb_matrix.c **** static uint8_t         rgb_last_enable   = UINT8_MAX;
 253:quantum/rgb_matrix.c **** static uint8_t         rgb_last_effect   = UINT8_MAX;
 254:quantum/rgb_matrix.c **** static effect_params_t rgb_effect_params = {0, 0xFF};
 255:quantum/rgb_matrix.c **** static rgb_task_states rgb_task_state    = SYNCING;
 256:quantum/rgb_matrix.c **** 
 257:quantum/rgb_matrix.c **** static void rgb_task_timers(void) {
 258:quantum/rgb_matrix.c ****     // Update double buffer timers
 259:quantum/rgb_matrix.c ****     uint16_t deltaTime  = timer_elapsed32(rgb_counters_buffer);
 260:quantum/rgb_matrix.c ****     rgb_counters_buffer = timer_read32();
 261:quantum/rgb_matrix.c ****     if (g_rgb_counters.any_key_hit < UINT32_MAX) {
 262:quantum/rgb_matrix.c ****         if (UINT32_MAX - deltaTime < g_rgb_counters.any_key_hit) {
 263:quantum/rgb_matrix.c ****             g_rgb_counters.any_key_hit = UINT32_MAX;
 264:quantum/rgb_matrix.c ****         } else {
 265:quantum/rgb_matrix.c ****             g_rgb_counters.any_key_hit += deltaTime;
 266:quantum/rgb_matrix.c ****         }
 267:quantum/rgb_matrix.c ****     }
 268:quantum/rgb_matrix.c **** 
 269:quantum/rgb_matrix.c ****     // Update double buffer last hit timers
 270:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 271:quantum/rgb_matrix.c ****     uint8_t count = last_hit_buffer.count;
 272:quantum/rgb_matrix.c ****     for (uint8_t i = 0; i < count; ++i) {
 273:quantum/rgb_matrix.c ****         if (UINT16_MAX - deltaTime < last_hit_buffer.tick[i]) {
 274:quantum/rgb_matrix.c ****             last_hit_buffer.count--;
 275:quantum/rgb_matrix.c ****             continue;
 276:quantum/rgb_matrix.c ****         }
 277:quantum/rgb_matrix.c ****         last_hit_buffer.tick[i] += deltaTime;
 278:quantum/rgb_matrix.c ****     }
 279:quantum/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 280:quantum/rgb_matrix.c **** }
 281:quantum/rgb_matrix.c **** 
 282:quantum/rgb_matrix.c **** static void rgb_task_sync(void) {
 283:quantum/rgb_matrix.c ****     // next task
 284:quantum/rgb_matrix.c ****     if (timer_elapsed32(g_rgb_counters.tick) >= RGB_MATRIX_LED_FLUSH_LIMIT) rgb_task_state = STARTI
 285:quantum/rgb_matrix.c **** }
 286:quantum/rgb_matrix.c **** 
 287:quantum/rgb_matrix.c **** static void rgb_task_start(void) {
 288:quantum/rgb_matrix.c ****     // reset iter
 289:quantum/rgb_matrix.c ****     rgb_effect_params.iter = 0;
 290:quantum/rgb_matrix.c **** 
 291:quantum/rgb_matrix.c ****     // update double buffers
 292:quantum/rgb_matrix.c ****     g_rgb_counters.tick = rgb_counters_buffer;
 293:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 294:quantum/rgb_matrix.c ****     g_last_hit_tracker = last_hit_buffer;
 295:quantum/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 296:quantum/rgb_matrix.c **** 
 297:quantum/rgb_matrix.c ****     // next task
 298:quantum/rgb_matrix.c ****     rgb_task_state = RENDERING;
 299:quantum/rgb_matrix.c **** }
 300:quantum/rgb_matrix.c **** 
 301:quantum/rgb_matrix.c **** static void rgb_task_render(uint8_t effect) {
 302:quantum/rgb_matrix.c ****     bool rendering         = false;
 303:quantum/rgb_matrix.c ****     rgb_effect_params.init = (effect != rgb_last_effect) || (rgb_matrix_config.enable != rgb_last_e
 304:quantum/rgb_matrix.c **** 
 305:quantum/rgb_matrix.c ****     // each effect can opt to do calculations
 306:quantum/rgb_matrix.c ****     // and/or request PWM buffer updates.
 307:quantum/rgb_matrix.c ****     switch (effect) {
 308:quantum/rgb_matrix.c ****         case RGB_MATRIX_NONE:
 309:quantum/rgb_matrix.c ****             rendering = rgb_matrix_none(&rgb_effect_params);
 310:quantum/rgb_matrix.c ****             break;
 311:quantum/rgb_matrix.c **** 
 312:quantum/rgb_matrix.c **** // ---------------------------------------------
 313:quantum/rgb_matrix.c **** // -----Begin rgb effect switch case macros-----
 314:quantum/rgb_matrix.c **** #define RGB_MATRIX_EFFECT(name, ...)          \
 315:quantum/rgb_matrix.c ****     case RGB_MATRIX_##name:                   \
 316:quantum/rgb_matrix.c ****         rendering = name(&rgb_effect_params); \
 317:quantum/rgb_matrix.c ****         break;
 318:quantum/rgb_matrix.c **** #include "rgb_matrix_animations/rgb_matrix_effects.inc"
 319:quantum/rgb_matrix.c **** #undef RGB_MATRIX_EFFECT
 320:quantum/rgb_matrix.c **** 
 321:quantum/rgb_matrix.c **** #if defined(RGB_MATRIX_CUSTOM_KB) || defined(RGB_MATRIX_CUSTOM_USER)
 322:quantum/rgb_matrix.c **** #    define RGB_MATRIX_EFFECT(name, ...)          \
 323:quantum/rgb_matrix.c ****         case RGB_MATRIX_CUSTOM_##name:            \
 324:quantum/rgb_matrix.c ****             rendering = name(&rgb_effect_params); \
 325:quantum/rgb_matrix.c ****             break;
 326:quantum/rgb_matrix.c **** #    ifdef RGB_MATRIX_CUSTOM_KB
 327:quantum/rgb_matrix.c **** #        include "rgb_matrix_kb.inc"
 328:quantum/rgb_matrix.c **** #    endif
 329:quantum/rgb_matrix.c **** #    ifdef RGB_MATRIX_CUSTOM_USER
 330:quantum/rgb_matrix.c **** #        include "rgb_matrix_user.inc"
 331:quantum/rgb_matrix.c **** #    endif
 332:quantum/rgb_matrix.c **** #    undef RGB_MATRIX_EFFECT
 333:quantum/rgb_matrix.c **** #endif
 334:quantum/rgb_matrix.c ****             // -----End rgb effect switch case macros-------
 335:quantum/rgb_matrix.c ****             // ---------------------------------------------
 336:quantum/rgb_matrix.c **** 
 337:quantum/rgb_matrix.c ****         // Factory default magic value
 338:quantum/rgb_matrix.c ****         case UINT8_MAX: {
 339:quantum/rgb_matrix.c ****             rgb_matrix_test();
 340:quantum/rgb_matrix.c ****             rgb_task_state = FLUSHING;
 341:quantum/rgb_matrix.c ****         }
 342:quantum/rgb_matrix.c ****             return;
 343:quantum/rgb_matrix.c ****     }
 344:quantum/rgb_matrix.c **** 
 345:quantum/rgb_matrix.c ****     rgb_effect_params.iter++;
 346:quantum/rgb_matrix.c **** 
 347:quantum/rgb_matrix.c ****     // next task
 348:quantum/rgb_matrix.c ****     if (!rendering) {
 349:quantum/rgb_matrix.c ****         rgb_task_state = FLUSHING;
 350:quantum/rgb_matrix.c ****         if (!rgb_effect_params.init && effect == RGB_MATRIX_NONE) {
 351:quantum/rgb_matrix.c ****             // We only need to flush once if we are RGB_MATRIX_NONE
 352:quantum/rgb_matrix.c ****             rgb_task_state = SYNCING;
 353:quantum/rgb_matrix.c ****         }
 354:quantum/rgb_matrix.c ****     }
 355:quantum/rgb_matrix.c **** }
 356:quantum/rgb_matrix.c **** 
 357:quantum/rgb_matrix.c **** static void rgb_task_flush(uint8_t effect) {
 358:quantum/rgb_matrix.c ****     // update last trackers after the first full render so we can init over several frames
 359:quantum/rgb_matrix.c ****     rgb_last_effect = effect;
 360:quantum/rgb_matrix.c ****     rgb_last_enable = rgb_matrix_config.enable;
 361:quantum/rgb_matrix.c **** 
 362:quantum/rgb_matrix.c ****     // update pwm buffers
 363:quantum/rgb_matrix.c ****     rgb_matrix_update_pwm_buffers();
 364:quantum/rgb_matrix.c **** 
 365:quantum/rgb_matrix.c ****     // next task
 366:quantum/rgb_matrix.c ****     rgb_task_state = SYNCING;
 367:quantum/rgb_matrix.c **** }
 368:quantum/rgb_matrix.c **** 
 369:quantum/rgb_matrix.c **** void rgb_matrix_task(void) {
 370:quantum/rgb_matrix.c ****     rgb_task_timers();
 371:quantum/rgb_matrix.c **** 
 372:quantum/rgb_matrix.c ****     // Ideally we would also stop sending zeros to the LED driver PWM buffers
 373:quantum/rgb_matrix.c ****     // while suspended and just do a software shutdown. This is a cheap hack for now.
 374:quantum/rgb_matrix.c ****     bool    suspend_backlight = ((g_suspend_state && RGB_DISABLE_WHEN_USB_SUSPENDED) || (RGB_DISABL
 375:quantum/rgb_matrix.c ****     uint8_t effect            = suspend_backlight || !rgb_matrix_config.enable ? 0 : rgb_matrix_con
 376:quantum/rgb_matrix.c **** 
 377:quantum/rgb_matrix.c ****     switch (rgb_task_state) {
 378:quantum/rgb_matrix.c ****         case STARTING:
 379:quantum/rgb_matrix.c ****             rgb_task_start();
 380:quantum/rgb_matrix.c ****             break;
 381:quantum/rgb_matrix.c ****         case RENDERING:
 382:quantum/rgb_matrix.c ****             rgb_task_render(effect);
 383:quantum/rgb_matrix.c ****             break;
 384:quantum/rgb_matrix.c ****         case FLUSHING:
 385:quantum/rgb_matrix.c ****             rgb_task_flush(effect);
 386:quantum/rgb_matrix.c ****             break;
 387:quantum/rgb_matrix.c ****         case SYNCING:
 388:quantum/rgb_matrix.c ****             rgb_task_sync();
 389:quantum/rgb_matrix.c ****             break;
 390:quantum/rgb_matrix.c ****     }
 391:quantum/rgb_matrix.c **** 
 392:quantum/rgb_matrix.c ****     if (!suspend_backlight) {
 393:quantum/rgb_matrix.c ****         rgb_matrix_indicators();
 394:quantum/rgb_matrix.c ****     }
 395:quantum/rgb_matrix.c **** }
 396:quantum/rgb_matrix.c **** 
 397:quantum/rgb_matrix.c **** void rgb_matrix_indicators(void) {
 398:quantum/rgb_matrix.c ****     rgb_matrix_indicators_kb();
 399:quantum/rgb_matrix.c ****     rgb_matrix_indicators_user();
 400:quantum/rgb_matrix.c **** }
 401:quantum/rgb_matrix.c **** 
 402:quantum/rgb_matrix.c **** __attribute__((weak)) void rgb_matrix_indicators_kb(void) {}
 4996               		.loc 21 402 59 view -0
 4997               		.cfi_startproc
 4998               	/* prologue: function */
 4999               	/* frame size = 0 */
 5000               	/* stack size = 0 */
 5001               	.L__stack_usage = 0
 5002               		.loc 21 402 60 view .LVU1025
 5003               	/* epilogue start */
 5004               		.loc 21 402 1 is_stmt 0 view .LVU1026
 5005 0000 0895      		ret
 5006               		.cfi_endproc
 5007               	.LFE252:
 5009               		.set	rgb_matrix_indicators_kb.localalias.3,rgb_matrix_indicators_kb
 5010               		.section	.text.rgb_matrix_indicators_user,"ax",@progbits
 5011               		.weak	rgb_matrix_indicators_user
 5013               	rgb_matrix_indicators_user:
 5014               	.LFB282:
 5015               		.cfi_startproc
 5016               	/* prologue: function */
 5017               	/* frame size = 0 */
 5018               	/* stack size = 0 */
 5019               	.L__stack_usage = 0
 5020               	/* epilogue start */
 5021 0000 0895      		ret
 5022               		.cfi_endproc
 5023               	.LFE282:
 5025               		.section	.text.rgb_matrix_indicators,"ax",@progbits
 5026               	.global	rgb_matrix_indicators
 5028               	rgb_matrix_indicators:
 5029               	.LFB251:
 397:quantum/rgb_matrix.c ****     rgb_matrix_indicators_kb();
 5030               		.loc 21 397 34 is_stmt 1 view -0
 5031               		.cfi_startproc
 5032               	/* prologue: function */
 5033               	/* frame size = 0 */
 5034               	/* stack size = 0 */
 5035               	.L__stack_usage = 0
 398:quantum/rgb_matrix.c ****     rgb_matrix_indicators_user();
 5036               		.loc 21 398 5 view .LVU1028
 5037 0000 0E94 0000 		call rgb_matrix_indicators_kb
 5038               	.LVL446:
 399:quantum/rgb_matrix.c **** }
 5039               		.loc 21 399 5 view .LVU1029
 5040 0004 0C94 0000 		jmp rgb_matrix_indicators_user
 5041               	.LVL447:
 5042               		.cfi_endproc
 5043               	.LFE251:
 5045               		.section	.text.rgb_matrix_task,"ax",@progbits
 5046               	.global	rgb_matrix_task
 5048               	rgb_matrix_task:
 5049               	.LFB250:
 369:quantum/rgb_matrix.c ****     rgb_task_timers();
 5050               		.loc 21 369 28 view -0
 5051               		.cfi_startproc
 5052 0000 8F92      		push r8
 5053               	.LCFI163:
 5054               		.cfi_def_cfa_offset 3
 5055               		.cfi_offset 8, -2
 5056 0002 9F92      		push r9
 5057               	.LCFI164:
 5058               		.cfi_def_cfa_offset 4
 5059               		.cfi_offset 9, -3
 5060 0004 AF92      		push r10
 5061               	.LCFI165:
 5062               		.cfi_def_cfa_offset 5
 5063               		.cfi_offset 10, -4
 5064 0006 BF92      		push r11
 5065               	.LCFI166:
 5066               		.cfi_def_cfa_offset 6
 5067               		.cfi_offset 11, -5
 5068 0008 CF92      		push r12
 5069               	.LCFI167:
 5070               		.cfi_def_cfa_offset 7
 5071               		.cfi_offset 12, -6
 5072 000a DF92      		push r13
 5073               	.LCFI168:
 5074               		.cfi_def_cfa_offset 8
 5075               		.cfi_offset 13, -7
 5076 000c EF92      		push r14
 5077               	.LCFI169:
 5078               		.cfi_def_cfa_offset 9
 5079               		.cfi_offset 14, -8
 5080 000e FF92      		push r15
 5081               	.LCFI170:
 5082               		.cfi_def_cfa_offset 10
 5083               		.cfi_offset 15, -9
 5084 0010 0F93      		push r16
 5085               	.LCFI171:
 5086               		.cfi_def_cfa_offset 11
 5087               		.cfi_offset 16, -10
 5088 0012 1F93      		push r17
 5089               	.LCFI172:
 5090               		.cfi_def_cfa_offset 12
 5091               		.cfi_offset 17, -11
 5092 0014 CF93      		push r28
 5093               	.LCFI173:
 5094               		.cfi_def_cfa_offset 13
 5095               		.cfi_offset 28, -12
 5096 0016 DF93      		push r29
 5097               	.LCFI174:
 5098               		.cfi_def_cfa_offset 14
 5099               		.cfi_offset 29, -13
 5100               	/* prologue: function */
 5101               	/* frame size = 0 */
 5102               	/* stack size = 12 */
 5103               	.L__stack_usage = 12
 370:quantum/rgb_matrix.c **** 
 5104               		.loc 21 370 5 view .LVU1031
 5105               	.LBB159:
 5106               	.LBI159:
 257:quantum/rgb_matrix.c ****     // Update double buffer timers
 5107               		.loc 21 257 13 view .LVU1032
 5108               	.LBB160:
 259:quantum/rgb_matrix.c ****     rgb_counters_buffer = timer_read32();
 5109               		.loc 21 259 5 view .LVU1033
 259:quantum/rgb_matrix.c ****     rgb_counters_buffer = timer_read32();
 5110               		.loc 21 259 27 is_stmt 0 view .LVU1034
 5111 0018 6091 0000 		lds r22,rgb_counters_buffer
 5112 001c 7091 0000 		lds r23,rgb_counters_buffer+1
 5113 0020 8091 0000 		lds r24,rgb_counters_buffer+2
 5114 0024 9091 0000 		lds r25,rgb_counters_buffer+3
 5115 0028 0E94 0000 		call timer_elapsed32
 5116               	.LVL448:
 5117 002c 6B01      		movw r12,r22
 5118 002e 7C01      		movw r14,r24
 5119               	.LVL449:
 260:quantum/rgb_matrix.c ****     if (g_rgb_counters.any_key_hit < UINT32_MAX) {
 5120               		.loc 21 260 5 is_stmt 1 view .LVU1035
 260:quantum/rgb_matrix.c ****     if (g_rgb_counters.any_key_hit < UINT32_MAX) {
 5121               		.loc 21 260 27 is_stmt 0 view .LVU1036
 5122 0030 0E94 0000 		call timer_read32
 5123               	.LVL450:
 5124 0034 4B01      		movw r8,r22
 5125 0036 5C01      		movw r10,r24
 260:quantum/rgb_matrix.c ****     if (g_rgb_counters.any_key_hit < UINT32_MAX) {
 5126               		.loc 21 260 25 view .LVU1037
 5127 0038 8092 0000 		sts rgb_counters_buffer,r8
 5128 003c 9092 0000 		sts rgb_counters_buffer+1,r9
 5129 0040 A092 0000 		sts rgb_counters_buffer+2,r10
 5130 0044 B092 0000 		sts rgb_counters_buffer+3,r11
 261:quantum/rgb_matrix.c ****         if (UINT32_MAX - deltaTime < g_rgb_counters.any_key_hit) {
 5131               		.loc 21 261 5 is_stmt 1 view .LVU1038
 261:quantum/rgb_matrix.c ****         if (UINT32_MAX - deltaTime < g_rgb_counters.any_key_hit) {
 5132               		.loc 21 261 23 is_stmt 0 view .LVU1039
 5133 0048 8091 0000 		lds r24,g_rgb_counters+4
 5134 004c 9091 0000 		lds r25,g_rgb_counters+4+1
 5135 0050 A091 0000 		lds r26,g_rgb_counters+4+2
 5136 0054 B091 0000 		lds r27,g_rgb_counters+4+3
 261:quantum/rgb_matrix.c ****         if (UINT32_MAX - deltaTime < g_rgb_counters.any_key_hit) {
 5137               		.loc 21 261 8 view .LVU1040
 5138 0058 8F3F      		cpi r24,-1
 5139 005a 2FEF      		ldi r18,-1
 5140 005c 9207      		cpc r25,r18
 5141 005e A207      		cpc r26,r18
 5142 0060 B207      		cpc r27,r18
 5143 0062 01F0      		breq .L188
 262:quantum/rgb_matrix.c ****             g_rgb_counters.any_key_hit = UINT32_MAX;
 5144               		.loc 21 262 9 is_stmt 1 view .LVU1041
 5145 0064 EE24      		clr r14
 5146 0066 FF24      		clr r15
 5147               	.LVL451:
 262:quantum/rgb_matrix.c ****             g_rgb_counters.any_key_hit = UINT32_MAX;
 5148               		.loc 21 262 24 is_stmt 0 view .LVU1042
 5149 0068 9701      		movw r18,r14
 5150 006a 8601      		movw r16,r12
 5151 006c 0095      		com r16
 5152 006e 1095      		com r17
 5153 0070 2095      		com r18
 5154 0072 3095      		com r19
 262:quantum/rgb_matrix.c ****             g_rgb_counters.any_key_hit = UINT32_MAX;
 5155               		.loc 21 262 12 view .LVU1043
 5156 0074 0817      		cp r16,r24
 5157 0076 1907      		cpc r17,r25
 5158 0078 2A07      		cpc r18,r26
 5159 007a 3B07      		cpc r19,r27
 5160 007c 00F4      		brsh .L189
 263:quantum/rgb_matrix.c ****         } else {
 5161               		.loc 21 263 13 is_stmt 1 view .LVU1044
 263:quantum/rgb_matrix.c ****         } else {
 5162               		.loc 21 263 40 is_stmt 0 view .LVU1045
 5163 007e 8FEF      		ldi r24,lo8(-1)
 5164 0080 9FEF      		ldi r25,lo8(-1)
 5165 0082 DC01      		movw r26,r24
 5166               	.L242:
 265:quantum/rgb_matrix.c ****         }
 5167               		.loc 21 265 40 view .LVU1046
 5168 0084 8093 0000 		sts g_rgb_counters+4,r24
 5169 0088 9093 0000 		sts g_rgb_counters+4+1,r25
 5170 008c A093 0000 		sts g_rgb_counters+4+2,r26
 5171 0090 B093 0000 		sts g_rgb_counters+4+3,r27
 5172               	.L188:
 5173               	.LBE160:
 5174               	.LBE159:
 374:quantum/rgb_matrix.c ****     uint8_t effect            = suspend_backlight || !rgb_matrix_config.enable ? 0 : rgb_matrix_con
 5175               		.loc 21 374 5 is_stmt 1 view .LVU1047
 5176               	.LVL452:
 375:quantum/rgb_matrix.c **** 
 5177               		.loc 21 375 5 view .LVU1048
 375:quantum/rgb_matrix.c **** 
 5178               		.loc 21 375 54 is_stmt 0 view .LVU1049
 5179 0094 8091 0000 		lds r24,rgb_matrix_config
 5180 0098 182F      		mov r17,r24
 5181 009a 1370      		andi r17,lo8(3)
 375:quantum/rgb_matrix.c **** 
 5182               		.loc 21 375 51 view .LVU1050
 5183 009c 01F0      		breq .L190
 375:quantum/rgb_matrix.c **** 
 5184               		.loc 21 375 103 discriminator 3 view .LVU1051
 5185 009e 182F      		mov r17,r24
 5186 00a0 1695      		lsr r17
 5187 00a2 1695      		lsr r17
 5188               	.L190:
 5189               	.LVL453:
 377:quantum/rgb_matrix.c ****         case STARTING:
 5190               		.loc 21 377 5 is_stmt 1 discriminator 6 view .LVU1052
 5191 00a4 9091 0000 		lds r25,rgb_task_state
 5192 00a8 9130      		cpi r25,lo8(1)
 5193 00aa 01F0      		breq .L191
 377:quantum/rgb_matrix.c ****         case STARTING:
 5194               		.loc 21 377 5 is_stmt 0 view .LVU1053
 5195 00ac 9923      		tst r25
 5196 00ae 01F0      		breq .L192
 5197 00b0 9230      		cpi r25,lo8(2)
 5198 00b2 01F4      		brne .+2
 5199 00b4 00C0      		rjmp .L193
 5200 00b6 9330      		cpi r25,lo8(3)
 5201 00b8 01F4      		brne .+2
 5202 00ba 00C0      		rjmp .L194
 5203               	.L195:
 392:quantum/rgb_matrix.c ****         rgb_matrix_indicators();
 5204               		.loc 21 392 5 is_stmt 1 view .LVU1054
 393:quantum/rgb_matrix.c ****     }
 5205               		.loc 21 393 9 view .LVU1055
 5206               	/* epilogue start */
 395:quantum/rgb_matrix.c **** 
 5207               		.loc 21 395 1 is_stmt 0 view .LVU1056
 5208 00bc DF91      		pop r29
 5209 00be CF91      		pop r28
 5210 00c0 1F91      		pop r17
 5211               	.LVL454:
 395:quantum/rgb_matrix.c **** 
 5212               		.loc 21 395 1 view .LVU1057
 5213 00c2 0F91      		pop r16
 5214 00c4 FF90      		pop r15
 5215 00c6 EF90      		pop r14
 5216 00c8 DF90      		pop r13
 5217 00ca CF90      		pop r12
 5218 00cc BF90      		pop r11
 5219 00ce AF90      		pop r10
 5220 00d0 9F90      		pop r9
 5221 00d2 8F90      		pop r8
 393:quantum/rgb_matrix.c ****     }
 5222               		.loc 21 393 9 view .LVU1058
 5223 00d4 0C94 0000 		jmp rgb_matrix_indicators
 5224               	.LVL455:
 5225               	.L189:
 5226               	.LBB162:
 5227               	.LBB161:
 265:quantum/rgb_matrix.c ****         }
 5228               		.loc 21 265 13 is_stmt 1 view .LVU1059
 265:quantum/rgb_matrix.c ****         }
 5229               		.loc 21 265 40 is_stmt 0 view .LVU1060
 5230 00d8 8C0D      		add r24,r12
 5231 00da 9D1D      		adc r25,r13
 5232 00dc AE1D      		adc r26,r14
 5233 00de BF1D      		adc r27,r15
 5234 00e0 00C0      		rjmp .L242
 5235               	.LVL456:
 5236               	.L192:
 265:quantum/rgb_matrix.c ****         }
 5237               		.loc 21 265 40 view .LVU1061
 5238               	.LBE161:
 5239               	.LBE162:
 379:quantum/rgb_matrix.c ****             break;
 5240               		.loc 21 379 13 is_stmt 1 view .LVU1062
 5241               	.LBB163:
 5242               	.LBI163:
 287:quantum/rgb_matrix.c ****     // reset iter
 5243               		.loc 21 287 13 view .LVU1063
 5244               	.LBB164:
 289:quantum/rgb_matrix.c **** 
 5245               		.loc 21 289 5 view .LVU1064
 289:quantum/rgb_matrix.c **** 
 5246               		.loc 21 289 28 is_stmt 0 view .LVU1065
 5247 00e2 1092 0000 		sts rgb_effect_params,__zero_reg__
 292:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 5248               		.loc 21 292 5 is_stmt 1 view .LVU1066
 292:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 5249               		.loc 21 292 25 is_stmt 0 view .LVU1067
 5250 00e6 8092 0000 		sts g_rgb_counters,r8
 5251 00ea 9092 0000 		sts g_rgb_counters+1,r9
 5252 00ee A092 0000 		sts g_rgb_counters+2,r10
 5253 00f2 B092 0000 		sts g_rgb_counters+3,r11
 298:quantum/rgb_matrix.c **** }
 5254               		.loc 21 298 5 is_stmt 1 view .LVU1068
 298:quantum/rgb_matrix.c **** }
 5255               		.loc 21 298 20 is_stmt 0 view .LVU1069
 5256 00f6 81E0      		ldi r24,lo8(1)
 5257               	.L243:
 5258               	.LBE164:
 5259               	.LBE163:
 5260               	.LBB165:
 5261               	.LBB166:
 352:quantum/rgb_matrix.c ****         }
 5262               		.loc 21 352 28 view .LVU1070
 5263 00f8 8093 0000 		sts rgb_task_state,r24
 5264 00fc 00C0      		rjmp .L195
 5265               	.L191:
 5266               	.LBE166:
 5267               	.LBE165:
 382:quantum/rgb_matrix.c ****             break;
 5268               		.loc 21 382 13 is_stmt 1 view .LVU1071
 5269               	.LVL457:
 5270               	.LBB174:
 5271               	.LBI165:
 301:quantum/rgb_matrix.c ****     bool rendering         = false;
 5272               		.loc 21 301 13 view .LVU1072
 5273               	.LBB173:
 302:quantum/rgb_matrix.c ****     rgb_effect_params.init = (effect != rgb_last_effect) || (rgb_matrix_config.enable != rgb_last_e
 5274               		.loc 21 302 5 view .LVU1073
 303:quantum/rgb_matrix.c **** 
 5275               		.loc 21 303 5 view .LVU1074
 303:quantum/rgb_matrix.c **** 
 5276               		.loc 21 303 58 is_stmt 0 view .LVU1075
 5277 00fe 9091 0000 		lds r25,rgb_last_effect
 5278 0102 1913      		cpse r17,r25
 5279 0104 00C0      		rjmp .L231
 303:quantum/rgb_matrix.c **** 
 5280               		.loc 21 303 79 view .LVU1076
 5281 0106 982F      		mov r25,r24
 5282 0108 9370      		andi r25,lo8(3)
 303:quantum/rgb_matrix.c **** 
 5283               		.loc 21 303 87 view .LVU1077
 5284 010a 2091 0000 		lds r18,rgb_last_enable
 5285 010e 30E0      		ldi r19,0
 303:quantum/rgb_matrix.c **** 
 5286               		.loc 21 303 58 view .LVU1078
 5287 0110 81E0      		ldi r24,lo8(1)
 5288 0112 9217      		cp r25,r18
 5289 0114 1306      		cpc __zero_reg__,r19
 5290 0116 01F4      		brne .L196
 5291 0118 80E0      		ldi r24,0
 5292               	.L196:
 303:quantum/rgb_matrix.c **** 
 5293               		.loc 21 303 58 view .LVU1079
 5294 011a 8170      		andi r24,lo8(1)
 303:quantum/rgb_matrix.c **** 
 5295               		.loc 21 303 28 view .LVU1080
 5296 011c 8093 0000 		sts rgb_effect_params+2,r24
 307:quantum/rgb_matrix.c ****         case RGB_MATRIX_NONE:
 5297               		.loc 21 307 5 is_stmt 1 view .LVU1081
 5298 0120 1931      		cpi r17,lo8(25)
 5299 0122 00F4      		brsh .L232
 5300 0124 E12F      		mov r30,r17
 5301 0126 F0E0      		ldi r31,0
 5302 0128 E050      		subi r30,lo8(-(gs(.L200)))
 5303 012a F040      		sbci r31,hi8(-(gs(.L200)))
 5304 012c 0C94 0000 		jmp __tablejump2__
 5305               		.section	.jumptables.gcc.rgb_matrix_task,"a",@progbits
 5306               		.p2align	1
 5307               	.L200:
 5308 0000 0000      		.word gs(.L224)
 5309 0002 0000      		.word gs(.L223)
 5310 0004 0000      		.word gs(.L222)
 5311 0006 0000      		.word gs(.L221)
 5312 0008 0000      		.word gs(.L220)
 5313 000a 0000      		.word gs(.L219)
 5314 000c 0000      		.word gs(.L218)
 5315 000e 0000      		.word gs(.L217)
 5316 0010 0000      		.word gs(.L216)
 5317 0012 0000      		.word gs(.L215)
 5318 0014 0000      		.word gs(.L214)
 5319 0016 0000      		.word gs(.L213)
 5320 0018 0000      		.word gs(.L212)
 5321 001a 0000      		.word gs(.L211)
 5322 001c 0000      		.word gs(.L210)
 5323 001e 0000      		.word gs(.L209)
 5324 0020 0000      		.word gs(.L208)
 5325 0022 0000      		.word gs(.L207)
 5326 0024 0000      		.word gs(.L206)
 5327 0026 0000      		.word gs(.L205)
 5328 0028 0000      		.word gs(.L204)
 5329 002a 0000      		.word gs(.L203)
 5330 002c 0000      		.word gs(.L202)
 5331 002e 0000      		.word gs(.L201)
 5332 0030 0000      		.word gs(.L199)
 5333               		.section	.text.rgb_matrix_task
 5334               	.L231:
 303:quantum/rgb_matrix.c **** 
 5335               		.loc 21 303 58 is_stmt 0 view .LVU1082
 5336 0130 81E0      		ldi r24,lo8(1)
 5337 0132 00C0      		rjmp .L196
 5338               	.L224:
 309:quantum/rgb_matrix.c ****             break;
 5339               		.loc 21 309 13 is_stmt 1 view .LVU1083
 5340               	.LBB167:
 5341               	.LBI167:
 240:quantum/rgb_matrix.c ****     if (!params->init) {
 5342               		.loc 21 240 13 view .LVU1084
 5343               	.LVL458:
 5344               	.LBB168:
 241:quantum/rgb_matrix.c ****         return false;
 5345               		.loc 21 241 5 view .LVU1085
 241:quantum/rgb_matrix.c ****         return false;
 5346               		.loc 21 241 8 is_stmt 0 view .LVU1086
 5347 0134 8823      		tst r24
 5348 0136 01F0      		breq .L198
 245:quantum/rgb_matrix.c ****     for (uint8_t i = led_min; i < led_max; i++) {
 5349               		.loc 21 245 5 is_stmt 1 view .LVU1087
 5350 0138 C091 0000 		lds r28,rgb_effect_params
 5351 013c 8BE0      		ldi r24,lo8(11)
 5352 013e C89F      		mul r28,r24
 5353 0140 C02D      		mov r28,r0
 5354 0142 1124      		clr r1
 5355               	.LVL459:
 245:quantum/rgb_matrix.c ****     for (uint8_t i = led_min; i < led_max; i++) {
 5356               		.loc 21 245 5 view .LVU1088
 5357 0144 0BE0      		ldi r16,lo8(11)
 5358 0146 0C0F      		add r16,r28
 5359               	.LVL460:
 245:quantum/rgb_matrix.c ****     for (uint8_t i = led_min; i < led_max; i++) {
 5360               		.loc 21 245 5 view .LVU1089
 5361 0148 F02E      		mov r15,r16
 5362 014a 0733      		cpi r16,lo8(55)
 5363 014c 00F0      		brlo .L225
 5364 014e 86E3      		ldi r24,lo8(54)
 5365 0150 F82E      		mov r15,r24
 5366               	.L225:
 5367               	.LVL461:
 245:quantum/rgb_matrix.c ****     for (uint8_t i = led_min; i < led_max; i++) {
 5368               		.loc 21 245 44 view .LVU1090
 246:quantum/rgb_matrix.c ****         rgb_matrix_set_color(i, 0, 0, 0);
 5369               		.loc 21 246 5 view .LVU1091
 5370               	.LBB169:
 246:quantum/rgb_matrix.c ****         rgb_matrix_set_color(i, 0, 0, 0);
 5371               		.loc 21 246 10 view .LVU1092
 246:quantum/rgb_matrix.c ****         rgb_matrix_set_color(i, 0, 0, 0);
 5372               		.loc 21 246 10 is_stmt 0 view .LVU1093
 5373 0152 D0E0      		ldi r29,0
 5374               	.LVL462:
 5375               	.L226:
 246:quantum/rgb_matrix.c ****         rgb_matrix_set_color(i, 0, 0, 0);
 5376               		.loc 21 246 5 view .LVU1094
 5377 0154 CF15      		cp r28,r15
 5378 0156 00F0      		brlo .L227
 5379               	.LBE169:
 249:quantum/rgb_matrix.c **** }
 5380               		.loc 21 249 5 is_stmt 1 view .LVU1095
 5381 0158 81E0      		ldi r24,lo8(1)
 5382 015a 0633      		cpi r16,lo8(54)
 5383 015c 00F0      		brlo .L198
 5384               	.LVL463:
 5385               	.L232:
 249:quantum/rgb_matrix.c **** }
 5386               		.loc 21 249 5 is_stmt 0 view .LVU1096
 5387               	.LBE168:
 5388               	.LBE167:
 302:quantum/rgb_matrix.c ****     rgb_effect_params.init = (effect != rgb_last_effect) || (rgb_matrix_config.enable != rgb_last_e
 5389               		.loc 21 302 10 view .LVU1097
 5390 015e 80E0      		ldi r24,0
 5391 0160 00C0      		rjmp .L198
 5392               	.LVL464:
 5393               	.L227:
 5394               	.LBB172:
 5395               	.LBB171:
 5396               	.LBB170:
 247:quantum/rgb_matrix.c ****     }
 5397               		.loc 21 247 9 is_stmt 1 view .LVU1098
 5398 0162 20E0      		ldi r18,0
 5399 0164 40E0      		ldi r20,0
 5400 0166 60E0      		ldi r22,0
 5401 0168 CE01      		movw r24,r28
 5402 016a 0E94 0000 		call rgb_matrix_set_color
 5403               	.LVL465:
 247:quantum/rgb_matrix.c ****     }
 5404               		.loc 21 247 9 is_stmt 0 view .LVU1099
 5405 016e 2196      		adiw r28,1
 5406               	.LVL466:
 247:quantum/rgb_matrix.c ****     }
 5407               		.loc 21 247 9 view .LVU1100
 5408 0170 00C0      		rjmp .L226
 5409               	.LVL467:
 5410               	.L223:
 247:quantum/rgb_matrix.c ****     }
 5411               		.loc 21 247 9 view .LVU1101
 5412               	.LBE170:
 5413               	.LBE171:
 5414               	.LBE172:
   1:quantum/rgb_matrix_animations/solid_color_anim.h **** #ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5415               		.loc 26 1 1 is_stmt 1 view .LVU1102
 5416 0172 80E0      		ldi r24,lo8(rgb_effect_params)
 5417 0174 90E0      		ldi r25,hi8(rgb_effect_params)
 5418 0176 0E94 0000 		call SOLID_COLOR
 5419               	.LVL468:
   1:quantum/rgb_matrix_animations/solid_color_anim.h **** #ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5420               		.loc 26 1 1 view .LVU1103
 5421               	.L198:
 345:quantum/rgb_matrix.c **** 
 5422               		.loc 21 345 5 view .LVU1104
 345:quantum/rgb_matrix.c **** 
 5423               		.loc 21 345 27 is_stmt 0 view .LVU1105
 5424 017a 9091 0000 		lds r25,rgb_effect_params
 5425 017e 9F5F      		subi r25,lo8(-(1))
 5426 0180 9093 0000 		sts rgb_effect_params,r25
 348:quantum/rgb_matrix.c ****         rgb_task_state = FLUSHING;
 5427               		.loc 21 348 5 is_stmt 1 view .LVU1106
 348:quantum/rgb_matrix.c ****         rgb_task_state = FLUSHING;
 5428               		.loc 21 348 8 is_stmt 0 view .LVU1107
 5429 0184 8111      		cpse r24,__zero_reg__
 5430 0186 00C0      		rjmp .L195
 5431               	.LVL469:
 349:quantum/rgb_matrix.c ****         if (!rgb_effect_params.init && effect == RGB_MATRIX_NONE) {
 5432               		.loc 21 349 9 is_stmt 1 view .LVU1108
 349:quantum/rgb_matrix.c ****         if (!rgb_effect_params.init && effect == RGB_MATRIX_NONE) {
 5433               		.loc 21 349 24 is_stmt 0 view .LVU1109
 5434 0188 82E0      		ldi r24,lo8(2)
 5435 018a 8093 0000 		sts rgb_task_state,r24
 350:quantum/rgb_matrix.c ****             // We only need to flush once if we are RGB_MATRIX_NONE
 5436               		.loc 21 350 9 is_stmt 1 view .LVU1110
 350:quantum/rgb_matrix.c ****             // We only need to flush once if we are RGB_MATRIX_NONE
 5437               		.loc 21 350 12 is_stmt 0 view .LVU1111
 5438 018e 8091 0000 		lds r24,rgb_effect_params+2
 5439 0192 8111      		cpse r24,__zero_reg__
 5440 0194 00C0      		rjmp .L195
 350:quantum/rgb_matrix.c ****             // We only need to flush once if we are RGB_MATRIX_NONE
 5441               		.loc 21 350 37 view .LVU1112
 5442 0196 1111      		cpse r17,__zero_reg__
 5443 0198 00C0      		rjmp .L195
 5444               	.LVL470:
 5445               	.L244:
 352:quantum/rgb_matrix.c ****         }
 5446               		.loc 21 352 13 is_stmt 1 view .LVU1113
 352:quantum/rgb_matrix.c ****         }
 5447               		.loc 21 352 28 is_stmt 0 view .LVU1114
 5448 019a 83E0      		ldi r24,lo8(3)
 5449 019c 00C0      		rjmp .L243
 5450               	.LVL471:
 5451               	.L222:
   2:quantum/rgb_matrix_animations/alpha_mods_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5452               		.loc 27 2 1 is_stmt 1 view .LVU1115
 5453 019e 80E0      		ldi r24,lo8(rgb_effect_params)
 5454 01a0 90E0      		ldi r25,hi8(rgb_effect_params)
 5455 01a2 0E94 0000 		call ALPHAS_MODS
 5456               	.LVL472:
   2:quantum/rgb_matrix_animations/alpha_mods_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5457               		.loc 27 2 1 view .LVU1116
 5458 01a6 00C0      		rjmp .L198
 5459               	.LVL473:
 5460               	.L221:
   2:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5461               		.loc 28 2 1 view .LVU1117
 5462 01a8 80E0      		ldi r24,lo8(rgb_effect_params)
 5463 01aa 90E0      		ldi r25,hi8(rgb_effect_params)
 5464 01ac 0E94 0000 		call GRADIENT_UP_DOWN
 5465               	.LVL474:
   2:quantum/rgb_matrix_animations/gradient_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5466               		.loc 28 2 1 view .LVU1118
 5467 01b0 00C0      		rjmp .L198
 5468               	.LVL475:
 5469               	.L220:
   2:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5470               		.loc 29 2 1 view .LVU1119
 5471 01b2 80E0      		ldi r24,lo8(rgb_effect_params)
 5472 01b4 90E0      		ldi r25,hi8(rgb_effect_params)
 5473 01b6 0E94 0000 		call GRADIENT_LEFT_RIGHT
 5474               	.LVL476:
   2:quantum/rgb_matrix_animations/gradient_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5475               		.loc 29 2 1 view .LVU1120
 5476 01ba 00C0      		rjmp .L198
 5477               	.LVL477:
 5478               	.L219:
   2:quantum/rgb_matrix_animations/breathing_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5479               		.loc 30 2 1 view .LVU1121
 5480 01bc 80E0      		ldi r24,lo8(rgb_effect_params)
 5481 01be 90E0      		ldi r25,hi8(rgb_effect_params)
 5482 01c0 0E94 0000 		call BREATHING
 5483               	.LVL478:
   2:quantum/rgb_matrix_animations/breathing_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5484               		.loc 30 2 1 view .LVU1122
 5485 01c4 00C0      		rjmp .L198
 5486               	.LVL479:
 5487               	.L218:
   2:quantum/rgb_matrix_animations/colorband_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5488               		.loc 4 2 1 view .LVU1123
 5489 01c6 80E0      		ldi r24,lo8(rgb_effect_params)
 5490 01c8 90E0      		ldi r25,hi8(rgb_effect_params)
 5491 01ca 0E94 0000 		call BAND_SAT
 5492               	.LVL480:
   2:quantum/rgb_matrix_animations/colorband_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5493               		.loc 4 2 1 view .LVU1124
 5494 01ce 00C0      		rjmp .L198
 5495               	.LVL481:
 5496               	.L217:
   2:quantum/rgb_matrix_animations/colorband_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5497               		.loc 5 2 1 view .LVU1125
 5498 01d0 80E0      		ldi r24,lo8(rgb_effect_params)
 5499 01d2 90E0      		ldi r25,hi8(rgb_effect_params)
 5500 01d4 0E94 0000 		call BAND_VAL
 5501               	.LVL482:
   2:quantum/rgb_matrix_animations/colorband_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5502               		.loc 5 2 1 view .LVU1126
 5503 01d8 00C0      		rjmp .L198
 5504               	.LVL483:
 5505               	.L216:
   2:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5506               		.loc 15 2 1 view .LVU1127
 5507 01da 80E0      		ldi r24,lo8(rgb_effect_params)
 5508 01dc 90E0      		ldi r25,hi8(rgb_effect_params)
 5509 01de 0E94 0000 		call BAND_PINWHEEL_SAT
 5510               	.LVL484:
   2:quantum/rgb_matrix_animations/colorband_pinwheel_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5511               		.loc 15 2 1 view .LVU1128
 5512 01e2 00C0      		rjmp .L198
 5513               	.LVL485:
 5514               	.L215:
   2:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5515               		.loc 16 2 1 view .LVU1129
 5516 01e4 80E0      		ldi r24,lo8(rgb_effect_params)
 5517 01e6 90E0      		ldi r25,hi8(rgb_effect_params)
 5518 01e8 0E94 0000 		call BAND_PINWHEEL_VAL
 5519               	.LVL486:
   2:quantum/rgb_matrix_animations/colorband_pinwheel_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5520               		.loc 16 2 1 view .LVU1130
 5521 01ec 00C0      		rjmp .L198
 5522               	.LVL487:
 5523               	.L214:
   2:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5524               		.loc 17 2 1 view .LVU1131
 5525 01ee 80E0      		ldi r24,lo8(rgb_effect_params)
 5526 01f0 90E0      		ldi r25,hi8(rgb_effect_params)
 5527 01f2 0E94 0000 		call BAND_SPIRAL_SAT
 5528               	.LVL488:
   2:quantum/rgb_matrix_animations/colorband_spiral_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5529               		.loc 17 2 1 view .LVU1132
 5530 01f6 00C0      		rjmp .L198
 5531               	.LVL489:
 5532               	.L213:
   2:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5533               		.loc 18 2 1 view .LVU1133
 5534 01f8 80E0      		ldi r24,lo8(rgb_effect_params)
 5535 01fa 90E0      		ldi r25,hi8(rgb_effect_params)
 5536 01fc 0E94 0000 		call BAND_SPIRAL_VAL
 5537               	.LVL490:
   2:quantum/rgb_matrix_animations/colorband_spiral_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5538               		.loc 18 2 1 view .LVU1134
 5539 0200 00C0      		rjmp .L198
 5540               	.LVL491:
 5541               	.L212:
   2:quantum/rgb_matrix_animations/cycle_all_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5542               		.loc 6 2 1 view .LVU1135
 5543 0202 80E0      		ldi r24,lo8(rgb_effect_params)
 5544 0204 90E0      		ldi r25,hi8(rgb_effect_params)
 5545 0206 0E94 0000 		call CYCLE_ALL
 5546               	.LVL492:
   2:quantum/rgb_matrix_animations/cycle_all_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5547               		.loc 6 2 1 view .LVU1136
 5548 020a 00C0      		rjmp .L198
 5549               	.LVL493:
 5550               	.L211:
   2:quantum/rgb_matrix_animations/cycle_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5551               		.loc 7 2 1 view .LVU1137
 5552 020c 80E0      		ldi r24,lo8(rgb_effect_params)
 5553 020e 90E0      		ldi r25,hi8(rgb_effect_params)
 5554 0210 0E94 0000 		call CYCLE_LEFT_RIGHT
 5555               	.LVL494:
   2:quantum/rgb_matrix_animations/cycle_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5556               		.loc 7 2 1 view .LVU1138
 5557 0214 00C0      		rjmp .L198
 5558               	.LVL495:
 5559               	.L210:
   2:quantum/rgb_matrix_animations/cycle_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5560               		.loc 8 2 1 view .LVU1139
 5561 0216 80E0      		ldi r24,lo8(rgb_effect_params)
 5562 0218 90E0      		ldi r25,hi8(rgb_effect_params)
 5563 021a 0E94 0000 		call CYCLE_UP_DOWN
 5564               	.LVL496:
   2:quantum/rgb_matrix_animations/cycle_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5565               		.loc 8 2 1 view .LVU1140
 5566 021e 00C0      		rjmp .L198
 5567               	.LVL497:
 5568               	.L209:
   2:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5569               		.loc 9 2 1 view .LVU1141
 5570 0220 80E0      		ldi r24,lo8(rgb_effect_params)
 5571 0222 90E0      		ldi r25,hi8(rgb_effect_params)
 5572 0224 0E94 0000 		call RAINBOW_MOVING_CHEVRON
 5573               	.LVL498:
   2:quantum/rgb_matrix_animations/rainbow_moving_chevron_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5574               		.loc 9 2 1 view .LVU1142
 5575 0228 00C0      		rjmp .L198
 5576               	.LVL499:
 5577               	.L208:
   2:quantum/rgb_matrix_animations/cycle_out_in_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5578               		.loc 10 2 1 view .LVU1143
 5579 022a 80E0      		ldi r24,lo8(rgb_effect_params)
 5580 022c 90E0      		ldi r25,hi8(rgb_effect_params)
 5581 022e 0E94 0000 		call CYCLE_OUT_IN
 5582               	.LVL500:
   2:quantum/rgb_matrix_animations/cycle_out_in_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5583               		.loc 10 2 1 view .LVU1144
 5584 0232 00C0      		rjmp .L198
 5585               	.LVL501:
 5586               	.L207:
   2:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5587               		.loc 11 2 1 view .LVU1145
 5588 0234 80E0      		ldi r24,lo8(rgb_effect_params)
 5589 0236 90E0      		ldi r25,hi8(rgb_effect_params)
 5590 0238 0E94 0000 		call CYCLE_OUT_IN_DUAL
 5591               	.LVL502:
   2:quantum/rgb_matrix_animations/cycle_out_in_dual_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5592               		.loc 11 2 1 view .LVU1146
 5593 023c 00C0      		rjmp .L198
 5594               	.LVL503:
 5595               	.L206:
   2:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5596               		.loc 19 2 1 view .LVU1147
 5597 023e 80E0      		ldi r24,lo8(rgb_effect_params)
 5598 0240 90E0      		ldi r25,hi8(rgb_effect_params)
 5599 0242 0E94 0000 		call CYCLE_PINWHEEL
 5600               	.LVL504:
   2:quantum/rgb_matrix_animations/cycle_pinwheel_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5601               		.loc 19 2 1 view .LVU1148
 5602 0246 00C0      		rjmp .L198
 5603               	.LVL505:
 5604               	.L205:
   2:quantum/rgb_matrix_animations/cycle_spiral_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5605               		.loc 20 2 1 view .LVU1149
 5606 0248 80E0      		ldi r24,lo8(rgb_effect_params)
 5607 024a 90E0      		ldi r25,hi8(rgb_effect_params)
 5608 024c 0E94 0000 		call CYCLE_SPIRAL
 5609               	.LVL506:
   2:quantum/rgb_matrix_animations/cycle_spiral_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5610               		.loc 20 2 1 view .LVU1150
 5611 0250 00C0      		rjmp .L198
 5612               	.LVL507:
 5613               	.L204:
   2:quantum/rgb_matrix_animations/dual_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5614               		.loc 12 2 1 view .LVU1151
 5615 0252 80E0      		ldi r24,lo8(rgb_effect_params)
 5616 0254 90E0      		ldi r25,hi8(rgb_effect_params)
 5617 0256 0E94 0000 		call DUAL_BEACON
 5618               	.LVL508:
   2:quantum/rgb_matrix_animations/dual_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5619               		.loc 12 2 1 view .LVU1152
 5620 025a 00C0      		rjmp .L198
 5621               	.LVL509:
 5622               	.L203:
   2:quantum/rgb_matrix_animations/rainbow_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5623               		.loc 13 2 1 view .LVU1153
 5624 025c 80E0      		ldi r24,lo8(rgb_effect_params)
 5625 025e 90E0      		ldi r25,hi8(rgb_effect_params)
 5626 0260 0E94 0000 		call RAINBOW_BEACON
 5627               	.LVL510:
   2:quantum/rgb_matrix_animations/rainbow_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5628               		.loc 13 2 1 view .LVU1154
 5629 0264 00C0      		rjmp .L198
 5630               	.LVL511:
 5631               	.L202:
   2:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5632               		.loc 14 2 1 view .LVU1155
 5633 0266 80E0      		ldi r24,lo8(rgb_effect_params)
 5634 0268 90E0      		ldi r25,hi8(rgb_effect_params)
 5635 026a 0E94 0000 		call RAINBOW_PINWHEELS
 5636               	.LVL512:
   2:quantum/rgb_matrix_animations/rainbow_pinwheels_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5637               		.loc 14 2 1 view .LVU1156
 5638 026e 00C0      		rjmp .L198
 5639               	.LVL513:
 5640               	.L201:
   2:quantum/rgb_matrix_animations/raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5641               		.loc 31 2 1 view .LVU1157
 5642 0270 80E0      		ldi r24,lo8(rgb_effect_params)
 5643 0272 90E0      		ldi r25,hi8(rgb_effect_params)
 5644 0274 0E94 0000 		call RAINDROPS
 5645               	.LVL514:
   2:quantum/rgb_matrix_animations/raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5646               		.loc 31 2 1 view .LVU1158
 5647 0278 00C0      		rjmp .L198
 5648               	.LVL515:
 5649               	.L199:
   2:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5650               		.loc 32 2 1 view .LVU1159
 5651 027a 80E0      		ldi r24,lo8(rgb_effect_params)
 5652 027c 90E0      		ldi r25,hi8(rgb_effect_params)
 5653 027e 0E94 0000 		call JELLYBEAN_RAINDROPS
 5654               	.LVL516:
   2:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5655               		.loc 32 2 1 view .LVU1160
 5656 0282 00C0      		rjmp .L198
 5657               	.LVL517:
 5658               	.L193:
   2:quantum/rgb_matrix_animations/jellybean_raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5659               		.loc 32 2 1 is_stmt 0 view .LVU1161
 5660               	.LBE173:
 5661               	.LBE174:
 385:quantum/rgb_matrix.c ****             break;
 5662               		.loc 21 385 13 is_stmt 1 view .LVU1162
 5663               	.LBB175:
 5664               	.LBI175:
 357:quantum/rgb_matrix.c ****     // update last trackers after the first full render so we can init over several frames
 5665               		.loc 21 357 13 view .LVU1163
 5666               	.LBB176:
 359:quantum/rgb_matrix.c ****     rgb_last_enable = rgb_matrix_config.enable;
 5667               		.loc 21 359 5 view .LVU1164
 359:quantum/rgb_matrix.c ****     rgb_last_enable = rgb_matrix_config.enable;
 5668               		.loc 21 359 21 is_stmt 0 view .LVU1165
 5669 0284 1093 0000 		sts rgb_last_effect,r17
 360:quantum/rgb_matrix.c **** 
 5670               		.loc 21 360 5 is_stmt 1 view .LVU1166
 360:quantum/rgb_matrix.c **** 
 5671               		.loc 21 360 40 is_stmt 0 view .LVU1167
 5672 0288 8370      		andi r24,lo8(3)
 360:quantum/rgb_matrix.c **** 
 5673               		.loc 21 360 21 view .LVU1168
 5674 028a 8093 0000 		sts rgb_last_enable,r24
 363:quantum/rgb_matrix.c **** 
 5675               		.loc 21 363 5 is_stmt 1 view .LVU1169
 5676 028e 0E94 0000 		call rgb_matrix_update_pwm_buffers
 5677               	.LVL518:
 366:quantum/rgb_matrix.c **** }
 5678               		.loc 21 366 5 view .LVU1170
 5679 0292 00C0      		rjmp .L244
 5680               	.LVL519:
 5681               	.L194:
 366:quantum/rgb_matrix.c **** }
 5682               		.loc 21 366 5 is_stmt 0 view .LVU1171
 5683               	.LBE176:
 5684               	.LBE175:
 388:quantum/rgb_matrix.c ****             break;
 5685               		.loc 21 388 13 is_stmt 1 view .LVU1172
 5686               	.LBB177:
 5687               	.LBI177:
 282:quantum/rgb_matrix.c ****     // next task
 5688               		.loc 21 282 13 view .LVU1173
 5689               	.LBB178:
 284:quantum/rgb_matrix.c **** }
 5690               		.loc 21 284 5 view .LVU1174
 284:quantum/rgb_matrix.c **** }
 5691               		.loc 21 284 9 is_stmt 0 view .LVU1175
 5692 0294 6091 0000 		lds r22,g_rgb_counters
 5693 0298 7091 0000 		lds r23,g_rgb_counters+1
 5694 029c 8091 0000 		lds r24,g_rgb_counters+2
 5695 02a0 9091 0000 		lds r25,g_rgb_counters+3
 5696 02a4 0E94 0000 		call timer_elapsed32
 5697               	.LVL520:
 284:quantum/rgb_matrix.c **** }
 5698               		.loc 21 284 8 view .LVU1176
 5699 02a8 6031      		cpi r22,16
 5700 02aa 7105      		cpc r23,__zero_reg__
 5701 02ac 8105      		cpc r24,__zero_reg__
 5702 02ae 9105      		cpc r25,__zero_reg__
 5703 02b0 00F4      		brsh .+2
 5704 02b2 00C0      		rjmp .L195
 284:quantum/rgb_matrix.c **** }
 5705               		.loc 21 284 77 is_stmt 1 view .LVU1177
 284:quantum/rgb_matrix.c **** }
 5706               		.loc 21 284 92 is_stmt 0 view .LVU1178
 5707 02b4 1092 0000 		sts rgb_task_state,__zero_reg__
 5708 02b8 00C0      		rjmp .L195
 5709               	.LBE178:
 5710               	.LBE177:
 5711               		.cfi_endproc
 5712               	.LFE250:
 5714               		.section	.text.rgb_matrix_init,"ax",@progbits
 5715               	.global	rgb_matrix_init
 5717               	rgb_matrix_init:
 5718               	.LFB254:
 403:quantum/rgb_matrix.c **** 
 404:quantum/rgb_matrix.c **** __attribute__((weak)) void rgb_matrix_indicators_user(void) {}
 405:quantum/rgb_matrix.c **** 
 406:quantum/rgb_matrix.c **** void rgb_matrix_init(void) {
 5719               		.loc 21 406 28 is_stmt 1 view -0
 5720               		.cfi_startproc
 5721               	/* prologue: function */
 5722               	/* frame size = 0 */
 5723               	/* stack size = 0 */
 5724               	.L__stack_usage = 0
 407:quantum/rgb_matrix.c ****     rgb_matrix_driver.init();
 5725               		.loc 21 407 5 view .LVU1180
 5726 0000 E091 0000 		lds r30,rgb_matrix_driver
 5727 0004 F091 0000 		lds r31,rgb_matrix_driver+1
 5728 0008 0995      		icall
 5729               	.LVL521:
 408:quantum/rgb_matrix.c **** 
 409:quantum/rgb_matrix.c ****     // TODO: put the 1 second startup delay here?
 410:quantum/rgb_matrix.c **** 
 411:quantum/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 412:quantum/rgb_matrix.c ****     g_last_hit_tracker.count = 0;
 413:quantum/rgb_matrix.c ****     for (uint8_t i = 0; i < LED_HITS_TO_REMEMBER; ++i) {
 414:quantum/rgb_matrix.c ****         g_last_hit_tracker.tick[i] = UINT16_MAX;
 415:quantum/rgb_matrix.c ****     }
 416:quantum/rgb_matrix.c **** 
 417:quantum/rgb_matrix.c ****     last_hit_buffer.count = 0;
 418:quantum/rgb_matrix.c ****     for (uint8_t i = 0; i < LED_HITS_TO_REMEMBER; ++i) {
 419:quantum/rgb_matrix.c ****         last_hit_buffer.tick[i] = UINT16_MAX;
 420:quantum/rgb_matrix.c ****     }
 421:quantum/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 422:quantum/rgb_matrix.c **** 
 423:quantum/rgb_matrix.c ****     if (!eeconfig_is_enabled()) {
 5730               		.loc 21 423 5 view .LVU1181
 5731               		.loc 21 423 10 is_stmt 0 view .LVU1182
 5732 000a 0E94 0000 		call eeconfig_is_enabled
 5733               	.LVL522:
 5734               		.loc 21 423 8 view .LVU1183
 5735 000e 8111      		cpse r24,__zero_reg__
 5736 0010 00C0      		rjmp .L246
 424:quantum/rgb_matrix.c ****         dprintf("rgb_matrix_init_drivers eeconfig is not enabled.\n");
 5737               		.loc 21 424 70 is_stmt 1 view .LVU1184
 425:quantum/rgb_matrix.c ****         eeconfig_init();
 5738               		.loc 21 425 9 view .LVU1185
 5739 0012 0E94 0000 		call eeconfig_init
 5740               	.LVL523:
 426:quantum/rgb_matrix.c ****         eeconfig_update_rgb_matrix_default();
 5741               		.loc 21 426 9 view .LVU1186
 5742 0016 0E94 0000 		call eeconfig_update_rgb_matrix_default
 5743               	.LVL524:
 5744               	.L246:
 427:quantum/rgb_matrix.c ****     }
 428:quantum/rgb_matrix.c **** 
 429:quantum/rgb_matrix.c ****     eeconfig_read_rgb_matrix();
 5745               		.loc 21 429 5 view .LVU1187
 5746 001a 0E94 0000 		call eeconfig_read_rgb_matrix
 5747               	.LVL525:
 430:quantum/rgb_matrix.c ****     if (!rgb_matrix_config.mode) {
 5748               		.loc 21 430 5 view .LVU1188
 5749               		.loc 21 430 9 is_stmt 0 view .LVU1189
 5750 001e 8091 0000 		lds r24,rgb_matrix_config
 5751 0022 8C7F      		andi r24,lo8(-4)
 5752               		.loc 21 430 8 view .LVU1190
 5753 0024 01F4      		brne .L245
 431:quantum/rgb_matrix.c ****         dprintf("rgb_matrix_init_drivers rgb_matrix_config.mode = 0. Write default values to EEPROM
 5754               		.loc 21 431 105 is_stmt 1 view .LVU1191
 432:quantum/rgb_matrix.c ****         eeconfig_update_rgb_matrix_default();
 5755               		.loc 21 432 9 view .LVU1192
 5756 0026 0C94 0000 		jmp eeconfig_update_rgb_matrix_default
 5757               	.LVL526:
 5758               	.L245:
 5759               	/* epilogue start */
 433:quantum/rgb_matrix.c ****     }
 434:quantum/rgb_matrix.c ****     eeconfig_debug_rgb_matrix();  // display current eeprom values
 435:quantum/rgb_matrix.c **** }
 5760               		.loc 21 435 1 is_stmt 0 view .LVU1193
 5761 002a 0895      		ret
 5762               		.cfi_endproc
 5763               	.LFE254:
 5765               		.section	.text.rgb_matrix_set_suspend_state,"ax",@progbits
 5766               	.global	rgb_matrix_set_suspend_state
 5768               	rgb_matrix_set_suspend_state:
 5769               	.LVL527:
 5770               	.LFB255:
 436:quantum/rgb_matrix.c **** 
 437:quantum/rgb_matrix.c **** void rgb_matrix_set_suspend_state(bool state) {
 5771               		.loc 21 437 47 is_stmt 1 view -0
 5772               		.cfi_startproc
 5773               	/* prologue: function */
 5774               	/* frame size = 0 */
 5775               	/* stack size = 0 */
 5776               	.L__stack_usage = 0
 438:quantum/rgb_matrix.c ****     if (RGB_DISABLE_WHEN_USB_SUSPENDED && state) {
 5777               		.loc 21 438 5 view .LVU1195
 439:quantum/rgb_matrix.c ****         rgb_matrix_set_color_all(0, 0, 0);  // turn off all LEDs when suspending
 440:quantum/rgb_matrix.c ****     }
 441:quantum/rgb_matrix.c ****     g_suspend_state = state;
 5778               		.loc 21 441 5 view .LVU1196
 5779               		.loc 21 441 21 is_stmt 0 view .LVU1197
 5780 0000 8093 0000 		sts g_suspend_state,r24
 5781               	/* epilogue start */
 442:quantum/rgb_matrix.c **** }
 5782               		.loc 21 442 1 view .LVU1198
 5783 0004 0895      		ret
 5784               		.cfi_endproc
 5785               	.LFE255:
 5787               		.section	.text.rgb_matrix_toggle,"ax",@progbits
 5788               	.global	rgb_matrix_toggle
 5790               	rgb_matrix_toggle:
 5791               	.LFB256:
 443:quantum/rgb_matrix.c **** 
 444:quantum/rgb_matrix.c **** void rgb_matrix_toggle(void) {
 5792               		.loc 21 444 30 is_stmt 1 view -0
 5793               		.cfi_startproc
 5794               	/* prologue: function */
 5795               	/* frame size = 0 */
 5796               	/* stack size = 0 */
 5797               	.L__stack_usage = 0
 445:quantum/rgb_matrix.c ****     rgb_matrix_config.enable ^= 1;
 5798               		.loc 21 445 5 view .LVU1200
 5799               		.loc 21 445 30 is_stmt 0 view .LVU1201
 5800 0000 E0E0      		ldi r30,lo8(rgb_matrix_config)
 5801 0002 F0E0      		ldi r31,hi8(rgb_matrix_config)
 5802 0004 8081      		ld r24,Z
 5803 0006 91E0      		ldi r25,lo8(1)
 5804 0008 8927      		eor r24,r25
 5805 000a 8083      		st Z,r24
 446:quantum/rgb_matrix.c ****     rgb_task_state = STARTING;
 5806               		.loc 21 446 5 is_stmt 1 view .LVU1202
 5807               		.loc 21 446 20 is_stmt 0 view .LVU1203
 5808 000c 1092 0000 		sts rgb_task_state,__zero_reg__
 447:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 5809               		.loc 21 447 5 is_stmt 1 view .LVU1204
 5810 0010 0C94 0000 		jmp eeconfig_update_rgb_matrix
 5811               	.LVL528:
 5812               		.cfi_endproc
 5813               	.LFE256:
 5815               		.section	.text.rgb_matrix_enable_noeeprom,"ax",@progbits
 5816               	.global	rgb_matrix_enable_noeeprom
 5818               	rgb_matrix_enable_noeeprom:
 5819               	.LFB258:
 448:quantum/rgb_matrix.c **** }
 449:quantum/rgb_matrix.c **** 
 450:quantum/rgb_matrix.c **** void rgb_matrix_enable(void) {
 451:quantum/rgb_matrix.c ****     rgb_matrix_enable_noeeprom();
 452:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 453:quantum/rgb_matrix.c **** }
 454:quantum/rgb_matrix.c **** 
 455:quantum/rgb_matrix.c **** void rgb_matrix_enable_noeeprom(void) {
 5820               		.loc 21 455 39 view -0
 5821               		.cfi_startproc
 5822               	/* prologue: function */
 5823               	/* frame size = 0 */
 5824               	/* stack size = 0 */
 5825               	.L__stack_usage = 0
 456:quantum/rgb_matrix.c ****     if (!rgb_matrix_config.enable) rgb_task_state = STARTING;
 5826               		.loc 21 456 5 view .LVU1206
 5827               		.loc 21 456 9 is_stmt 0 view .LVU1207
 5828 0000 8091 0000 		lds r24,rgb_matrix_config
 5829 0004 8370      		andi r24,lo8(3)
 5830               		.loc 21 456 8 view .LVU1208
 5831 0006 01F4      		brne .L251
 5832               		.loc 21 456 36 is_stmt 1 discriminator 1 view .LVU1209
 5833               		.loc 21 456 51 is_stmt 0 discriminator 1 view .LVU1210
 5834 0008 1092 0000 		sts rgb_task_state,__zero_reg__
 5835               	.L251:
 457:quantum/rgb_matrix.c ****     rgb_matrix_config.enable = 1;
 5836               		.loc 21 457 5 is_stmt 1 view .LVU1211
 5837               		.loc 21 457 30 is_stmt 0 view .LVU1212
 5838 000c 8091 0000 		lds r24,rgb_matrix_config
 5839 0010 8C7F      		andi r24,lo8(-4)
 5840 0012 8160      		ori r24,lo8(1)
 5841 0014 8093 0000 		sts rgb_matrix_config,r24
 5842               	/* epilogue start */
 458:quantum/rgb_matrix.c **** }
 5843               		.loc 21 458 1 view .LVU1213
 5844 0018 0895      		ret
 5845               		.cfi_endproc
 5846               	.LFE258:
 5848               		.section	.text.rgb_matrix_enable,"ax",@progbits
 5849               	.global	rgb_matrix_enable
 5851               	rgb_matrix_enable:
 5852               	.LFB257:
 450:quantum/rgb_matrix.c ****     rgb_matrix_enable_noeeprom();
 5853               		.loc 21 450 30 is_stmt 1 view -0
 5854               		.cfi_startproc
 5855               	/* prologue: function */
 5856               	/* frame size = 0 */
 5857               	/* stack size = 0 */
 5858               	.L__stack_usage = 0
 451:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 5859               		.loc 21 451 5 view .LVU1215
 5860 0000 0E94 0000 		call rgb_matrix_enable_noeeprom
 5861               	.LVL529:
 452:quantum/rgb_matrix.c **** }
 5862               		.loc 21 452 5 view .LVU1216
 5863 0004 0C94 0000 		jmp eeconfig_update_rgb_matrix
 5864               	.LVL530:
 5865               		.cfi_endproc
 5866               	.LFE257:
 5868               		.section	.text.rgb_matrix_disable_noeeprom,"ax",@progbits
 5869               	.global	rgb_matrix_disable_noeeprom
 5871               	rgb_matrix_disable_noeeprom:
 5872               	.LFB260:
 459:quantum/rgb_matrix.c **** 
 460:quantum/rgb_matrix.c **** void rgb_matrix_disable(void) {
 461:quantum/rgb_matrix.c ****     rgb_matrix_disable_noeeprom();
 462:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 463:quantum/rgb_matrix.c **** }
 464:quantum/rgb_matrix.c **** 
 465:quantum/rgb_matrix.c **** void rgb_matrix_disable_noeeprom(void) {
 5873               		.loc 21 465 40 view -0
 5874               		.cfi_startproc
 5875               	/* prologue: function */
 5876               	/* frame size = 0 */
 5877               	/* stack size = 0 */
 5878               	.L__stack_usage = 0
 466:quantum/rgb_matrix.c ****     if (rgb_matrix_config.enable) rgb_task_state = STARTING;
 5879               		.loc 21 466 5 view .LVU1218
 5880               		.loc 21 466 9 is_stmt 0 view .LVU1219
 5881 0000 8091 0000 		lds r24,rgb_matrix_config
 5882 0004 8370      		andi r24,lo8(3)
 5883               		.loc 21 466 8 view .LVU1220
 5884 0006 01F0      		breq .L254
 5885               		.loc 21 466 35 is_stmt 1 discriminator 1 view .LVU1221
 5886               		.loc 21 466 50 is_stmt 0 discriminator 1 view .LVU1222
 5887 0008 1092 0000 		sts rgb_task_state,__zero_reg__
 5888               	.L254:
 467:quantum/rgb_matrix.c ****     rgb_matrix_config.enable = 0;
 5889               		.loc 21 467 5 is_stmt 1 view .LVU1223
 5890               		.loc 21 467 30 is_stmt 0 view .LVU1224
 5891 000c 8091 0000 		lds r24,rgb_matrix_config
 5892 0010 8C7F      		andi r24,lo8(-4)
 5893 0012 8093 0000 		sts rgb_matrix_config,r24
 5894               	/* epilogue start */
 468:quantum/rgb_matrix.c **** }
 5895               		.loc 21 468 1 view .LVU1225
 5896 0016 0895      		ret
 5897               		.cfi_endproc
 5898               	.LFE260:
 5900               		.section	.text.rgb_matrix_disable,"ax",@progbits
 5901               	.global	rgb_matrix_disable
 5903               	rgb_matrix_disable:
 5904               	.LFB259:
 460:quantum/rgb_matrix.c ****     rgb_matrix_disable_noeeprom();
 5905               		.loc 21 460 31 is_stmt 1 view -0
 5906               		.cfi_startproc
 5907               	/* prologue: function */
 5908               	/* frame size = 0 */
 5909               	/* stack size = 0 */
 5910               	.L__stack_usage = 0
 461:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 5911               		.loc 21 461 5 view .LVU1227
 5912 0000 0E94 0000 		call rgb_matrix_disable_noeeprom
 5913               	.LVL531:
 462:quantum/rgb_matrix.c **** }
 5914               		.loc 21 462 5 view .LVU1228
 5915 0004 0C94 0000 		jmp eeconfig_update_rgb_matrix
 5916               	.LVL532:
 5917               		.cfi_endproc
 5918               	.LFE259:
 5920               		.section	.text.rgb_matrix_step,"ax",@progbits
 5921               	.global	rgb_matrix_step
 5923               	rgb_matrix_step:
 5924               	.LFB261:
 469:quantum/rgb_matrix.c **** 
 470:quantum/rgb_matrix.c **** void rgb_matrix_step(void) {
 5925               		.loc 21 470 28 view -0
 5926               		.cfi_startproc
 5927               	/* prologue: function */
 5928               	/* frame size = 0 */
 5929               	/* stack size = 0 */
 5930               	.L__stack_usage = 0
 471:quantum/rgb_matrix.c ****     rgb_matrix_config.mode++;
 5931               		.loc 21 471 5 view .LVU1230
 5932               		.loc 21 471 22 is_stmt 0 view .LVU1231
 5933 0000 8091 0000 		lds r24,rgb_matrix_config
 5934 0004 982F      		mov r25,r24
 5935 0006 9695      		lsr r25
 5936 0008 9695      		lsr r25
 5937               		.loc 21 471 27 view .LVU1232
 5938 000a 9F5F      		subi r25,lo8(-(1))
 5939 000c 9F73      		andi r25,lo8(63)
 472:quantum/rgb_matrix.c ****     if (rgb_matrix_config.mode >= RGB_MATRIX_EFFECT_MAX) rgb_matrix_config.mode = 1;
 5940               		.loc 21 472 5 is_stmt 1 view .LVU1233
 5941 000e 8370      		andi r24,lo8(3)
 5942               		.loc 21 472 8 is_stmt 0 view .LVU1234
 5943 0010 9931      		cpi r25,lo8(25)
 5944 0012 00F4      		brsh .L260
 471:quantum/rgb_matrix.c ****     rgb_matrix_config.mode++;
 5945               		.loc 21 471 27 view .LVU1235
 5946 0014 990F      		lsl r25
 5947 0016 990F      		lsl r25
 5948 0018 892B      		or r24,r25
 5949               	.L262:
 5950               		.loc 21 472 81 discriminator 1 view .LVU1236
 5951 001a 8093 0000 		sts rgb_matrix_config,r24
 473:quantum/rgb_matrix.c ****     rgb_task_state = STARTING;
 5952               		.loc 21 473 5 is_stmt 1 discriminator 1 view .LVU1237
 5953               		.loc 21 473 20 is_stmt 0 discriminator 1 view .LVU1238
 5954 001e 1092 0000 		sts rgb_task_state,__zero_reg__
 474:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 5955               		.loc 21 474 5 is_stmt 1 discriminator 1 view .LVU1239
 5956 0022 0C94 0000 		jmp eeconfig_update_rgb_matrix
 5957               	.LVL533:
 5958               	.L260:
 472:quantum/rgb_matrix.c ****     if (rgb_matrix_config.mode >= RGB_MATRIX_EFFECT_MAX) rgb_matrix_config.mode = 1;
 5959               		.loc 21 472 58 discriminator 1 view .LVU1240
 472:quantum/rgb_matrix.c ****     if (rgb_matrix_config.mode >= RGB_MATRIX_EFFECT_MAX) rgb_matrix_config.mode = 1;
 5960               		.loc 21 472 81 is_stmt 0 discriminator 1 view .LVU1241
 5961 0026 8460      		ori r24,lo8(4)
 5962 0028 00C0      		rjmp .L262
 5963               		.cfi_endproc
 5964               	.LFE261:
 5966               		.section	.text.rgb_matrix_step_reverse,"ax",@progbits
 5967               	.global	rgb_matrix_step_reverse
 5969               	rgb_matrix_step_reverse:
 5970               	.LFB262:
 475:quantum/rgb_matrix.c **** }
 476:quantum/rgb_matrix.c **** 
 477:quantum/rgb_matrix.c **** void rgb_matrix_step_reverse(void) {
 5971               		.loc 21 477 36 is_stmt 1 view -0
 5972               		.cfi_startproc
 5973               	/* prologue: function */
 5974               	/* frame size = 0 */
 5975               	/* stack size = 0 */
 5976               	.L__stack_usage = 0
 478:quantum/rgb_matrix.c ****     rgb_matrix_config.mode--;
 5977               		.loc 21 478 5 view .LVU1243
 5978               		.loc 21 478 27 is_stmt 0 view .LVU1244
 5979 0000 8091 0000 		lds r24,rgb_matrix_config
 5980 0004 8450      		subi r24,lo8(-(-4))
 5981 0006 8093 0000 		sts rgb_matrix_config,r24
 479:quantum/rgb_matrix.c ****     if (rgb_matrix_config.mode < 1) rgb_matrix_config.mode = RGB_MATRIX_EFFECT_MAX - 1;
 5982               		.loc 21 479 5 is_stmt 1 view .LVU1245
 5983               		.loc 21 479 32 is_stmt 0 view .LVU1246
 5984 000a 982F      		mov r25,r24
 5985 000c 9C7F      		andi r25,lo8(-4)
 5986               		.loc 21 479 8 view .LVU1247
 5987 000e 01F4      		brne .L264
 5988               		.loc 21 479 37 is_stmt 1 discriminator 1 view .LVU1248
 5989               		.loc 21 479 60 is_stmt 0 discriminator 1 view .LVU1249
 5990 0010 8370      		andi r24,lo8(3)
 5991 0012 8066      		ori r24,lo8(96)
 5992 0014 8093 0000 		sts rgb_matrix_config,r24
 5993               	.L264:
 480:quantum/rgb_matrix.c ****     rgb_task_state = STARTING;
 5994               		.loc 21 480 5 is_stmt 1 view .LVU1250
 5995               		.loc 21 480 20 is_stmt 0 view .LVU1251
 5996 0018 1092 0000 		sts rgb_task_state,__zero_reg__
 481:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 5997               		.loc 21 481 5 is_stmt 1 view .LVU1252
 5998 001c 0C94 0000 		jmp eeconfig_update_rgb_matrix
 5999               	.LVL534:
 6000               		.cfi_endproc
 6001               	.LFE262:
 6003               		.section	.text.rgb_matrix_increase_hue,"ax",@progbits
 6004               	.global	rgb_matrix_increase_hue
 6006               	rgb_matrix_increase_hue:
 6007               	.LFB263:
 482:quantum/rgb_matrix.c **** }
 483:quantum/rgb_matrix.c **** 
 484:quantum/rgb_matrix.c **** void rgb_matrix_increase_hue(void) {
 6008               		.loc 21 484 36 view -0
 6009               		.cfi_startproc
 6010               	/* prologue: function */
 6011               	/* frame size = 0 */
 6012               	/* stack size = 0 */
 6013               	.L__stack_usage = 0
 485:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.h += RGB_MATRIX_HUE_STEP;
 6014               		.loc 21 485 5 view .LVU1254
 6015               		.loc 21 485 29 is_stmt 0 view .LVU1255
 6016 0000 E0E0      		ldi r30,lo8(rgb_matrix_config)
 6017 0002 F0E0      		ldi r31,hi8(rgb_matrix_config)
 6018 0004 8181      		ldd r24,Z+1
 6019 0006 885F      		subi r24,lo8(-(8))
 6020 0008 8183      		std Z+1,r24
 486:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 6021               		.loc 21 486 5 is_stmt 1 view .LVU1256
 6022 000a 0C94 0000 		jmp eeconfig_update_rgb_matrix
 6023               	.LVL535:
 6024               		.cfi_endproc
 6025               	.LFE263:
 6027               		.section	.text.rgb_matrix_decrease_hue,"ax",@progbits
 6028               	.global	rgb_matrix_decrease_hue
 6030               	rgb_matrix_decrease_hue:
 6031               	.LFB264:
 487:quantum/rgb_matrix.c **** }
 488:quantum/rgb_matrix.c **** 
 489:quantum/rgb_matrix.c **** void rgb_matrix_decrease_hue(void) {
 6032               		.loc 21 489 36 view -0
 6033               		.cfi_startproc
 6034               	/* prologue: function */
 6035               	/* frame size = 0 */
 6036               	/* stack size = 0 */
 6037               	.L__stack_usage = 0
 490:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.h -= RGB_MATRIX_HUE_STEP;
 6038               		.loc 21 490 5 view .LVU1258
 6039               		.loc 21 490 29 is_stmt 0 view .LVU1259
 6040 0000 E0E0      		ldi r30,lo8(rgb_matrix_config)
 6041 0002 F0E0      		ldi r31,hi8(rgb_matrix_config)
 6042 0004 8181      		ldd r24,Z+1
 6043 0006 8850      		subi r24,lo8(-(-8))
 6044 0008 8183      		std Z+1,r24
 491:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 6045               		.loc 21 491 5 is_stmt 1 view .LVU1260
 6046 000a 0C94 0000 		jmp eeconfig_update_rgb_matrix
 6047               	.LVL536:
 6048               		.cfi_endproc
 6049               	.LFE264:
 6051               		.section	.text.rgb_matrix_increase_sat,"ax",@progbits
 6052               	.global	rgb_matrix_increase_sat
 6054               	rgb_matrix_increase_sat:
 6055               	.LFB265:
 492:quantum/rgb_matrix.c **** }
 493:quantum/rgb_matrix.c **** 
 494:quantum/rgb_matrix.c **** void rgb_matrix_increase_sat(void) {
 6056               		.loc 21 494 36 view -0
 6057               		.cfi_startproc
 6058               	/* prologue: function */
 6059               	/* frame size = 0 */
 6060               	/* stack size = 0 */
 6061               	.L__stack_usage = 0
 495:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.s = qadd8(rgb_matrix_config.hsv.s, RGB_MATRIX_SAT_STEP);
 6062               		.loc 21 495 5 view .LVU1262
 6063               	.LVL537:
 6064               	.LBB179:
 6065               	.LBI179:
  23:./lib/lib8tion/math8.h **** {
 6066               		.loc 2 23 34 view .LVU1263
 6067               	.LBB180:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 6068               		.loc 2 30 5 view .LVU1264
 6069               	.LBE180:
 6070               	.LBE179:
 6071               		.loc 21 495 31 is_stmt 0 view .LVU1265
 6072 0000 E0E0      		ldi r30,lo8(rgb_matrix_config)
 6073 0002 F0E0      		ldi r31,hi8(rgb_matrix_config)
 6074               	.LBB182:
 6075               	.LBB181:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 6076               		.loc 2 30 5 view .LVU1266
 6077 0004 2281      		ldd r18,Z+2
 6078 0006 30E1      		ldi r19,lo8(16)
 6079               	/* #APP */
 6080               	 ;  30 "./lib/lib8tion/math8.h" 1
 6081 0008 230F      		add r18, r19    
 6082 000a 00F4      		brcc L_5003     
 6083 000c 2FEF      		ldi r18, 0xFF  
 6084               		L_5003: 
 6085               	 ;  0 "" 2
 6086               	.LVL538:
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 6087               		.loc 2 43 5 is_stmt 1 view .LVU1267
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 6088               		.loc 2 43 5 is_stmt 0 view .LVU1268
 6089               	/* #NOAPP */
 6090               	.LBE181:
 6091               	.LBE182:
 6092               		.loc 21 495 29 view .LVU1269
 6093 000e 2283      		std Z+2,r18
 496:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 6094               		.loc 21 496 5 is_stmt 1 view .LVU1270
 6095 0010 0C94 0000 		jmp eeconfig_update_rgb_matrix
 6096               	.LVL539:
 6097               		.cfi_endproc
 6098               	.LFE265:
 6100               		.section	.text.rgb_matrix_decrease_sat,"ax",@progbits
 6101               	.global	rgb_matrix_decrease_sat
 6103               	rgb_matrix_decrease_sat:
 6104               	.LFB266:
 497:quantum/rgb_matrix.c **** }
 498:quantum/rgb_matrix.c **** 
 499:quantum/rgb_matrix.c **** void rgb_matrix_decrease_sat(void) {
 6105               		.loc 21 499 36 view -0
 6106               		.cfi_startproc
 6107               	/* prologue: function */
 6108               	/* frame size = 0 */
 6109               	/* stack size = 0 */
 6110               	.L__stack_usage = 0
 500:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.s = qsub8(rgb_matrix_config.hsv.s, RGB_MATRIX_SAT_STEP);
 6111               		.loc 21 500 5 view .LVU1272
 6112               	.LVL540:
 6113               	.LBB183:
 6114               	.LBI183:
  88:./lib/lib8tion/math8.h **** {
 6115               		.loc 2 88 34 view .LVU1273
 6116               	.LBB184:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 6117               		.loc 2 96 5 view .LVU1274
 6118               	.LBE184:
 6119               	.LBE183:
 6120               		.loc 21 500 31 is_stmt 0 view .LVU1275
 6121 0000 E0E0      		ldi r30,lo8(rgb_matrix_config)
 6122 0002 F0E0      		ldi r31,hi8(rgb_matrix_config)
 6123               	.LBB186:
 6124               	.LBB185:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 6125               		.loc 2 96 5 view .LVU1276
 6126 0004 2281      		ldd r18,Z+2
 6127 0006 30E1      		ldi r19,lo8(16)
 6128               	/* #APP */
 6129               	 ;  96 "./lib/lib8tion/math8.h" 1
 6130 0008 231B      		sub r18, r19    
 6131 000a 00F4      		brcc L_5034     
 6132 000c 20E0      		ldi r18, 0x00  
 6133               		L_5034: 
 6134               	 ;  0 "" 2
 6135               	.LVL541:
 110:./lib/lib8tion/math8.h **** #else
 6136               		.loc 2 110 5 is_stmt 1 view .LVU1277
 110:./lib/lib8tion/math8.h **** #else
 6137               		.loc 2 110 5 is_stmt 0 view .LVU1278
 6138               	/* #NOAPP */
 6139               	.LBE185:
 6140               	.LBE186:
 6141               		.loc 21 500 29 view .LVU1279
 6142 000e 2283      		std Z+2,r18
 501:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 6143               		.loc 21 501 5 is_stmt 1 view .LVU1280
 6144 0010 0C94 0000 		jmp eeconfig_update_rgb_matrix
 6145               	.LVL542:
 6146               		.cfi_endproc
 6147               	.LFE266:
 6149               		.section	.text.rgb_matrix_increase_val,"ax",@progbits
 6150               	.global	rgb_matrix_increase_val
 6152               	rgb_matrix_increase_val:
 6153               	.LFB267:
 502:quantum/rgb_matrix.c **** }
 503:quantum/rgb_matrix.c **** 
 504:quantum/rgb_matrix.c **** void rgb_matrix_increase_val(void) {
 6154               		.loc 21 504 36 view -0
 6155               		.cfi_startproc
 6156               	/* prologue: function */
 6157               	/* frame size = 0 */
 6158               	/* stack size = 0 */
 6159               	.L__stack_usage = 0
 505:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.v = qadd8(rgb_matrix_config.hsv.v, RGB_MATRIX_VAL_STEP);
 6160               		.loc 21 505 5 view .LVU1282
 6161               	.LVL543:
 6162               	.LBB187:
 6163               	.LBI187:
  23:./lib/lib8tion/math8.h **** {
 6164               		.loc 2 23 34 view .LVU1283
 6165               	.LBB188:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 6166               		.loc 2 30 5 view .LVU1284
 6167               	.LBE188:
 6168               	.LBE187:
 6169               		.loc 21 505 31 is_stmt 0 view .LVU1285
 6170 0000 E0E0      		ldi r30,lo8(rgb_matrix_config)
 6171 0002 F0E0      		ldi r31,hi8(rgb_matrix_config)
 6172               	.LBB190:
 6173               	.LBB189:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 6174               		.loc 2 30 5 view .LVU1286
 6175 0004 2381      		ldd r18,Z+3
 6176 0006 30E1      		ldi r19,lo8(16)
 6177               	/* #APP */
 6178               	 ;  30 "./lib/lib8tion/math8.h" 1
 6179 0008 230F      		add r18, r19    
 6180 000a 00F4      		brcc L_5065     
 6181 000c 2FEF      		ldi r18, 0xFF  
 6182               		L_5065: 
 6183               	 ;  0 "" 2
 6184               	.LVL544:
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 6185               		.loc 2 43 5 is_stmt 1 view .LVU1287
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 6186               		.loc 2 43 5 is_stmt 0 view .LVU1288
 6187               	/* #NOAPP */
 6188               	.LBE189:
 6189               	.LBE190:
 6190               		.loc 21 505 29 view .LVU1289
 6191 000e 2383      		std Z+3,r18
 506:quantum/rgb_matrix.c ****     if (rgb_matrix_config.hsv.v > RGB_MATRIX_MAXIMUM_BRIGHTNESS) rgb_matrix_config.hsv.v = RGB_MATR
 6192               		.loc 21 506 5 is_stmt 1 view .LVU1290
 507:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 6193               		.loc 21 507 5 view .LVU1291
 6194 0010 0C94 0000 		jmp eeconfig_update_rgb_matrix
 6195               	.LVL545:
 6196               		.cfi_endproc
 6197               	.LFE267:
 6199               		.section	.text.rgb_matrix_decrease_val,"ax",@progbits
 6200               	.global	rgb_matrix_decrease_val
 6202               	rgb_matrix_decrease_val:
 6203               	.LFB268:
 508:quantum/rgb_matrix.c **** }
 509:quantum/rgb_matrix.c **** 
 510:quantum/rgb_matrix.c **** void rgb_matrix_decrease_val(void) {
 6204               		.loc 21 510 36 view -0
 6205               		.cfi_startproc
 6206               	/* prologue: function */
 6207               	/* frame size = 0 */
 6208               	/* stack size = 0 */
 6209               	.L__stack_usage = 0
 511:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.v = qsub8(rgb_matrix_config.hsv.v, RGB_MATRIX_VAL_STEP);
 6210               		.loc 21 511 5 view .LVU1293
 6211               	.LVL546:
 6212               	.LBB191:
 6213               	.LBI191:
  88:./lib/lib8tion/math8.h **** {
 6214               		.loc 2 88 34 view .LVU1294
 6215               	.LBB192:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 6216               		.loc 2 96 5 view .LVU1295
 6217               	.LBE192:
 6218               	.LBE191:
 6219               		.loc 21 511 31 is_stmt 0 view .LVU1296
 6220 0000 E0E0      		ldi r30,lo8(rgb_matrix_config)
 6221 0002 F0E0      		ldi r31,hi8(rgb_matrix_config)
 6222               	.LBB194:
 6223               	.LBB193:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 6224               		.loc 2 96 5 view .LVU1297
 6225 0004 2381      		ldd r18,Z+3
 6226 0006 30E1      		ldi r19,lo8(16)
 6227               	/* #APP */
 6228               	 ;  96 "./lib/lib8tion/math8.h" 1
 6229 0008 231B      		sub r18, r19    
 6230 000a 00F4      		brcc L_5097     
 6231 000c 20E0      		ldi r18, 0x00  
 6232               		L_5097: 
 6233               	 ;  0 "" 2
 6234               	.LVL547:
 110:./lib/lib8tion/math8.h **** #else
 6235               		.loc 2 110 5 is_stmt 1 view .LVU1298
 110:./lib/lib8tion/math8.h **** #else
 6236               		.loc 2 110 5 is_stmt 0 view .LVU1299
 6237               	/* #NOAPP */
 6238               	.LBE193:
 6239               	.LBE194:
 6240               		.loc 21 511 29 view .LVU1300
 6241 000e 2383      		std Z+3,r18
 512:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 6242               		.loc 21 512 5 is_stmt 1 view .LVU1301
 6243 0010 0C94 0000 		jmp eeconfig_update_rgb_matrix
 6244               	.LVL548:
 6245               		.cfi_endproc
 6246               	.LFE268:
 6248               		.section	.text.rgb_matrix_increase_speed,"ax",@progbits
 6249               	.global	rgb_matrix_increase_speed
 6251               	rgb_matrix_increase_speed:
 6252               	.LFB269:
 513:quantum/rgb_matrix.c **** }
 514:quantum/rgb_matrix.c **** 
 515:quantum/rgb_matrix.c **** void rgb_matrix_increase_speed(void) {
 6253               		.loc 21 515 38 view -0
 6254               		.cfi_startproc
 6255               	/* prologue: function */
 6256               	/* frame size = 0 */
 6257               	/* stack size = 0 */
 6258               	.L__stack_usage = 0
 516:quantum/rgb_matrix.c ****     rgb_matrix_config.speed = qadd8(rgb_matrix_config.speed, RGB_MATRIX_SPD_STEP);
 6259               		.loc 21 516 5 view .LVU1303
 6260               	.LVL549:
 6261               	.LBB195:
 6262               	.LBI195:
  23:./lib/lib8tion/math8.h **** {
 6263               		.loc 2 23 34 view .LVU1304
 6264               	.LBB196:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 6265               		.loc 2 30 5 view .LVU1305
 6266               	.LBE196:
 6267               	.LBE195:
 6268               		.loc 21 516 31 is_stmt 0 view .LVU1306
 6269 0000 E0E0      		ldi r30,lo8(rgb_matrix_config)
 6270 0002 F0E0      		ldi r31,hi8(rgb_matrix_config)
 6271               	.LBB198:
 6272               	.LBB197:
  30:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
 6273               		.loc 2 30 5 view .LVU1307
 6274 0004 2481      		ldd r18,Z+4
 6275 0006 30E1      		ldi r19,lo8(16)
 6276               	/* #APP */
 6277               	 ;  30 "./lib/lib8tion/math8.h" 1
 6278 0008 230F      		add r18, r19    
 6279 000a 00F4      		brcc L_5128     
 6280 000c 2FEF      		ldi r18, 0xFF  
 6281               		L_5128: 
 6282               	 ;  0 "" 2
 6283               	.LVL550:
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 6284               		.loc 2 43 5 is_stmt 1 view .LVU1308
  43:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
 6285               		.loc 2 43 5 is_stmt 0 view .LVU1309
 6286               	/* #NOAPP */
 6287               	.LBE197:
 6288               	.LBE198:
 6289               		.loc 21 516 29 view .LVU1310
 6290 000e 2483      		std Z+4,r18
 517:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 6291               		.loc 21 517 5 is_stmt 1 view .LVU1311
 6292 0010 0C94 0000 		jmp eeconfig_update_rgb_matrix
 6293               	.LVL551:
 6294               		.cfi_endproc
 6295               	.LFE269:
 6297               		.section	.text.rgb_matrix_decrease_speed,"ax",@progbits
 6298               	.global	rgb_matrix_decrease_speed
 6300               	rgb_matrix_decrease_speed:
 6301               	.LFB270:
 518:quantum/rgb_matrix.c **** }
 519:quantum/rgb_matrix.c **** 
 520:quantum/rgb_matrix.c **** void rgb_matrix_decrease_speed(void) {
 6302               		.loc 21 520 38 view -0
 6303               		.cfi_startproc
 6304               	/* prologue: function */
 6305               	/* frame size = 0 */
 6306               	/* stack size = 0 */
 6307               	.L__stack_usage = 0
 521:quantum/rgb_matrix.c ****     rgb_matrix_config.speed = qsub8(rgb_matrix_config.speed, RGB_MATRIX_SPD_STEP);
 6308               		.loc 21 521 5 view .LVU1313
 6309               	.LVL552:
 6310               	.LBB199:
 6311               	.LBI199:
  88:./lib/lib8tion/math8.h **** {
 6312               		.loc 2 88 34 view .LVU1314
 6313               	.LBB200:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 6314               		.loc 2 96 5 view .LVU1315
 6315               	.LBE200:
 6316               	.LBE199:
 6317               		.loc 21 521 31 is_stmt 0 view .LVU1316
 6318 0000 E0E0      		ldi r30,lo8(rgb_matrix_config)
 6319 0002 F0E0      		ldi r31,hi8(rgb_matrix_config)
 6320               	.LBB202:
 6321               	.LBB201:
  96:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
 6322               		.loc 2 96 5 view .LVU1317
 6323 0004 2481      		ldd r18,Z+4
 6324 0006 30E1      		ldi r19,lo8(16)
 6325               	/* #APP */
 6326               	 ;  96 "./lib/lib8tion/math8.h" 1
 6327 0008 231B      		sub r18, r19    
 6328 000a 00F4      		brcc L_5159     
 6329 000c 20E0      		ldi r18, 0x00  
 6330               		L_5159: 
 6331               	 ;  0 "" 2
 6332               	.LVL553:
 110:./lib/lib8tion/math8.h **** #else
 6333               		.loc 2 110 5 is_stmt 1 view .LVU1318
 110:./lib/lib8tion/math8.h **** #else
 6334               		.loc 2 110 5 is_stmt 0 view .LVU1319
 6335               	/* #NOAPP */
 6336               	.LBE201:
 6337               	.LBE202:
 6338               		.loc 21 521 29 view .LVU1320
 6339 000e 2483      		std Z+4,r18
 522:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 6340               		.loc 21 522 5 is_stmt 1 view .LVU1321
 6341 0010 0C94 0000 		jmp eeconfig_update_rgb_matrix
 6342               	.LVL554:
 6343               		.cfi_endproc
 6344               	.LFE270:
 6346               		.section	.text.rgb_matrix_get_flags,"ax",@progbits
 6347               	.global	rgb_matrix_get_flags
 6349               	rgb_matrix_get_flags:
 6350               	.LFB271:
 523:quantum/rgb_matrix.c **** }
 524:quantum/rgb_matrix.c **** 
 525:quantum/rgb_matrix.c **** led_flags_t rgb_matrix_get_flags(void) { return rgb_effect_params.flags; }
 6351               		.loc 21 525 40 view -0
 6352               		.cfi_startproc
 6353               	/* prologue: function */
 6354               	/* frame size = 0 */
 6355               	/* stack size = 0 */
 6356               	.L__stack_usage = 0
 6357               		.loc 21 525 42 view .LVU1323
 6358               		.loc 21 525 1 is_stmt 0 view .LVU1324
 6359 0000 8091 0000 		lds r24,rgb_effect_params+1
 6360               	/* epilogue start */
 6361 0004 0895      		ret
 6362               		.cfi_endproc
 6363               	.LFE271:
 6365               		.section	.text.rgb_matrix_set_flags,"ax",@progbits
 6366               	.global	rgb_matrix_set_flags
 6368               	rgb_matrix_set_flags:
 6369               	.LVL555:
 6370               	.LFB272:
 526:quantum/rgb_matrix.c **** 
 527:quantum/rgb_matrix.c **** void rgb_matrix_set_flags(led_flags_t flags) { rgb_effect_params.flags = flags; }
 6371               		.loc 21 527 46 is_stmt 1 view -0
 6372               		.cfi_startproc
 6373               	/* prologue: function */
 6374               	/* frame size = 0 */
 6375               	/* stack size = 0 */
 6376               	.L__stack_usage = 0
 6377               		.loc 21 527 48 view .LVU1326
 6378               		.loc 21 527 72 is_stmt 0 view .LVU1327
 6379 0000 8093 0000 		sts rgb_effect_params+1,r24
 6380               	/* epilogue start */
 6381               		.loc 21 527 1 view .LVU1328
 6382 0004 0895      		ret
 6383               		.cfi_endproc
 6384               	.LFE272:
 6386               		.section	.text.rgb_matrix_mode,"ax",@progbits
 6387               	.global	rgb_matrix_mode
 6389               	rgb_matrix_mode:
 6390               	.LVL556:
 6391               	.LFB273:
 528:quantum/rgb_matrix.c **** 
 529:quantum/rgb_matrix.c **** void rgb_matrix_mode(uint8_t mode) {
 6392               		.loc 21 529 36 is_stmt 1 view -0
 6393               		.cfi_startproc
 6394               	/* prologue: function */
 6395               	/* frame size = 0 */
 6396               	/* stack size = 0 */
 6397               	.L__stack_usage = 0
 530:quantum/rgb_matrix.c ****     rgb_matrix_config.mode = mode;
 6398               		.loc 21 530 5 view .LVU1330
 6399               		.loc 21 530 28 is_stmt 0 view .LVU1331
 6400 0000 E0E0      		ldi r30,lo8(rgb_matrix_config)
 6401 0002 F0E0      		ldi r31,hi8(rgb_matrix_config)
 6402 0004 880F      		lsl r24
 6403 0006 880F      		lsl r24
 6404               	.LVL557:
 6405               		.loc 21 530 28 view .LVU1332
 6406 0008 9081      		ld r25,Z
 6407 000a 9370      		andi r25,lo8(3)
 6408 000c 982B      		or r25,r24
 6409 000e 9083      		st Z,r25
 531:quantum/rgb_matrix.c ****     rgb_task_state         = STARTING;
 6410               		.loc 21 531 5 is_stmt 1 view .LVU1333
 6411               		.loc 21 531 28 is_stmt 0 view .LVU1334
 6412 0010 1092 0000 		sts rgb_task_state,__zero_reg__
 532:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 6413               		.loc 21 532 5 is_stmt 1 view .LVU1335
 6414 0014 0C94 0000 		jmp eeconfig_update_rgb_matrix
 6415               	.LVL558:
 6416               		.cfi_endproc
 6417               	.LFE273:
 6419               		.section	.text.rgb_matrix_mode_noeeprom,"ax",@progbits
 6420               	.global	rgb_matrix_mode_noeeprom
 6422               	rgb_matrix_mode_noeeprom:
 6423               	.LVL559:
 6424               	.LFB274:
 533:quantum/rgb_matrix.c **** }
 534:quantum/rgb_matrix.c **** 
 535:quantum/rgb_matrix.c **** void rgb_matrix_mode_noeeprom(uint8_t mode) { rgb_matrix_config.mode = mode; }
 6425               		.loc 21 535 45 view -0
 6426               		.cfi_startproc
 6427               	/* prologue: function */
 6428               	/* frame size = 0 */
 6429               	/* stack size = 0 */
 6430               	.L__stack_usage = 0
 6431               		.loc 21 535 47 view .LVU1337
 6432               		.loc 21 535 70 is_stmt 0 view .LVU1338
 6433 0000 E0E0      		ldi r30,lo8(rgb_matrix_config)
 6434 0002 F0E0      		ldi r31,hi8(rgb_matrix_config)
 6435 0004 880F      		lsl r24
 6436 0006 880F      		lsl r24
 6437               	.LVL560:
 6438               		.loc 21 535 70 view .LVU1339
 6439 0008 9081      		ld r25,Z
 6440 000a 9370      		andi r25,lo8(3)
 6441 000c 982B      		or r25,r24
 6442 000e 9083      		st Z,r25
 6443               	/* epilogue start */
 6444               		.loc 21 535 1 view .LVU1340
 6445 0010 0895      		ret
 6446               		.cfi_endproc
 6447               	.LFE274:
 6449               		.section	.text.rgb_matrix_get_mode,"ax",@progbits
 6450               	.global	rgb_matrix_get_mode
 6452               	rgb_matrix_get_mode:
 6453               	.LFB275:
 536:quantum/rgb_matrix.c **** 
 537:quantum/rgb_matrix.c **** uint8_t rgb_matrix_get_mode(void) { return rgb_matrix_config.mode; }
 6454               		.loc 21 537 35 is_stmt 1 view -0
 6455               		.cfi_startproc
 6456               	/* prologue: function */
 6457               	/* frame size = 0 */
 6458               	/* stack size = 0 */
 6459               	.L__stack_usage = 0
 6460               		.loc 21 537 37 view .LVU1342
 6461               		.loc 21 537 61 is_stmt 0 view .LVU1343
 6462 0000 8091 0000 		lds r24,rgb_matrix_config
 6463               		.loc 21 537 1 view .LVU1344
 6464 0004 8695      		lsr r24
 6465 0006 8695      		lsr r24
 6466               	/* epilogue start */
 6467 0008 0895      		ret
 6468               		.cfi_endproc
 6469               	.LFE275:
 6471               		.section	.text.rgb_matrix_sethsv,"ax",@progbits
 6472               	.global	rgb_matrix_sethsv
 6474               	rgb_matrix_sethsv:
 6475               	.LVL561:
 6476               	.LFB276:
 538:quantum/rgb_matrix.c **** 
 539:quantum/rgb_matrix.c **** void rgb_matrix_sethsv(uint16_t hue, uint8_t sat, uint8_t val) {
 6477               		.loc 21 539 64 is_stmt 1 view -0
 6478               		.cfi_startproc
 6479               	/* prologue: function */
 6480               	/* frame size = 0 */
 6481               	/* stack size = 0 */
 6482               	.L__stack_usage = 0
 540:quantum/rgb_matrix.c ****     rgb_matrix_sethsv_noeeprom(hue, sat, val);
 6483               		.loc 21 540 5 view .LVU1346
 6484               	.LBB205:
 6485               	.LBI205:
 541:quantum/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 542:quantum/rgb_matrix.c **** }
 543:quantum/rgb_matrix.c **** 
 544:quantum/rgb_matrix.c **** void rgb_matrix_sethsv_noeeprom(uint16_t hue, uint8_t sat, uint8_t val) {
 6486               		.loc 21 544 6 view .LVU1347
 6487               	.LBB206:
 545:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.h = hue;
 6488               		.loc 21 545 5 view .LVU1348
 6489               		.loc 21 545 29 is_stmt 0 view .LVU1349
 6490 0000 E0E0      		ldi r30,lo8(rgb_matrix_config)
 6491 0002 F0E0      		ldi r31,hi8(rgb_matrix_config)
 6492 0004 8183      		std Z+1,r24
 546:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.s = sat;
 6493               		.loc 21 546 5 is_stmt 1 view .LVU1350
 6494               		.loc 21 546 29 is_stmt 0 view .LVU1351
 6495 0006 6283      		std Z+2,r22
 547:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.v = val;
 6496               		.loc 21 547 5 is_stmt 1 view .LVU1352
 6497               		.loc 21 547 29 is_stmt 0 view .LVU1353
 6498 0008 4383      		std Z+3,r20
 548:quantum/rgb_matrix.c ****     if (rgb_matrix_config.hsv.v > RGB_MATRIX_MAXIMUM_BRIGHTNESS) rgb_matrix_config.hsv.v = RGB_MATR
 6499               		.loc 21 548 5 is_stmt 1 view .LVU1354
 6500               	.LVL562:
 6501               		.loc 21 548 5 is_stmt 0 view .LVU1355
 6502               	.LBE206:
 6503               	.LBE205:
 541:quantum/rgb_matrix.c **** }
 6504               		.loc 21 541 5 is_stmt 1 view .LVU1356
 6505 000a 0C94 0000 		jmp eeconfig_update_rgb_matrix
 6506               	.LVL563:
 541:quantum/rgb_matrix.c **** }
 6507               		.loc 21 541 5 is_stmt 0 view .LVU1357
 6508               		.cfi_endproc
 6509               	.LFE276:
 6511               		.section	.text.rgb_matrix_sethsv_noeeprom,"ax",@progbits
 6512               	.global	rgb_matrix_sethsv_noeeprom
 6514               	rgb_matrix_sethsv_noeeprom:
 6515               	.LVL564:
 6516               	.LFB277:
 544:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.h = hue;
 6517               		.loc 21 544 73 is_stmt 1 view -0
 6518               		.cfi_startproc
 6519               	/* prologue: function */
 6520               	/* frame size = 0 */
 6521               	/* stack size = 0 */
 6522               	.L__stack_usage = 0
 545:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.s = sat;
 6523               		.loc 21 545 5 view .LVU1359
 545:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.s = sat;
 6524               		.loc 21 545 29 is_stmt 0 view .LVU1360
 6525 0000 E0E0      		ldi r30,lo8(rgb_matrix_config)
 6526 0002 F0E0      		ldi r31,hi8(rgb_matrix_config)
 6527 0004 8183      		std Z+1,r24
 546:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.v = val;
 6528               		.loc 21 546 5 is_stmt 1 view .LVU1361
 546:quantum/rgb_matrix.c ****     rgb_matrix_config.hsv.v = val;
 6529               		.loc 21 546 29 is_stmt 0 view .LVU1362
 6530 0006 6283      		std Z+2,r22
 547:quantum/rgb_matrix.c ****     if (rgb_matrix_config.hsv.v > RGB_MATRIX_MAXIMUM_BRIGHTNESS) rgb_matrix_config.hsv.v = RGB_MATR
 6531               		.loc 21 547 5 is_stmt 1 view .LVU1363
 547:quantum/rgb_matrix.c ****     if (rgb_matrix_config.hsv.v > RGB_MATRIX_MAXIMUM_BRIGHTNESS) rgb_matrix_config.hsv.v = RGB_MATR
 6532               		.loc 21 547 29 is_stmt 0 view .LVU1364
 6533 0008 4383      		std Z+3,r20
 6534               		.loc 21 548 5 is_stmt 1 view .LVU1365
 6535               	/* epilogue start */
 549:quantum/rgb_matrix.c **** }
 6536               		.loc 21 549 1 is_stmt 0 view .LVU1366
 6537 000a 0895      		ret
 6538               		.cfi_endproc
 6539               	.LFE277:
 6541               		.section	.data.rgb_task_state,"aw"
 6544               	rgb_task_state:
 6545 0000 03        		.byte	3
 6546               		.section	.data.rgb_effect_params,"aw"
 6549               	rgb_effect_params:
 6550 0000 00        		.byte	0
 6551 0001 FF        		.byte	-1
 6552 0002 00        		.zero	1
 6553               		.section	.data.rgb_last_effect,"aw"
 6556               	rgb_last_effect:
 6557 0000 FF        		.byte	-1
 6558               		.section	.data.rgb_last_enable,"aw"
 6561               	rgb_last_enable:
 6562 0000 FF        		.byte	-1
 6563               		.section	.bss.rgb_counters_buffer,"aw",@nobits
 6566               	rgb_counters_buffer:
 6567 0000 0000 0000 		.zero	4
 6568               		.comm	g_rgb_counters,8,1
 6569               		.comm	rgb_matrix_config,5,1
 6570               	.global	g_suspend_state
 6571               		.section	.bss.g_suspend_state,"aw",@nobits
 6574               	g_suspend_state:
 6575 0000 00        		.zero	1
 6576               	.global	k_rgb_matrix_center
 6577               		.section	.rodata.k_rgb_matrix_center,"a"
 6580               	k_rgb_matrix_center:
 6581 0000 70        		.byte	112
 6582 0001 20        		.byte	32
 6583               		.section	.rodata.b_m16_interleave,"a"
 6586               	b_m16_interleave:
 6587 0000 00        		.byte	0
 6588 0001 31        		.byte	49
 6589 0002 31        		.byte	49
 6590 0003 29        		.byte	41
 6591 0004 5A        		.byte	90
 6592 0005 1B        		.byte	27
 6593 0006 75        		.byte	117
 6594 0007 0A        		.byte	10
 6595               		.text
 6596               	.Letext0:
 6597               		.file 33 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchai
 6598               		.file 34 "quantum/color.h"
 6599               		.file 35 "quantum/rgb_matrix_types.h"
 6600               		.file 36 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchai
 6601               		.file 37 "tmk_core/common/keyboard.h"
 6602               		.file 38 "tmk_core/common/action.h"
 6603               		.file 39 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 6604               		.file 40 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 6605               		.file 41 "lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 6606               		.file 42 "lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
 6607               		.file 43 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchai
 6608               		.file 44 "tmk_core/common/report.h"
 6609               		.file 45 "tmk_core/common/host.h"
 6610               		.file 46 "tmk_core/common/debug.h"
 6611               		.file 47 "quantum/keycode_config.h"
 6612               		.file 48 "quantum/keymap.h"
 6613               		.file 49 "tmk_core/common/action_layer.h"
 6614               		.file 50 "tmk_core/common/timer.h"
 6615               		.file 51 "tmk_core/common/action_util.h"
 6616               		.file 52 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchai
 6617               		.file 53 "quantum/process_keycode/process_tap_dance.h"
 6618               		.file 54 "quantum/quantum.h"
 6619               		.file 55 "quantum/rgb_matrix.h"
 6620               		.file 56 "./lib/lib8tion/lib8tion.h"
 6621               		.file 57 "./lib/lib8tion/random8.h"
 6622               		.file 58 "tmk_core/common/eeconfig.h"
 6623               		.file 59 "c:\\users\\nonej\\documents\\keyboard\\msys64\\home\\nonej\\qmk_utils\\avr8-gnu-toolchai
DEFINED SYMBOLS
                            *ABS*:00000000 rgb_matrix.c
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:2      *ABS*:0000003e __SP_H__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:3      *ABS*:0000003d __SP_L__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:4      *ABS*:0000003f __SREG__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6      *ABS*:00000001 __zero_reg__
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:12     .text.scale16by8:00000000 scale16by8
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:50     .text.sqrt16:00000000 sqrt16
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:166    .text.sin8_avr:00000000 sin8_avr
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6586   .rodata.b_m16_interleave:00000000 b_m16_interleave
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:270    .text.BAND_SAT_math:00000000 BAND_SAT_math
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:388    .text.BAND_VAL_math:00000000 BAND_VAL_math
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:507    .text.CYCLE_ALL_math:00000000 CYCLE_ALL_math
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:530    .text.CYCLE_LEFT_RIGHT_math:00000000 CYCLE_LEFT_RIGHT_math
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:562    .text.CYCLE_UP_DOWN_math:00000000 CYCLE_UP_DOWN_math
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:594    .text.RAINBOW_MOVING_CHEVRON_math:00000000 RAINBOW_MOVING_CHEVRON_math
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:664    .text.CYCLE_OUT_IN_math:00000000 CYCLE_OUT_IN_math
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:716    .text.CYCLE_OUT_IN_DUAL_math:00000000 CYCLE_OUT_IN_DUAL_math
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:820    .text.DUAL_BEACON_math:00000000 DUAL_BEACON_math
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:911    .text.RAINBOW_BEACON_math:00000000 RAINBOW_BEACON_math
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:1004   .text.RAINBOW_PINWHEELS_math:00000000 RAINBOW_PINWHEELS_math
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:1121   .text.atan2_8:00000000 atan2_8
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:1244   .text.BAND_PINWHEEL_SAT_math:00000000 BAND_PINWHEEL_SAT_math
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:1341   .text.BAND_PINWHEEL_VAL_math:00000000 BAND_PINWHEEL_VAL_math
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:1441   .text.BAND_SPIRAL_SAT_math:00000000 BAND_SPIRAL_SAT_math
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:1540   .text.BAND_SPIRAL_VAL_math:00000000 BAND_SPIRAL_VAL_math
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:1640   .text.CYCLE_PINWHEEL_math:00000000 CYCLE_PINWHEEL_math
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:1696   .text.CYCLE_SPIRAL_math:00000000 CYCLE_SPIRAL_math
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:1762   .text.eeconfig_read_rgb_matrix:00000000 eeconfig_read_rgb_matrix
                            *COM*:00000005 rgb_matrix_config
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:1786   .text.eeconfig_update_rgb_matrix:00000000 eeconfig_update_rgb_matrix
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:1814   .text.eeconfig_update_rgb_matrix_default:00000000 eeconfig_update_rgb_matrix_default
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:1851   .text.eeconfig_debug_rgb_matrix:00000000 eeconfig_debug_rgb_matrix
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:1875   .text.rgb_matrix_map_row_column_to_led_kb:00000000 rgb_matrix_map_row_column_to_led_kb
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:1897   .text.rgb_matrix_map_row_column_to_led:00000000 rgb_matrix_map_row_column_to_led
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:1978   .text.rgb_matrix_update_pwm_buffers:00000000 rgb_matrix_update_pwm_buffers
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:1997   .text.rgb_matrix_set_color:00000000 rgb_matrix_set_color
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:2018   .text.effect_runner_dx_dy_dist:00000000 effect_runner_dx_dy_dist
                            *COM*:00000008 g_rgb_counters
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:2284   .text.BAND_SPIRAL_SAT:00000000 BAND_SPIRAL_SAT
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:2306   .text.BAND_SPIRAL_VAL:00000000 BAND_SPIRAL_VAL
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:2328   .text.CYCLE_OUT_IN:00000000 CYCLE_OUT_IN
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:2350   .text.CYCLE_SPIRAL:00000000 CYCLE_SPIRAL
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:2372   .text.effect_runner_dx_dy:00000000 effect_runner_dx_dy
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:2587   .text.BAND_PINWHEEL_SAT:00000000 BAND_PINWHEEL_SAT
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:2609   .text.BAND_PINWHEEL_VAL:00000000 BAND_PINWHEEL_VAL
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:2631   .text.CYCLE_OUT_IN_DUAL:00000000 CYCLE_OUT_IN_DUAL
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:2653   .text.CYCLE_PINWHEEL:00000000 CYCLE_PINWHEEL
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:2675   .text.effect_runner_i:00000000 effect_runner_i
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:2849   .text.BAND_SAT:00000000 BAND_SAT
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:2871   .text.BAND_VAL:00000000 BAND_VAL
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:2893   .text.CYCLE_ALL:00000000 CYCLE_ALL
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:2915   .text.CYCLE_LEFT_RIGHT:00000000 CYCLE_LEFT_RIGHT
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:2937   .text.CYCLE_UP_DOWN:00000000 CYCLE_UP_DOWN
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:2959   .text.RAINBOW_MOVING_CHEVRON:00000000 RAINBOW_MOVING_CHEVRON
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:2981   .text.effect_runner_sin_cos_i:00000000 effect_runner_sin_cos_i
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:3209   .text.DUAL_BEACON:00000000 DUAL_BEACON
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:3231   .text.RAINBOW_BEACON:00000000 RAINBOW_BEACON
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:3253   .text.RAINBOW_PINWHEELS:00000000 RAINBOW_PINWHEELS
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:3275   .text.SOLID_COLOR:00000000 SOLID_COLOR
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:3431   .text.ALPHAS_MODS:00000000 ALPHAS_MODS
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:3647   .text.GRADIENT_UP_DOWN:00000000 GRADIENT_UP_DOWN
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:3846   .text.GRADIENT_LEFT_RIGHT:00000000 GRADIENT_LEFT_RIGHT
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:4057   .text.BREATHING:00000000 BREATHING
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:4290   .text.raindrops_set_color.isra.1:00000000 raindrops_set_color.isra.1
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:4436   .text.RAINDROPS:00000000 RAINDROPS
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:4496   .text.RAINDROPS:00000024 L_3704
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:4614   .text.jellybean_raindrops_set_color.isra.2:00000000 jellybean_raindrops_set_color.isra.2
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:4698   .text.JELLYBEAN_RAINDROPS:00000000 JELLYBEAN_RAINDROPS
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:4758   .text.JELLYBEAN_RAINDROPS:00000024 L_3926
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:4877   .text.rgb_matrix_set_color_all:00000000 rgb_matrix_set_color_all
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:4898   .text.process_rgb_matrix:00000000 process_rgb_matrix
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:4920   .text.rgb_matrix_test:00000000 rgb_matrix_test
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:4994   .text.rgb_matrix_indicators_kb:00000000 rgb_matrix_indicators_kb
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:4994   .text.rgb_matrix_indicators_kb:00000000 rgb_matrix_indicators_kb.localalias.3
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:5013   .text.rgb_matrix_indicators_user:00000000 rgb_matrix_indicators_user
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:5028   .text.rgb_matrix_indicators:00000000 rgb_matrix_indicators
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:5048   .text.rgb_matrix_task:00000000 rgb_matrix_task
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6566   .bss.rgb_counters_buffer:00000000 rgb_counters_buffer
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6544   .data.rgb_task_state:00000000 rgb_task_state
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6549   .data.rgb_effect_params:00000000 rgb_effect_params
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6556   .data.rgb_last_effect:00000000 rgb_last_effect
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6561   .data.rgb_last_enable:00000000 rgb_last_enable
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:5717   .text.rgb_matrix_init:00000000 rgb_matrix_init
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:5768   .text.rgb_matrix_set_suspend_state:00000000 rgb_matrix_set_suspend_state
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6574   .bss.g_suspend_state:00000000 g_suspend_state
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:5790   .text.rgb_matrix_toggle:00000000 rgb_matrix_toggle
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:5818   .text.rgb_matrix_enable_noeeprom:00000000 rgb_matrix_enable_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:5851   .text.rgb_matrix_enable:00000000 rgb_matrix_enable
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:5871   .text.rgb_matrix_disable_noeeprom:00000000 rgb_matrix_disable_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:5903   .text.rgb_matrix_disable:00000000 rgb_matrix_disable
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:5923   .text.rgb_matrix_step:00000000 rgb_matrix_step
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:5969   .text.rgb_matrix_step_reverse:00000000 rgb_matrix_step_reverse
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6006   .text.rgb_matrix_increase_hue:00000000 rgb_matrix_increase_hue
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6030   .text.rgb_matrix_decrease_hue:00000000 rgb_matrix_decrease_hue
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6054   .text.rgb_matrix_increase_sat:00000000 rgb_matrix_increase_sat
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6084   .text.rgb_matrix_increase_sat:0000000e L_5003
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6103   .text.rgb_matrix_decrease_sat:00000000 rgb_matrix_decrease_sat
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6133   .text.rgb_matrix_decrease_sat:0000000e L_5034
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6152   .text.rgb_matrix_increase_val:00000000 rgb_matrix_increase_val
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6182   .text.rgb_matrix_increase_val:0000000e L_5065
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6202   .text.rgb_matrix_decrease_val:00000000 rgb_matrix_decrease_val
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6232   .text.rgb_matrix_decrease_val:0000000e L_5097
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6251   .text.rgb_matrix_increase_speed:00000000 rgb_matrix_increase_speed
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6281   .text.rgb_matrix_increase_speed:0000000e L_5128
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6300   .text.rgb_matrix_decrease_speed:00000000 rgb_matrix_decrease_speed
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6330   .text.rgb_matrix_decrease_speed:0000000e L_5159
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6349   .text.rgb_matrix_get_flags:00000000 rgb_matrix_get_flags
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6368   .text.rgb_matrix_set_flags:00000000 rgb_matrix_set_flags
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6389   .text.rgb_matrix_mode:00000000 rgb_matrix_mode
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6422   .text.rgb_matrix_mode_noeeprom:00000000 rgb_matrix_mode_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6452   .text.rgb_matrix_get_mode:00000000 rgb_matrix_get_mode
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6474   .text.rgb_matrix_sethsv:00000000 rgb_matrix_sethsv
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6514   .text.rgb_matrix_sethsv_noeeprom:00000000 rgb_matrix_sethsv_noeeprom
C:\Users\nonej\Documents\Keyboard\msys64\tmp\ccfJ6mbz.s:6580   .rodata.k_rgb_matrix_center:00000000 k_rgb_matrix_center

UNDEFINED SYMBOLS
g_led_config
__divmodhi4
eeprom_read_block
eeprom_update_block
rgb_matrix_driver
hsv_to_rgb
rand
__udivmodhi4
timer_elapsed32
timer_read32
__tablejump2__
eeconfig_is_enabled
eeconfig_init
__do_copy_data
__do_clear_bss
